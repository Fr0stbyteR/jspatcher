{"version":3,"file":"js/f0ffc0bc5f23c4dccc06.js","mappings":"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","sources":["webpack://JSPatcher/./node_modules/@csound/browser/dist/csound.js"],"sourcesContent":["/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nvar $jscomp=$jscomp||{};$jscomp.scope={};var COMPILED=!0,goog=goog||{};goog.global=this||self;goog.exportPath_=function(a,b,c,d){a=a.split(\".\");d=d||goog.global;a[0]in d||\"undefined\"==typeof d.execScript||d.execScript(\"var \"+a[0]);for(var e;a.length&&(e=a.shift());)if(a.length||void 0===b)d=d[e]&&d[e]!==Object.prototype[e]?d[e]:d[e]={};else if(!c&&goog.isObject(b)&&goog.isObject(d[e]))for(var f in b)b.hasOwnProperty(f)&&(d[e][f]=b[f]);else d[e]=b};\ngoog.define=function(a,b){if(!COMPILED){var c=goog.global.CLOSURE_UNCOMPILED_DEFINES,d=goog.global.CLOSURE_DEFINES;c&&void 0===c.nodeType&&Object.prototype.hasOwnProperty.call(c,a)?b=c[a]:d&&void 0===d.nodeType&&Object.prototype.hasOwnProperty.call(d,a)&&(b=d[a])}return b};goog.FEATURESET_YEAR=2020;goog.DEBUG=!0;goog.LOCALE=\"en\";goog.getLocale=function(){return goog.LOCALE};goog.TRUSTED_SITE=!0;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;\ngoog.provide=function(a){if(goog.isInModuleLoader_())throw Error(\"goog.provide cannot be used within a module.\");if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace \"'+a+'\" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b,c){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var d=a;(d=d.substring(0,d.lastIndexOf(\".\")))&&!goog.getObjectByName(d);)goog.implicitNamespaces_[d]=!0}goog.exportPath_(a,b,c)};goog.NONCE_PATTERN_=/^[\\w+/_-]+[=]{0,2}$/;\ngoog.getScriptNonce_=function(a){a=(a||goog.global).document;return(a=a.querySelector&&a.querySelector(\"script[nonce]\"))&&(a=a.nonce||a.getAttribute(\"nonce\"))&&goog.NONCE_PATTERN_.test(a)?a:\"\"};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\ngoog.module=function(a){if(\"string\"!==typeof a||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error(\"Invalid module identifier\");if(!goog.isInGoogModuleLoader_())throw Error(\"Module \"+a+\" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.\");if(goog.moduleLoaderState_.moduleName)throw Error(\"goog.module may only be called once per module.\");\ngoog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace \"'+a+'\" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a].exports;if(!goog.implicitNamespaces_[a])return a=goog.getObjectByName(a),null!=a?a:null}return null};goog.ModuleType={ES6:\"es6\",GOOG:\"goog\"};goog.moduleLoaderState_=null;\ngoog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var a=goog.global.$jscomp;return a?\"function\"!=typeof a.getCurrentModulePath?!1:!!a.getCurrentModulePath():!1};\ngoog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");goog.moduleLoaderState_.declareLegacyNamespace=!0};\ngoog.declareModuleId=function(a){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error(\"goog.declareModuleId may only be called from within an ES6 module\");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error(\"goog.declareModuleId may only be called once per module.\");if(a in goog.loadedModules_)throw Error('Module with namespace \"'+a+'\" already exists.');}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=a;else{var b=goog.global.$jscomp;if(!b||\"function\"!=typeof b.getCurrentModulePath)throw Error('Module with namespace \"'+\na+'\" has been loaded incorrectly.');b=b.require(b.getCurrentModulePath());goog.loadedModules_[a]={exports:b,type:goog.ModuleType.ES6,moduleId:a}}};goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||\"\",Error(\"Importing test-only code into non-debug environment\"+(a?\": \"+a:\".\"));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&null!=goog.getObjectByName(a)},goog.implicitNamespaces_={\"goog.module\":!0});\ngoog.getObjectByName=function(a,b){a=a.split(\".\");b=b||goog.global;for(var c=0;c<a.length;c++)if(b=b[a[c]],null==b)return null;return b};goog.addDependency=function(a,b,c,d){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(a,b,c,d)};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};\ngoog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(a);if(goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(a)}finally{goog.moduleLoaderState_=b}}return null}};goog.requireType=function(a){return{}};goog.basePath=\"\";goog.abstractMethod=function(){throw Error(\"unimplemented abstract method\");};\ngoog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.TRANSPILE=\"detect\";goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRUSTED_TYPES_POLICY_NAME=\"goog\";\ngoog.hasBadLetScoping=null;\ngoog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:\"\",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};var c={},d=c;if(\"function\"===typeof a)d=a.call(void 0,d);else if(\"string\"===typeof a)d=goog.loadModuleFromSource_.call(void 0,d,a);else throw Error(\"Invalid module definition\");var e=goog.moduleLoaderState_.moduleName;if(\"string\"===typeof e&&e)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(e,d,c!==d):goog.SEAL_MODULE_EXPORTS&&\nObject.seal&&\"object\"==typeof d&&null!=d&&Object.seal(d),goog.loadedModules_[e]={exports:d,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error('Invalid module name \"'+e+'\"');}finally{goog.moduleLoaderState_=b}};goog.loadModuleFromSource_=function(a,b){eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(b));return a};goog.normalizePath_=function(a){a=a.split(\"/\");for(var b=0;b<a.length;)\".\"==a[b]?a.splice(b,1):b&&\"..\"==a[b]&&a[b-1]&&\"..\"!=a[b-1]?a.splice(--b,2):b++;return a.join(\"/\")};\ngoog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open(\"get\",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};goog.typeOf=function(a){var b=typeof a;return\"object\"!=b?b:a?Array.isArray(a)?\"array\":b:\"null\"};goog.isArrayLike=function(a){var b=goog.typeOf(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length};\ngoog.isDateLike=function(a){return goog.isObject(a)&&\"function\"==typeof a.getFullYear};goog.isObject=function(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b};goog.getUid=function(a){return Object.prototype.hasOwnProperty.call(a,goog.UID_PROPERTY_)&&a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&\"removeAttribute\"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};\ngoog.UID_PROPERTY_=\"closure_uid_\"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.cloneObject=function(a){var b=goog.typeOf(a);if(\"object\"==b||\"array\"==b){if(\"function\"===typeof a.clone)return a.clone();if(\"undefined\"!==typeof Map&&a instanceof Map)return new Map(a);if(\"undefined\"!==typeof Set&&a instanceof Set)return new Set(a);b=\"array\"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};\ngoog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};\ngoog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}};goog.now=function(){return Date.now()};goog.globalEval=function(a){(0,eval)(a)};\ngoog.getCssName=function(a,b){if(\".\"==String(a).charAt(0))throw Error('className passed in goog.getCssName must not start with \".\". You passed: '+a);var c=function(e){return goog.cssNameMapping_[e]||e},d=function(e){e=e.split(\"-\");for(var f=[],g=0;g<e.length;g++)f.push(c(e[g]));return f.join(\"-\")};d=goog.cssNameMapping_?\"BY_WHOLE\"==goog.cssNameMappingStyle_?c:d:function(e){return e};a=b?a+\"-\"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a};\ngoog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.GetMsgOptions=function(){};\ngoog.getMsg=function(a,b,c){c&&c.html&&(a=a.replace(/</g,\"&lt;\"));c&&c.unescapeHtmlEntities&&(a=a.replace(/&lt;/g,\"<\").replace(/&gt;/g,\">\").replace(/&apos;/g,\"'\").replace(/&quot;/g,'\"').replace(/&amp;/g,\"&\"));b&&(a=a.replace(/\\{\\$([^}]+)}/g,function(d,e){return null!=b&&e in b?b[e]:d}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,!0,c)};goog.exportProperty=function(a,b,c){a[b]=c};\ngoog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(d,e,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[e].apply(d,g)}};goog.scope=function(a){if(goog.isInModuleLoader_())throw Error(\"goog.scope is not supported within a module.\");a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);\ngoog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error(\"cannot instantiate an interface (no constructor defined).\");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;\ngoog.defineClass.createSealingConstructor_=function(a,b){return goog.defineClass.SEAL_CLASS_INSTANCES?function(){var c=a.apply(this,arguments)||this;c[goog.UID_PROPERTY_]=c[goog.UID_PROPERTY_];return c}:a};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\ngoog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};goog.identity_=function(a){return a};\ngoog.createTrustedTypesPolicy=function(a){var b=null,c=goog.global.trustedTypes;if(!c||!c.createPolicy)return b;try{b=c.createPolicy(a,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_})}catch(d){goog.logToConsole_(d.message)}return b};\n!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.isEdge_=function(){return!!(goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:\"\").match(/Edge\\/(\\d+)(\\.\\d)*/i)},goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&\"write\"in a},goog.isDocumentLoading_=function(){var a=goog.global.document;return a.attachEvent?\"complete\"!=a.readyState:\"loading\"==a.readyState},goog.findBasePath_=function(){if(void 0!=goog.global.CLOSURE_BASE_PATH&&\"string\"===typeof goog.global.CLOSURE_BASE_PATH)goog.basePath=\ngoog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;a=b?[b]:a.getElementsByTagName(\"SCRIPT\");for(b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf(\"?\");d=-1==d?c.length:d;if(\"base.js\"==c.slice(d-7,d)){goog.basePath=c.slice(0,d-7);break}}}},goog.findBasePath_(),goog.protectScriptTag_=function(a){return a.replace(/<\\/(SCRIPT)/ig,\"\\\\x3c/$1\")},goog.DebugLoader_=function(){this.dependencies_={};this.idToPath_={};this.written_={};this.loadingDeps_=\n[];this.depsToLoad_=[];this.paused_=!1;this.factory_=new goog.DependencyFactory;this.deferredCallbacks_={};this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(a,b){function c(){d&&(goog.global.setTimeout(d,0),d=null)}var d=b;if(a.length){b=[];for(var e=0;e<a.length;e++){var f=this.getPathFromDeps_(a[e]);if(!f)throw Error(\"Unregonized namespace: \"+a[e]);b.push(this.dependencies_[f])}f=goog.require;var g=0;for(e=0;e<a.length;e++)f(a[e]),b[e].onLoad(function(){++g==a.length&&c()})}else c()},\ngoog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+\"deps.js\"),\"deps.js\",[],[],{}));this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(a,b){(a=this.getPathFromDeps_(a))&&(b||this.areDepsLoaded_(this.dependencies_[a].requires))&&(b=this.deferredCallbacks_[a])&&(delete this.deferredCallbacks_[a],b())},goog.DebugLoader_.prototype.setDependencyFactory=function(a){this.factory_=a},goog.DebugLoader_.prototype.load_=\nfunction(a){if(this.getPathFromDeps_(a)){var b=this,c=[],d=function(e){var f=b.getPathFromDeps_(e);if(!f)throw Error(\"Bad dependency path or symbol: \"+e);if(!b.written_[f]){b.written_[f]=!0;e=b.dependencies_[f];for(f=0;f<e.requires.length;f++)goog.isProvided_(e.requires[f])||d(e.requires[f]);c.push(e)}};d(a);a=!!this.depsToLoad_.length;this.depsToLoad_=this.depsToLoad_.concat(c);this.paused_||a||this.loadDeps_()}else goog.logToConsole_(\"goog.require could not find: \"+a)},goog.DebugLoader_.prototype.loadDeps_=\nfunction(){for(var a=this,b=this.paused_;this.depsToLoad_.length&&!b;)(function(){var c=!1,d=a.depsToLoad_.shift(),e=!1;a.loading_(d);var f={pause:function(){if(c)throw Error(\"Cannot call pause after the call to load.\");b=!0},resume:function(){c?a.resume_():b=!1},loaded:function(){if(e)throw Error(\"Double call to loaded.\");e=!0;a.loaded_(d)},pending:function(){for(var g=[],h=0;h<a.loadingDeps_.length;h++)g.push(a.loadingDeps_[h]);return g},setModuleState:function(g){goog.moduleLoaderState_={type:g,\nmoduleName:\"\",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(g,h,k){k&&(goog.loadedModules_[k]={exports:h,type:goog.ModuleType.ES6,moduleId:k||\"\"})},registerGoogModuleExports:function(g,h){goog.loadedModules_[g]={exports:h,type:goog.ModuleType.GOOG,moduleId:g}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(g){if(c)throw Error(\"Cannot register with defer after the call to load.\");a.defer_(d,g)},areDepsLoaded:function(){return a.areDepsLoaded_(d.requires)}};\ntry{d.load(f)}finally{c=!0}})();b&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(a){this.loadingDeps_.push(a)},goog.DebugLoader_.prototype.loaded_=function(a){for(var b=0;b<this.loadingDeps_.length;b++)if(this.loadingDeps_[b]==a){this.loadingDeps_.splice(b,1);break}for(b=0;b<this.deferredQueue_.length;b++)if(this.deferredQueue_[b]==\na.path){this.deferredQueue_.splice(b,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);a.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(a){for(var b=0;b<a.length;b++){var c=this.getPathFromDeps_(a[b]);if(!c||!(c in this.deferredCallbacks_||goog.isProvided_(a[b])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=function(a){return a in this.idToPath_?\nthis.idToPath_[a]:a in this.dependencies_?a:null},goog.DebugLoader_.prototype.defer_=function(a,b){this.deferredCallbacks_[a.path]=b;this.deferredQueue_.push(a.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(a,b,c){},goog.LoadController.prototype.setModuleState=\nfunction(a){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(a){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(a,b,c,d,e){this.path=a;this.relativePath=b;this.provides=c;this.requires=d;this.loadFlags=e;this.loaded_=!1;this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var a=this.path,b=a.indexOf(\"://\");0<=b&&(a=a.substring(b+3),b=a.indexOf(\"/\"),0<=b&&(a=a.substring(b+1)));return a},\ngoog.Dependency.prototype.onLoad=function(a){this.loaded_?a():this.loadCallbacks_.push(a)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var a=this.loadCallbacks_;this.loadCallbacks_=[];for(var b=0;b<a.length;b++)a[b]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(a){var b=Math.random().toString(32);goog.Dependency.callbackMap_[b]=a;return b},goog.Dependency.unregisterCallback_=function(a){delete goog.Dependency.callbackMap_[a]},\ngoog.Dependency.callback_=function(a,b){if(a in goog.Dependency.callbackMap_){for(var c=goog.Dependency.callbackMap_[a],d=[],e=1;e<arguments.length;e++)d.push(arguments[e]);c.apply(void 0,d)}else throw Error(\"Callback key \"+a+\" does not exist (was base.js loaded more than once?).\");},goog.Dependency.prototype.load=function(a){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var b=goog.global.document;if(\"complete\"==\nb.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\\bdeps.js$/.test(this.path)){a.loaded();return}throw Error('Cannot write \"'+this.path+'\" after document load');}var c=goog.getScriptNonce_();if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var d=function(h){h.readyState&&\"complete\"!=h.readyState?h.onload=d:(goog.Dependency.unregisterCallback_(e),a.loaded())};var e=goog.Dependency.registerCallback_(d);c=c?' nonce=\"'+c+'\"':\"\";var f='<script src=\"'+this.path+'\"'+\nc+(goog.Dependency.defer_?\" defer\":\"\")+' id=\"script-'+e+'\">\\x3c/script>';f+=\"<script\"+c+\">\";f=goog.Dependency.defer_?f+(\"document.getElementById('script-\"+e+\"').onload = function() {\\n  goog.Dependency.callback_('\"+e+\"', this);\\n};\\n\"):f+(\"goog.Dependency.callback_('\"+e+\"', document.getElementById('script-\"+e+\"'));\");f+=\"\\x3c/script>\";b.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(f):f)}else{var g=b.createElement(\"script\");g.defer=goog.Dependency.defer_;g.async=!1;c&&(g.nonce=\nc);g.onload=function(){g.onload=null;a.loaded()};g.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path;b.head.appendChild(g)}}else goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"),\"deps.js\"==this.relativePath?(goog.logToConsole_(\"Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true.\"),a.loaded()):a.pause()},goog.Es6ModuleDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,\nb,c,d,e)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(a){function b(m,n){var l=\"\",p=goog.getScriptNonce_();p&&(l=' nonce=\"'+p+'\"');m=n?'<script type=\"module\" crossorigin'+l+\">\"+n+\"\\x3c/script>\":'<script type=\"module\" crossorigin src=\"'+m+'\"'+l+\">\\x3c/script>\";d.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(m):m)}function c(m,n){var l=d.createElement(\"script\");l.defer=!0;l.async=!1;l.type=\"module\";l.setAttribute(\"crossorigin\",\n!0);var p=goog.getScriptNonce_();p&&(l.nonce=p);n?l.text=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(n):n:l.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(m):m;d.head.appendChild(l)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var d=goog.global.document,e=this;if(goog.isDocumentLoading_()){var f=b;goog.Dependency.defer_=!0}else f=c;var g=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(g);\na.setModuleState(goog.ModuleType.ES6)});f(void 0,'goog.Dependency.callback_(\"'+g+'\")');f(this.path,void 0);var h=goog.Dependency.registerCallback_(function(m){goog.Dependency.unregisterCallback_(h);a.registerEs6ModuleExports(e.path,m,goog.moduleLoaderState_.moduleName)});f(void 0,'import * as m from \"'+this.path+'\"; goog.Dependency.callback_(\"'+h+'\", m)');var k=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(k);a.clearModuleState();a.loaded()});f(void 0,'goog.Dependency.callback_(\"'+\nk+'\")')}else goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"),a.pause()},goog.TransformedDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e);this.contents_=null;this.lazyFetch_=!goog.inHtmlDocument_()||!(\"noModule\"in goog.global.document.createElement(\"script\"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(a){function b(){e.contents_=goog.loadFileSync_(e.path);e.contents_&&(e.contents_=\ne.transform(e.contents_),e.contents_&&(e.contents_+=\"\\n//# sourceURL=\"+e.path))}function c(){e.lazyFetch_&&b();if(e.contents_){f&&a.setModuleState(goog.ModuleType.ES6);try{var m=e.contents_;e.contents_=null;goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(m));if(f)var n=goog.moduleLoaderState_.moduleName}finally{f&&a.clearModuleState()}f&&goog.global.$jscomp.require.ensure([e.getPathName()],function(){a.registerEs6ModuleExports(e.path,goog.global.$jscomp.require(e.getPathName()),n)});a.loaded()}}\nfunction d(){var m=goog.global.document,n=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(n);c()}),l=goog.getScriptNonce_();l=\"<script\"+(l?' nonce=\"'+l+'\"':\"\")+\">\"+goog.protectScriptTag_('goog.Dependency.callback_(\"'+n+'\");')+\"\\x3c/script>\";m.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(l):l)}var e=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)b(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT(\"\",this.contents_)?(this.contents_=null,a.loaded()):\na.pause();else{var f=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||b();var g=1<a.pending().length;if(goog.Dependency.defer_&&(g||goog.isDocumentLoading_()))a.defer(function(){c()});else{var h=goog.global.document;g=goog.inHtmlDocument_()&&(\"ActiveXObject\"in goog.global||goog.isEdge_());if(f&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!g){goog.Dependency.defer_=!0;a.pause();var k=h.onreadystatechange;h.onreadystatechange=function(){\"interactive\"==h.readyState&&(h.onreadystatechange=\nk,c(),a.resume());\"function\"===typeof k&&k.apply(void 0,arguments)}}else goog.inHtmlDocument_()&&goog.isDocumentLoading_()?d():c()}}},goog.TransformedDependency.prototype.transform=function(a){},goog.PreTranspiledEs6ModuleDependency=function(a,b,c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(a){return a},goog.GoogModuleDependency=function(a,b,\nc,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(a){return goog.LOAD_MODULE_USING_EVAL&&void 0!==goog.global.JSON?\"goog.loadModule(\"+goog.global.JSON.stringify(a+\"\\n//# sourceURL=\"+this.path+\"\\n\")+\");\":'goog.loadModule(function(exports) {\"use strict\";'+a+\"\\n;return exports});\\n//# sourceURL=\"+this.path+\"\\n\"},goog.DebugLoader_.prototype.addDependency=function(a,b,c,d){b=\nb||[];a=a.replace(/\\\\/g,\"/\");var e=goog.normalizePath_(goog.basePath+a);d&&\"boolean\"!==typeof d||(d=d?{module:goog.ModuleType.GOOG}:{});c=this.factory_.createDependency(e,a,b,c,d);this.dependencies_[e]=c;for(c=0;c<b.length;c++)this.idToPath_[b[c]]=e;this.idToPath_[a]=e},goog.DependencyFactory=function(){},goog.DependencyFactory.prototype.createDependency=function(a,b,c,d,e){return e.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(a,b,c,d,e):e.module==goog.ModuleType.ES6?goog.ASSUME_ES_MODULES_TRANSPILED?\nnew goog.PreTranspiledEs6ModuleDependency(a,b,c,d,e):new goog.Es6ModuleDependency(a,b,c,d,e):new goog.Dependency(a,b,c,d,e)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(a){goog.debugLoader_.setDependencyFactory(a)},goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+\"#base\"):null,goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),\ngoog.bootstrap=function(a,b){goog.debugLoader_.bootstrap(a,b)});if(!COMPILED){var isChrome87=!1;try{isChrome87=eval(goog.global.trustedTypes.emptyScript)!==goog.global.trustedTypes.emptyScript}catch(a){}goog.CLOSURE_EVAL_PREFILTER_=goog.global.trustedTypes&&isChrome87&&goog.createTrustedTypesPolicy(\"goog#base#devonly#eval\")||{createScript:goog.identity_}};function atobPolyfill$$module$dist$__csound_wasm_inline(a){a=String(a).replace(/[=]+$/,\"\");1===a.length%4&&console.error(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var b=0,c,d,e=0,f=\"\";d=a.charAt(e++);~d&&(c=b%4?64*c+d:d,b++%4)&&(f+=String.fromCharCode(255&c>>(-2*b&6))))d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(d);return f}\nfunction bufferFromBrowser$$module$dist$__csound_wasm_inline(a){return\"undefined\"!=typeof AudioWorkletGlobalScope?atobPolyfill$$module$dist$__csound_wasm_inline(a):window.atob(a)}function __toArrayBuffer$$module$dist$__csound_wasm_inline(a){a=bufferFromBrowser$$module$dist$__csound_wasm_inline(a);for(var b=new Uint8Array(a.length),c=0;c<a.length;++c)b[c]=a.charCodeAt(c);return b.buffer}\nvar $jscompDefaultExport$$module$dist$__csound_wasm_inline=()=>__toArrayBuffer$$module$dist$__csound_wasm_inline(\"\"),module$dist$__csound_wasm_inline=\n{};module$dist$__csound_wasm_inline.default=$jscompDefaultExport$$module$dist$__csound_wasm_inline;const proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.proxy\"),createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.endpoint\"),releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.releaseProxy\"),throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.thrown\"),isObject$$module$node_modules$comlink$dist$esm$comlink_mjs=a=>\"object\"===typeof a&&null!==a||\"function\"===typeof a,proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs=\n{canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs],serialize(a){const {port1:b,port2:c}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b);return[c,[c]]},deserialize(a){a.start();return wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a)}},throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs={canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&\nthrowMarker$$module$node_modules$comlink$dist$esm$comlink_mjs in a,serialize({value:a}){return[a instanceof Error?{isError:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{isError:!1,value:a},[]]},deserialize(a){if(a.isError)throw Object.assign(Error(a.value.message),a.value);throw a.value;}},transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs=new Map([[\"proxy\",proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs],[\"throw\",throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs]]);\nfunction expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self){b.addEventListener(\"message\",function e(d){if(d&&d.data){var {id:f,type:g,path:h}=Object.assign({path:[]},d.data),k=(d.data.argumentList||[]).map(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);try{const n=h.slice(0,-1).reduce((p,q)=>p[q],a),l=h.reduce((p,q)=>p[q],a);switch(g){case \"GET\":var m=l;break;case \"SET\":n[h.slice(-1)[0]]=fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(d.data.value);\nm=!0;break;case \"APPLY\":m=l.apply(n,k);break;case \"CONSTRUCT\":const p=new l(...k);m=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(p);break;case \"ENDPOINT\":const {port1:q,port2:u}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,u);m=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(q,[q]);break;case \"RELEASE\":m=void 0;break;default:return}}catch(n){m={value:n,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0}}Promise.resolve(m).catch(n=>\n({value:n,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0})).then(n=>{const [l,p]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(n);b.postMessage(Object.assign(Object.assign({},l),{id:f}),p);\"RELEASE\"===g&&(b.removeEventListener(\"message\",e),closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(b))})}});b.start&&b.start()}function isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return\"MessagePort\"===a.constructor.name}\nfunction closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a){isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a.close()}function wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[],b)}function throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(a){if(a)throw Error(\"Proxy has been released and is not useable\");}\nfunction createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=[],c=function(){}){let d=!1;const e=new Proxy(c,{get(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);if(g===releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs)return()=>requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"RELEASE\",path:b.map(h=>h.toString())}).then(()=>{closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a);d=!0});if(\"then\"===\ng){if(0===b.length)return{then:()=>e};f=requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"GET\",path:b.map(h=>h.toString())}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return f.then.bind(f)}return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[...b,g])},set(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [k,m]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,\n{type:\"SET\",path:[...b,g].map(n=>n.toString()),value:k},m).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},apply(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);f=b[b.length-1];if(f===createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs)return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"ENDPOINT\"}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);if(\"bind\"===f)return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,\nb.slice(0,-1));const [k,m]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"APPLY\",path:b.map(n=>n.toString()),argumentList:k},m).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},construct(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [h,k]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(g);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,\n{type:\"CONSTRUCT\",path:b.map(m=>m.toString()),argumentList:h},k).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)}});return e}function myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Array.prototype.concat.apply([],a)}\nfunction processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(a){a=a.map(toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return[a.map(b=>b[0]),myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a.map(b=>b[1]))]}const transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs=new WeakMap;function transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.set(a,b);return a}\nfunction proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Object.assign(a,{[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:!0})}function windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self,c=\"*\"){return{postMessage:(d,e)=>a.postMessage(d,c,e),addEventListener:b.addEventListener.bind(b),removeEventListener:b.removeEventListener.bind(b)}}\nfunction toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){for(const [b,c]of transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs)if(c.canHandle(a)){const [d,e]=c.serialize(a);return[{type:\"HANDLER\",name:b,value:d},e]}return[{type:\"RAW\",value:a},transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a)||[]]}\nfunction fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){switch(a.type){case \"HANDLER\":return transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a.name).deserialize(a.value);case \"RAW\":return a.value}}\nfunction requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b,c){return new Promise(d=>{const e=generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs();a.addEventListener(\"message\",function h(g){g.data&&g.data.id&&g.data.id===e&&(a.removeEventListener(\"message\",h),d(g.data))});a.start&&a.start();a.postMessage(Object.assign({id:e},b),c)})}\nfunction generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs(){return Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join(\"-\")}var module$node_modules$comlink$dist$esm$comlink_mjs={};module$node_modules$comlink$dist$esm$comlink_mjs.createEndpoint=createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.expose=expose$$module$node_modules$comlink$dist$esm$comlink_mjs;\nmodule$node_modules$comlink$dist$esm$comlink_mjs.proxy=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.proxyMarker=proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.releaseProxy=releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.transfer=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs;\nmodule$node_modules$comlink$dist$esm$comlink_mjs.transferHandlers=transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.windowEndpoint=windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.wrap=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs;var module$node_modules$lines_logger$lib$index={default:{}};module$node_modules$lines_logger$lib$index.default.__esModule=!0;module$node_modules$lines_logger$lib$index.default.LoggerFactory=module$node_modules$lines_logger$lib$index.default.logLevels=void 0;module$node_modules$lines_logger$lib$index.default.logLevels={log_raise_error:1,log_with_warnings:2,trace:3,debug:4,info:5,warn:6,error:7,disable:8};\nvar LoggerFactory$$module$node_modules$lines_logger$lib$index=function(){function a(b,c){if(void 0===b&&(b=\"log_with_warnings\"),void 0===c&&(c=null),this.logLevel=b,!module$node_modules$lines_logger$lib$index.default.logLevels[b])throw Error(\"Invalid log level \"+b+\" allowed: \"+JSON.stringify(module$node_modules$lines_logger$lib$index.default.logLevels));this.mockConsole=c||console}return a.prototype.dummy=function(){},a.prototype.setLogWarnings=function(b){this.logLevel=b},a.prototype.getLogWarnings=\nfunction(){return this.logLevel},a.prototype.getSingleLoggerColor=function(b,c,d){return this.getSingleLoggerStyle(b,this.getColorStyle(c),d)},a.prototype.getSingleLogger=function(b,c){var d=this.getRandomColor(b);return this.getSingleLoggerStyle(b,this.getColorStyle(d),c)},a.prototype.getSingleLoggerStyle=function(b,c,d,e){var f=this;return void 0===e&&(e=\"log_with_warnings\"),function(){for(var g=[],h=0;h<arguments.length;h++)g[h]=arguments[h];if(module$node_modules$lines_logger$lib$index.default.logLevels[f.logLevel]>\nmodule$node_modules$lines_logger$lib$index.default.logLevels[e])return f.dummy;g=Array.prototype.slice.call(g);h=g.shift().split(\"{}\");for(var k=[f.mockConsole,\"%c\"+b,c],m=0;m<h.length;m++)k.push(h[m]),void 0!==g[m]&&k.push(g[m]);if(h.length-1!==g.length)if(\"log_with_warnings\"===f.logLevel)f.mockConsole.error(\"MissMatch amount of arguments\");else if(\"log_raise_error\"===f.logLevel)throw Error(\"MissMatch amount of arguments\");return Function.prototype.bind.apply(d,k)}},a.prototype.getLoggerColor=function(b,\nc){return this.getLoggerStyle(b,this.getColorStyle(c))},a.prototype.getColorStyle=function(b){return\"color: white; background-color: \"+b+\"; padding: 2px 6px; border-radius: 2px; font-size: 10px\"},a.getHash=function(b,c){void 0===c&&(c=0);var d=3735928559^c;c^=1103547991;for(var e=0,f;e<b.length;e++)f=b.charCodeAt(e),d=Math.imul(d^f,2654435761),c=Math.imul(c^f,1597334677);return d=Math.imul(d^d>>>16,2246822507)^Math.imul(c^c>>>13,3266489909),4294967296*(2097151&(Math.imul(c^c>>>16,2246822507)^Math.imul(d^\nd>>>13,3266489909)))+(d>>>0)},a.prototype.getRandomColor=function(b){void 0===b&&(b=\"\");b=a.getHash(b);for(var c=\"#\",d=0;3>d;d++)c+=(\"00\"+(8+(b>>7*d&127)).toString(16)).substr(-2);return c},a.prototype.getLogger=function(b){return this.getLoggerColor(b,this.getRandomColor(b))},a.prototype.getLoggerStyle=function(b,c){return{trace:this.getSingleLoggerStyle(b,c,this.mockConsole.trace,\"trace\"),debug:this.getSingleLoggerStyle(b,c,this.mockConsole.debug,\"debug\"),log:this.getSingleLoggerStyle(b,c,this.mockConsole.log,\n\"info\"),warn:this.getSingleLoggerStyle(b,c,this.mockConsole.warn,\"warn\"),error:this.getSingleLoggerStyle(b,c,this.mockConsole.error,\"error\")}},a}();module$node_modules$lines_logger$lib$index.default.LoggerFactory=LoggerFactory$$module$node_modules$lines_logger$lib$index;let logWorkletMain$$module$src$logger,logWorkletWorker$$module$src$logger,logSABMain$$module$src$logger,logSABWorker$$module$src$logger,logVANMain$$module$src$logger,logVANWorker$$module$src$logger,logOldSpnMain$$module$src$logger,logOldSpnWorker$$module$src$logger,logIndex$$module$src$logger,logSPNMainSingle$$module$src$logger,logSinglethreadWorkletMain$$module$src$logger,logSinglethreadWorkletWorker$$module$src$logger,logCommonUtils$$module$src$logger,logWasmModule$$module$src$logger,logMidiRequest$$module$src$logger;\nconst isProd$$module$src$logger=1;logWorkletMain$$module$src$logger=a=>b=>{};logWorkletWorker$$module$src$logger=a=>b=>{};logSABMain$$module$src$logger=a=>b=>{};logSABWorker$$module$src$logger=a=>b=>{};logVANMain$$module$src$logger=a=>b=>{};logVANWorker$$module$src$logger=a=>b=>{};logOldSpnMain$$module$src$logger=a=>b=>{};logOldSpnWorker$$module$src$logger=a=>b=>{};logIndex$$module$src$logger=a=>b=>{};logSPNMainSingle$$module$src$logger=a=>b=>{};\nlogSinglethreadWorkletMain$$module$src$logger=a=>b=>{};logSinglethreadWorkletWorker$$module$src$logger=a=>b=>{};logCommonUtils$$module$src$logger=a=>b=>{};logWasmModule$$module$src$logger=a=>b=>{};logMidiRequest$$module$src$logger=a=>b=>{};var $jscompDefaultExport$$module$src$logger=a=>b=>{},module$src$logger={};module$src$logger.default=$jscompDefaultExport$$module$src$logger;module$src$logger.logCommonUtils=logCommonUtils$$module$src$logger;module$src$logger.logIndex=logIndex$$module$src$logger;\nmodule$src$logger.logMidiRequest=logMidiRequest$$module$src$logger;module$src$logger.logOldSpnMain=logOldSpnMain$$module$src$logger;module$src$logger.logOldSpnWorker=logOldSpnWorker$$module$src$logger;module$src$logger.logSABMain=logSABMain$$module$src$logger;module$src$logger.logSABWorker=logSABWorker$$module$src$logger;module$src$logger.logSPNMainSingle=logSPNMainSingle$$module$src$logger;module$src$logger.logSinglethreadWorkletMain=logSinglethreadWorkletMain$$module$src$logger;\nmodule$src$logger.logSinglethreadWorkletWorker=logSinglethreadWorkletWorker$$module$src$logger;module$src$logger.logVANMain=logVANMain$$module$src$logger;module$src$logger.logVANWorker=logVANWorker$$module$src$logger;module$src$logger.logWasmModule=logWasmModule$$module$src$logger;module$src$logger.logWorkletMain=logWorkletMain$$module$src$logger;module$src$logger.logWorkletWorker=logWorkletWorker$$module$src$logger;const csoundCreate$$module$src$modules$instantiation=a=>()=>a.exports.csoundCreateWasi();csoundCreate$$module$src$modules$instantiation.toString=()=>\"create = async () => undefined;\";const csoundDestroy$$module$src$modules$instantiation=a=>b=>a.exports.csoundDestroy(b);csoundDestroy$$module$src$modules$instantiation.toString=()=>\"destroy = async () => undefined;\";const csoundGetAPIVersion$$module$src$modules$instantiation=a=>()=>a.exports.csoundGetAPIVersion();\ncsoundGetAPIVersion$$module$src$modules$instantiation.toString=()=>\"getAPIVersion = async () => Number;\";const csoundGetVersion$$module$src$modules$instantiation=a=>()=>a.exports.csoundGetVersion();csoundGetVersion$$module$src$modules$instantiation.toString=()=>\"getVersion = async () => Number;\";const csoundInitialize$$module$src$modules$instantiation=a=>(b,c)=>a.exports.csoundInitialize(c);csoundInitialize$$module$src$modules$instantiation.toString=()=>\"initialize = async () => Number;\";\nvar module$src$modules$instantiation={};module$src$modules$instantiation.csoundCreate=csoundCreate$$module$src$modules$instantiation;module$src$modules$instantiation.csoundDestroy=csoundDestroy$$module$src$modules$instantiation;module$src$modules$instantiation.csoundGetAPIVersion=csoundGetAPIVersion$$module$src$modules$instantiation;module$src$modules$instantiation.csoundGetVersion=csoundGetVersion$$module$src$modules$instantiation;module$src$modules$instantiation.csoundInitialize=csoundInitialize$$module$src$modules$instantiation;const WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders=!1;function TextEncoderPoly$$module$src$utils$text_encoders(){this.encoding=\"utf8\";return this}TextEncoderPoly$$module$src$utils$text_encoders.prototype.encode=function(a){if(\"string\"!==typeof a)throw new TypeError(\"passed argument must be of type string \"+a+\" \"+typeof a);a=unescape(encodeURIComponent(a));const b=new Uint8Array(a.length);[...a].forEach(function(c,d){b[d]=c.codePointAt(0)});return b};\nfunction TextDecoderPoly$$module$src$utils$text_encoders(){this.encoding=\"utf8\";this.ignoreBOM=!1;this.trimNull=a=>{const b=a.indexOf(\"\\x00\");return-1<b?a.slice(0,Math.max(0,b)):a};this.decode=function(a,b){if(void 0===a)return\"\";if(\"boolean\"!==typeof(void 0!==b&&\"stream\"in b?b.stream:!1))throw new TypeError(\"stream option must be boolean\");if(ArrayBuffer.isView(a)){a=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);const c=Array.from({length:a.length});a.forEach(function(d,e){c[e]=String.fromCodePoint(d)});\nreturn this.trimNull(c.join(\"\"))}throw new TypeError(\"passed argument must be an array buffer view\");}}\nconst decoder$$module$src$utils$text_encoders=WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders?new TextDecoderPoly$$module$src$utils$text_encoders:new TextDecoder(\"utf8\"),encoder$$module$src$utils$text_encoders=WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders?new TextEncoderPoly$$module$src$utils$text_encoders:new TextEncoder(\"utf8\"),uint2String$$module$src$utils$text_encoders=a=>decoder$$module$src$utils$text_encoders.decode(a);var module$src$utils$text_encoders={};\nmodule$src$utils$text_encoders.decoder=decoder$$module$src$utils$text_encoders;module$src$utils$text_encoders.encoder=encoder$$module$src$utils$text_encoders;module$src$utils$text_encoders.uint2String=uint2String$$module$src$utils$text_encoders;const trimNull$$module$src$utils$trim_null=a=>{const b=a.indexOf(\"\\x00\");return-1<b?a.substr(0,b):a};var module$src$utils$trim_null={};module$src$utils$trim_null.trimNull=trimNull$$module$src$utils$trim_null;const freeStringPtr$$module$src$utils$string_pointers=(a,b)=>{a.exports.freeStringMem(b)},ptr2string$$module$src$utils$string_pointers=(a,b)=>{({buffer:a}=a.wasi.memory);b=new Uint8Array(a,b);b=uint2String$$module$src$utils$text_encoders(b);return trimNull$$module$src$utils$trim_null(b)},string2ptr$$module$src$utils$string_pointers=(a,b)=>{if(\"string\"!==typeof b)console.error(\"Expected string but got\",typeof b);else{b=encoder$$module$src$utils$text_encoders.encode(b);var c=a.exports.allocStringMem(b.length);\n({buffer:a}=a.wasi.memory);(new Uint8Array(a,c,b.length+1)).set(b);return c}};var module$src$utils$string_pointers={};module$src$utils$string_pointers.freeStringPtr=freeStringPtr$$module$src$utils$string_pointers;module$src$utils$string_pointers.ptr2string=ptr2string$$module$src$utils$string_pointers;module$src$utils$string_pointers.string2ptr=string2ptr$$module$src$utils$string_pointers;const csoundParseOrc$$module$src$modules$performance=a=>(b,c)=>a.exports.csoundParseOrc(b,c);csoundParseOrc$$module$src$modules$performance.toString=()=>\"parseOrc = async (orchestra) => Object;\";const csoundCompileTree$$module$src$modules$performance=a=>(b,c)=>a.exports.csoundCompileTree(b,c);csoundCompileTree$$module$src$modules$performance.toString=()=>\"compileTree = async (tree) => Number;\";\nconst csoundCompileOrc$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundCompileOrc(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundCompileOrc$$module$src$modules$performance.toString=()=>\"compileOrc = async (orchestra) => Number;\";\nconst csoundEvalCode$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundEvalCode(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundEvalCode$$module$src$modules$performance.toString=()=>\"csoundEvalCode = async (orchestra) => Number;\";const csoundStart$$module$src$modules$performance=a=>b=>a.exports.csoundStartWasi(b);csoundStart$$module$src$modules$performance.toString=()=>\"start = async () => Number;\";\nconst csoundCompileCsd$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);let d;try{d=a.exports.csoundCompileCsd(b,c)}catch(e){console.error(e)}freeStringPtr$$module$src$utils$string_pointers(a,c);return d};csoundCompileCsd$$module$src$modules$performance.toString=()=>\"compileCsd = async (path) => Number;\";\nconst csoundCompileCsdText$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundCompileCsdText(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundCompileCsdText$$module$src$modules$performance.toString=()=>\"compileCsdText = async (csoundDocument) => Number;\";const csoundPerform$$module$src$modules$performance=a=>b=>a.exports.csoundPerform(b);csoundPerform$$module$src$modules$performance.toString=()=>\"perform = async () => Number;\";\nconst csoundPerformKsmps$$module$src$modules$performance=a=>b=>a.exports.csoundPerformKsmpsWasi(b);csoundPerformKsmps$$module$src$modules$performance.toString=()=>\"performKsmps = async (csound) => Number;\";const csoundPerformBuffer$$module$src$modules$performance=a=>b=>a.exports.csoundPerformBuffer(b);csoundPerformBuffer$$module$src$modules$performance.toString=()=>\"performBuffer = async (csound) => Number;\";const csoundStop$$module$src$modules$performance=a=>b=>a.exports.csoundStop(b);\ncsoundStop$$module$src$modules$performance.toString=()=>\"stop = async () => undefined;\";const csoundCleanup$$module$src$modules$performance=a=>b=>a.exports.csoundCleanup(b);csoundCleanup$$module$src$modules$performance.toString=()=>\"cleanup = async () => Number;\";const csoundReset$$module$src$modules$performance=a=>b=>a.exports.csoundResetWasi(b);csoundReset$$module$src$modules$performance.toString=()=>\"reset = async () => Number;\";var module$src$modules$performance={};\nmodule$src$modules$performance.csoundCleanup=csoundCleanup$$module$src$modules$performance;module$src$modules$performance.csoundCompileCsd=csoundCompileCsd$$module$src$modules$performance;module$src$modules$performance.csoundCompileCsdText=csoundCompileCsdText$$module$src$modules$performance;module$src$modules$performance.csoundCompileOrc=csoundCompileOrc$$module$src$modules$performance;module$src$modules$performance.csoundCompileTree=csoundCompileTree$$module$src$modules$performance;\nmodule$src$modules$performance.csoundEvalCode=csoundEvalCode$$module$src$modules$performance;module$src$modules$performance.csoundParseOrc=csoundParseOrc$$module$src$modules$performance;module$src$modules$performance.csoundPerform=csoundPerform$$module$src$modules$performance;module$src$modules$performance.csoundPerformBuffer=csoundPerformBuffer$$module$src$modules$performance;module$src$modules$performance.csoundPerformKsmps=csoundPerformKsmps$$module$src$modules$performance;\nmodule$src$modules$performance.csoundReset=csoundReset$$module$src$modules$performance;module$src$modules$performance.csoundStart=csoundStart$$module$src$modules$performance;module$src$modules$performance.csoundStop=csoundStop$$module$src$modules$performance;const sizeOfPrimitive$$module$src$utils$native_sizes={int:4,MYFLT:4,char:1},sizeofStruct$$module$src$utils$native_sizes=a=>a.reduce((b,[,c,...d])=>b+(\"char\"===c?sizeOfPrimitive$$module$src$utils$native_sizes[c]*d[0]:sizeOfPrimitive$$module$src$utils$native_sizes[c]),0);var module$src$utils$native_sizes={};module$src$utils$native_sizes.sizeOfPrimitive=sizeOfPrimitive$$module$src$utils$native_sizes;module$src$utils$native_sizes.sizeofStruct=sizeofStruct$$module$src$utils$native_sizes;const structBufferToObject$$module$src$utils$structure_buffer_to_object=(a,b)=>{[a]=a.reduce(([c,d],[e,f,...g])=>{g=\"char\"===f?sizeOfPrimitive$$module$src$utils$native_sizes[f]*g[0]:sizeOfPrimitive$$module$src$utils$native_sizes[f];f=\"char\"===f?trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(b.subarray(d,g)))||\"\":b[d];c[e]=f;return[c,d+g]},[{},0]);return a};var module$src$utils$structure_buffer_to_object={};\nmodule$src$utils$structure_buffer_to_object.structBufferToObject=structBufferToObject$$module$src$utils$structure_buffer_to_object;const CSOUND_PARAMS$$module$src$structures=[[\"debug_mode\",\"int\"],[\"buffer_frames\",\"int\"],[\"hardware_buffer_frames\",\"int\"],[\"displays\",\"int\"],[\"ascii_graphs\",\"int\"],[\"postscript_graphs\",\"int\"],[\"message_level\",\"int\"],[\"tempo\",\"int\"],[\"ring_bell\",\"int\"],[\"use_cscore\",\"int\"],[\"terminate_on_midi\",\"int\"],[\"heartbeat\",\"int\"],[\"defer_gen01_load\",\"int\"],[\"midi_key\",\"int\"],[\"midi_key_cps\",\"int\"],[\"midi_key_oct\",\"int\"],[\"midi_key_pch\",\"int\"],[\"midi_velocity\",\"int\"],[\"midi_velocity_amp\",\"int\"],[\"no_default_paths\",\n\"int\"],[\"number_of_threads\",\"int\"],[\"syntax_check_only\",\"int\"],[\"csd_line_counts\",\"int\"],[\"compute_weights\",\"int\"],[\"realtime_mode\",\"int\"],[\"sample_accurate\",\"int\"],[\"sample_rate_override\",\"MYFLT\"],[\"control_rate_override\",\"MYFLT\"],[\"nchnls_override\",\"int\"],[\"nchnls_i_override\",\"int\"],[\"e0dbfs_override\",\"MYFLT\"],[\"daemon\",\"int\"],[\"ksmps_override\",\"int\"],[\"FFT_library\",\"int\"]],CS_MIDIDEVICE$$module$src$structures=[[\"device_name\",\"char\",64],[\"interface_name\",\"char\",64],[\"device_id\",\"char\",64],[\"midi_module\",\n\"char\",64],[\"isOutput\",\"int\"]];var module$src$structures={};const csoundGetSr$$module$src$modules$attributes=a=>b=>a.exports.csoundGetSr(b);csoundGetSr$$module$src$modules$attributes.toString=()=>\"getSr = async () => Number;\";const csoundGetKr$$module$src$modules$attributes=a=>b=>a.exports.csoundGetKr(b);csoundGetKr$$module$src$modules$attributes.toString=()=>\"getKr = async () => Number;\";const csoundGetKsmps$$module$src$modules$attributes=a=>b=>a.exports.csoundGetKsmps(b);csoundGetKsmps$$module$src$modules$attributes.toString=()=>\"getKsmps = async () => Number;\";\nconst csoundGetNchnls$$module$src$modules$attributes=a=>b=>a.exports.csoundGetNchnls(b);csoundGetNchnls$$module$src$modules$attributes.toString=()=>\"getNchnls = async () => Number;\";const csoundGetNchnlsInput$$module$src$modules$attributes=a=>b=>a.exports.csoundGetNchnlsInput(b);csoundGetNchnlsInput$$module$src$modules$attributes.toString=()=>\"getNchnlsInput = async () => Number;\";const csoundGet0dBFS$$module$src$modules$attributes=a=>b=>a.exports.csoundGet0dBFS(b);\ncsoundGet0dBFS$$module$src$modules$attributes.toString=()=>\"get0dBFS = async () => Number;\";const csoundGetA4$$module$src$modules$attributes=a=>b=>a.exports.csoundGetA4(b);csoundGetA4$$module$src$modules$attributes.toString=()=>\"getA4 = async () => Number;\";const csoundGetCurrentTimeSamples$$module$src$modules$attributes=a=>b=>a.exports.csoundGetCurrentTimeSamples(b);csoundGetCurrentTimeSamples$$module$src$modules$attributes.toString=()=>\"getCurrentTimeSamples = async () => Number;\";\nconst csoundGetSizeOfMYFLT$$module$src$modules$attributes=a=>b=>a.exports.csoundGetSizeOfMYFLT(b);csoundGetSizeOfMYFLT$$module$src$modules$attributes.toString=()=>\"getSizeOfMYFLT = async () => Number;\";const csoundSetOption$$module$src$modules$attributes=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundSetOption(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundSetOption$$module$src$modules$attributes.toString=()=>\"setOption = async (option) => Number;\";\nconst csoundSetParams$$module$src$modules$attributes=a=>(b,c)=>{a.exports.csoundSetParams(b,c)};csoundSetParams$$module$src$modules$attributes.toString=()=>\"setParams = async (csoundParams) => undefined;\";\nconst csoundGetParams$$module$src$modules$attributes=a=>b=>{var {buffer:c}=a.wasi.memory;const d=sizeofStruct$$module$src$utils$native_sizes(CSOUND_PARAMS$$module$src$structures),e=a.exports.allocCsoundParamsStruct();c=new Uint8Array(c,e,d);a.exports.csoundGetParams(b,e);b=structBufferToObject$$module$src$utils$structure_buffer_to_object(CSOUND_PARAMS$$module$src$structures,c);a.exports.freeCsoundParams(e);return b};csoundGetParams$$module$src$modules$attributes.toString=()=>\"getParams = async () => CSOUND_PARAMS;\";\nconst csoundGetDebug$$module$src$modules$attributes=a=>b=>a.exports.csoundGetDebug(b);csoundGetDebug$$module$src$modules$attributes.toString=()=>\"getDebug = async () => Number;\";const csoundSetDebug$$module$src$modules$attributes=a=>(b,c)=>{a.exports.csoundSetDebug(b,c)};csoundSetDebug$$module$src$modules$attributes.toString=()=>\"setDebug = async (number) => undefined;\";var module$src$modules$attributes={};module$src$modules$attributes.csoundGet0dBFS=csoundGet0dBFS$$module$src$modules$attributes;\nmodule$src$modules$attributes.csoundGetA4=csoundGetA4$$module$src$modules$attributes;module$src$modules$attributes.csoundGetCurrentTimeSamples=csoundGetCurrentTimeSamples$$module$src$modules$attributes;module$src$modules$attributes.csoundGetDebug=csoundGetDebug$$module$src$modules$attributes;module$src$modules$attributes.csoundGetKr=csoundGetKr$$module$src$modules$attributes;module$src$modules$attributes.csoundGetKsmps=csoundGetKsmps$$module$src$modules$attributes;\nmodule$src$modules$attributes.csoundGetNchnls=csoundGetNchnls$$module$src$modules$attributes;module$src$modules$attributes.csoundGetNchnlsInput=csoundGetNchnlsInput$$module$src$modules$attributes;module$src$modules$attributes.csoundGetParams=csoundGetParams$$module$src$modules$attributes;module$src$modules$attributes.csoundGetSizeOfMYFLT=csoundGetSizeOfMYFLT$$module$src$modules$attributes;module$src$modules$attributes.csoundGetSr=csoundGetSr$$module$src$modules$attributes;\nmodule$src$modules$attributes.csoundSetDebug=csoundSetDebug$$module$src$modules$attributes;module$src$modules$attributes.csoundSetOption=csoundSetOption$$module$src$modules$attributes;module$src$modules$attributes.csoundSetParams=csoundSetParams$$module$src$modules$attributes;const csoundGetInputBufferSize$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetInputBufferSize(b);csoundGetInputBufferSize$$module$src$modules$rtaudio.toString=()=>\"getInputBufferSize = async () => Number;\";const csoundGetOutputBufferSize$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetOutputBufferSize(b);csoundGetOutputBufferSize$$module$src$modules$rtaudio.toString=()=>\"getOutputBufferSize = async () => Number;\";const csoundGetInputBuffer$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetInputBuffer(b);\ncsoundGetInputBuffer$$module$src$modules$rtaudio.toString=()=>\"getInputBuffer = async () => Number;\";const csoundGetOutputBuffer$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetOutputBuffer(b);csoundGetOutputBuffer$$module$src$modules$rtaudio.toString=()=>\"getOutputBuffer = async () => Number;\";const csoundGetSpin$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetSpin(b);csoundGetSpin$$module$src$modules$rtaudio.toString=()=>\"getSpin = async (csound) => Number;\";\nconst csoundGetSpout$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetSpout(b);csoundGetSpout$$module$src$modules$rtaudio.toString=()=>\"getSpout = async () => Number;\";var module$src$modules$rtaudio={};module$src$modules$rtaudio.csoundGetInputBuffer=csoundGetInputBuffer$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetInputBufferSize=csoundGetInputBufferSize$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetOutputBuffer=csoundGetOutputBuffer$$module$src$modules$rtaudio;\nmodule$src$modules$rtaudio.csoundGetOutputBufferSize=csoundGetOutputBufferSize$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetSpin=csoundGetSpin$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetSpout=csoundGetSpout$$module$src$modules$rtaudio;function add$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>add$$module$node_modules$rambda$dist$rambda_mjs(a,c):Number(a)+Number(b)}const cloneList$$module$node_modules$rambda$dist$rambda_mjs=a=>Array.prototype.slice.call(a);function curry$$module$node_modules$rambda$dist$rambda_mjs(a,b=[]){return(...c)=>{c=[...b,...c];return c.length>=a.length?a(...c):curry$$module$node_modules$rambda$dist$rambda_mjs(a,c)}}\nfunction adjustFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d=0>a?c.length+a:a;if(a>=c.length||0>d)return c;a=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);a[d]=b(a[d]);return a}const adjust$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(adjustFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction all$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>all$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(!a(b[c]))return!1;return!0}function allPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(!a[c](...b))return!1;c++}return!0}}function always$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>a}\nfunction and$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>and$$module$node_modules$rambda$dist$rambda_mjs(a,c):a&&b}function any$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>any$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=0;for(;c<b.length;){if(a(b[c],c))return!0;c++}return!1}\nfunction anyPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(a[c](...b))return!0;c++}return!1}}function append$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>append$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(\"string\"===typeof b)return b.split(\"\").concat(a);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);c.push(a);return c}\nfunction apply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>apply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.apply(this,b)}const {isArray:isArray$$module$node_modules$rambda$dist$rambda_mjs}=Array;\nfunction __findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a,b=0){for(const c in a)!1!==a.hasOwnProperty(c)&&\"constructor\"!==c&&(\"object\"===typeof a[c]&&(b=Math.max(b,__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a[c]))),\"function\"===typeof a[c]&&(b=Math.max(b,a[c].length)));return b}\nfunction __filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(){const a=[];let b=0;const c=arguments.length;for(;b<c&&\"undefined\"!==typeof arguments[b];)a[b]=arguments[b],b++;return a}\nfunction __applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){var d=b-c.length;if(1===d)return f=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f));if(2===d)return(f,g)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g));if(3===d)return(f,g,h)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,\nb,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h));if(4===d)return(f,g,h,k)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h,k));if(4<d)return(...f)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,...f));if(isArray$$module$node_modules$rambda$dist$rambda_mjs(a)){var e=[];d=0;const f=a.length;\nfor(;d<f;d++){if(\"object\"===typeof a[d]||isArray$$module$node_modules$rambda$dist$rambda_mjs(a[d]))e[d]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[d],b,c);\"function\"===typeof a[d]&&(e[d]=a[d](...c))}return e}d={};for(e in a)!1!==a.hasOwnProperty(e)&&\"constructor\"!==e&&(\"object\"===typeof a[e]?d[e]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[e],b,c):\"function\"===typeof a[e]&&(d[e]=a[e](...c)));return d}\nfunction applySpec$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a);return 0===c?()=>({}):__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,c,b)}function assocFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return Object.assign({},c,{[a]:b})}const assoc$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction _isInteger$$module$node_modules$rambda$dist$rambda_mjs(a){return a<<0===a}const isInteger$$module$node_modules$rambda$dist$rambda_mjs=Number.isInteger||_isInteger$$module$node_modules$rambda$dist$rambda_mjs;\nfunction assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d=\"string\"===typeof a?a.split(\".\").map(e=>isInteger$$module$node_modules$rambda$dist$rambda_mjs(Number(e))?Number(e):e):a;if(0===d.length)return b;a=d[0];if(1<d.length){const e=\"object\"===typeof c&&null!==c&&c.hasOwnProperty(a)?c[a]:isInteger$$module$node_modules$rambda$dist$rambda_mjs(d[1])?[]:{};b=assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(d,1),b,e)}return isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)&&\nisArray$$module$node_modules$rambda$dist$rambda_mjs(c)?(c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c),c[a]=b,c):assoc$$module$node_modules$rambda$dist$rambda_mjs(a,b,c)}const assocPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocPathFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction _curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return function(){var d=0;let e=0;const f=b.length,g=arguments.length,h=Array(f+g);for(;d<f;)h[d]=b[d],d++;for(;e<g;)h[f+e]=arguments[e],e++;d=a-h.length;return h.length>=a?c.apply(this,h):_arity$1$$module$node_modules$rambda$dist$rambda_mjs(d,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,h,c))}}\nfunction _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};\ncase 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,m){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,m,n){return b.apply(this,arguments)};default:return function(c,d,e,f,g,h,k,m,n,l){return b.apply(this,arguments)}}}\nfunction curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>curryN$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(10<a)throw Error(\"First argument to _arity must be a non-negative integer no greater than ten\");return _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,[],b))}\nfunction bind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>bind$$module$node_modules$rambda$dist$rambda_mjs(a,c):curryN$$module$node_modules$rambda$dist$rambda_mjs(a.length,(...c)=>a.apply(b,c))}function both$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>both$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>a(...c)&&b(...c)}\nfunction chain$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>chain$$module$node_modules$rambda$dist$rambda_mjs(a,c):[].concat(...b.map(a))}function clampFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(a>b)throw Error(\"min must not be greater than max in clamp(min, max, value)\");if(c>=a&&c<=b)return c;if(c>b)return b;if(c<a)return a}const clamp$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(clampFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction clone$$module$node_modules$rambda$dist$rambda_mjs(a){const b=isArray$$module$node_modules$rambda$dist$rambda_mjs(a)?Array(a.length):{};if(a&&a.getTime)return new Date(a.getTime());for(const c in a){const d=a[c];b[c]=\"object\"===typeof d&&null!==d?d.getTime?new Date(d.getTime()):clone$$module$node_modules$rambda$dist$rambda_mjs(d):d}return b}function complement$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>!a(...b)}\nclass ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs{constructor(a){this.value=a}}function reduceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(c))throw new TypeError(\"reduce: list must be array or iterable\");let d=0;const e=c.length;for(;d<e;){b=a(b,c[d],d,c);if(b instanceof ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs)return b.value;d++}return b}\nconst reduce$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(reduceFn$$module$node_modules$rambda$dist$rambda_mjs),reduceStopper$$module$node_modules$rambda$dist$rambda_mjs=a=>new ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs(a);\nfunction _arity$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};\ncase 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,m){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,m,n){return b.apply(this,arguments)};case 10:return function(c,d,e,f,g,h,k,m,n,l){return b.apply(this,arguments)};default:throw Error(\"First argument to _arity must be a non-negative integer no greater than ten\");}}\nfunction _pipe$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(){return b.call(this,a.apply(this,arguments))}}\nfunction pipe$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error(\"pipe requires at least one argument\");return _arity$$module$node_modules$rambda$dist$rambda_mjs(arguments[0].length,reduceFn$$module$node_modules$rambda$dist$rambda_mjs(_pipe$$module$node_modules$rambda$dist$rambda_mjs,arguments[0],Array.prototype.slice.call(arguments,1,Infinity)))}\nfunction compose$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error(\"compose requires at least one argument\");return pipe$$module$node_modules$rambda$dist$rambda_mjs.apply(this,Array.prototype.slice.call(arguments,0).reverse())}function concat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>concat$$module$node_modules$rambda$dist$rambda_mjs(a,c):\"string\"===typeof a?`${a}${b}`:[...a,...b]}\nfunction cond$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>{let c=!1,d;a.forEach(([e,f])=>{!c&&e(b)&&(c=!0,d=f(b))});return d}}const {keys:keys$1$$module$node_modules$rambda$dist$rambda_mjs}=Object;function mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=Array(b.length);for(;d<b.length;)e[d]=c?a(b[d],d):a(b[d]),d++;return e}\nfunction mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,g);let c=0;const d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b),e=d.length,f={};for(;c<e;){const g=d[c];f[g]=a(b[g],g,b);c++}return f}const mapObjIndexed$$module$node_modules$rambda$dist$rambda_mjs=mapObject$$module$node_modules$rambda$dist$rambda_mjs;\nfunction map$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>map$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error(INCORRECT_ITERABLE_INPUT);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}\nfunction max$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>max$$module$node_modules$rambda$dist$rambda_mjs(a,c):b>a?b:a}\nfunction converge$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>converge$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=reduce$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>max$$module$node_modules$rambda$dist$rambda_mjs(d,e.length),0,b);return curryN$$module$node_modules$rambda$dist$rambda_mjs(c,function(){return a.apply(this,map$$module$node_modules$rambda$dist$rambda_mjs(d=>d.apply(this,arguments),b))})}\nfunction count$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>count$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?b.filter(c=>a(c)).length:0}function countBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>countBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};b.forEach(d=>{d=a(d);c[d]?c[d]++:c[d]=1});return c}\nconst dec$$module$node_modules$rambda$dist$rambda_mjs=a=>a-1;function isFalsy$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a||!0===Number.isNaN(a)}function defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c):isFalsy$$module$node_modules$rambda$dist$rambda_mjs(b)?a:b}\nfunction type$$module$node_modules$rambda$dist$rambda_mjs(a){if(null===a)return\"Null\";if(void 0===a)return\"Undefined\";if(Number.isNaN(a))return\"NaN\";a=Object.prototype.toString.call(a).slice(8,-1);return\"AsyncFunction\"===a?\"Promise\":a}\nfunction _lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(`Cannot read property 'indexOf' of ${b}`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(![\"Object\",\"Array\",\"NaN\",\"RegExp\"].includes(c))return b.lastIndexOf(a);({length:c}=b);let d=-1;for(;-1<--c&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}\nfunction _indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(`Cannot read property 'indexOf' of ${b}`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(![\"Object\",\"Array\",\"NaN\",\"RegExp\"].includes(c))return b.indexOf(a);let d=c=-1;const {length:e}=b;for(;++c<e&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}\nfunction _arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a){const b=[];let c;for(;!(c=a.next()).done;)b.push(c.value);return b}function _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(a.size!==b.size)return!1;a=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a.values());const c=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(b.values());return 0===a.filter(d=>-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,c)).length}\nfunction parseError$$module$node_modules$rambda$dist$rambda_mjs(a){const b=a.__proto__.toString();return[\"Error\",\"TypeError\"].includes(b)?[b,a.message]:[]}function parseDate$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toDateString?[!0,a.getTime()]:[!1]}function parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a){return a.constructor!==RegExp?[!1]:[!0,a.toString()]}\nfunction equals$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>equals$$module$node_modules$rambda$dist$rambda_mjs(a,f);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(c!==type$$module$node_modules$rambda$dist$rambda_mjs(b))return!1;if(\"Function\"===c)return void 0===a.name?!1:a.name===b.name;if([\"NaN\",\"Undefined\",\"Null\"].includes(c))return!0;if(\"Number\"===c)return Object.is(-0,a)!==Object.is(-0,b)?!1:a.toString()===b.toString();if([\"String\",\"Boolean\"].includes(c))return a.toString()===\nb.toString();if(\"Array\"===c){c=Array.from(a);const f=Array.from(b);if(c.toString()!==f.toString())return!1;let g=!0;c.forEach((h,k)=>{g&&(h===f[k]||equals$$module$node_modules$rambda$dist$rambda_mjs(h,f[k])||(g=!1))});return g}var d=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a),e=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseDate$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseDate$$module$node_modules$rambda$dist$rambda_mjs(b);\nif(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseError$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseError$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[0]===e[0]&&d[1]===e[1]:!1;if(\"Set\"===c)return _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b);if(\"Object\"===c){c=Object.keys(a);if(c.length!==Object.keys(b).length)return!1;let f=!0;c.forEach(g=>{if(f){const h=a[g];g=b[g];h===g||equals$$module$node_modules$rambda$dist$rambda_mjs(h,g)||(f=!1)}});\nreturn f}return!1}function includes$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>includes$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(\"string\"===typeof b)return b.includes(a);if(!b)throw new TypeError(`Cannot read property \\'indexOf\\' of ${b}`);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b):!1}\nclass _Set$$module$node_modules$rambda$dist$rambda_mjs{constructor(){this.set=new Set;this.items={}}checkUniqueness(a){var b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return[\"Null\",\"Undefined\",\"NaN\"].includes(b)?b in this.items?!1:this.items[b]=!0:[\"Object\",\"Array\"].includes(b)?b in this.items?-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,this.items[b])?(this.items[b].push(a),!0):!1:(this.items[b]=[a],!0):(b=this.set.size,this.set.add(a),this.set.size!==b)}}\nfunction uniq$$module$node_modules$rambda$dist$rambda_mjs(a){const b=new _Set$$module$node_modules$rambda$dist$rambda_mjs,c=[];a.forEach(d=>{b.checkUniqueness(d)&&c.push(d)});return c}function difference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>difference$$module$node_modules$rambda$dist$rambda_mjs(a,c):uniq$$module$node_modules$rambda$dist$rambda_mjs(a).filter(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b))}\nfunction dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(null===b||void 0===b)return{};const c={};for(const d in b)c[d]=b[d];delete c[a];return c}function divide$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>divide$$module$node_modules$rambda$dist$rambda_mjs(a,c):a/b}\nfunction drop$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>drop$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.slice(0<a?a:0)}function dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,c):0<a?b.slice(0,-a):b.slice()}\nfunction dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(0===b.length)return b;const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(\"function\"!==typeof a)throw Error(`'predicate' is from wrong type ${typeof a}`);if(!c&&\"string\"!==typeof b)throw Error(`'iterable' is from wrong type ${typeof b}`);let d=!1;const e=[];let f=b.length;for(;0<f;)f--,d||!1!==a(b[f])?d&&e.push(b[f]):\n(d=!0,e.push(b[f]));return c?e.reverse():e.reverse().join(\"\")}function dropRepeats$$module$node_modules$rambda$dist$rambda_mjs(a){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(`${a} is not a list`);const b=[];a.reduce((c,d)=>{equals$$module$node_modules$rambda$dist$rambda_mjs(c,d)||b.push(d);return d},void 0);return b}\nfunction dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(`${b} is not a list`);const c=[];b.reduce((d,e)=>{if(void 0===d)return c.push(e),e;a(d,e)||c.push(e);return e},void 0);return c}\nfunction dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&\"string\"!==typeof b)throw Error(\"`iterable` is neither list nor a string\");let d=!1;const e=[];let f=-1;for(;f++<b.length-1;)d?e.push(b[f]):a(b[f])||(d||(d=!0),e.push(b[f]));return c?e:e.join(\"\")}\nfunction either$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>either$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>!(!a(...c)&&!b(...c))}\nfunction endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(\"string\"===typeof b)return b.endsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;const c=b.length-a.length;let d=!0;return a.filter((e,f)=>{if(!d)return!1;(e=equals$$module$node_modules$rambda$dist$rambda_mjs(e,b[f+c]))||(d=!1);return e}).length===a.length}\nfunction prop$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>prop$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(b)return b[a]}function eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a,b),prop$$module$node_modules$rambda$dist$rambda_mjs(a,c))}const eqProps$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapArray$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>\"Function\"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c,b,!0)}\nfunction evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapObject$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>{if(\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(c)){const e=type$$module$node_modules$rambda$dist$rambda_mjs(a[d]);return\"Function\"===e?a[d](c):\"Object\"===e?evolve$$module$node_modules$rambda$dist$rambda_mjs(a[d],c):c}return\"Function\"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c},b)}\nfunction evolve$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>evolve$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=type$$module$node_modules$rambda$dist$rambda_mjs(a),d=type$$module$node_modules$rambda$dist$rambda_mjs(b);if(d!==c)throw Error(\"iterableType !== rulesType\");if(![\"Object\",\"Array\"].includes(c))throw Error(`'iterable' and 'rules' are from wrong type ${c}`);return\"Object\"===d?evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b):evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,\nb)}function F$$module$node_modules$rambda$dist$rambda_mjs(){return!1}function filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(const d in b)a(b[d],d,b)&&(c[d]=b[d]);return c}function filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=b.length,f=[];for(;d<e;)(c?a(b[d],d):a(b[d]))&&f.push(b[d]),d++;return f}\nfunction filter$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>filter$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error(\"Incorrect iterable input\");return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,!1):filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}\nfunction find$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>find$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=0;const d=b.length;for(;c<d;){const e=b[c];if(a(e))return e;c++}}function findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;let d=-1;for(;++d<c;)if(a(b[d]))return d;return-1}\nfunction findLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLast$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return b[c]}function findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return c;return-1}\nfunction flatten$$module$node_modules$rambda$dist$rambda_mjs(a,b){b=void 0===b?[]:b;for(let c=0;c<a.length;c++)isArray$$module$node_modules$rambda$dist$rambda_mjs(a[c])?flatten$$module$node_modules$rambda$dist$rambda_mjs(a[c],b):b.push(a[c]);return b}\nfunction flipFn$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{if(1===b.length)return c=>a(c,b[0]);if(2===b.length)return a(b[1],b[0]);if(3===b.length)return a(b[1],b[0],b[2]);if(4===b.length)return a(b[1],b[0],b[2],b[3]);throw Error(\"R.flip doesn't work with arity > 4\");}}function flip$$module$node_modules$rambda$dist$rambda_mjs(a){return flipFn$$module$node_modules$rambda$dist$rambda_mjs(a)}\nfunction forEach$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>forEach$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(void 0!==b){if(isArray$$module$node_modules$rambda$dist$rambda_mjs(b))for(var c=0,d=b.length;c<d;)a(b[c]),c++;else{c=0;d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b);const e=d.length;for(;c<e;){const f=d[c];a(b[f],f,b);c++}}return b}}\nfunction fromPairs$$module$node_modules$rambda$dist$rambda_mjs(a){const b={};a.forEach(([c,d])=>b[c]=d);return b}function groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};for(let d=0;d<b.length;d++){const e=b[d],f=a(e);c[f]||(c[f]=[]);c[f].push(e)}return c}\nfunction groupWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw new TypeError(\"list.reduce is not a function\");const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);if(1===b.length)return[c];const d=[];let e=[];c.reduce((f,g,h)=>{if(0===h)return g;const k=a(f,g),m=0===e.length;h=h===b.length-1;if(k)return m&&e.push(f),e.push(g),h&&d.push(e),g;if(m)return d.push([f]),h&&d.push([g]),g;d.push(e);h&&d.push([g]);e=[];return g},\nvoid 0);return d}function has$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>has$$module$node_modules$rambda$dist$rambda_mjs(a,c):b?b.hasOwnProperty(a):!1}function createPath$$module$node_modules$rambda$dist$rambda_mjs(a,b=\".\"){return\"string\"===typeof a?a.split(b):a}\nfunction path$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>path$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=b,d=0,e=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);d<e.length;){if(null===c||void 0===c||null===c[e[d]])return;c=c[e[d]];d++}return c}}\nfunction hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,c):void 0!==path$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function head$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a[0]||\"\":a[0]}function _objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b}const objectIs$$module$node_modules$rambda$dist$rambda_mjs=Object.is||_objectIs$$module$node_modules$rambda$dist$rambda_mjs;\nfunction identical$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>identical$$module$node_modules$rambda$dist$rambda_mjs(a,c):objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function identity$$module$node_modules$rambda$dist$rambda_mjs(a){return a}function ifElseFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return(...d)=>!0===(\"boolean\"===typeof a?a:a(...d))?b(...d):c(...d)}\nconst ifElse$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(ifElseFn$$module$node_modules$rambda$dist$rambda_mjs),inc$$module$node_modules$rambda$dist$rambda_mjs=a=>a+1;function indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(let d=0;d<b.length;d++){const e=b[d];c[path$$module$node_modules$rambda$dist$rambda_mjs(a,e)]=e}return c}\nfunction indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(\"string\"===typeof a)return indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b);const c={};for(let d=0;d<b.length;d++){const e=b[d];c[a(e)]=e}return c}\nfunction indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=-1,{length:e}=a;c=c>e?e:c;0>c&&(c+=e);e=b>c?0:c-b>>>0;b>>>=0;for(c=Array(e);++d<e;)c[d]=a[d+b];return c}\nfunction init$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a.slice(0,-1):a.length?baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,0,-1):[]}function intersection$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>intersection$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b)}\nfunction intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,f);let c=-1;const d=b.length,e=[];for(;++c<d;)c===d-1?e.push(b[c]):e.push(b[c],a);return e}function is$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>is$$module$node_modules$rambda$dist$rambda_mjs(a,c):null!=b&&b.constructor===a||b instanceof a}\nfunction isEmpty$$module$node_modules$rambda$dist$rambda_mjs(a){const b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return[\"Undefined\",\"NaN\",\"Number\",\"Null\"].includes(b)?!1:a?\"Object\"===b?0===Object.keys(a).length:\"Array\"===b?0===a.length:!1:!0}function isNil$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a}\nfunction join$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>join$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.join(a)}function juxt$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>a.map(c=>c(...b))}function keys$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.keys(a)}function last$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a[a.length-1]||\"\":a[a.length-1]}\nfunction lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function length$$module$node_modules$rambda$dist$rambda_mjs(a){return isArray$$module$node_modules$rambda$dist$rambda_mjs(a)||\"string\"===typeof a?a.length:NaN}\nfunction lens$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(c){return function(d){return c(a(d)).map(e=>b(e,d))}}}function nth$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>nth$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=0>a?b.length+a:a;return\"[object String]\"===Object.prototype.toString.call(b)?b.charAt(c):b[c]}\nfunction updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);return-1===a?c.fill(b,a):c.fill(b,a,a+1)}const update$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(updateFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction lensIndex$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(nth$$module$node_modules$rambda$dist$rambda_mjs(a),update$$module$node_modules$rambda$dist$rambda_mjs(a))}function lensPath$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a),assocPath$$module$node_modules$rambda$dist$rambda_mjs(a))}\nfunction lensProp$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a),assoc$$module$node_modules$rambda$dist$rambda_mjs(a))}function match$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>match$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=b.match(a);return null===c?[]:c}\nfunction mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,c):!isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)||!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||1>b?NaN:(a%b+b)%b}function maxByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)>a(b)?c:b}const maxBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(maxByFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction sum$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>b+c,0)}function mean$$module$node_modules$rambda$dist$rambda_mjs(a){return sum$$module$node_modules$rambda$dist$rambda_mjs(a)/a.length}function median$$module$node_modules$rambda$dist$rambda_mjs(a){var b=a.length;if(0===b)return NaN;const c=2-b%2;b=(b-c)/2;return mean$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,0).sort((d,e)=>d===e?0:d<e?-1:1).slice(b,b+c))}\nfunction mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,c):Object.assign({},a||{},b||{})}function mergeAll$$module$node_modules$rambda$dist$rambda_mjs(a){let b={};map$$module$node_modules$rambda$dist$rambda_mjs(c=>{b=mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,c)},a);return b}\nfunction mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=clone$$module$node_modules$rambda$dist$rambda_mjs(a);Object.keys(b).forEach(d=>{\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(b[d])?\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?c[d]=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a[d],b[d]):c[d]=b[d]:c[d]=b[d]});return c}\nfunction mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,c):mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,a)}function mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d={};Object.keys(b).forEach(e=>{d[e]=void 0===c[e]?b[e]:a(b[e],c[e])});Object.keys(c).forEach(e=>{void 0===d[e]&&(d[e]=void 0===b[e]?c[e]:a(b[e],c[e]))});return d}\nconst mergeWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs);function min$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>min$$module$node_modules$rambda$dist$rambda_mjs(a,c):b<a?b:a}function minByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)<a(b)?c:b}const minBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(minByFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction ownKeys$$module$node_modules$rambda$dist$rambda_mjs(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}));c.push.apply(c,d)}return c}\nfunction _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c),!0).forEach(function(d){_defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,d,c[d])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c)).forEach(function(d){Object.defineProperty(a,\nd,Object.getOwnPropertyDescriptor(c,d))})}return a}function _defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c;return a}function isIterable$$module$node_modules$rambda$dist$rambda_mjs(a){return Array.isArray(a)||\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(a)}\nfunction modifyFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return isIterable$$module$node_modules$rambda$dist$rambda_mjs(c)&&void 0!==c[a]?isArray$$module$node_modules$rambda$dist$rambda_mjs(c)?updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b(c[a]),c):_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a]:b(c[a])}):c}const modify$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){a=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);if(1===a.length)return _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a[0]]:b(c[a[0]])});if(void 0===path$$module$node_modules$rambda$dist$rambda_mjs(a,c))return c;b=modifyPath$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,1),b,c[a[0]]);return b===c[a[0]]?c:assoc$$module$node_modules$rambda$dist$rambda_mjs(a[0],\nb,c)}const modifyPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs);function modulo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>modulo$$module$node_modules$rambda$dist$rambda_mjs(a,c):a%b}\nfunction moveFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(0>a||0>b)throw Error(\"Rambda.move does not support negative indexes\");if(a>c.length-1||b>c.length-1)return c;const d=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);d[a]=c[b];d[b]=c[a];return d}const move$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(moveFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction multiply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>multiply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a*b}function negate$$module$node_modules$rambda$dist$rambda_mjs(a){return-a}function none$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>none$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(a(b[c]))return!1;return!0}\nfunction not$$module$node_modules$rambda$dist$rambda_mjs(a){return!a}function objOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>objOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):{[a]:b}}function of$$module$node_modules$rambda$dist$rambda_mjs(a){return[a]}\nfunction omit$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>omit$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(null!==b&&void 0!==b){var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,\",\"),d={};for(const e in b)c.includes(e)||(d[e]=b[e]);return d}}\nfunction on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,d){return 3===arguments.length?e=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,e):2===arguments.length?(e,f)=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,e,f):a(b(c),b(d))}function onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b){let c;return function(){a&&(c=a.apply(b||this,arguments),a=null);return c}}\nfunction once$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length){const c=onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b);return curry$$module$node_modules$rambda$dist$rambda_mjs(c)}return onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function or$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>or$$module$node_modules$rambda$dist$rambda_mjs(a,c):a||b}const Identity$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(a))});\nfunction overFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(d=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(d)))(c).x}const over$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(overFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction partial$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=a.length;return(...d)=>b.length+d.length>=c?a(...b,...d):partial$$module$node_modules$rambda$dist$rambda_mjs(a,...[...b,...d])}function partialObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return c=>a(mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(c,b))}\nfunction partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={},d={};Object.entries(b).forEach(([e,f])=>{a(f,e)?c[e]=f:d[e]=f});return[c,d]}function partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){const d=[],e=[];let f=-1;for(;f++<b.length-1;)(c?a(b[f],f):a(b[f]))?d.push(b[f]):e.push(b[f]);return[d,e]}\nfunction partition$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>partition$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}\nfunction pathEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a,c),b)}const pathEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathEqFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction pathOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,path$$module$node_modules$rambda$dist$rambda_mjs(b,c))}const pathOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathOrFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction paths$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>paths$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.map(c=>path$$module$node_modules$rambda$dist$rambda_mjs(c,b))}\nfunction pick$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pick$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,\",\"),d={},e=0;e<c.length;)c[e]in b&&(d[c[e]]=b[c[e]]),e++;return d}}\nfunction pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,\",\"),d={},e=0;e<c.length;)d[c[e]]=c[e]in b?b[c[e]]:void 0,e++;return d}}\nfunction pluck$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>pluck$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=[];map$$module$node_modules$rambda$dist$rambda_mjs(d=>{void 0!==d[a]&&c.push(d[a])},b);return c}function prepend$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>prepend$$module$node_modules$rambda$dist$rambda_mjs(a,c):\"string\"===typeof b?[a].concat(b.split(\"\")):[a].concat(b)}\nconst product$$module$node_modules$rambda$dist$rambda_mjs=reduce$$module$node_modules$rambda$dist$rambda_mjs(multiply$$module$node_modules$rambda$dist$rambda_mjs,1);function propEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?equals$$module$node_modules$rambda$dist$rambda_mjs(b,prop$$module$node_modules$rambda$dist$rambda_mjs(a,c)):!1}const propEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propEqFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction propIsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return is$$module$node_modules$rambda$dist$rambda_mjs(a,c[b])}const propIs$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propIsFn$$module$node_modules$rambda$dist$rambda_mjs);function propOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c[b]):a}const propOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propOrFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction props$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>props$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(\"propsToPick is not a list\");return mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>b[c],a)}function propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(prop$$module$node_modules$rambda$dist$rambda_mjs(b,c))}\nconst propSatisfies$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction range$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>range$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(Number.isNaN(Number(a))||Number.isNaN(Number(b)))throw new TypeError(\"Both arguments to range must be numbers\");if(b<a)return[];const c=b-a,d=Array(c);for(let e=0;e<c;e++)d[e]=a+e;return d}\nfunction reject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>reject$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!a(c),b)}function repeat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>repeat$$module$node_modules$rambda$dist$rambda_mjs(a,c):Array(b).fill(a)}function replaceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.replace(a,b)}\nconst replace$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(replaceFn$$module$node_modules$rambda$dist$rambda_mjs);function reverse$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a.split(\"\").reverse().join(\"\"):a.slice().reverse()}function setFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return over$$module$node_modules$rambda$dist$rambda_mjs(a,always$$module$node_modules$rambda$dist$rambda_mjs(b),c)}\nconst set$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(setFn$$module$node_modules$rambda$dist$rambda_mjs);function sliceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.slice(a,b)}const slice$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(sliceFn$$module$node_modules$rambda$dist$rambda_mjs);\nfunction sort$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sort$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort(a)}function sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort((c,d)=>{c=a(c);d=a(d);return c===d?0:c<d?-1:1})}\nfunction split$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>split$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.split(a)}function maybe$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b=a&&\"Function\"===type$$module$node_modules$rambda$dist$rambda_mjs(b)?b():b;c=a||\"Function\"!==type$$module$node_modules$rambda$dist$rambda_mjs(c)?c:c();return a?b:c}\nfunction take$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>take$$module$node_modules$rambda$dist$rambda_mjs(a,c):0>a?b.slice():\"string\"===typeof b?b.slice(0,a):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,0,a)}\nfunction splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!b)throw new TypeError(`Cannot read property 'slice' of ${b}`);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b)&&\"string\"!==typeof b)return[[],[]];const c=maybe$$module$node_modules$rambda$dist$rambda_mjs(0>a,0>b.length+a?0:b.length+a,a);return[take$$module$node_modules$rambda$dist$rambda_mjs(c,b),drop$$module$node_modules$rambda$dist$rambda_mjs(c,\nb)]}function splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(1>a)throw Error(\"First argument to splitEvery must be a positive integer\");const c=[];let d=0;for(;d<b.length;)c.push(b.slice(d,d+=a));return c}\nfunction splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(!b)throw new TypeError(`Cannot read property 'length' of ${b}`);const c=[],d=[];let e=!1,f=-1;for(;f++<b.length-1;)e?d.push(b[f]):a(b[f])?(d.push(b[f]),e=!0):c.push(b[f]);return[c,d]}\nfunction startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(\"string\"===typeof b)return b.startsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;let c=!0;return a.filter((d,e)=>{if(!c)return!1;(d=equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]))||(c=!1);return d}).length===a.length}\nfunction subtract$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>subtract$$module$node_modules$rambda$dist$rambda_mjs(a,c):a-b}\nfunction symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,c):concat$$module$node_modules$rambda$dist$rambda_mjs(filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b),a),filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b))}\nfunction T$$module$node_modules$rambda$dist$rambda_mjs(){return!0}function tail$$module$node_modules$rambda$dist$rambda_mjs(a){return drop$$module$node_modules$rambda$dist$rambda_mjs(1,a)}\nfunction takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;if(0>a)return b.slice();let d=a>c?c:a;return\"string\"===typeof b?b.slice(c-d):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,c-d,c)}\nfunction takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(0===b.length)return b;let c=!1;const d=[];let e=b.length;for(;!c||0===e;)e--,!1===a(b[e])?c=!0:c||d.push(b[e]);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?d.reverse():d.reverse().join(\"\")}\nfunction takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&\"string\"!==typeof b)throw Error(\"`iterable` is neither list nor a string\");let d=!0;const e=[];let f=-1;for(;f++<b.length-1;)a(b[f])?d&&e.push(b[f]):d&&(d=!1);return c?e:e.join(\"\")}\nfunction tap$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>tap$$module$node_modules$rambda$dist$rambda_mjs(a,c);a(b);return b}function test$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>test$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(\"string\"===typeof a)throw new TypeError(`\\u2018test\\u2019 requires a value of type RegExp as its first argument; received \"${a}\"`);return-1!==b.search(a)}\nfunction times$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>times$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||0>b)throw new RangeError(\"n must be an integer\");return map$$module$node_modules$rambda$dist$rambda_mjs(a,range$$module$node_modules$rambda$dist$rambda_mjs(0,b))}function toLower$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toLowerCase()}\nfunction toPairs$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.entries(a)}function toString$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toString()}function toUpper$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toUpperCase()}function transpose$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>{c.forEach((d,e)=>isArray$$module$node_modules$rambda$dist$rambda_mjs(b[e])?b[e].push(d):b.push([d]));return b},[])}\nfunction trim$$module$node_modules$rambda$dist$rambda_mjs(a){return a.trim()}const isFunction$$module$node_modules$rambda$dist$rambda_mjs=a=>[\"Promise\",\"Function\"].includes(type$$module$node_modules$rambda$dist$rambda_mjs(a));\nfunction tryCatch$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isFunction$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(`R.tryCatch | fn '${a}'`);const c=isFunction$$module$node_modules$rambda$dist$rambda_mjs(b);return(...d)=>{try{return a(...d)}catch(e){return c?b(e,...d):b}}}function unapply$$module$node_modules$rambda$dist$rambda_mjs(a){return function(...b){return a.call(this,b)}}\nfunction union$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>union$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(a);b.forEach(d=>{includes$$module$node_modules$rambda$dist$rambda_mjs(d,a)||c.push(d)});return c}\nfunction uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=new Set;return b.filter(d=>{if(c.has(a(d)))return!1;c.add(a(d));return!0})}function includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=!1,e=-1;for(;++e<c.length&&!d;)a(b,c[e])&&(d=!0);return d}\nfunction uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=-1;const d=[];for(;++c<b.length;){const e=b[c];includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,e,d)||d.push(e)}return d}function unless$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unless$$module$node_modules$rambda$dist$rambda_mjs(a,c):c=>a(c)?c:b(c)}\nfunction unwind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unwind$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b[a])?mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},b),{},{[a]:c}),b[a]):[b]}\nfunction values$$module$node_modules$rambda$dist$rambda_mjs(a){return\"Object\"!==type$$module$node_modules$rambda$dist$rambda_mjs(a)?[]:Object.values(a)}const Const$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Const$$module$node_modules$rambda$dist$rambda_mjs(a)});function view$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>view$$module$node_modules$rambda$dist$rambda_mjs(a,c):a(Const$$module$node_modules$rambda$dist$rambda_mjs)(b).x}\nfunction whenFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)?b(c):c}const when$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(whenFn$$module$node_modules$rambda$dist$rambda_mjs);function where$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return d=>where$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=!0;for(const d in a){if(!c)continue;const e=a[d](b[d]);c&&!1===e&&(c=!1)}return c}\nfunction whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return c=>whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(const c in a)if(a[c](b[c]))return!0;return!1}\nfunction whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=filter$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]),a);return Object.keys(c).length===Object.keys(a).length}\nfunction without$$module$node_modules$rambda$dist$rambda_mjs(a,b){return void 0===b?c=>without$$module$node_modules$rambda$dist$rambda_mjs(a,c):reduce$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,a)?c:c.concat(d),[],b)}function xor$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>xor$$module$node_modules$rambda$dist$rambda_mjs(a,c):!!a&&!b||!!b&&!a}\nfunction zip$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>zip$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=[],d=Math.min(a.length,b.length);for(let e=0;e<d;e++)c[e]=[a[e],b[e]];return c}function zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,c):take$$module$node_modules$rambda$dist$rambda_mjs(b.length,a).reduce((c,d,e)=>{c[d]=b[e];return c},{})}\nfunction zipWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return take$$module$node_modules$rambda$dist$rambda_mjs(b.length>c.length?c.length:b.length,b).map((d,e)=>a(d,c[e]))}const zipWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(zipWithFn$$module$node_modules$rambda$dist$rambda_mjs);var module$node_modules$rambda$dist$rambda_mjs={};module$node_modules$rambda$dist$rambda_mjs.F=F$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.T=T$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.__findHighestArity=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._arity=_arity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._indexOf=_indexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._lastIndexOf=_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs._pipe=_pipe$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.add=add$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.adjust=adjust$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.all=all$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.allPass=allPass$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.always=always$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.and=and$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.any=any$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.anyPass=anyPass$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.append=append$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.apply=apply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.applySpec=applySpec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assoc=assoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assocPath=assocPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.bind=bind$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.both=both$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.chain=chain$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clamp=clamp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clone=clone$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.complement=complement$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.compose=compose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.concat=concat$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.cond=cond$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.converge=converge$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.count=count$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.countBy=countBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curry=curry$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curryN=curryN$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dec=dec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.defaultTo=defaultTo$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.difference=difference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dissoc=dissoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.divide=divide$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.drop=drop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropLast=dropLast$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.dropLastWhile=dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeats=dropRepeats$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeatsWith=dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropWhile=dropWhile$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.either=either$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.endsWith=endsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.eqProps=eqProps$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.equals=equals$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolve=evolve$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.evolveArray=evolveArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolveObject=evolveObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filter=filter$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterArray=filterArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterObject=filterObject$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.find=find$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findIndex=findIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLast=findLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLastIndex=findLastIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.flatten=flatten$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.flip=flip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.forEach=forEach$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.fromPairs=fromPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupBy=groupBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupWith=groupWith$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.has=has$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.hasPath=hasPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.head=head$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identical=identical$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identity=identity$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.ifElse=ifElse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.inc=inc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.includes=includes$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexBy=indexBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexOf=indexOf$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.init=init$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersection=intersection$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersperse=intersperse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.is=is$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.isEmpty=isEmpty$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.isNil=isNil$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.join=join$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.juxt=juxt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.keys=keys$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.last=last$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.lastIndexOf=lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.length=length$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lens=lens$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensIndex=lensIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensPath=lensPath$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.lensProp=lensProp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.map=map$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapArray=mapArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObjIndexed=mapObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObject=mapObject$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.match=match$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mathMod=mathMod$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.max=max$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxBy=maxBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxByFn=maxByFn$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.mean=mean$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.median=median$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.merge=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeAll=mergeAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeDeepRight=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.mergeLeft=mergeLeft$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeRight=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeWith=mergeWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.min=min$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.minBy=minBy$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.minByFn=minByFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modify=modify$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPath=modifyPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPathFn=modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modulo=modulo$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.move=move$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.multiply=multiply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.negate=negate$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.none=none$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.not=not$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.nth=nth$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.objOf=objOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.of=of$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.omit=omit$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.on=on$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.once=once$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.or=or$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.over=over$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partial=partial$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partialObject=partialObject$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.partition=partition$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionArray=partitionArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionObject=partitionObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.path=path$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pathEq=pathEq$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.pathOr=pathOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.paths=paths$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pick=pick$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pickAll=pickAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pipe=pipe$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.pluck=pluck$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prepend=prepend$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.product=product$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prop=prop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propEq=propEq$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.propIs=propIs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propOr=propOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propSatisfies=propSatisfies$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.props=props$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.range=range$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.reduce=reduce$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceFn=reduceFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceStopper=reduceStopper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reject=reject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.repeat=repeat$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.replace=replace$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reverse=reverse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.set=set$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.slice=slice$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sort=sort$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.sortBy=sortBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.split=split$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitAt=splitAt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitEvery=splitEvery$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitWhen=splitWhen$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.startsWith=startsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.subtract=subtract$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sum=sum$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.symmetricDifference=symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tail=tail$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.take=take$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLast=takeLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLastWhile=takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeWhile=takeWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tap=tap$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.test=test$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.times=times$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toLower=toLower$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toPairs=toPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toString=toString$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.toUpper=toUpper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.transpose=transpose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.trim=trim$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tryCatch=tryCatch$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.type=type$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.unapply=unapply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.union=union$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniq=uniq$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqBy=uniqBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqWith=uniqWith$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.unless=unless$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.unwind=unwind$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.update=update$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.updateFn=updateFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.values=values$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.view=view$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.when=when$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.where=where$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereAny=whereAny$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereEq=whereEq$$module$node_modules$rambda$dist$rambda_mjs;\nmodule$node_modules$rambda$dist$rambda_mjs.without=without$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.xor=xor$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zip=zip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipObj=zipObj$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipWith=zipWith$$module$node_modules$rambda$dist$rambda_mjs;const csoundSetMidiCallbacks$$module$src$modules$rtmidi=a=>b=>{a.exports.csoundSetMidiCallbacks(b)},csoundGetMIDIDevList$$module$src$modules$rtmidi=a=>(b,c)=>{const {buffer:d}=a.wasi.memory,e=a.exports.csoundGetMIDIDevList(b,void 0,c?1:0);if(0===e)return[];const f=sizeofStruct$$module$src$utils$native_sizes(CS_MIDIDEVICE$$module$src$structures),g=a.exports.allocCsMidiDeviceStruct(e);a.exports.csoundGetMIDIDevList(b,g,c?1:0);const h=new Uint8Array(d,g,f*e);b=range$$module$node_modules$rambda$dist$rambda_mjs(0,\ne).map(k=>structBufferToObject$$module$src$utils$structure_buffer_to_object(CS_MIDIDEVICE$$module$src$structures,h.subarray(k*f,f)));a.exports.freeCsMidiDeviceStruct(g);return b};csoundGetMIDIDevList$$module$src$modules$rtmidi.toString=()=>\"getMIDIDevList = async (isOutput) => Object;\";\nconst csoundGetRtMidiName$$module$src$modules$rtmidi=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.getRtMidiName(b);c=new Uint8Array(c,b,128);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||\"\"};csoundGetRtMidiName$$module$src$modules$rtmidi.toString=()=>\"getRtMidiName = async () => String;\";\nconst csoundGetMidiOutFileName$$module$src$modules$rtmidi=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.getMidiOutFileName(b);c=new Uint8Array(c,b,128);b&&0<b.length&&freeStringPtr$$module$src$utils$string_pointers(a,b);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||\"\"},_isRequestingRtMidiInput$$module$src$modules$rtmidi=a=>b=>a.exports.isRequestingRtMidiInput(b),csoundPushMidiMessage$$module$src$modules$rtmidi=a=>(b,c,d,e)=>{a.exports.pushMidiMessage(b,\nc,d,e)};csoundPushMidiMessage$$module$src$modules$rtmidi.toString=()=>\"midiMessage = async (status, data1, data2) => undefined;\";var module$src$modules$rtmidi={};module$src$modules$rtmidi._isRequestingRtMidiInput=_isRequestingRtMidiInput$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundGetMIDIDevList=csoundGetMIDIDevList$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundGetMidiOutFileName=csoundGetMidiOutFileName$$module$src$modules$rtmidi;\nmodule$src$modules$rtmidi.csoundGetRtMidiName=csoundGetRtMidiName$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundPushMidiMessage=csoundPushMidiMessage$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundSetMidiCallbacks=csoundSetMidiCallbacks$$module$src$modules$rtmidi;const csoundInputMessage$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundInputMessage(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundInputMessage$$module$src$modules$control_events.toString=()=>\"inputMessage = async (scoreEvent) => Number;\";\nconst csoundInputMessageAsync$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundInputMessageAsync(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundInputMessageAsync$$module$src$modules$control_events.toString=()=>\"inputMessageAsync = async (scoreEvent) => Number;\";\nconst csoundGetControlChannel$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundGetControlChannelWasi(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundGetControlChannel$$module$src$modules$control_events.toString=()=>\"getControlChannel = async (channelName) => Number;\";\nconst csoundSetControlChannel$$module$src$modules$control_events=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);a.exports.csoundSetControlChannel(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c)};csoundSetControlChannel$$module$src$modules$control_events.toString=()=>\"setControlChannel = async (channelName, value) => void;\";\nconst csoundGetStringChannel$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundGetStringChannelWasi(b,c);const d=ptr2string$$module$src$utils$string_pointers(a,b);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,b);return d};csoundGetStringChannel$$module$src$modules$control_events.toString=()=>\"getStringChannel = async (channelName) => String;\";\nconst csoundSetStringChannel$$module$src$modules$control_events=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);d=string2ptr$$module$src$utils$string_pointers(a,d);a.exports.csoundSetStringChannel(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,d)};csoundSetStringChannel$$module$src$modules$control_events.toString=()=>\"setStringChannel = async (channelName, value) => void;\";var module$src$modules$control_events={};\nmodule$src$modules$control_events.csoundGetControlChannel=csoundGetControlChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundGetStringChannel=csoundGetStringChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundInputMessage=csoundInputMessage$$module$src$modules$control_events;module$src$modules$control_events.csoundInputMessageAsync=csoundInputMessageAsync$$module$src$modules$control_events;\nmodule$src$modules$control_events.csoundSetControlChannel=csoundSetControlChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundSetStringChannel=csoundSetStringChannel$$module$src$modules$control_events;const csoundGetOutputName$$module$src$modules$general_io=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.csoundGetOutputName(b);c=new Uint8Array(c,b,64);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||\"\"};csoundGetOutputName$$module$src$modules$general_io.toString=()=>\"getOutputName = async () => String;\";\nconst csoundGetInputName$$module$src$modules$general_io=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.csoundGetInputName(b);c=new Uint8Array(c,b,64);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||\"\"};csoundGetInputName$$module$src$modules$general_io.toString=()=>\"getInputName = async (csound) => String;\";var module$src$modules$general_io={};module$src$modules$general_io.csoundGetInputName=csoundGetInputName$$module$src$modules$general_io;\nmodule$src$modules$general_io.csoundGetOutputName=csoundGetOutputName$$module$src$modules$general_io;const csoundAppendEnv$$module$src$modules$extra=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);d=string2ptr$$module$src$utils$string_pointers(a,d);b=a.exports.csoundAppendEnv(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,d);return b};csoundAppendEnv$$module$src$modules$extra.toString=()=>\"appendEnv = async (csound, variable, value) => Number;\";const csoundShouldDaemonize$$module$src$modules$extra=a=>b=>a.exports.csoundShouldDaemonize(b);\nvar module$src$modules$extra={};module$src$modules$extra.csoundAppendEnv=csoundAppendEnv$$module$src$modules$extra;module$src$modules$extra.csoundShouldDaemonize=csoundShouldDaemonize$$module$src$modules$extra;const csoundIsScorePending$$module$src$modules$score_handling=a=>b=>a.exports.csoundIsScorePending(b);csoundIsScorePending$$module$src$modules$score_handling.toString=()=>\"isScorePending = async () => Number;\";const csoundSetScorePending$$module$src$modules$score_handling=a=>(b,c)=>a.exports.csoundSetScorePending(b,c);csoundSetScorePending$$module$src$modules$score_handling.toString=()=>\"setScorePending = async (pending) => Number;\";\nconst csoundReadScore$$module$src$modules$score_handling=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundReadScore(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundReadScore$$module$src$modules$score_handling.toString=()=>\"readScore = async (score) => Number;\";const csoundGetScoreTime$$module$src$modules$score_handling=a=>b=>a.exports.csoundGetScoreTime(b);csoundGetScoreTime$$module$src$modules$score_handling.toString=()=>\"getScoreTime = async () => Number;\";\nconst csoundGetScoreOffsetSeconds$$module$src$modules$score_handling=a=>b=>a.exports.csoundGetScoreOffsetSeconds(b);csoundGetScoreOffsetSeconds$$module$src$modules$score_handling.toString=()=>\"getScoreOffsetSeconds = async () => Number;\";const csoundSetScoreOffsetSeconds$$module$src$modules$score_handling=a=>(b,c)=>a.exports.csoundSetScoreOffsetSeconds(b,c);csoundSetScoreOffsetSeconds$$module$src$modules$score_handling.toString=()=>\"setScoreOffsetSeconds = async () => Number;\";\nconst csoundRewindScore$$module$src$modules$score_handling=a=>b=>a.exports.csoundRewindScore(b);csoundRewindScore$$module$src$modules$score_handling.toString=()=>\"rewindScore = async () => undefined;\";var module$src$modules$score_handling={};module$src$modules$score_handling.csoundGetScoreOffsetSeconds=csoundGetScoreOffsetSeconds$$module$src$modules$score_handling;module$src$modules$score_handling.csoundGetScoreTime=csoundGetScoreTime$$module$src$modules$score_handling;\nmodule$src$modules$score_handling.csoundIsScorePending=csoundIsScorePending$$module$src$modules$score_handling;module$src$modules$score_handling.csoundReadScore=csoundReadScore$$module$src$modules$score_handling;module$src$modules$score_handling.csoundRewindScore=csoundRewindScore$$module$src$modules$score_handling;module$src$modules$score_handling.csoundSetScoreOffsetSeconds=csoundSetScoreOffsetSeconds$$module$src$modules$score_handling;module$src$modules$score_handling.csoundSetScorePending=csoundSetScorePending$$module$src$modules$score_handling;const csoundTableLength$$module$src$modules$table=a=>(b,c)=>a.exports.csoundTableLength(b,c);csoundTableLength$$module$src$modules$table.toString=()=>\"tableLength = async (tableNum) => Number;\";const csoundTableGet$$module$src$modules$table=a=>(b,c,d)=>a.exports.csoundTableGet(b,c,d);csoundTableGet$$module$src$modules$table.toString=()=>\"tableGet = async (tableNum, tableIndex) => Number;\";const csoundTableSet$$module$src$modules$table=a=>(b,c,d,e)=>a.exports.csoundTableSet(b,c,d,e);\ncsoundTableSet$$module$src$modules$table.toString=()=>\"tableSet = async (tableNum, tableIndex, value) => undefined;\";const csoundTableCopyIn$$module$src$modules$table=a=>(b,c,d)=>{const e=a.exports.allocFloatArray(d.length);(new Float64Array(a.wasi.memory.buffer,e,d.length)).set(d);a.exports.csoundTableCopyIn(b,c,e);a.exports.freeFloatArrayMem(e)};csoundTableCopyIn$$module$src$modules$table.toString=()=>\"tableCopyIn = async (tableNum, float64Array) => undefined;\";\nconst csoundTableCopyOut$$module$src$modules$table=a=>(b,c)=>{var d=a.exports.csoundTableLength(b,c);if(0<d){const e=a.exports.allocFloatArray(d);a.exports.csoundTableCopyOut(b,c,e);({buffer:b}=a.wasi.memory);d=new Float64Array(b,e,d);a.exports.freeFloatArrayMem(e);return Float64Array.from(d)}};csoundTableCopyOut$$module$src$modules$table.toString=()=>\"tableCopyOut = async (tableNum) => ?Float64Array;\";const csoundGetTable$$module$src$modules$table=csoundTableCopyOut$$module$src$modules$table;\ncsoundTableCopyOut$$module$src$modules$table.toString=csoundTableCopyOut$$module$src$modules$table.toString;const csoundGetTableArgs$$module$src$modules$table=a=>(b,c)=>{const d=a.exports.allocFloatArray(1024);a.exports.csoundGetTableArgs(b,d,c);({buffer:b}=a.wasi.memory);b=new Float64Array(b,d,1024);a.exports.freeFloatArrayMem(d);return b};csoundGetTableArgs$$module$src$modules$table.toString=()=>\"getTableArgs = async (tableNum) => ?Float64Array;\";\nconst csoundIsNamedGEN$$module$src$modules$table=a=>(b,c)=>a.exports.csoundIsNamedGEN(b,c);csoundIsNamedGEN$$module$src$modules$table.toString=()=>\"isNamedGEN = async (tableNum) => number;\";const csoundGetNamedGEN$$module$src$modules$table=a=>(b,c)=>{var d=a.exports.csoundIsNamedGEN(b,c);if(0<d){const e=a.exports.allocStringMem(d);a.exports.csoundGetNamedGEN(b,e,c,d);({buffer:b}=a.wasi.memory);d=new Uint8Array(b,e,d);return uint2String$$module$src$utils$text_encoders(d)}};\ncsoundGetNamedGEN$$module$src$modules$table.toString=()=>\"getNamedGEN = async (tableNum) => ?string;\";var module$src$modules$table={};module$src$modules$table.csoundGetNamedGEN=csoundGetNamedGEN$$module$src$modules$table;module$src$modules$table.csoundGetTable=csoundTableCopyOut$$module$src$modules$table;module$src$modules$table.csoundGetTableArgs=csoundGetTableArgs$$module$src$modules$table;module$src$modules$table.csoundIsNamedGEN=csoundIsNamedGEN$$module$src$modules$table;\nmodule$src$modules$table.csoundTableCopyIn=csoundTableCopyIn$$module$src$modules$table;module$src$modules$table.csoundTableCopyOut=csoundTableCopyOut$$module$src$modules$table;module$src$modules$table.csoundTableGet=csoundTableGet$$module$src$modules$table;module$src$modules$table.csoundTableLength=csoundTableLength$$module$src$modules$table;module$src$modules$table.csoundTableSet=csoundTableSet$$module$src$modules$table;function writeFile$$module$src$filesystem$worker_fs(a){return(b,c,d)=>{b=\"string\"===typeof d?encoder$$module$src$utils$text_encoders.encode(d):d;a.wasi.writeFile(c,b)}}writeFile$$module$src$filesystem$worker_fs.toString=()=>\"async (path, data) => void\";function appendFile$$module$src$filesystem$worker_fs(a){return(b,c,d)=>{b=\"string\"===typeof d?encoder$$module$src$utils$text_encoders.encode(d):d;a.wasi.appendFile(c,b)}}appendFile$$module$src$filesystem$worker_fs.toString=()=>\"async (path, data) => void\";\nfunction readFile$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.readFile(c)}readFile$$module$src$filesystem$worker_fs.toString=()=>\"async (path) => ?Uint8Array\";function unlink$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.unlink(c)}unlink$$module$src$filesystem$worker_fs.toString=()=>\"async (path) => void\";function readdir$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.readdir(c)}readdir$$module$src$filesystem$worker_fs.toString=()=>\"async (path) => string[]\";\nfunction mkdir$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.mkdir(c)}mkdir$$module$src$filesystem$worker_fs.toString=()=>\"async (path) => void\";var module$src$filesystem$worker_fs={};module$src$filesystem$worker_fs.appendFile=appendFile$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.mkdir=mkdir$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.readFile=readFile$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.readdir=readdir$$module$src$filesystem$worker_fs;\nmodule$src$filesystem$worker_fs.unlink=unlink$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.writeFile=writeFile$$module$src$filesystem$worker_fs;const api$$module$src$libcsound={csoundCreate:csoundCreate$$module$src$modules$instantiation,csoundDestroy:csoundDestroy$$module$src$modules$instantiation,csoundGetAPIVersion:csoundGetAPIVersion$$module$src$modules$instantiation,csoundGetVersion:csoundGetVersion$$module$src$modules$instantiation,csoundInitialize:csoundInitialize$$module$src$modules$instantiation,csoundParseOrc:csoundParseOrc$$module$src$modules$performance,csoundCompileTree:csoundCompileTree$$module$src$modules$performance,csoundCompileOrc:csoundCompileOrc$$module$src$modules$performance,\ncsoundEvalCode:csoundEvalCode$$module$src$modules$performance,csoundStart:csoundStart$$module$src$modules$performance,csoundCompileCsd:csoundCompileCsd$$module$src$modules$performance,csoundCompileCsdText:csoundCompileCsdText$$module$src$modules$performance,csoundPerform:csoundPerform$$module$src$modules$performance,csoundPerformKsmps:csoundPerformKsmps$$module$src$modules$performance,csoundPerformBuffer:csoundPerformBuffer$$module$src$modules$performance,csoundStop:csoundStop$$module$src$modules$performance,\ncsoundCleanup:csoundCleanup$$module$src$modules$performance,csoundReset:csoundReset$$module$src$modules$performance,csoundGetSr:csoundGetSr$$module$src$modules$attributes,csoundGetKr:csoundGetKr$$module$src$modules$attributes,csoundGetKsmps:csoundGetKsmps$$module$src$modules$attributes,csoundGetNchnls:csoundGetNchnls$$module$src$modules$attributes,csoundGetNchnlsInput:csoundGetNchnlsInput$$module$src$modules$attributes,csoundGet0dBFS:csoundGet0dBFS$$module$src$modules$attributes,csoundGetA4:csoundGetA4$$module$src$modules$attributes,\ncsoundGetCurrentTimeSamples:csoundGetCurrentTimeSamples$$module$src$modules$attributes,csoundGetSizeOfMYFLT:csoundGetSizeOfMYFLT$$module$src$modules$attributes,csoundSetOption:csoundSetOption$$module$src$modules$attributes,csoundSetParams:csoundSetParams$$module$src$modules$attributes,csoundGetParams:csoundGetParams$$module$src$modules$attributes,csoundGetDebug:csoundGetDebug$$module$src$modules$attributes,csoundSetDebug:csoundSetDebug$$module$src$modules$attributes,csoundGetInputBufferSize:csoundGetInputBufferSize$$module$src$modules$rtaudio,\ncsoundGetOutputBufferSize:csoundGetOutputBufferSize$$module$src$modules$rtaudio,csoundGetInputBuffer:csoundGetInputBuffer$$module$src$modules$rtaudio,csoundGetOutputBuffer:csoundGetOutputBuffer$$module$src$modules$rtaudio,csoundGetSpin:csoundGetSpin$$module$src$modules$rtaudio,csoundGetSpout:csoundGetSpout$$module$src$modules$rtaudio,csoundGetMIDIDevList:csoundGetMIDIDevList$$module$src$modules$rtmidi,csoundSetMidiCallbacks:csoundSetMidiCallbacks$$module$src$modules$rtmidi,csoundGetRtMidiName:csoundGetRtMidiName$$module$src$modules$rtmidi,\ncsoundGetMidiOutFileName:csoundGetMidiOutFileName$$module$src$modules$rtmidi,csoundPushMidiMessage:csoundPushMidiMessage$$module$src$modules$rtmidi,_isRequestingRtMidiInput:_isRequestingRtMidiInput$$module$src$modules$rtmidi,csoundInputMessage:csoundInputMessage$$module$src$modules$control_events,csoundInputMessageAsync:csoundInputMessageAsync$$module$src$modules$control_events,csoundGetControlChannel:csoundGetControlChannel$$module$src$modules$control_events,csoundSetControlChannel:csoundSetControlChannel$$module$src$modules$control_events,\ncsoundGetStringChannel:csoundGetStringChannel$$module$src$modules$control_events,csoundSetStringChannel:csoundSetStringChannel$$module$src$modules$control_events,csoundGetInputName:csoundGetInputName$$module$src$modules$general_io,csoundGetOutputName:csoundGetOutputName$$module$src$modules$general_io,csoundAppendEnv:csoundAppendEnv$$module$src$modules$extra,csoundShouldDaemonize:csoundShouldDaemonize$$module$src$modules$extra,csoundIsScorePending:csoundIsScorePending$$module$src$modules$score_handling,\ncsoundSetScorePending:csoundSetScorePending$$module$src$modules$score_handling,csoundReadScore:csoundReadScore$$module$src$modules$score_handling,csoundGetScoreTime:csoundGetScoreTime$$module$src$modules$score_handling,csoundGetScoreOffsetSeconds:csoundGetScoreOffsetSeconds$$module$src$modules$score_handling,csoundSetScoreOffsetSeconds:csoundSetScoreOffsetSeconds$$module$src$modules$score_handling,csoundRewindScore:csoundRewindScore$$module$src$modules$score_handling,csoundTableLength:csoundTableLength$$module$src$modules$table,\ncsoundTableGet:csoundTableGet$$module$src$modules$table,csoundTableSet:csoundTableSet$$module$src$modules$table,csoundTableCopyIn:csoundTableCopyIn$$module$src$modules$table,csoundTableCopyOut:csoundTableCopyOut$$module$src$modules$table,csoundGetTable:csoundTableCopyOut$$module$src$modules$table,csoundGetTableArgs:csoundGetTableArgs$$module$src$modules$table,csoundIsNamedGEN:csoundIsNamedGEN$$module$src$modules$table,csoundGetNamedGEN:csoundGetNamedGEN$$module$src$modules$table,fs:module$src$filesystem$worker_fs};\nvar $jscompDefaultExport$$module$src$libcsound=function(a){return mergeAll$$module$node_modules$rambda$dist$rambda_mjs([reduce$$module$node_modules$rambda$dist$rambda_mjs((b,c)=>assoc$$module$node_modules$rambda$dist$rambda_mjs(c,api$$module$src$libcsound[c](a),b),{},keys$$module$node_modules$rambda$dist$rambda_mjs(dissoc$$module$node_modules$rambda$dist$rambda_mjs(\"fs\")(api$$module$src$libcsound))),reduce$$module$node_modules$rambda$dist$rambda_mjs((b,c)=>assoc$$module$node_modules$rambda$dist$rambda_mjs(c,\napi$$module$src$libcsound.fs[c](a),b),{},keys$$module$node_modules$rambda$dist$rambda_mjs(module$src$filesystem$worker_fs))])},module$src$libcsound={};module$src$libcsound.api=api$$module$src$libcsound;module$src$libcsound.default=$jscompDefaultExport$$module$src$libcsound;const appendBuffers$$module$src$utils=(a,b)=>{const c=new Uint8Array(a.byteLength+b.byteLength);c.set(new Uint8Array(a),0);c.set(new Uint8Array(b),a.byteLength);return c.buffer},nearestPowerOf2$$module$src$utils=a=>1<<31-Math.clz32(a),isIos$$module$src$utils=()=>/iPhone|iPad|iPod/.test(navigator.userAgent),isFirefox$$module$src$utils=()=>navigator.userAgent.toLowerCase().includes(\"firefox\"),isSafari$$module$src$utils=()=>\"string\"===typeof navigator.vendor&&navigator.vendor.includes(\"Apple\"),isSabSupported$$module$src$utils=\n()=>!isFirefox$$module$src$utils()&&window&&void 0!==window.Atomics&&void 0!==window.SharedArrayBuffer,areWorkletsSupported$$module$src$utils=()=>void 0!==AudioNode&&void 0!==AudioWorkletNode,WebkitAudioContext$$module$src$utils=()=>{if(void 0!==window.webkitAudioContext)return window.webkitAudioContext;if(void 0!==window.AudioContext)return window.AudioContext},isScriptProcessorNodeSupported$$module$src$utils=()=>{const a=WebkitAudioContext$$module$src$utils();return void 0!==a&&void 0!==a.prototype.createScriptProcessor},\ncsoundApiRename$$module$src$utils=a=>{let b=a.replace(/^csound/i,\"\");\"csoundPushMidiMessage\"===a&&(b=\"midiMessage\");return b.charAt(0).toLowerCase()+b.slice(1)},stopableStates$$module$src$utils=new Set([\"realtimePerformanceStarted\",\"realtimePerformancePaused\",\"realtimePerformanceResumed\",\"renderStarted\"]),makeProxyCallback$$module$src$utils=(a,b,c,d)=>async(...e)=>{if(!d||!stopableStates$$module$src$utils.has(d)){const f={};0<Object.values(f).length&&await a.callUncloned(\"syncWorkerFs\",[b,f])}return await a.callUncloned(c,\n[b,...e])},makeSingleThreadCallback$$module$src$utils=(a,b)=>async(...c)=>await b.apply({},[a,...c]),fetchPlugins$$module$src$utils=async a=>await Promise.all(a.map(async b=>(await fetch(b)).arrayBuffer()));var module$src$utils={};module$src$utils.WebkitAudioContext=WebkitAudioContext$$module$src$utils;module$src$utils.appendBuffers=appendBuffers$$module$src$utils;module$src$utils.areWorkletsSupported=areWorkletsSupported$$module$src$utils;module$src$utils.csoundApiRename=csoundApiRename$$module$src$utils;\nmodule$src$utils.fetchPlugins=fetchPlugins$$module$src$utils;module$src$utils.isIos=isIos$$module$src$utils;module$src$utils.isSabSupported=isSabSupported$$module$src$utils;module$src$utils.isSafari=isSafari$$module$src$utils;module$src$utils.isScriptProcessorNodeSupported=isScriptProcessorNodeSupported$$module$src$utils;module$src$utils.makeProxyCallback=makeProxyCallback$$module$src$utils;module$src$utils.makeSingleThreadCallback=makeSingleThreadCallback$$module$src$utils;\nmodule$src$utils.nearestPowerOf2=nearestPowerOf2$$module$src$utils;module$src$utils.stopableStates=stopableStates$$module$src$utils;const messageEventHandler$$module$src$mains$messages_main=a=>b=>{if(b.data.log)a&&a.publicEvents&&a.publicEvents.triggerMessage?a.publicEvents.triggerMessage(b.data.log):console.log(\"object\"===typeof b.data.log&&\"string\"===typeof b.data.log.log?b.data.log.log:b.data.log);else if(b.data.playStateChange&&a&&a.onPlayStateChange)a.onPlayStateChange(b.data.playStateChange)},iterableMessageChannel$$module$src$mains$messages_main=()=>{const {port1:a,port2:b}=new MessageChannel;return[a,b]},safelyClosePorts$$module$src$mains$messages_main=\n([a,b])=>{if(void 0!==a.close)try{a.close()}catch(c){}if(void 0!==b.close)try{b.close()}catch(c){}};\nclass IPCMessagePorts$$module$src$mains$messages_main{constructor(){const {port1:a,port2:b}=new MessageChannel;this.mainMessagePort=a;this.workerMessagePort=b;const {port1:c,port2:d}=new MessageChannel;this.mainMessagePortAudio=c;this.workerMessagePortAudio=d;const {port1:e,port2:f}=new MessageChannel;this.csoundWorkerFrameRequestPort=e;this.audioWorkerFrameRequestPort=f;const {port1:g,port2:h}=new MessageChannel;this.csoundWorkerAudioInputPort=g;this.audioWorkerAudioInputPort=h;const {port1:k,port2:m}=\nnew MessageChannel;this.csoundWorkerRtMidiPort=k;this.csoundMainRtMidiPort=m;const {port1:n,port2:l}=new MessageChannel;this.sabWorkerCallbackReply=n;this.sabMainCallbackReply=l;const {port1:p,port2:q}=new MessageChannel;this.mainMessagePort2=p;this.workerMessagePort2=q;this.restartAudioWorkerPorts=this.restartAudioWorkerPorts.bind(this)}restartAudioWorkerPorts(){safelyClosePorts$$module$src$mains$messages_main([this.csoundWorkerAudioInputPort,this.audioWorkerAudioInputPort]);[this.csoundWorkerAudioInputPort,\nthis.audioWorkerAudioInputPort]=iterableMessageChannel$$module$src$mains$messages_main();safelyClosePorts$$module$src$mains$messages_main([this.mainMessagePortAudio,this.workerMessagePortAudio]);[this.mainMessagePortAudio,this.workerMessagePortAudio]=iterableMessageChannel$$module$src$mains$messages_main();safelyClosePorts$$module$src$mains$messages_main([this.csoundWorkerFrameRequestPort,this.audioWorkerFrameRequestPort]);[this.csoundWorkerFrameRequestPort,this.audioWorkerFrameRequestPort]=iterableMessageChannel$$module$src$mains$messages_main();\nsafelyClosePorts$$module$src$mains$messages_main([this.mainMessagePort2,this.workerMessagePort2]);[this.mainMessagePort2,this.workerMessagePort2]=iterableMessageChannel$$module$src$mains$messages_main()}}var module$src$mains$messages_main={};module$src$mains$messages_main.IPCMessagePorts=IPCMessagePorts$$module$src$mains$messages_main;module$src$mains$messages_main.messageEventHandler=messageEventHandler$$module$src$mains$messages_main;function clearArray$$module$src$utils$clear_array(a){for(;0<a.length;)a.pop()}var module$src$utils$clear_array={};module$src$utils$clear_array.clearArray=clearArray$$module$src$utils$clear_array;class EventPromises$$module$src$utils$event_promises{constructor(){this.timeoutTimers=[];this.resumeResolver=this.resumePromise=this.pauseResolver=this.pausePromise=this.stopResolver=this.stopPromise=this.startResolver=this.startPromise=void 0;this.createStartPromise=this.createStartPromise.bind(this);this.releaseStartPromise=this.releaseStartPromise.bind(this);this.createStopPromise=this.createStopPromise.bind(this);this.releaseStopPromise=this.releaseStopPromise.bind(this);this.createPausePromise=\nthis.createPausePromise.bind(this);this.releasePausePromise=this.releasePausePromise.bind(this);this.createResumePromise=this.createResumePromise.bind(this);this.releaseResumePromise=this.releaseResumePromise.bind(this);this.waitForStart=this.waitForStart.bind(this);this.waitForStop=this.waitForStop.bind(this);this.isWaitingToStart=this.isWaitingToStart.bind(this);this.isWaitingToStop=this.isWaitingToStop.bind(this)}isWaitingToStart(){return void 0!==this.startPromise}isWaitingToStop(){return void 0!==\nthis.stopPromise}isWaiting(a){return void 0!==this.startPromise?(console.error(`cannot ${a} while starting, did you forget to 'await'?`),!0):void 0!==this.stopPromise?(console.error(`cannot ${a} while stopping, did you forget to 'await'?`),!0):void 0!==this.pausePromise?(console.error(`cannot ${a} while pausing, did you forget to 'await'?`),!0):void 0!==this.resumePromise?(console.error(`cannot ${a} while resuming, did you forget to 'await'?`),!0):!1}async waitForStart(){return this.startPromise?\nawait this.startPromise:-1}async waitForStop(){let a;return null!=(a=this.stopPromise)?a:-1}async waitForPause(){let a;return null!=(a=this.pausePromise)?a:-1}async waitForResume(){let a;return null!=(a=this.resumePromise)?a:-1}createStartPromise(){this.startPromise||(this.startPromise=new Promise(a=>{this.startResolver=a;const b=setTimeout(()=>{this.timeoutTimers=reject$$module$node_modules$rambda$dist$rambda_mjs(equals$$module$node_modules$rambda$dist$rambda_mjs(b),this.timeoutTimers);this.startPromise&&\n(console.warn(\"start promise timed out\"),this.startResolver(),delete this.startResolver,this.startPromise&&delete this.startPromise)},2E3);this.timeoutTimers.push(b)}))}releaseStartPromise(){try{this.timeoutTimers.forEach(clearTimeout),clearArray$$module$src$utils$clear_array(this.timeoutTimers)}catch(a){console.error(a)}this.startResolver&&(this.startResolver(),delete this.startResolver);this.startPromise&&delete this.startPromise}createStopPromise(){this.stopPromise||(this.stopPromise=new Promise(a=>\n{this.stopResolver=a;const b=setTimeout(()=>{this.timeoutTimers=reject$$module$node_modules$rambda$dist$rambda_mjs(equals$$module$node_modules$rambda$dist$rambda_mjs(b),this.timeoutTimers);this.stopPromise&&(console.warn(\"stop promise timed out\"),this.stopResolver(),delete this.stopResolver,this.stopPromise&&delete this.stopPromise)},2E3);this.timeoutTimers.push(b)}))}releaseStopPromise(){try{this.timeoutTimers.forEach(clearTimeout),clearArray$$module$src$utils$clear_array(this.timeoutTimers)}catch(a){console.error(a)}this.stopResolver&&\n(this.stopResolver(),delete this.stopResolver);this.stopPromise&&delete this.stopPromise}createPausePromise(){this.pausePromise||(this.pausePromise=new Promise(a=>{this.pauseResolver=a;const b=setTimeout(()=>{this.timeoutTimers=reject$$module$node_modules$rambda$dist$rambda_mjs(equals$$module$node_modules$rambda$dist$rambda_mjs(b),this.timeoutTimers);this.pausePromise&&(console.warn(\"pause promise timed out\"),this.pauseResolver(),delete this.pauseResolver,this.pausePromise&&delete this.pausePromise)},\n2E3);this.timeoutTimers.push(b)}))}releasePausePromise(){try{this.timeoutTimers.forEach(clearTimeout),clearArray$$module$src$utils$clear_array(this.timeoutTimers)}catch(a){console.error(a)}this.pauseResolver&&(this.pauseResolver(),delete this.pauseResolver);this.pausePromise&&delete this.pausePromise}createResumePromise(){this.resumePromise||(this.resumePromise=new Promise(a=>{this.resumeResolver=a;const b=setTimeout(()=>{this.timeoutTimers=reject$$module$node_modules$rambda$dist$rambda_mjs(equals$$module$node_modules$rambda$dist$rambda_mjs(b),\nthis.timeoutTimers);this.resumePromise&&(console.warn(\"resume promise timed out\"),this.resumeResolver(),delete this.resumeResolver,this.resumePromise&&delete this.resumePromise)},2E3);this.timeoutTimers.push(b)}))}releaseResumePromise(){try{this.timeoutTimers.forEach(clearTimeout),clearArray$$module$src$utils$clear_array(this.timeoutTimers)}catch(a){console.error(a)}this.resumeResolver&&(this.resumeResolver(),delete this.resumeResolver);this.resumePromise&&delete this.resumePromise}}\nvar module$src$utils$event_promises={};module$src$utils$event_promises.EventPromises=EventPromises$$module$src$utils$event_promises;var module$node_modules$eventemitter3$umd$eventemitter3_min={};\nmodule$node_modules$eventemitter3$umd$eventemitter3_min.default=function(){return function e(b,c,d){function f(k,m){if(!c[k]){if(!b[k]){var n=\"function\"==typeof require&&require;if(!m&&n)return n(k,!0);if(g)return g(k,!0);m=Error(\"Cannot find module '\"+k+\"'\");throw m.code=\"MODULE_NOT_FOUND\",m;}m=c[k]={exports:{}};b[k][0].call(m.exports,function(l){return f(b[k][1][l]||l)},m,m.exports,e,b,c,d)}return c[k].exports}for(var g=\"function\"==typeof require&&require,h=0;h<d.length;h++)f(d[h]);return f}({1:[function(b,\nc,d){function e(){}function f(l,p,q){this.fn=l;this.context=p;this.once=q||!1}function g(l,p,q,u,t){if(\"function\"!=typeof q)throw new TypeError(\"The listener must be a function\");q=new f(q,u||l,t);p=n?n+p:p;return l._events[p]?l._events[p].fn?l._events[p]=[l._events[p],q]:l._events[p].push(q):(l._events[p]=q,l._eventsCount++),l}function h(l,p){0==--l._eventsCount?l._events=new e:delete l._events[p]}function k(){this._events=new e;this._eventsCount=0}var m=Object.prototype.hasOwnProperty,n=\"~\";Object.create&&\n(e.prototype=Object.create(null),(new e).__proto__||(n=!1));k.prototype.eventNames=function(){var l,p,q=[];if(0===this._eventsCount)return q;for(p in l=this._events)m.call(l,p)&&q.push(n?p.slice(1):p);return Object.getOwnPropertySymbols?q.concat(Object.getOwnPropertySymbols(l)):q};k.prototype.listeners=function(l){l=this._events[n?n+l:l];if(!l)return[];if(l.fn)return[l.fn];for(var p=0,q=l.length,u=Array(q);p<q;p++)u[p]=l[p].fn;return u};k.prototype.listenerCount=function(l){return(l=this._events[n?\nn+l:l])?l.fn?1:l.length:0};k.prototype.emit=function(l,p,q,u,t,x){var r=n?n+l:l;if(!this._events[r])return!1;var y;r=this._events[r];var v=arguments.length;if(r.fn){switch(r.once&&this.removeListener(l,r.fn,void 0,!0),v){case 1:return r.fn.call(r.context),!0;case 2:return r.fn.call(r.context,p),!0;case 3:return r.fn.call(r.context,p,q),!0;case 4:return r.fn.call(r.context,p,q,u),!0;case 5:return r.fn.call(r.context,p,q,u,t),!0;case 6:return r.fn.call(r.context,p,q,u,t,x),!0}w=1;for(y=Array(v-1);w<\nv;w++)y[w-1]=arguments[w];r.fn.apply(r.context,y)}else for(var z,B=r.length,w=0;w<B;w++)switch(r[w].once&&this.removeListener(l,r[w].fn,void 0,!0),v){case 1:r[w].fn.call(r[w].context);break;case 2:r[w].fn.call(r[w].context,p);break;case 3:r[w].fn.call(r[w].context,p,q);break;case 4:r[w].fn.call(r[w].context,p,q,u);break;default:if(!y)for(z=1,y=Array(v-1);z<v;z++)y[z-1]=arguments[z];r[w].fn.apply(r[w].context,y)}return!0};k.prototype.on=function(l,p,q){return g(this,l,p,q,!1)};k.prototype.once=function(l,\np,q){return g(this,l,p,q,!0)};k.prototype.removeListener=function(l,p,q,u){l=n?n+l:l;if(!this._events[l])return this;if(!p)return h(this,l),this;var t=this._events[l];if(t.fn)t.fn!==p||u&&!t.once||q&&t.context!==q||h(this,l);else{for(var x=0,r=[],y=t.length;x<y;x++)(t[x].fn!==p||u&&!t[x].once||q&&t[x].context!==q)&&r.push(t[x]);r.length?this._events[l]=1===r.length?r[0]:r:h(this,l)}return this};k.prototype.removeAllListeners=function(l){var p;return l?(p=n?n+l:l,this._events[p]&&h(this,p)):(this._events=\nnew e,this._eventsCount=0),this};k.prototype.off=k.prototype.removeListener;k.prototype.addListener=k.prototype.on;k.prefixed=n;k.EventEmitter=k;void 0!==c&&(c.exports=k)},{}]},{},[1])(1)}();class PublicEventAPI$$module$src$events{constructor(a){this.parent=a;this.eventEmitter=new module$node_modules$eventemitter3$umd$eventemitter3_min.default;this.currentDerivedPlayState=void 0;this.decorateAPI=this.decorateAPI.bind(this);this.triggerRealtimePerformanceStarted=this.triggerRealtimePerformanceStarted.bind(this);this.triggerRealtimePerformancePaused=this.triggerRealtimePerformancePaused.bind(this);this.triggerRealtimePerformanceResumed=this.triggerRealtimePerformanceResumed.bind(this);\nthis.triggerRealtimePerformanceEnded=this.triggerRealtimePerformanceEnded.bind(this);this.triggerRenderStarted=this.triggerRenderStarted.bind(this);this.triggerRenderEnded=this.triggerRenderEnded.bind(this);this.triggerOnAudioNodeCreated=this.triggerOnAudioNodeCreated.bind(this);this.terminateInstance=this.terminateInstance.bind(this)}terminateInstance(){this.eventEmitter.removeAllListeners(\"play pause stop realtimePerformanceStarted realtimePerformancePaused realtimePerformanceResumed realtimePerformanceEnded renderStarted renderEnded onAudioNodeCreated message\".split(\" \"));\nObject.keys(this).forEach(a=>delete this[a])}triggerRealtimePerformanceStarted(){this.eventEmitter.emit(\"realtimePerformanceStarted\");\"play\"!==this.currentDerivedPlayState&&(this.eventEmitter.emit(\"play\"),this.currentDerivedPlayState=\"play\")}triggerRealtimePerformancePaused(){this.eventEmitter.emit(\"realtimePerformancePaused\");\"pause\"!==this.currentDerivedPlayState&&(this.eventEmitter.emit(\"pause\"),this.currentDerivedPlayState=\"pause\")}triggerRealtimePerformanceResumed(){this.eventEmitter.emit(\"realtimePerformanceResumed\");\n\"play\"!==this.currentDerivedPlayState&&(this.eventEmitter.emit(\"play\"),this.currentDerivedPlayState=\"play\")}triggerRealtimePerformanceEnded(){this.eventEmitter.emit(\"realtimePerformanceEnded\");\"stop\"!==this.currentDerivedPlayState&&(this.eventEmitter.emit(\"stop\"),this.currentDerivedPlayState=\"stop\")}triggerRenderStarted(){this.eventEmitter.emit(\"renderStarted\");\"stop\"!==this.currentDerivedPlayState&&(this.eventEmitter.emit(\"stop\"),this.currentDerivedPlayState=\"stop\")}triggerRenderEnded(){this.eventEmitter.emit(\"renderEnded\");\n\"stop\"!==this.currentDerivedPlayState&&(this.eventEmitter.emit(\"stop\"),this.currentDerivedPlayState=\"stop\")}triggerOnAudioNodeCreated(a){this.eventEmitter.emit(\"onAudioNodeCreated\",a)}triggerMessage({log:a}){this.eventEmitter.emit(\"message\",a)}decorateAPI(a){a.eventNames=this.eventEmitter.eventNames.bind(this.eventEmitter);a.listenerCount=this.eventEmitter.listenerCount.bind(this.eventEmitter);a.listeners=this.eventEmitter.listeners.bind(this.eventEmitter);a.off=this.eventEmitter.off.bind(this.eventEmitter);\na.on=this.eventEmitter.on.bind(this.eventEmitter);a.addListener=this.eventEmitter.on.bind(this.eventEmitter);a.once=this.eventEmitter.once.bind(this.eventEmitter);a.removeAllListeners=this.eventEmitter.removeAllListeners.bind(this.eventEmitter);a.removeListener=this.eventEmitter.removeListener.bind(this.eventEmitter);return a}}var module$src$events={};module$src$events.PublicEventAPI=PublicEventAPI$$module$src$events;var $jscompDefaultExport$$module$dist$__compiled_vanilla_worker_inline=()=>(window.URL||window.webkitURL).createObjectURL(new Blob(['(function(){/*\\n\\n Copyright The Closure Library Authors.\\n SPDX-License-Identifier: Apache-2.0\\n*/\\nvar $jscomp=$jscomp||{};$jscomp.scope={};var COMPILED=!0,goog=goog||{};goog.global=this||self;goog.exportPath_=function(a,b,c,d){a=a.split(\".\");d=d||goog.global;a[0]in d||\"undefined\"==typeof d.execScript||d.execScript(\"var \"+a[0]);for(var e;a.length&&(e=a.shift());)if(a.length||void 0===b)d=d[e]&&d[e]!==Object.prototype[e]?d[e]:d[e]={};else if(!c&&goog.isObject(b)&&goog.isObject(d[e]))for(var f in b)b.hasOwnProperty(f)&&(d[e][f]=b[f]);else d[e]=b};\\ngoog.define=function(a,b){if(!COMPILED){var c=goog.global.CLOSURE_UNCOMPILED_DEFINES,d=goog.global.CLOSURE_DEFINES;c&&void 0===c.nodeType&&Object.prototype.hasOwnProperty.call(c,a)?b=c[a]:d&&void 0===d.nodeType&&Object.prototype.hasOwnProperty.call(d,a)&&(b=d[a])}return b};goog.FEATURESET_YEAR=2020;goog.DEBUG=!0;goog.LOCALE=\"en\";goog.getLocale=function(){return goog.LOCALE};goog.TRUSTED_SITE=!0;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;\\ngoog.provide=function(a){if(goog.isInModuleLoader_())throw Error(\"goog.provide cannot be used within a module.\");if(!COMPILED&&goog.isProvided_(a))throw Error(\\'Namespace \"\\'+a+\\'\" already declared.\\');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b,c){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var d=a;(d=d.substring(0,d.lastIndexOf(\".\")))&&!goog.getObjectByName(d);)goog.implicitNamespaces_[d]=!0}goog.exportPath_(a,b,c)};goog.NONCE_PATTERN_=/^[\\\\w+/_-]+[=]{0,2}$/;\\ngoog.getScriptNonce_=function(a){a=(a||goog.global).document;return(a=a.querySelector&&a.querySelector(\"script[nonce]\"))&&(a=a.nonce||a.getAttribute(\"nonce\"))&&goog.NONCE_PATTERN_.test(a)?a:\"\"};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\\ngoog.module=function(a){if(\"string\"!==typeof a||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error(\"Invalid module identifier\");if(!goog.isInGoogModuleLoader_())throw Error(\"Module \"+a+\" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You\\'re likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.\");if(goog.moduleLoaderState_.moduleName)throw Error(\"goog.module may only be called once per module.\");\\ngoog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error(\\'Namespace \"\\'+a+\\'\" already declared.\\');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a].exports;if(!goog.implicitNamespaces_[a])return a=goog.getObjectByName(a),null!=a?a:null}return null};goog.ModuleType={ES6:\"es6\",GOOG:\"goog\"};goog.moduleLoaderState_=null;\\ngoog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var a=goog.global.$jscomp;return a?\"function\"!=typeof a.getCurrentModulePath?!1:!!a.getCurrentModulePath():!1};\\ngoog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");goog.moduleLoaderState_.declareLegacyNamespace=!0};\\ngoog.declareModuleId=function(a){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error(\"goog.declareModuleId may only be called from within an ES6 module\");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error(\"goog.declareModuleId may only be called once per module.\");if(a in goog.loadedModules_)throw Error(\\'Module with namespace \"\\'+a+\\'\" already exists.\\');}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=a;else{var b=goog.global.$jscomp;if(!b||\"function\"!=typeof b.getCurrentModulePath)throw Error(\\'Module with namespace \"\\'+\\na+\\'\" has been loaded incorrectly.\\');b=b.require(b.getCurrentModulePath());goog.loadedModules_[a]={exports:b,type:goog.ModuleType.ES6,moduleId:a}}};goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||\"\",Error(\"Importing test-only code into non-debug environment\"+(a?\": \"+a:\".\"));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&null!=goog.getObjectByName(a)},goog.implicitNamespaces_={\"goog.module\":!0});\\ngoog.getObjectByName=function(a,b){a=a.split(\".\");b=b||goog.global;for(var c=0;c<a.length;c++)if(b=b[a[c]],null==b)return null;return b};goog.addDependency=function(a,b,c,d){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(a,b,c,d)};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};\\ngoog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(a);if(goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(a)}finally{goog.moduleLoaderState_=b}}return null}};goog.requireType=function(a){return{}};goog.basePath=\"\";goog.abstractMethod=function(){throw Error(\"unimplemented abstract method\");};\\ngoog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.TRANSPILE=\"detect\";goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRUSTED_TYPES_POLICY_NAME=\"goog\";\\ngoog.hasBadLetScoping=null;\\ngoog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:\"\",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};var c={},d=c;if(\"function\"===typeof a)d=a.call(void 0,d);else if(\"string\"===typeof a)d=goog.loadModuleFromSource_.call(void 0,d,a);else throw Error(\"Invalid module definition\");var e=goog.moduleLoaderState_.moduleName;if(\"string\"===typeof e&&e)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(e,d,c!==d):goog.SEAL_MODULE_EXPORTS&&\\nObject.seal&&\"object\"==typeof d&&null!=d&&Object.seal(d),goog.loadedModules_[e]={exports:d,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error(\\'Invalid module name \"\\'+e+\\'\"\\');}finally{goog.moduleLoaderState_=b}};goog.loadModuleFromSource_=function(a,b){eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(b));return a};goog.normalizePath_=function(a){a=a.split(\"/\");for(var b=0;b<a.length;)\".\"==a[b]?a.splice(b,1):b&&\"..\"==a[b]&&a[b-1]&&\"..\"!=a[b-1]?a.splice(--b,2):b++;return a.join(\"/\")};\\ngoog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open(\"get\",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};goog.typeOf=function(a){var b=typeof a;return\"object\"!=b?b:a?Array.isArray(a)?\"array\":b:\"null\"};goog.isArrayLike=function(a){var b=goog.typeOf(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length};\\ngoog.isDateLike=function(a){return goog.isObject(a)&&\"function\"==typeof a.getFullYear};goog.isObject=function(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b};goog.getUid=function(a){return Object.prototype.hasOwnProperty.call(a,goog.UID_PROPERTY_)&&a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&\"removeAttribute\"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};\\ngoog.UID_PROPERTY_=\"closure_uid_\"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.cloneObject=function(a){var b=goog.typeOf(a);if(\"object\"==b||\"array\"==b){if(\"function\"===typeof a.clone)return a.clone();if(\"undefined\"!==typeof Map&&a instanceof Map)return new Map(a);if(\"undefined\"!==typeof Set&&a instanceof Set)return new Set(a);b=\"array\"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};\\ngoog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};\\ngoog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}};goog.now=function(){return Date.now()};goog.globalEval=function(a){(0,eval)(a)};\\ngoog.getCssName=function(a,b){if(\".\"==String(a).charAt(0))throw Error(\\'className passed in goog.getCssName must not start with \".\". You passed: \\'+a);var c=function(e){return goog.cssNameMapping_[e]||e},d=function(e){e=e.split(\"-\");for(var f=[],g=0;g<e.length;g++)f.push(c(e[g]));return f.join(\"-\")};d=goog.cssNameMapping_?\"BY_WHOLE\"==goog.cssNameMappingStyle_?c:d:function(e){return e};a=b?a+\"-\"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a};\\ngoog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.GetMsgOptions=function(){};\\ngoog.getMsg=function(a,b,c){c&&c.html&&(a=a.replace(/</g,\"&lt;\"));c&&c.unescapeHtmlEntities&&(a=a.replace(/&lt;/g,\"<\").replace(/&gt;/g,\">\").replace(/&apos;/g,\"\\'\").replace(/&quot;/g,\\'\"\\').replace(/&amp;/g,\"&\"));b&&(a=a.replace(/\\\\{\\\\$([^}]+)}/g,function(d,e){return null!=b&&e in b?b[e]:d}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,!0,c)};goog.exportProperty=function(a,b,c){a[b]=c};\\ngoog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(d,e,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[e].apply(d,g)}};goog.scope=function(a){if(goog.isInModuleLoader_())throw Error(\"goog.scope is not supported within a module.\");a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);\\ngoog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error(\"cannot instantiate an interface (no constructor defined).\");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;\\ngoog.defineClass.createSealingConstructor_=function(a,b){return goog.defineClass.SEAL_CLASS_INSTANCES?function(){var c=a.apply(this,arguments)||this;c[goog.UID_PROPERTY_]=c[goog.UID_PROPERTY_];return c}:a};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\\ngoog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};goog.identity_=function(a){return a};\\ngoog.createTrustedTypesPolicy=function(a){var b=null,c=goog.global.trustedTypes;if(!c||!c.createPolicy)return b;try{b=c.createPolicy(a,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_})}catch(d){goog.logToConsole_(d.message)}return b};\\n!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.isEdge_=function(){return!!(goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:\"\").match(/Edge\\\\/(\\\\d+)(\\\\.\\\\d)*/i)},goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&\"write\"in a},goog.isDocumentLoading_=function(){var a=goog.global.document;return a.attachEvent?\"complete\"!=a.readyState:\"loading\"==a.readyState},goog.findBasePath_=function(){if(void 0!=goog.global.CLOSURE_BASE_PATH&&\"string\"===typeof goog.global.CLOSURE_BASE_PATH)goog.basePath=\\ngoog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;a=b?[b]:a.getElementsByTagName(\"SCRIPT\");for(b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf(\"?\");d=-1==d?c.length:d;if(\"base.js\"==c.slice(d-7,d)){goog.basePath=c.slice(0,d-7);break}}}},goog.findBasePath_(),goog.protectScriptTag_=function(a){return a.replace(/<\\\\/(SCRIPT)/ig,\"\\\\\\\\x3c/$1\")},goog.DebugLoader_=function(){this.dependencies_={};this.idToPath_={};this.written_={};this.loadingDeps_=\\n[];this.depsToLoad_=[];this.paused_=!1;this.factory_=new goog.DependencyFactory;this.deferredCallbacks_={};this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(a,b){function c(){d&&(goog.global.setTimeout(d,0),d=null)}var d=b;if(a.length){b=[];for(var e=0;e<a.length;e++){var f=this.getPathFromDeps_(a[e]);if(!f)throw Error(\"Unregonized namespace: \"+a[e]);b.push(this.dependencies_[f])}f=goog.require;var g=0;for(e=0;e<a.length;e++)f(a[e]),b[e].onLoad(function(){++g==a.length&&c()})}else c()},\\ngoog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+\"deps.js\"),\"deps.js\",[],[],{}));this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(a,b){(a=this.getPathFromDeps_(a))&&(b||this.areDepsLoaded_(this.dependencies_[a].requires))&&(b=this.deferredCallbacks_[a])&&(delete this.deferredCallbacks_[a],b())},goog.DebugLoader_.prototype.setDependencyFactory=function(a){this.factory_=a},goog.DebugLoader_.prototype.load_=\\nfunction(a){if(this.getPathFromDeps_(a)){var b=this,c=[],d=function(e){var f=b.getPathFromDeps_(e);if(!f)throw Error(\"Bad dependency path or symbol: \"+e);if(!b.written_[f]){b.written_[f]=!0;e=b.dependencies_[f];for(f=0;f<e.requires.length;f++)goog.isProvided_(e.requires[f])||d(e.requires[f]);c.push(e)}};d(a);a=!!this.depsToLoad_.length;this.depsToLoad_=this.depsToLoad_.concat(c);this.paused_||a||this.loadDeps_()}else goog.logToConsole_(\"goog.require could not find: \"+a)},goog.DebugLoader_.prototype.loadDeps_=\\nfunction(){for(var a=this,b=this.paused_;this.depsToLoad_.length&&!b;)(function(){var c=!1,d=a.depsToLoad_.shift(),e=!1;a.loading_(d);var f={pause:function(){if(c)throw Error(\"Cannot call pause after the call to load.\");b=!0},resume:function(){c?a.resume_():b=!1},loaded:function(){if(e)throw Error(\"Double call to loaded.\");e=!0;a.loaded_(d)},pending:function(){for(var g=[],h=0;h<a.loadingDeps_.length;h++)g.push(a.loadingDeps_[h]);return g},setModuleState:function(g){goog.moduleLoaderState_={type:g,\\nmoduleName:\"\",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(g,h,k){k&&(goog.loadedModules_[k]={exports:h,type:goog.ModuleType.ES6,moduleId:k||\"\"})},registerGoogModuleExports:function(g,h){goog.loadedModules_[g]={exports:h,type:goog.ModuleType.GOOG,moduleId:g}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(g){if(c)throw Error(\"Cannot register with defer after the call to load.\");a.defer_(d,g)},areDepsLoaded:function(){return a.areDepsLoaded_(d.requires)}};\\ntry{d.load(f)}finally{c=!0}})();b&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(a){this.loadingDeps_.push(a)},goog.DebugLoader_.prototype.loaded_=function(a){for(var b=0;b<this.loadingDeps_.length;b++)if(this.loadingDeps_[b]==a){this.loadingDeps_.splice(b,1);break}for(b=0;b<this.deferredQueue_.length;b++)if(this.deferredQueue_[b]==\\na.path){this.deferredQueue_.splice(b,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);a.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(a){for(var b=0;b<a.length;b++){var c=this.getPathFromDeps_(a[b]);if(!c||!(c in this.deferredCallbacks_||goog.isProvided_(a[b])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=function(a){return a in this.idToPath_?\\nthis.idToPath_[a]:a in this.dependencies_?a:null},goog.DebugLoader_.prototype.defer_=function(a,b){this.deferredCallbacks_[a.path]=b;this.deferredQueue_.push(a.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(a,b,c){},goog.LoadController.prototype.setModuleState=\\nfunction(a){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(a){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(a,b,c,d,e){this.path=a;this.relativePath=b;this.provides=c;this.requires=d;this.loadFlags=e;this.loaded_=!1;this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var a=this.path,b=a.indexOf(\"://\");0<=b&&(a=a.substring(b+3),b=a.indexOf(\"/\"),0<=b&&(a=a.substring(b+1)));return a},\\ngoog.Dependency.prototype.onLoad=function(a){this.loaded_?a():this.loadCallbacks_.push(a)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var a=this.loadCallbacks_;this.loadCallbacks_=[];for(var b=0;b<a.length;b++)a[b]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(a){var b=Math.random().toString(32);goog.Dependency.callbackMap_[b]=a;return b},goog.Dependency.unregisterCallback_=function(a){delete goog.Dependency.callbackMap_[a]},\\ngoog.Dependency.callback_=function(a,b){if(a in goog.Dependency.callbackMap_){for(var c=goog.Dependency.callbackMap_[a],d=[],e=1;e<arguments.length;e++)d.push(arguments[e]);c.apply(void 0,d)}else throw Error(\"Callback key \"+a+\" does not exist (was base.js loaded more than once?).\");},goog.Dependency.prototype.load=function(a){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var b=goog.global.document;if(\"complete\"==\\nb.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\\\\bdeps.js$/.test(this.path)){a.loaded();return}throw Error(\\'Cannot write \"\\'+this.path+\\'\" after document load\\');}var c=goog.getScriptNonce_();if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var d=function(h){h.readyState&&\"complete\"!=h.readyState?h.onload=d:(goog.Dependency.unregisterCallback_(e),a.loaded())};var e=goog.Dependency.registerCallback_(d);c=c?\\' nonce=\"\\'+c+\\'\"\\':\"\";var f=\\'<script src=\"\\'+this.path+\\'\"\\'+\\nc+(goog.Dependency.defer_?\" defer\":\"\")+\\' id=\"script-\\'+e+\\'\">\\\\x3c/script>\\';f+=\"<script\"+c+\">\";f=goog.Dependency.defer_?f+(\"document.getElementById(\\'script-\"+e+\"\\').onload = function() {\\\\n  goog.Dependency.callback_(\\'\"+e+\"\\', this);\\\\n};\\\\n\"):f+(\"goog.Dependency.callback_(\\'\"+e+\"\\', document.getElementById(\\'script-\"+e+\"\\'));\");f+=\"\\\\x3c/script>\";b.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(f):f)}else{var g=b.createElement(\"script\");g.defer=goog.Dependency.defer_;g.async=!1;c&&(g.nonce=\\nc);g.onload=function(){g.onload=null;a.loaded()};g.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path;b.head.appendChild(g)}}else goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"),\"deps.js\"==this.relativePath?(goog.logToConsole_(\"Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true.\"),a.loaded()):a.pause()},goog.Es6ModuleDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,\\nb,c,d,e)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(a){function b(l,m){var n=\"\",p=goog.getScriptNonce_();p&&(n=\\' nonce=\"\\'+p+\\'\"\\');l=m?\\'<script type=\"module\" crossorigin\\'+n+\">\"+m+\"\\\\x3c/script>\":\\'<script type=\"module\" crossorigin src=\"\\'+l+\\'\"\\'+n+\">\\\\x3c/script>\";d.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(l):l)}function c(l,m){var n=d.createElement(\"script\");n.defer=!0;n.async=!1;n.type=\"module\";n.setAttribute(\"crossorigin\",\\n!0);var p=goog.getScriptNonce_();p&&(n.nonce=p);m?n.text=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(m):m:n.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(l):l;d.head.appendChild(n)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var d=goog.global.document,e=this;if(goog.isDocumentLoading_()){var f=b;goog.Dependency.defer_=!0}else f=c;var g=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(g);\\na.setModuleState(goog.ModuleType.ES6)});f(void 0,\\'goog.Dependency.callback_(\"\\'+g+\\'\")\\');f(this.path,void 0);var h=goog.Dependency.registerCallback_(function(l){goog.Dependency.unregisterCallback_(h);a.registerEs6ModuleExports(e.path,l,goog.moduleLoaderState_.moduleName)});f(void 0,\\'import * as m from \"\\'+this.path+\\'\"; goog.Dependency.callback_(\"\\'+h+\\'\", m)\\');var k=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(k);a.clearModuleState();a.loaded()});f(void 0,\\'goog.Dependency.callback_(\"\\'+\\nk+\\'\")\\')}else goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"),a.pause()},goog.TransformedDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e);this.contents_=null;this.lazyFetch_=!goog.inHtmlDocument_()||!(\"noModule\"in goog.global.document.createElement(\"script\"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(a){function b(){e.contents_=goog.loadFileSync_(e.path);e.contents_&&(e.contents_=\\ne.transform(e.contents_),e.contents_&&(e.contents_+=\"\\\\n//# sourceURL=\"+e.path))}function c(){e.lazyFetch_&&b();if(e.contents_){f&&a.setModuleState(goog.ModuleType.ES6);try{var l=e.contents_;e.contents_=null;goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(l));if(f)var m=goog.moduleLoaderState_.moduleName}finally{f&&a.clearModuleState()}f&&goog.global.$jscomp.require.ensure([e.getPathName()],function(){a.registerEs6ModuleExports(e.path,goog.global.$jscomp.require(e.getPathName()),m)});a.loaded()}}\\nfunction d(){var l=goog.global.document,m=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(m);c()}),n=goog.getScriptNonce_();n=\"<script\"+(n?\\' nonce=\"\\'+n+\\'\"\\':\"\")+\">\"+goog.protectScriptTag_(\\'goog.Dependency.callback_(\"\\'+m+\\'\");\\')+\"\\\\x3c/script>\";l.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(n):n)}var e=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)b(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT(\"\",this.contents_)?(this.contents_=null,a.loaded()):\\na.pause();else{var f=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||b();var g=1<a.pending().length;if(goog.Dependency.defer_&&(g||goog.isDocumentLoading_()))a.defer(function(){c()});else{var h=goog.global.document;g=goog.inHtmlDocument_()&&(\"ActiveXObject\"in goog.global||goog.isEdge_());if(f&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!g){goog.Dependency.defer_=!0;a.pause();var k=h.onreadystatechange;h.onreadystatechange=function(){\"interactive\"==h.readyState&&(h.onreadystatechange=\\nk,c(),a.resume());\"function\"===typeof k&&k.apply(void 0,arguments)}}else goog.inHtmlDocument_()&&goog.isDocumentLoading_()?d():c()}}},goog.TransformedDependency.prototype.transform=function(a){},goog.PreTranspiledEs6ModuleDependency=function(a,b,c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(a){return a},goog.GoogModuleDependency=function(a,b,\\nc,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(a){return goog.LOAD_MODULE_USING_EVAL&&void 0!==goog.global.JSON?\"goog.loadModule(\"+goog.global.JSON.stringify(a+\"\\\\n//# sourceURL=\"+this.path+\"\\\\n\")+\");\":\\'goog.loadModule(function(exports) {\"use strict\";\\'+a+\"\\\\n;return exports});\\\\n//# sourceURL=\"+this.path+\"\\\\n\"},goog.DebugLoader_.prototype.addDependency=function(a,b,c,d){b=\\nb||[];a=a.replace(/\\\\\\\\/g,\"/\");var e=goog.normalizePath_(goog.basePath+a);d&&\"boolean\"!==typeof d||(d=d?{module:goog.ModuleType.GOOG}:{});c=this.factory_.createDependency(e,a,b,c,d);this.dependencies_[e]=c;for(c=0;c<b.length;c++)this.idToPath_[b[c]]=e;this.idToPath_[a]=e},goog.DependencyFactory=function(){},goog.DependencyFactory.prototype.createDependency=function(a,b,c,d,e){return e.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(a,b,c,d,e):e.module==goog.ModuleType.ES6?goog.ASSUME_ES_MODULES_TRANSPILED?\\nnew goog.PreTranspiledEs6ModuleDependency(a,b,c,d,e):new goog.Es6ModuleDependency(a,b,c,d,e):new goog.Dependency(a,b,c,d,e)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(a){goog.debugLoader_.setDependencyFactory(a)},goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+\"#base\"):null,goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),\\ngoog.bootstrap=function(a,b){goog.debugLoader_.bootstrap(a,b)});if(!COMPILED){var isChrome87=!1;try{isChrome87=eval(goog.global.trustedTypes.emptyScript)!==goog.global.trustedTypes.emptyScript}catch(a){}goog.CLOSURE_EVAL_PREFILTER_=goog.global.trustedTypes&&isChrome87&&goog.createTrustedTypesPolicy(\"goog#base#devonly#eval\")||{createScript:goog.identity_}};const proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.proxy\"),createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.endpoint\"),releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.releaseProxy\"),throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.thrown\"),isObject$$module$node_modules$comlink$dist$esm$comlink_mjs=a=>\"object\"===typeof a&&null!==a||\"function\"===typeof a,proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs=\\n{canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs],serialize(a){const {port1:b,port2:c}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b);return[c,[c]]},deserialize(a){a.start();return wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a)}},throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs={canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&\\nthrowMarker$$module$node_modules$comlink$dist$esm$comlink_mjs in a,serialize({value:a}){return[a instanceof Error?{isError:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{isError:!1,value:a},[]]},deserialize(a){if(a.isError)throw Object.assign(Error(a.value.message),a.value);throw a.value;}},transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs=new Map([[\"proxy\",proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs],[\"throw\",throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs]]);\\nfunction expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self){b.addEventListener(\"message\",function e(d){if(d&&d.data){var {id:f,type:g,path:h}=Object.assign({path:[]},d.data),k=(d.data.argumentList||[]).map(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);try{const m=h.slice(0,-1).reduce((p,q)=>p[q],a),n=h.reduce((p,q)=>p[q],a);switch(g){case \"GET\":var l=n;break;case \"SET\":m[h.slice(-1)[0]]=fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(d.data.value);\\nl=!0;break;case \"APPLY\":l=n.apply(m,k);break;case \"CONSTRUCT\":const p=new n(...k);l=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(p);break;case \"ENDPOINT\":const {port1:q,port2:w}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,w);l=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(q,[q]);break;case \"RELEASE\":l=void 0;break;default:return}}catch(m){l={value:m,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0}}Promise.resolve(l).catch(m=>\\n({value:m,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0})).then(m=>{const [n,p]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(m);b.postMessage(Object.assign(Object.assign({},n),{id:f}),p);\"RELEASE\"===g&&(b.removeEventListener(\"message\",e),closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(b))})}});b.start&&b.start()}function isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return\"MessagePort\"===a.constructor.name}\\nfunction closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a){isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a.close()}function wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[],b)}function throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(a){if(a)throw Error(\"Proxy has been released and is not useable\");}\\nfunction createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=[],c=function(){}){let d=!1;const e=new Proxy(c,{get(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);if(g===releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs)return()=>requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"RELEASE\",path:b.map(h=>h.toString())}).then(()=>{closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a);d=!0});if(\"then\"===\\ng){if(0===b.length)return{then:()=>e};f=requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"GET\",path:b.map(h=>h.toString())}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return f.then.bind(f)}return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[...b,g])},set(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [k,l]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,\\n{type:\"SET\",path:[...b,g].map(m=>m.toString()),value:k},l).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},apply(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);f=b[b.length-1];if(f===createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs)return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"ENDPOINT\"}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);if(\"bind\"===f)return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,\\nb.slice(0,-1));const [k,l]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"APPLY\",path:b.map(m=>m.toString()),argumentList:k},l).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},construct(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [h,k]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(g);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,\\n{type:\"CONSTRUCT\",path:b.map(l=>l.toString()),argumentList:h},k).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)}});return e}function myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Array.prototype.concat.apply([],a)}\\nfunction processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(a){a=a.map(toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return[a.map(b=>b[0]),myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a.map(b=>b[1]))]}const transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs=new WeakMap;function transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.set(a,b);return a}\\nfunction proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Object.assign(a,{[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:!0})}function windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self,c=\"*\"){return{postMessage:(d,e)=>a.postMessage(d,c,e),addEventListener:b.addEventListener.bind(b),removeEventListener:b.removeEventListener.bind(b)}}\\nfunction toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){for(const [b,c]of transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs)if(c.canHandle(a)){const [d,e]=c.serialize(a);return[{type:\"HANDLER\",name:b,value:d},e]}return[{type:\"RAW\",value:a},transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a)||[]]}\\nfunction fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){switch(a.type){case \"HANDLER\":return transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a.name).deserialize(a.value);case \"RAW\":return a.value}}\\nfunction requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b,c){return new Promise(d=>{const e=generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs();a.addEventListener(\"message\",function h(g){g.data&&g.data.id&&g.data.id===e&&(a.removeEventListener(\"message\",h),d(g.data))});a.start&&a.start();a.postMessage(Object.assign({id:e},b),c)})}\\nfunction generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs(){return Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join(\"-\")}var module$node_modules$comlink$dist$esm$comlink_mjs={};module$node_modules$comlink$dist$esm$comlink_mjs.createEndpoint=createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.expose=expose$$module$node_modules$comlink$dist$esm$comlink_mjs;\\nmodule$node_modules$comlink$dist$esm$comlink_mjs.proxy=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.proxyMarker=proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.releaseProxy=releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.transfer=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs;\\nmodule$node_modules$comlink$dist$esm$comlink_mjs.transferHandlers=transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.windowEndpoint=windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.wrap=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs;function MessagePortState$$module$src$utils$message_port_state(){}MessagePortState$$module$src$utils$message_port_state.prototype.ready=!1;MessagePortState$$module$src$utils$message_port_state.prototype.port=void 0;MessagePortState$$module$src$utils$message_port_state.prototype.post=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.broadcastPlayState=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.workerState=void 0;\\nMessagePortState$$module$src$utils$message_port_state.prototype.vanillaWorkerState=void 0;var $jscompDefaultExport$$module$src$utils$message_port_state=MessagePortState$$module$src$utils$message_port_state,module$src$utils$message_port_state={};module$src$utils$message_port_state.MessagePortState=MessagePortState$$module$src$utils$message_port_state;module$src$utils$message_port_state.default=$jscompDefaultExport$$module$src$utils$message_port_state;var module$node_modules$lines_logger$lib$index={default:{}};module$node_modules$lines_logger$lib$index.default.__esModule=!0;module$node_modules$lines_logger$lib$index.default.LoggerFactory=module$node_modules$lines_logger$lib$index.default.logLevels=void 0;module$node_modules$lines_logger$lib$index.default.logLevels={log_raise_error:1,log_with_warnings:2,trace:3,debug:4,info:5,warn:6,error:7,disable:8};\\nvar LoggerFactory$$module$node_modules$lines_logger$lib$index=function(){function a(b,c){if(void 0===b&&(b=\"log_with_warnings\"),void 0===c&&(c=null),this.logLevel=b,!module$node_modules$lines_logger$lib$index.default.logLevels[b])throw Error(\"Invalid log level \"+b+\" allowed: \"+JSON.stringify(module$node_modules$lines_logger$lib$index.default.logLevels));this.mockConsole=c||console}return a.prototype.dummy=function(){},a.prototype.setLogWarnings=function(b){this.logLevel=b},a.prototype.getLogWarnings=\\nfunction(){return this.logLevel},a.prototype.getSingleLoggerColor=function(b,c,d){return this.getSingleLoggerStyle(b,this.getColorStyle(c),d)},a.prototype.getSingleLogger=function(b,c){var d=this.getRandomColor(b);return this.getSingleLoggerStyle(b,this.getColorStyle(d),c)},a.prototype.getSingleLoggerStyle=function(b,c,d,e){var f=this;return void 0===e&&(e=\"log_with_warnings\"),function(){for(var g=[],h=0;h<arguments.length;h++)g[h]=arguments[h];if(module$node_modules$lines_logger$lib$index.default.logLevels[f.logLevel]>\\nmodule$node_modules$lines_logger$lib$index.default.logLevels[e])return f.dummy;g=Array.prototype.slice.call(g);h=g.shift().split(\"{}\");for(var k=[f.mockConsole,\"%c\"+b,c],l=0;l<h.length;l++)k.push(h[l]),void 0!==g[l]&&k.push(g[l]);if(h.length-1!==g.length)if(\"log_with_warnings\"===f.logLevel)f.mockConsole.error(\"MissMatch amount of arguments\");else if(\"log_raise_error\"===f.logLevel)throw Error(\"MissMatch amount of arguments\");return Function.prototype.bind.apply(d,k)}},a.prototype.getLoggerColor=function(b,\\nc){return this.getLoggerStyle(b,this.getColorStyle(c))},a.prototype.getColorStyle=function(b){return\"color: white; background-color: \"+b+\"; padding: 2px 6px; border-radius: 2px; font-size: 10px\"},a.getHash=function(b,c){void 0===c&&(c=0);var d=3735928559^c;c^=1103547991;for(var e=0,f;e<b.length;e++)f=b.charCodeAt(e),d=Math.imul(d^f,2654435761),c=Math.imul(c^f,1597334677);return d=Math.imul(d^d>>>16,2246822507)^Math.imul(c^c>>>13,3266489909),4294967296*(2097151&(Math.imul(c^c>>>16,2246822507)^Math.imul(d^\\nd>>>13,3266489909)))+(d>>>0)},a.prototype.getRandomColor=function(b){void 0===b&&(b=\"\");b=a.getHash(b);for(var c=\"#\",d=0;3>d;d++)c+=(\"00\"+(8+(b>>7*d&127)).toString(16)).substr(-2);return c},a.prototype.getLogger=function(b){return this.getLoggerColor(b,this.getRandomColor(b))},a.prototype.getLoggerStyle=function(b,c){return{trace:this.getSingleLoggerStyle(b,c,this.mockConsole.trace,\"trace\"),debug:this.getSingleLoggerStyle(b,c,this.mockConsole.debug,\"debug\"),log:this.getSingleLoggerStyle(b,c,this.mockConsole.log,\\n\"info\"),warn:this.getSingleLoggerStyle(b,c,this.mockConsole.warn,\"warn\"),error:this.getSingleLoggerStyle(b,c,this.mockConsole.error,\"error\")}},a}();module$node_modules$lines_logger$lib$index.default.LoggerFactory=LoggerFactory$$module$node_modules$lines_logger$lib$index;let logWorkletMain$$module$src$logger,logWorkletWorker$$module$src$logger,logSABMain$$module$src$logger,logSABWorker$$module$src$logger,logVANMain$$module$src$logger,logVANWorker$$module$src$logger,logOldSpnMain$$module$src$logger,logOldSpnWorker$$module$src$logger,logIndex$$module$src$logger,logSPNMainSingle$$module$src$logger,logSinglethreadWorkletMain$$module$src$logger,logSinglethreadWorkletWorker$$module$src$logger,logCommonUtils$$module$src$logger,logWasmModule$$module$src$logger,logMidiRequest$$module$src$logger;\\nconst isProd$$module$src$logger=1;logWorkletMain$$module$src$logger=a=>b=>{};logWorkletWorker$$module$src$logger=a=>b=>{};logSABMain$$module$src$logger=a=>b=>{};logSABWorker$$module$src$logger=a=>b=>{};logVANMain$$module$src$logger=a=>b=>{};logVANWorker$$module$src$logger=a=>b=>{};logOldSpnMain$$module$src$logger=a=>b=>{};logOldSpnWorker$$module$src$logger=a=>b=>{};logIndex$$module$src$logger=a=>b=>{};logSPNMainSingle$$module$src$logger=a=>b=>{};\\nlogSinglethreadWorkletMain$$module$src$logger=a=>b=>{};logSinglethreadWorkletWorker$$module$src$logger=a=>b=>{};logCommonUtils$$module$src$logger=a=>b=>{};logWasmModule$$module$src$logger=a=>b=>{};logMidiRequest$$module$src$logger=a=>b=>{};var $jscompDefaultExport$$module$src$logger=a=>b=>{},module$src$logger={};module$src$logger.default=$jscompDefaultExport$$module$src$logger;module$src$logger.logCommonUtils=logCommonUtils$$module$src$logger;module$src$logger.logIndex=logIndex$$module$src$logger;\\nmodule$src$logger.logMidiRequest=logMidiRequest$$module$src$logger;module$src$logger.logOldSpnMain=logOldSpnMain$$module$src$logger;module$src$logger.logOldSpnWorker=logOldSpnWorker$$module$src$logger;module$src$logger.logSABMain=logSABMain$$module$src$logger;module$src$logger.logSABWorker=logSABWorker$$module$src$logger;module$src$logger.logSPNMainSingle=logSPNMainSingle$$module$src$logger;module$src$logger.logSinglethreadWorkletMain=logSinglethreadWorkletMain$$module$src$logger;\\nmodule$src$logger.logSinglethreadWorkletWorker=logSinglethreadWorkletWorker$$module$src$logger;module$src$logger.logVANMain=logVANMain$$module$src$logger;module$src$logger.logVANWorker=logVANWorker$$module$src$logger;module$src$logger.logWasmModule=logWasmModule$$module$src$logger;module$src$logger.logWorkletMain=logWorkletMain$$module$src$logger;module$src$logger.logWorkletWorker=logWorkletWorker$$module$src$logger;const DEFAULT_BUFFER_LEN$$module$src$constants=128,MAX_CHANNELS$$module$src$constants=32,RING_BUFFER_SIZE$$module$src$constants=16384,MIDI_BUFFER_SIZE$$module$src$constants=1024,MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants=3,CALLBACK_DATA_BUFFER_SIZE$$module$src$constants=16384,initialSharedState$$module$src$constants=[0,4096,0,0,0,0,-1,-1,-1,-1,0,DEFAULT_BUFFER_LEN$$module$src$constants,0,0,0,0,0,0,0,0],AUDIO_STATE$$module$src$constants={CSOUND_LOCK:0,FRAMES_REQUESTED:1,IS_PERFORMING:2,IS_RENDERING:3,\\nIS_PAUSED:4,STOP:5,SAMPLE_RATE:6,KSMPS:7,NCHNLS:8,NCHNLS_I:9,IS_REQUESTING_MIC:10,BUFFER_LEN:11,OUTPUT_READ_INDEX:12,OUTPUT_WRITE_INDEX:13,AVAIL_IN_BUFS:14,AVAIL_OUT_BUFS:15,IS_REQUESTING_RTMIDI:16,RTMIDI_INDEX:17,AVAIL_RTMIDI_EVENTS:18,HAS_PENDING_CALLBACKS:19},DATA_TYPE$$module$src$constants={NUMBER:0,STRING:1,FLOAT_32:2,FLOAT_64:3};var module$src$constants={};module$src$constants.AUDIO_STATE=AUDIO_STATE$$module$src$constants;module$src$constants.CALLBACK_DATA_BUFFER_SIZE=CALLBACK_DATA_BUFFER_SIZE$$module$src$constants;\\nmodule$src$constants.DATA_TYPE=DATA_TYPE$$module$src$constants;module$src$constants.DEFAULT_BUFFER_LEN=DEFAULT_BUFFER_LEN$$module$src$constants;module$src$constants.MAX_CHANNELS=MAX_CHANNELS$$module$src$constants;module$src$constants.MIDI_BUFFER_PAYLOAD_SIZE=MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants;module$src$constants.MIDI_BUFFER_SIZE=MIDI_BUFFER_SIZE$$module$src$constants;module$src$constants.RING_BUFFER_SIZE=RING_BUFFER_SIZE$$module$src$constants;module$src$constants.initialSharedState=initialSharedState$$module$src$constants;const handleCsoundStart$$module$src$workers$common_utils=(a,b,c,d,e)=>f=>{const {csound:g}=f,h=1===b.csoundShouldDaemonize(g);h&&(b.csoundSetOption(g,\"--daemon\"),b.csoundSetOption(g,\"-odac\"));const k=b.csoundStart(g),l=b.csoundGetOutputName(g)||\"test.wav\";logCommonUtils$$module$src$logger(`handleCsoundStart: actual csoundStart result ${k}, outputName: ${l}`)();0!==k&&a.post(`error: csoundStart failed while trying to render ${l},`+\" look out for errors in options and syntax\");setTimeout(()=>{const m=\\nb._isRequestingRtMidiInput(g);if(h||m||l.includes(\"dac\"))d(f);else if(a.broadcastPlayState(\"renderStarted\"),e)e(f);else for(;0===b.csoundPerformKsmps(g););},0);return k},instantiateAudioPacket$$module$src$workers$common_utils=(a,b)=>{const c=[];for(let d=0;d<a;d++)c.push(new Float64Array(b));return c},renderFunction$$module$src$workers$common_utils=({libraryCsound:a,workerMessagePort:b})=>async({csound:c})=>{const d=a.csoundGetKr(c);let e=0,f=0;for(;(\"renderStarted\"===b.vanillaWorkerState||\"renderStarted\"===\\nb.workerState)&&0===e;)e=a.csoundPerformKsmps(c),f+=1,\"function\"===typeof setTimeout&&0===e&&0===f%(2*d)&&await new Promise(g=>setTimeout(g,0));b.broadcastPlayState(\"renderEnded\")};var module$src$workers$common_utils={};module$src$workers$common_utils.handleCsoundStart=handleCsoundStart$$module$src$workers$common_utils;module$src$workers$common_utils.instantiateAudioPacket=instantiateAudioPacket$$module$src$workers$common_utils;module$src$workers$common_utils.renderFunction=renderFunction$$module$src$workers$common_utils;const csoundCreate$$module$src$modules$instantiation=a=>()=>a.exports.csoundCreateWasi();csoundCreate$$module$src$modules$instantiation.toString=()=>\"create = async () => undefined;\";const csoundDestroy$$module$src$modules$instantiation=a=>b=>a.exports.csoundDestroy(b);csoundDestroy$$module$src$modules$instantiation.toString=()=>\"destroy = async () => undefined;\";const csoundGetAPIVersion$$module$src$modules$instantiation=a=>()=>a.exports.csoundGetAPIVersion();\\ncsoundGetAPIVersion$$module$src$modules$instantiation.toString=()=>\"getAPIVersion = async () => Number;\";const csoundGetVersion$$module$src$modules$instantiation=a=>()=>a.exports.csoundGetVersion();csoundGetVersion$$module$src$modules$instantiation.toString=()=>\"getVersion = async () => Number;\";const csoundInitialize$$module$src$modules$instantiation=a=>(b,c)=>a.exports.csoundInitialize(c);csoundInitialize$$module$src$modules$instantiation.toString=()=>\"initialize = async () => Number;\";\\nvar module$src$modules$instantiation={};module$src$modules$instantiation.csoundCreate=csoundCreate$$module$src$modules$instantiation;module$src$modules$instantiation.csoundDestroy=csoundDestroy$$module$src$modules$instantiation;module$src$modules$instantiation.csoundGetAPIVersion=csoundGetAPIVersion$$module$src$modules$instantiation;module$src$modules$instantiation.csoundGetVersion=csoundGetVersion$$module$src$modules$instantiation;module$src$modules$instantiation.csoundInitialize=csoundInitialize$$module$src$modules$instantiation;const WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders=!1;function TextEncoderPoly$$module$src$utils$text_encoders(){this.encoding=\"utf8\";return this}TextEncoderPoly$$module$src$utils$text_encoders.prototype.encode=function(a){if(\"string\"!==typeof a)throw new TypeError(\"passed argument must be of type string \"+a+\" \"+typeof a);a=unescape(encodeURIComponent(a));const b=new Uint8Array(a.length);[...a].forEach(function(c,d){b[d]=c.codePointAt(0)});return b};\\nfunction TextDecoderPoly$$module$src$utils$text_encoders(){this.encoding=\"utf8\";this.ignoreBOM=!1;this.trimNull=a=>{const b=a.indexOf(\"\\\\x00\");return-1<b?a.slice(0,Math.max(0,b)):a};this.decode=function(a,b){if(void 0===a)return\"\";if(\"boolean\"!==typeof(void 0!==b&&\"stream\"in b?b.stream:!1))throw new TypeError(\"stream option must be boolean\");if(ArrayBuffer.isView(a)){a=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);const c=Array.from({length:a.length});a.forEach(function(d,e){c[e]=String.fromCodePoint(d)});\\nreturn this.trimNull(c.join(\"\"))}throw new TypeError(\"passed argument must be an array buffer view\");}}\\nconst decoder$$module$src$utils$text_encoders=WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders?new TextDecoderPoly$$module$src$utils$text_encoders:new TextDecoder(\"utf8\"),encoder$$module$src$utils$text_encoders=WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders?new TextEncoderPoly$$module$src$utils$text_encoders:new TextEncoder(\"utf8\"),uint2String$$module$src$utils$text_encoders=a=>decoder$$module$src$utils$text_encoders.decode(a);var module$src$utils$text_encoders={};\\nmodule$src$utils$text_encoders.decoder=decoder$$module$src$utils$text_encoders;module$src$utils$text_encoders.encoder=encoder$$module$src$utils$text_encoders;module$src$utils$text_encoders.uint2String=uint2String$$module$src$utils$text_encoders;const trimNull$$module$src$utils$trim_null=a=>{const b=a.indexOf(\"\\\\x00\");return-1<b?a.substr(0,b):a};var module$src$utils$trim_null={};module$src$utils$trim_null.trimNull=trimNull$$module$src$utils$trim_null;const freeStringPtr$$module$src$utils$string_pointers=(a,b)=>{a.exports.freeStringMem(b)},ptr2string$$module$src$utils$string_pointers=(a,b)=>{({buffer:a}=a.wasi.memory);b=new Uint8Array(a,b);b=uint2String$$module$src$utils$text_encoders(b);return trimNull$$module$src$utils$trim_null(b)},string2ptr$$module$src$utils$string_pointers=(a,b)=>{if(\"string\"!==typeof b)console.error(\"Expected string but got\",typeof b);else{b=encoder$$module$src$utils$text_encoders.encode(b);var c=a.exports.allocStringMem(b.length);\\n({buffer:a}=a.wasi.memory);(new Uint8Array(a,c,b.length+1)).set(b);return c}};var module$src$utils$string_pointers={};module$src$utils$string_pointers.freeStringPtr=freeStringPtr$$module$src$utils$string_pointers;module$src$utils$string_pointers.ptr2string=ptr2string$$module$src$utils$string_pointers;module$src$utils$string_pointers.string2ptr=string2ptr$$module$src$utils$string_pointers;const csoundParseOrc$$module$src$modules$performance=a=>(b,c)=>a.exports.csoundParseOrc(b,c);csoundParseOrc$$module$src$modules$performance.toString=()=>\"parseOrc = async (orchestra) => Object;\";const csoundCompileTree$$module$src$modules$performance=a=>(b,c)=>a.exports.csoundCompileTree(b,c);csoundCompileTree$$module$src$modules$performance.toString=()=>\"compileTree = async (tree) => Number;\";\\nconst csoundCompileOrc$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundCompileOrc(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundCompileOrc$$module$src$modules$performance.toString=()=>\"compileOrc = async (orchestra) => Number;\";\\nconst csoundEvalCode$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundEvalCode(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundEvalCode$$module$src$modules$performance.toString=()=>\"csoundEvalCode = async (orchestra) => Number;\";const csoundStart$$module$src$modules$performance=a=>b=>a.exports.csoundStartWasi(b);csoundStart$$module$src$modules$performance.toString=()=>\"start = async () => Number;\";\\nconst csoundCompileCsd$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);let d;try{d=a.exports.csoundCompileCsd(b,c)}catch(e){console.error(e)}freeStringPtr$$module$src$utils$string_pointers(a,c);return d};csoundCompileCsd$$module$src$modules$performance.toString=()=>\"compileCsd = async (path) => Number;\";\\nconst csoundCompileCsdText$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundCompileCsdText(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundCompileCsdText$$module$src$modules$performance.toString=()=>\"compileCsdText = async (csoundDocument) => Number;\";const csoundPerform$$module$src$modules$performance=a=>b=>a.exports.csoundPerform(b);csoundPerform$$module$src$modules$performance.toString=()=>\"perform = async () => Number;\";\\nconst csoundPerformKsmps$$module$src$modules$performance=a=>b=>a.exports.csoundPerformKsmpsWasi(b);csoundPerformKsmps$$module$src$modules$performance.toString=()=>\"performKsmps = async (csound) => Number;\";const csoundPerformBuffer$$module$src$modules$performance=a=>b=>a.exports.csoundPerformBuffer(b);csoundPerformBuffer$$module$src$modules$performance.toString=()=>\"performBuffer = async (csound) => Number;\";const csoundStop$$module$src$modules$performance=a=>b=>a.exports.csoundStop(b);\\ncsoundStop$$module$src$modules$performance.toString=()=>\"stop = async () => undefined;\";const csoundCleanup$$module$src$modules$performance=a=>b=>a.exports.csoundCleanup(b);csoundCleanup$$module$src$modules$performance.toString=()=>\"cleanup = async () => Number;\";const csoundReset$$module$src$modules$performance=a=>b=>a.exports.csoundResetWasi(b);csoundReset$$module$src$modules$performance.toString=()=>\"reset = async () => Number;\";var module$src$modules$performance={};\\nmodule$src$modules$performance.csoundCleanup=csoundCleanup$$module$src$modules$performance;module$src$modules$performance.csoundCompileCsd=csoundCompileCsd$$module$src$modules$performance;module$src$modules$performance.csoundCompileCsdText=csoundCompileCsdText$$module$src$modules$performance;module$src$modules$performance.csoundCompileOrc=csoundCompileOrc$$module$src$modules$performance;module$src$modules$performance.csoundCompileTree=csoundCompileTree$$module$src$modules$performance;\\nmodule$src$modules$performance.csoundEvalCode=csoundEvalCode$$module$src$modules$performance;module$src$modules$performance.csoundParseOrc=csoundParseOrc$$module$src$modules$performance;module$src$modules$performance.csoundPerform=csoundPerform$$module$src$modules$performance;module$src$modules$performance.csoundPerformBuffer=csoundPerformBuffer$$module$src$modules$performance;module$src$modules$performance.csoundPerformKsmps=csoundPerformKsmps$$module$src$modules$performance;\\nmodule$src$modules$performance.csoundReset=csoundReset$$module$src$modules$performance;module$src$modules$performance.csoundStart=csoundStart$$module$src$modules$performance;module$src$modules$performance.csoundStop=csoundStop$$module$src$modules$performance;const sizeOfPrimitive$$module$src$utils$native_sizes={int:4,MYFLT:4,char:1},sizeofStruct$$module$src$utils$native_sizes=a=>a.reduce((b,[,c,...d])=>b+(\"char\"===c?sizeOfPrimitive$$module$src$utils$native_sizes[c]*d[0]:sizeOfPrimitive$$module$src$utils$native_sizes[c]),0);var module$src$utils$native_sizes={};module$src$utils$native_sizes.sizeOfPrimitive=sizeOfPrimitive$$module$src$utils$native_sizes;module$src$utils$native_sizes.sizeofStruct=sizeofStruct$$module$src$utils$native_sizes;const structBufferToObject$$module$src$utils$structure_buffer_to_object=(a,b)=>{[a]=a.reduce(([c,d],[e,f,...g])=>{g=\"char\"===f?sizeOfPrimitive$$module$src$utils$native_sizes[f]*g[0]:sizeOfPrimitive$$module$src$utils$native_sizes[f];f=\"char\"===f?trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(b.subarray(d,g)))||\"\":b[d];c[e]=f;return[c,d+g]},[{},0]);return a};var module$src$utils$structure_buffer_to_object={};\\nmodule$src$utils$structure_buffer_to_object.structBufferToObject=structBufferToObject$$module$src$utils$structure_buffer_to_object;const CSOUND_PARAMS$$module$src$structures=[[\"debug_mode\",\"int\"],[\"buffer_frames\",\"int\"],[\"hardware_buffer_frames\",\"int\"],[\"displays\",\"int\"],[\"ascii_graphs\",\"int\"],[\"postscript_graphs\",\"int\"],[\"message_level\",\"int\"],[\"tempo\",\"int\"],[\"ring_bell\",\"int\"],[\"use_cscore\",\"int\"],[\"terminate_on_midi\",\"int\"],[\"heartbeat\",\"int\"],[\"defer_gen01_load\",\"int\"],[\"midi_key\",\"int\"],[\"midi_key_cps\",\"int\"],[\"midi_key_oct\",\"int\"],[\"midi_key_pch\",\"int\"],[\"midi_velocity\",\"int\"],[\"midi_velocity_amp\",\"int\"],[\"no_default_paths\",\\n\"int\"],[\"number_of_threads\",\"int\"],[\"syntax_check_only\",\"int\"],[\"csd_line_counts\",\"int\"],[\"compute_weights\",\"int\"],[\"realtime_mode\",\"int\"],[\"sample_accurate\",\"int\"],[\"sample_rate_override\",\"MYFLT\"],[\"control_rate_override\",\"MYFLT\"],[\"nchnls_override\",\"int\"],[\"nchnls_i_override\",\"int\"],[\"e0dbfs_override\",\"MYFLT\"],[\"daemon\",\"int\"],[\"ksmps_override\",\"int\"],[\"FFT_library\",\"int\"]],CS_MIDIDEVICE$$module$src$structures=[[\"device_name\",\"char\",64],[\"interface_name\",\"char\",64],[\"device_id\",\"char\",64],[\"midi_module\",\\n\"char\",64],[\"isOutput\",\"int\"]];var module$src$structures={};const csoundGetSr$$module$src$modules$attributes=a=>b=>a.exports.csoundGetSr(b);csoundGetSr$$module$src$modules$attributes.toString=()=>\"getSr = async () => Number;\";const csoundGetKr$$module$src$modules$attributes=a=>b=>a.exports.csoundGetKr(b);csoundGetKr$$module$src$modules$attributes.toString=()=>\"getKr = async () => Number;\";const csoundGetKsmps$$module$src$modules$attributes=a=>b=>a.exports.csoundGetKsmps(b);csoundGetKsmps$$module$src$modules$attributes.toString=()=>\"getKsmps = async () => Number;\";\\nconst csoundGetNchnls$$module$src$modules$attributes=a=>b=>a.exports.csoundGetNchnls(b);csoundGetNchnls$$module$src$modules$attributes.toString=()=>\"getNchnls = async () => Number;\";const csoundGetNchnlsInput$$module$src$modules$attributes=a=>b=>a.exports.csoundGetNchnlsInput(b);csoundGetNchnlsInput$$module$src$modules$attributes.toString=()=>\"getNchnlsInput = async () => Number;\";const csoundGet0dBFS$$module$src$modules$attributes=a=>b=>a.exports.csoundGet0dBFS(b);\\ncsoundGet0dBFS$$module$src$modules$attributes.toString=()=>\"get0dBFS = async () => Number;\";const csoundGetA4$$module$src$modules$attributes=a=>b=>a.exports.csoundGetA4(b);csoundGetA4$$module$src$modules$attributes.toString=()=>\"getA4 = async () => Number;\";const csoundGetCurrentTimeSamples$$module$src$modules$attributes=a=>b=>a.exports.csoundGetCurrentTimeSamples(b);csoundGetCurrentTimeSamples$$module$src$modules$attributes.toString=()=>\"getCurrentTimeSamples = async () => Number;\";\\nconst csoundGetSizeOfMYFLT$$module$src$modules$attributes=a=>b=>a.exports.csoundGetSizeOfMYFLT(b);csoundGetSizeOfMYFLT$$module$src$modules$attributes.toString=()=>\"getSizeOfMYFLT = async () => Number;\";const csoundSetOption$$module$src$modules$attributes=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundSetOption(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundSetOption$$module$src$modules$attributes.toString=()=>\"setOption = async (option) => Number;\";\\nconst csoundSetParams$$module$src$modules$attributes=a=>(b,c)=>{a.exports.csoundSetParams(b,c)};csoundSetParams$$module$src$modules$attributes.toString=()=>\"setParams = async (csoundParams) => undefined;\";\\nconst csoundGetParams$$module$src$modules$attributes=a=>b=>{var {buffer:c}=a.wasi.memory;const d=sizeofStruct$$module$src$utils$native_sizes(CSOUND_PARAMS$$module$src$structures),e=a.exports.allocCsoundParamsStruct();c=new Uint8Array(c,e,d);a.exports.csoundGetParams(b,e);b=structBufferToObject$$module$src$utils$structure_buffer_to_object(CSOUND_PARAMS$$module$src$structures,c);a.exports.freeCsoundParams(e);return b};csoundGetParams$$module$src$modules$attributes.toString=()=>\"getParams = async () => CSOUND_PARAMS;\";\\nconst csoundGetDebug$$module$src$modules$attributes=a=>b=>a.exports.csoundGetDebug(b);csoundGetDebug$$module$src$modules$attributes.toString=()=>\"getDebug = async () => Number;\";const csoundSetDebug$$module$src$modules$attributes=a=>(b,c)=>{a.exports.csoundSetDebug(b,c)};csoundSetDebug$$module$src$modules$attributes.toString=()=>\"setDebug = async (number) => undefined;\";var module$src$modules$attributes={};module$src$modules$attributes.csoundGet0dBFS=csoundGet0dBFS$$module$src$modules$attributes;\\nmodule$src$modules$attributes.csoundGetA4=csoundGetA4$$module$src$modules$attributes;module$src$modules$attributes.csoundGetCurrentTimeSamples=csoundGetCurrentTimeSamples$$module$src$modules$attributes;module$src$modules$attributes.csoundGetDebug=csoundGetDebug$$module$src$modules$attributes;module$src$modules$attributes.csoundGetKr=csoundGetKr$$module$src$modules$attributes;module$src$modules$attributes.csoundGetKsmps=csoundGetKsmps$$module$src$modules$attributes;\\nmodule$src$modules$attributes.csoundGetNchnls=csoundGetNchnls$$module$src$modules$attributes;module$src$modules$attributes.csoundGetNchnlsInput=csoundGetNchnlsInput$$module$src$modules$attributes;module$src$modules$attributes.csoundGetParams=csoundGetParams$$module$src$modules$attributes;module$src$modules$attributes.csoundGetSizeOfMYFLT=csoundGetSizeOfMYFLT$$module$src$modules$attributes;module$src$modules$attributes.csoundGetSr=csoundGetSr$$module$src$modules$attributes;\\nmodule$src$modules$attributes.csoundSetDebug=csoundSetDebug$$module$src$modules$attributes;module$src$modules$attributes.csoundSetOption=csoundSetOption$$module$src$modules$attributes;module$src$modules$attributes.csoundSetParams=csoundSetParams$$module$src$modules$attributes;const csoundGetInputBufferSize$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetInputBufferSize(b);csoundGetInputBufferSize$$module$src$modules$rtaudio.toString=()=>\"getInputBufferSize = async () => Number;\";const csoundGetOutputBufferSize$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetOutputBufferSize(b);csoundGetOutputBufferSize$$module$src$modules$rtaudio.toString=()=>\"getOutputBufferSize = async () => Number;\";const csoundGetInputBuffer$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetInputBuffer(b);\\ncsoundGetInputBuffer$$module$src$modules$rtaudio.toString=()=>\"getInputBuffer = async () => Number;\";const csoundGetOutputBuffer$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetOutputBuffer(b);csoundGetOutputBuffer$$module$src$modules$rtaudio.toString=()=>\"getOutputBuffer = async () => Number;\";const csoundGetSpin$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetSpin(b);csoundGetSpin$$module$src$modules$rtaudio.toString=()=>\"getSpin = async (csound) => Number;\";\\nconst csoundGetSpout$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetSpout(b);csoundGetSpout$$module$src$modules$rtaudio.toString=()=>\"getSpout = async () => Number;\";var module$src$modules$rtaudio={};module$src$modules$rtaudio.csoundGetInputBuffer=csoundGetInputBuffer$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetInputBufferSize=csoundGetInputBufferSize$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetOutputBuffer=csoundGetOutputBuffer$$module$src$modules$rtaudio;\\nmodule$src$modules$rtaudio.csoundGetOutputBufferSize=csoundGetOutputBufferSize$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetSpin=csoundGetSpin$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetSpout=csoundGetSpout$$module$src$modules$rtaudio;function add$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>add$$module$node_modules$rambda$dist$rambda_mjs(a,c):Number(a)+Number(b)}const cloneList$$module$node_modules$rambda$dist$rambda_mjs=a=>Array.prototype.slice.call(a);function curry$$module$node_modules$rambda$dist$rambda_mjs(a,b=[]){return(...c)=>{c=[...b,...c];return c.length>=a.length?a(...c):curry$$module$node_modules$rambda$dist$rambda_mjs(a,c)}}\\nfunction adjustFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d=0>a?c.length+a:a;if(a>=c.length||0>d)return c;a=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);a[d]=b(a[d]);return a}const adjust$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(adjustFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction all$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>all$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(!a(b[c]))return!1;return!0}function allPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(!a[c](...b))return!1;c++}return!0}}function always$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>a}\\nfunction and$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>and$$module$node_modules$rambda$dist$rambda_mjs(a,c):a&&b}function any$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>any$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=0;for(;c<b.length;){if(a(b[c],c))return!0;c++}return!1}\\nfunction anyPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(a[c](...b))return!0;c++}return!1}}function append$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>append$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(\"string\"===typeof b)return b.split(\"\").concat(a);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);c.push(a);return c}\\nfunction apply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>apply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.apply(this,b)}const {isArray:isArray$$module$node_modules$rambda$dist$rambda_mjs}=Array;\\nfunction __findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a,b=0){for(const c in a)!1!==a.hasOwnProperty(c)&&\"constructor\"!==c&&(\"object\"===typeof a[c]&&(b=Math.max(b,__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a[c]))),\"function\"===typeof a[c]&&(b=Math.max(b,a[c].length)));return b}\\nfunction __filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(){const a=[];let b=0;const c=arguments.length;for(;b<c&&\"undefined\"!==typeof arguments[b];)a[b]=arguments[b],b++;return a}\\nfunction __applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){var d=b-c.length;if(1===d)return f=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f));if(2===d)return(f,g)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g));if(3===d)return(f,g,h)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,\\nb,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h));if(4===d)return(f,g,h,k)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h,k));if(4<d)return(...f)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,...f));if(isArray$$module$node_modules$rambda$dist$rambda_mjs(a)){var e=[];d=0;const f=a.length;\\nfor(;d<f;d++){if(\"object\"===typeof a[d]||isArray$$module$node_modules$rambda$dist$rambda_mjs(a[d]))e[d]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[d],b,c);\"function\"===typeof a[d]&&(e[d]=a[d](...c))}return e}d={};for(e in a)!1!==a.hasOwnProperty(e)&&\"constructor\"!==e&&(\"object\"===typeof a[e]?d[e]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[e],b,c):\"function\"===typeof a[e]&&(d[e]=a[e](...c)));return d}\\nfunction applySpec$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a);return 0===c?()=>({}):__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,c,b)}function assocFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return Object.assign({},c,{[a]:b})}const assoc$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction _isInteger$$module$node_modules$rambda$dist$rambda_mjs(a){return a<<0===a}const isInteger$$module$node_modules$rambda$dist$rambda_mjs=Number.isInteger||_isInteger$$module$node_modules$rambda$dist$rambda_mjs;\\nfunction assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d=\"string\"===typeof a?a.split(\".\").map(e=>isInteger$$module$node_modules$rambda$dist$rambda_mjs(Number(e))?Number(e):e):a;if(0===d.length)return b;a=d[0];if(1<d.length){const e=\"object\"===typeof c&&null!==c&&c.hasOwnProperty(a)?c[a]:isInteger$$module$node_modules$rambda$dist$rambda_mjs(d[1])?[]:{};b=assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(d,1),b,e)}return isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)&&\\nisArray$$module$node_modules$rambda$dist$rambda_mjs(c)?(c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c),c[a]=b,c):assoc$$module$node_modules$rambda$dist$rambda_mjs(a,b,c)}const assocPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocPathFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction _curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return function(){var d=0;let e=0;const f=b.length,g=arguments.length,h=Array(f+g);for(;d<f;)h[d]=b[d],d++;for(;e<g;)h[f+e]=arguments[e],e++;d=a-h.length;return h.length>=a?c.apply(this,h):_arity$1$$module$node_modules$rambda$dist$rambda_mjs(d,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,h,c))}}\\nfunction _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};\\ncase 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,l){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,l,m){return b.apply(this,arguments)};default:return function(c,d,e,f,g,h,k,l,m,n){return b.apply(this,arguments)}}}\\nfunction curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>curryN$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(10<a)throw Error(\"First argument to _arity must be a non-negative integer no greater than ten\");return _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,[],b))}\\nfunction bind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>bind$$module$node_modules$rambda$dist$rambda_mjs(a,c):curryN$$module$node_modules$rambda$dist$rambda_mjs(a.length,(...c)=>a.apply(b,c))}function both$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>both$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>a(...c)&&b(...c)}\\nfunction chain$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>chain$$module$node_modules$rambda$dist$rambda_mjs(a,c):[].concat(...b.map(a))}function clampFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(a>b)throw Error(\"min must not be greater than max in clamp(min, max, value)\");if(c>=a&&c<=b)return c;if(c>b)return b;if(c<a)return a}const clamp$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(clampFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction clone$$module$node_modules$rambda$dist$rambda_mjs(a){const b=isArray$$module$node_modules$rambda$dist$rambda_mjs(a)?Array(a.length):{};if(a&&a.getTime)return new Date(a.getTime());for(const c in a){const d=a[c];b[c]=\"object\"===typeof d&&null!==d?d.getTime?new Date(d.getTime()):clone$$module$node_modules$rambda$dist$rambda_mjs(d):d}return b}function complement$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>!a(...b)}\\nclass ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs{constructor(a){this.value=a}}function reduceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(c))throw new TypeError(\"reduce: list must be array or iterable\");let d=0;const e=c.length;for(;d<e;){b=a(b,c[d],d,c);if(b instanceof ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs)return b.value;d++}return b}\\nconst reduce$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(reduceFn$$module$node_modules$rambda$dist$rambda_mjs),reduceStopper$$module$node_modules$rambda$dist$rambda_mjs=a=>new ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs(a);\\nfunction _arity$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};\\ncase 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,l){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,l,m){return b.apply(this,arguments)};case 10:return function(c,d,e,f,g,h,k,l,m,n){return b.apply(this,arguments)};default:throw Error(\"First argument to _arity must be a non-negative integer no greater than ten\");}}\\nfunction _pipe$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(){return b.call(this,a.apply(this,arguments))}}\\nfunction pipe$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error(\"pipe requires at least one argument\");return _arity$$module$node_modules$rambda$dist$rambda_mjs(arguments[0].length,reduceFn$$module$node_modules$rambda$dist$rambda_mjs(_pipe$$module$node_modules$rambda$dist$rambda_mjs,arguments[0],Array.prototype.slice.call(arguments,1,Infinity)))}\\nfunction compose$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error(\"compose requires at least one argument\");return pipe$$module$node_modules$rambda$dist$rambda_mjs.apply(this,Array.prototype.slice.call(arguments,0).reverse())}function concat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>concat$$module$node_modules$rambda$dist$rambda_mjs(a,c):\"string\"===typeof a?`${a}${b}`:[...a,...b]}\\nfunction cond$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>{let c=!1,d;a.forEach(([e,f])=>{!c&&e(b)&&(c=!0,d=f(b))});return d}}const {keys:keys$1$$module$node_modules$rambda$dist$rambda_mjs}=Object;function mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=Array(b.length);for(;d<b.length;)e[d]=c?a(b[d],d):a(b[d]),d++;return e}\\nfunction mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,g);let c=0;const d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b),e=d.length,f={};for(;c<e;){const g=d[c];f[g]=a(b[g],g,b);c++}return f}const mapObjIndexed$$module$node_modules$rambda$dist$rambda_mjs=mapObject$$module$node_modules$rambda$dist$rambda_mjs;\\nfunction map$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>map$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error(INCORRECT_ITERABLE_INPUT);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}\\nfunction max$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>max$$module$node_modules$rambda$dist$rambda_mjs(a,c):b>a?b:a}\\nfunction converge$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>converge$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=reduce$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>max$$module$node_modules$rambda$dist$rambda_mjs(d,e.length),0,b);return curryN$$module$node_modules$rambda$dist$rambda_mjs(c,function(){return a.apply(this,map$$module$node_modules$rambda$dist$rambda_mjs(d=>d.apply(this,arguments),b))})}\\nfunction count$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>count$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?b.filter(c=>a(c)).length:0}function countBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>countBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};b.forEach(d=>{d=a(d);c[d]?c[d]++:c[d]=1});return c}\\nconst dec$$module$node_modules$rambda$dist$rambda_mjs=a=>a-1;function isFalsy$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a||!0===Number.isNaN(a)}function defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c):isFalsy$$module$node_modules$rambda$dist$rambda_mjs(b)?a:b}\\nfunction type$$module$node_modules$rambda$dist$rambda_mjs(a){if(null===a)return\"Null\";if(void 0===a)return\"Undefined\";if(Number.isNaN(a))return\"NaN\";a=Object.prototype.toString.call(a).slice(8,-1);return\"AsyncFunction\"===a?\"Promise\":a}\\nfunction _lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(`Cannot read property \\'indexOf\\' of ${b}`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(![\"Object\",\"Array\",\"NaN\",\"RegExp\"].includes(c))return b.lastIndexOf(a);({length:c}=b);let d=-1;for(;-1<--c&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}\\nfunction _indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(`Cannot read property \\'indexOf\\' of ${b}`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(![\"Object\",\"Array\",\"NaN\",\"RegExp\"].includes(c))return b.indexOf(a);let d=c=-1;const {length:e}=b;for(;++c<e&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}\\nfunction _arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a){const b=[];let c;for(;!(c=a.next()).done;)b.push(c.value);return b}function _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(a.size!==b.size)return!1;a=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a.values());const c=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(b.values());return 0===a.filter(d=>-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,c)).length}\\nfunction parseError$$module$node_modules$rambda$dist$rambda_mjs(a){const b=a.__proto__.toString();return[\"Error\",\"TypeError\"].includes(b)?[b,a.message]:[]}function parseDate$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toDateString?[!0,a.getTime()]:[!1]}function parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a){return a.constructor!==RegExp?[!1]:[!0,a.toString()]}\\nfunction equals$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>equals$$module$node_modules$rambda$dist$rambda_mjs(a,f);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(c!==type$$module$node_modules$rambda$dist$rambda_mjs(b))return!1;if(\"Function\"===c)return void 0===a.name?!1:a.name===b.name;if([\"NaN\",\"Undefined\",\"Null\"].includes(c))return!0;if(\"Number\"===c)return Object.is(-0,a)!==Object.is(-0,b)?!1:a.toString()===b.toString();if([\"String\",\"Boolean\"].includes(c))return a.toString()===\\nb.toString();if(\"Array\"===c){c=Array.from(a);const f=Array.from(b);if(c.toString()!==f.toString())return!1;let g=!0;c.forEach((h,k)=>{g&&(h===f[k]||equals$$module$node_modules$rambda$dist$rambda_mjs(h,f[k])||(g=!1))});return g}var d=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a),e=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseDate$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseDate$$module$node_modules$rambda$dist$rambda_mjs(b);\\nif(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseError$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseError$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[0]===e[0]&&d[1]===e[1]:!1;if(\"Set\"===c)return _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b);if(\"Object\"===c){c=Object.keys(a);if(c.length!==Object.keys(b).length)return!1;let f=!0;c.forEach(g=>{if(f){const h=a[g];g=b[g];h===g||equals$$module$node_modules$rambda$dist$rambda_mjs(h,g)||(f=!1)}});\\nreturn f}return!1}function includes$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>includes$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(\"string\"===typeof b)return b.includes(a);if(!b)throw new TypeError(`Cannot read property \\\\\\'indexOf\\\\\\' of ${b}`);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b):!1}\\nclass _Set$$module$node_modules$rambda$dist$rambda_mjs{constructor(){this.set=new Set;this.items={}}checkUniqueness(a){var b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return[\"Null\",\"Undefined\",\"NaN\"].includes(b)?b in this.items?!1:this.items[b]=!0:[\"Object\",\"Array\"].includes(b)?b in this.items?-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,this.items[b])?(this.items[b].push(a),!0):!1:(this.items[b]=[a],!0):(b=this.set.size,this.set.add(a),this.set.size!==b)}}\\nfunction uniq$$module$node_modules$rambda$dist$rambda_mjs(a){const b=new _Set$$module$node_modules$rambda$dist$rambda_mjs,c=[];a.forEach(d=>{b.checkUniqueness(d)&&c.push(d)});return c}function difference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>difference$$module$node_modules$rambda$dist$rambda_mjs(a,c):uniq$$module$node_modules$rambda$dist$rambda_mjs(a).filter(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b))}\\nfunction dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(null===b||void 0===b)return{};const c={};for(const d in b)c[d]=b[d];delete c[a];return c}function divide$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>divide$$module$node_modules$rambda$dist$rambda_mjs(a,c):a/b}\\nfunction drop$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>drop$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.slice(0<a?a:0)}function dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,c):0<a?b.slice(0,-a):b.slice()}\\nfunction dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(0===b.length)return b;const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(\"function\"!==typeof a)throw Error(`\\'predicate\\' is from wrong type ${typeof a}`);if(!c&&\"string\"!==typeof b)throw Error(`\\'iterable\\' is from wrong type ${typeof b}`);let d=!1;const e=[];let f=b.length;for(;0<f;)f--,d||!1!==a(b[f])?d&&e.push(b[f]):\\n(d=!0,e.push(b[f]));return c?e.reverse():e.reverse().join(\"\")}function dropRepeats$$module$node_modules$rambda$dist$rambda_mjs(a){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(`${a} is not a list`);const b=[];a.reduce((c,d)=>{equals$$module$node_modules$rambda$dist$rambda_mjs(c,d)||b.push(d);return d},void 0);return b}\\nfunction dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(`${b} is not a list`);const c=[];b.reduce((d,e)=>{if(void 0===d)return c.push(e),e;a(d,e)||c.push(e);return e},void 0);return c}\\nfunction dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&\"string\"!==typeof b)throw Error(\"`iterable` is neither list nor a string\");let d=!1;const e=[];let f=-1;for(;f++<b.length-1;)d?e.push(b[f]):a(b[f])||(d||(d=!0),e.push(b[f]));return c?e:e.join(\"\")}\\nfunction either$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>either$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>!(!a(...c)&&!b(...c))}\\nfunction endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(\"string\"===typeof b)return b.endsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;const c=b.length-a.length;let d=!0;return a.filter((e,f)=>{if(!d)return!1;(e=equals$$module$node_modules$rambda$dist$rambda_mjs(e,b[f+c]))||(d=!1);return e}).length===a.length}\\nfunction prop$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>prop$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(b)return b[a]}function eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a,b),prop$$module$node_modules$rambda$dist$rambda_mjs(a,c))}const eqProps$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapArray$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>\"Function\"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c,b,!0)}\\nfunction evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapObject$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>{if(\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(c)){const e=type$$module$node_modules$rambda$dist$rambda_mjs(a[d]);return\"Function\"===e?a[d](c):\"Object\"===e?evolve$$module$node_modules$rambda$dist$rambda_mjs(a[d],c):c}return\"Function\"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c},b)}\\nfunction evolve$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>evolve$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=type$$module$node_modules$rambda$dist$rambda_mjs(a),d=type$$module$node_modules$rambda$dist$rambda_mjs(b);if(d!==c)throw Error(\"iterableType !== rulesType\");if(![\"Object\",\"Array\"].includes(c))throw Error(`\\'iterable\\' and \\'rules\\' are from wrong type ${c}`);return\"Object\"===d?evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b):evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,\\nb)}function F$$module$node_modules$rambda$dist$rambda_mjs(){return!1}function filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(const d in b)a(b[d],d,b)&&(c[d]=b[d]);return c}function filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=b.length,f=[];for(;d<e;)(c?a(b[d],d):a(b[d]))&&f.push(b[d]),d++;return f}\\nfunction filter$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>filter$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error(\"Incorrect iterable input\");return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,!1):filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}\\nfunction find$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>find$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=0;const d=b.length;for(;c<d;){const e=b[c];if(a(e))return e;c++}}function findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;let d=-1;for(;++d<c;)if(a(b[d]))return d;return-1}\\nfunction findLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLast$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return b[c]}function findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return c;return-1}\\nfunction flatten$$module$node_modules$rambda$dist$rambda_mjs(a,b){b=void 0===b?[]:b;for(let c=0;c<a.length;c++)isArray$$module$node_modules$rambda$dist$rambda_mjs(a[c])?flatten$$module$node_modules$rambda$dist$rambda_mjs(a[c],b):b.push(a[c]);return b}\\nfunction flipFn$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{if(1===b.length)return c=>a(c,b[0]);if(2===b.length)return a(b[1],b[0]);if(3===b.length)return a(b[1],b[0],b[2]);if(4===b.length)return a(b[1],b[0],b[2],b[3]);throw Error(\"R.flip doesn\\'t work with arity > 4\");}}function flip$$module$node_modules$rambda$dist$rambda_mjs(a){return flipFn$$module$node_modules$rambda$dist$rambda_mjs(a)}\\nfunction forEach$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>forEach$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(void 0!==b){if(isArray$$module$node_modules$rambda$dist$rambda_mjs(b))for(var c=0,d=b.length;c<d;)a(b[c]),c++;else{c=0;d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b);const e=d.length;for(;c<e;){const f=d[c];a(b[f],f,b);c++}}return b}}\\nfunction fromPairs$$module$node_modules$rambda$dist$rambda_mjs(a){const b={};a.forEach(([c,d])=>b[c]=d);return b}function groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};for(let d=0;d<b.length;d++){const e=b[d],f=a(e);c[f]||(c[f]=[]);c[f].push(e)}return c}\\nfunction groupWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw new TypeError(\"list.reduce is not a function\");const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);if(1===b.length)return[c];const d=[];let e=[];c.reduce((f,g,h)=>{if(0===h)return g;const k=a(f,g),l=0===e.length;h=h===b.length-1;if(k)return l&&e.push(f),e.push(g),h&&d.push(e),g;if(l)return d.push([f]),h&&d.push([g]),g;d.push(e);h&&d.push([g]);e=[];return g},\\nvoid 0);return d}function has$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>has$$module$node_modules$rambda$dist$rambda_mjs(a,c):b?b.hasOwnProperty(a):!1}function createPath$$module$node_modules$rambda$dist$rambda_mjs(a,b=\".\"){return\"string\"===typeof a?a.split(b):a}\\nfunction path$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>path$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=b,d=0,e=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);d<e.length;){if(null===c||void 0===c||null===c[e[d]])return;c=c[e[d]];d++}return c}}\\nfunction hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,c):void 0!==path$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function head$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a[0]||\"\":a[0]}function _objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b}const objectIs$$module$node_modules$rambda$dist$rambda_mjs=Object.is||_objectIs$$module$node_modules$rambda$dist$rambda_mjs;\\nfunction identical$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>identical$$module$node_modules$rambda$dist$rambda_mjs(a,c):objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function identity$$module$node_modules$rambda$dist$rambda_mjs(a){return a}function ifElseFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return(...d)=>!0===(\"boolean\"===typeof a?a:a(...d))?b(...d):c(...d)}\\nconst ifElse$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(ifElseFn$$module$node_modules$rambda$dist$rambda_mjs),inc$$module$node_modules$rambda$dist$rambda_mjs=a=>a+1;function indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(let d=0;d<b.length;d++){const e=b[d];c[path$$module$node_modules$rambda$dist$rambda_mjs(a,e)]=e}return c}\\nfunction indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(\"string\"===typeof a)return indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b);const c={};for(let d=0;d<b.length;d++){const e=b[d];c[a(e)]=e}return c}\\nfunction indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=-1,{length:e}=a;c=c>e?e:c;0>c&&(c+=e);e=b>c?0:c-b>>>0;b>>>=0;for(c=Array(e);++d<e;)c[d]=a[d+b];return c}\\nfunction init$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a.slice(0,-1):a.length?baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,0,-1):[]}function intersection$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>intersection$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b)}\\nfunction intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,f);let c=-1;const d=b.length,e=[];for(;++c<d;)c===d-1?e.push(b[c]):e.push(b[c],a);return e}function is$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>is$$module$node_modules$rambda$dist$rambda_mjs(a,c):null!=b&&b.constructor===a||b instanceof a}\\nfunction isEmpty$$module$node_modules$rambda$dist$rambda_mjs(a){const b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return[\"Undefined\",\"NaN\",\"Number\",\"Null\"].includes(b)?!1:a?\"Object\"===b?0===Object.keys(a).length:\"Array\"===b?0===a.length:!1:!0}function isNil$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a}\\nfunction join$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>join$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.join(a)}function juxt$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>a.map(c=>c(...b))}function keys$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.keys(a)}function last$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a[a.length-1]||\"\":a[a.length-1]}\\nfunction lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function length$$module$node_modules$rambda$dist$rambda_mjs(a){return isArray$$module$node_modules$rambda$dist$rambda_mjs(a)||\"string\"===typeof a?a.length:NaN}\\nfunction lens$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(c){return function(d){return c(a(d)).map(e=>b(e,d))}}}function nth$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>nth$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=0>a?b.length+a:a;return\"[object String]\"===Object.prototype.toString.call(b)?b.charAt(c):b[c]}\\nfunction updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);return-1===a?c.fill(b,a):c.fill(b,a,a+1)}const update$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(updateFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction lensIndex$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(nth$$module$node_modules$rambda$dist$rambda_mjs(a),update$$module$node_modules$rambda$dist$rambda_mjs(a))}function lensPath$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a),assocPath$$module$node_modules$rambda$dist$rambda_mjs(a))}\\nfunction lensProp$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a),assoc$$module$node_modules$rambda$dist$rambda_mjs(a))}function match$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>match$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=b.match(a);return null===c?[]:c}\\nfunction mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,c):!isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)||!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||1>b?NaN:(a%b+b)%b}function maxByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)>a(b)?c:b}const maxBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(maxByFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction sum$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>b+c,0)}function mean$$module$node_modules$rambda$dist$rambda_mjs(a){return sum$$module$node_modules$rambda$dist$rambda_mjs(a)/a.length}function median$$module$node_modules$rambda$dist$rambda_mjs(a){var b=a.length;if(0===b)return NaN;const c=2-b%2;b=(b-c)/2;return mean$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,0).sort((d,e)=>d===e?0:d<e?-1:1).slice(b,b+c))}\\nfunction mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,c):Object.assign({},a||{},b||{})}function mergeAll$$module$node_modules$rambda$dist$rambda_mjs(a){let b={};map$$module$node_modules$rambda$dist$rambda_mjs(c=>{b=mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,c)},a);return b}\\nfunction mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=clone$$module$node_modules$rambda$dist$rambda_mjs(a);Object.keys(b).forEach(d=>{\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(b[d])?\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?c[d]=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a[d],b[d]):c[d]=b[d]:c[d]=b[d]});return c}\\nfunction mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,c):mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,a)}function mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d={};Object.keys(b).forEach(e=>{d[e]=void 0===c[e]?b[e]:a(b[e],c[e])});Object.keys(c).forEach(e=>{void 0===d[e]&&(d[e]=void 0===b[e]?c[e]:a(b[e],c[e]))});return d}\\nconst mergeWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs);function min$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>min$$module$node_modules$rambda$dist$rambda_mjs(a,c):b<a?b:a}function minByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)<a(b)?c:b}const minBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(minByFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction ownKeys$$module$node_modules$rambda$dist$rambda_mjs(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}));c.push.apply(c,d)}return c}\\nfunction _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c),!0).forEach(function(d){_defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,d,c[d])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c)).forEach(function(d){Object.defineProperty(a,\\nd,Object.getOwnPropertyDescriptor(c,d))})}return a}function _defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c;return a}function isIterable$$module$node_modules$rambda$dist$rambda_mjs(a){return Array.isArray(a)||\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(a)}\\nfunction modifyFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return isIterable$$module$node_modules$rambda$dist$rambda_mjs(c)&&void 0!==c[a]?isArray$$module$node_modules$rambda$dist$rambda_mjs(c)?updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b(c[a]),c):_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a]:b(c[a])}):c}const modify$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){a=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);if(1===a.length)return _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a[0]]:b(c[a[0]])});if(void 0===path$$module$node_modules$rambda$dist$rambda_mjs(a,c))return c;b=modifyPath$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,1),b,c[a[0]]);return b===c[a[0]]?c:assoc$$module$node_modules$rambda$dist$rambda_mjs(a[0],\\nb,c)}const modifyPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs);function modulo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>modulo$$module$node_modules$rambda$dist$rambda_mjs(a,c):a%b}\\nfunction moveFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(0>a||0>b)throw Error(\"Rambda.move does not support negative indexes\");if(a>c.length-1||b>c.length-1)return c;const d=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);d[a]=c[b];d[b]=c[a];return d}const move$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(moveFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction multiply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>multiply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a*b}function negate$$module$node_modules$rambda$dist$rambda_mjs(a){return-a}function none$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>none$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(a(b[c]))return!1;return!0}\\nfunction not$$module$node_modules$rambda$dist$rambda_mjs(a){return!a}function objOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>objOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):{[a]:b}}function of$$module$node_modules$rambda$dist$rambda_mjs(a){return[a]}\\nfunction omit$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>omit$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(null!==b&&void 0!==b){var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,\",\"),d={};for(const e in b)c.includes(e)||(d[e]=b[e]);return d}}\\nfunction on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,d){return 3===arguments.length?e=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,e):2===arguments.length?(e,f)=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,e,f):a(b(c),b(d))}function onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b){let c;return function(){a&&(c=a.apply(b||this,arguments),a=null);return c}}\\nfunction once$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length){const c=onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b);return curry$$module$node_modules$rambda$dist$rambda_mjs(c)}return onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function or$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>or$$module$node_modules$rambda$dist$rambda_mjs(a,c):a||b}const Identity$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(a))});\\nfunction overFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(d=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(d)))(c).x}const over$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(overFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction partial$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=a.length;return(...d)=>b.length+d.length>=c?a(...b,...d):partial$$module$node_modules$rambda$dist$rambda_mjs(a,...[...b,...d])}function partialObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return c=>a(mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(c,b))}\\nfunction partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={},d={};Object.entries(b).forEach(([e,f])=>{a(f,e)?c[e]=f:d[e]=f});return[c,d]}function partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){const d=[],e=[];let f=-1;for(;f++<b.length-1;)(c?a(b[f],f):a(b[f]))?d.push(b[f]):e.push(b[f]);return[d,e]}\\nfunction partition$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>partition$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}\\nfunction pathEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a,c),b)}const pathEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathEqFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction pathOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,path$$module$node_modules$rambda$dist$rambda_mjs(b,c))}const pathOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathOrFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction paths$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>paths$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.map(c=>path$$module$node_modules$rambda$dist$rambda_mjs(c,b))}\\nfunction pick$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pick$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,\",\"),d={},e=0;e<c.length;)c[e]in b&&(d[c[e]]=b[c[e]]),e++;return d}}\\nfunction pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,\",\"),d={},e=0;e<c.length;)d[c[e]]=c[e]in b?b[c[e]]:void 0,e++;return d}}\\nfunction pluck$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>pluck$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=[];map$$module$node_modules$rambda$dist$rambda_mjs(d=>{void 0!==d[a]&&c.push(d[a])},b);return c}function prepend$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>prepend$$module$node_modules$rambda$dist$rambda_mjs(a,c):\"string\"===typeof b?[a].concat(b.split(\"\")):[a].concat(b)}\\nconst product$$module$node_modules$rambda$dist$rambda_mjs=reduce$$module$node_modules$rambda$dist$rambda_mjs(multiply$$module$node_modules$rambda$dist$rambda_mjs,1);function propEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?equals$$module$node_modules$rambda$dist$rambda_mjs(b,prop$$module$node_modules$rambda$dist$rambda_mjs(a,c)):!1}const propEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propEqFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction propIsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return is$$module$node_modules$rambda$dist$rambda_mjs(a,c[b])}const propIs$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propIsFn$$module$node_modules$rambda$dist$rambda_mjs);function propOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c[b]):a}const propOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propOrFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction props$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>props$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(\"propsToPick is not a list\");return mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>b[c],a)}function propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(prop$$module$node_modules$rambda$dist$rambda_mjs(b,c))}\\nconst propSatisfies$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction range$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>range$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(Number.isNaN(Number(a))||Number.isNaN(Number(b)))throw new TypeError(\"Both arguments to range must be numbers\");if(b<a)return[];const c=b-a,d=Array(c);for(let e=0;e<c;e++)d[e]=a+e;return d}\\nfunction reject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>reject$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!a(c),b)}function repeat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>repeat$$module$node_modules$rambda$dist$rambda_mjs(a,c):Array(b).fill(a)}function replaceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.replace(a,b)}\\nconst replace$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(replaceFn$$module$node_modules$rambda$dist$rambda_mjs);function reverse$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a.split(\"\").reverse().join(\"\"):a.slice().reverse()}function setFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return over$$module$node_modules$rambda$dist$rambda_mjs(a,always$$module$node_modules$rambda$dist$rambda_mjs(b),c)}\\nconst set$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(setFn$$module$node_modules$rambda$dist$rambda_mjs);function sliceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.slice(a,b)}const slice$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(sliceFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction sort$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sort$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort(a)}function sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort((c,d)=>{c=a(c);d=a(d);return c===d?0:c<d?-1:1})}\\nfunction split$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>split$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.split(a)}function maybe$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b=a&&\"Function\"===type$$module$node_modules$rambda$dist$rambda_mjs(b)?b():b;c=a||\"Function\"!==type$$module$node_modules$rambda$dist$rambda_mjs(c)?c:c();return a?b:c}\\nfunction take$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>take$$module$node_modules$rambda$dist$rambda_mjs(a,c):0>a?b.slice():\"string\"===typeof b?b.slice(0,a):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,0,a)}\\nfunction splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!b)throw new TypeError(`Cannot read property \\'slice\\' of ${b}`);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b)&&\"string\"!==typeof b)return[[],[]];const c=maybe$$module$node_modules$rambda$dist$rambda_mjs(0>a,0>b.length+a?0:b.length+a,a);return[take$$module$node_modules$rambda$dist$rambda_mjs(c,b),drop$$module$node_modules$rambda$dist$rambda_mjs(c,\\nb)]}function splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(1>a)throw Error(\"First argument to splitEvery must be a positive integer\");const c=[];let d=0;for(;d<b.length;)c.push(b.slice(d,d+=a));return c}\\nfunction splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(!b)throw new TypeError(`Cannot read property \\'length\\' of ${b}`);const c=[],d=[];let e=!1,f=-1;for(;f++<b.length-1;)e?d.push(b[f]):a(b[f])?(d.push(b[f]),e=!0):c.push(b[f]);return[c,d]}\\nfunction startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(\"string\"===typeof b)return b.startsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;let c=!0;return a.filter((d,e)=>{if(!c)return!1;(d=equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]))||(c=!1);return d}).length===a.length}\\nfunction subtract$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>subtract$$module$node_modules$rambda$dist$rambda_mjs(a,c):a-b}\\nfunction symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,c):concat$$module$node_modules$rambda$dist$rambda_mjs(filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b),a),filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b))}\\nfunction T$$module$node_modules$rambda$dist$rambda_mjs(){return!0}function tail$$module$node_modules$rambda$dist$rambda_mjs(a){return drop$$module$node_modules$rambda$dist$rambda_mjs(1,a)}\\nfunction takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;if(0>a)return b.slice();let d=a>c?c:a;return\"string\"===typeof b?b.slice(c-d):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,c-d,c)}\\nfunction takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(0===b.length)return b;let c=!1;const d=[];let e=b.length;for(;!c||0===e;)e--,!1===a(b[e])?c=!0:c||d.push(b[e]);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?d.reverse():d.reverse().join(\"\")}\\nfunction takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&\"string\"!==typeof b)throw Error(\"`iterable` is neither list nor a string\");let d=!0;const e=[];let f=-1;for(;f++<b.length-1;)a(b[f])?d&&e.push(b[f]):d&&(d=!1);return c?e:e.join(\"\")}\\nfunction tap$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>tap$$module$node_modules$rambda$dist$rambda_mjs(a,c);a(b);return b}function test$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>test$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(\"string\"===typeof a)throw new TypeError(`\\\\u2018test\\\\u2019 requires a value of type RegExp as its first argument; received \"${a}\"`);return-1!==b.search(a)}\\nfunction times$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>times$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||0>b)throw new RangeError(\"n must be an integer\");return map$$module$node_modules$rambda$dist$rambda_mjs(a,range$$module$node_modules$rambda$dist$rambda_mjs(0,b))}function toLower$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toLowerCase()}\\nfunction toPairs$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.entries(a)}function toString$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toString()}function toUpper$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toUpperCase()}function transpose$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>{c.forEach((d,e)=>isArray$$module$node_modules$rambda$dist$rambda_mjs(b[e])?b[e].push(d):b.push([d]));return b},[])}\\nfunction trim$$module$node_modules$rambda$dist$rambda_mjs(a){return a.trim()}const isFunction$$module$node_modules$rambda$dist$rambda_mjs=a=>[\"Promise\",\"Function\"].includes(type$$module$node_modules$rambda$dist$rambda_mjs(a));\\nfunction tryCatch$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isFunction$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(`R.tryCatch | fn \\'${a}\\'`);const c=isFunction$$module$node_modules$rambda$dist$rambda_mjs(b);return(...d)=>{try{return a(...d)}catch(e){return c?b(e,...d):b}}}function unapply$$module$node_modules$rambda$dist$rambda_mjs(a){return function(...b){return a.call(this,b)}}\\nfunction union$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>union$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(a);b.forEach(d=>{includes$$module$node_modules$rambda$dist$rambda_mjs(d,a)||c.push(d)});return c}\\nfunction uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=new Set;return b.filter(d=>{if(c.has(a(d)))return!1;c.add(a(d));return!0})}function includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=!1,e=-1;for(;++e<c.length&&!d;)a(b,c[e])&&(d=!0);return d}\\nfunction uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=-1;const d=[];for(;++c<b.length;){const e=b[c];includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,e,d)||d.push(e)}return d}function unless$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unless$$module$node_modules$rambda$dist$rambda_mjs(a,c):c=>a(c)?c:b(c)}\\nfunction unwind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unwind$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b[a])?mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},b),{},{[a]:c}),b[a]):[b]}\\nfunction values$$module$node_modules$rambda$dist$rambda_mjs(a){return\"Object\"!==type$$module$node_modules$rambda$dist$rambda_mjs(a)?[]:Object.values(a)}const Const$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Const$$module$node_modules$rambda$dist$rambda_mjs(a)});function view$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>view$$module$node_modules$rambda$dist$rambda_mjs(a,c):a(Const$$module$node_modules$rambda$dist$rambda_mjs)(b).x}\\nfunction whenFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)?b(c):c}const when$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(whenFn$$module$node_modules$rambda$dist$rambda_mjs);function where$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return d=>where$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=!0;for(const d in a){if(!c)continue;const e=a[d](b[d]);c&&!1===e&&(c=!1)}return c}\\nfunction whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return c=>whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(const c in a)if(a[c](b[c]))return!0;return!1}\\nfunction whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=filter$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]),a);return Object.keys(c).length===Object.keys(a).length}\\nfunction without$$module$node_modules$rambda$dist$rambda_mjs(a,b){return void 0===b?c=>without$$module$node_modules$rambda$dist$rambda_mjs(a,c):reduce$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,a)?c:c.concat(d),[],b)}function xor$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>xor$$module$node_modules$rambda$dist$rambda_mjs(a,c):!!a&&!b||!!b&&!a}\\nfunction zip$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>zip$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=[],d=Math.min(a.length,b.length);for(let e=0;e<d;e++)c[e]=[a[e],b[e]];return c}function zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,c):take$$module$node_modules$rambda$dist$rambda_mjs(b.length,a).reduce((c,d,e)=>{c[d]=b[e];return c},{})}\\nfunction zipWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return take$$module$node_modules$rambda$dist$rambda_mjs(b.length>c.length?c.length:b.length,b).map((d,e)=>a(d,c[e]))}const zipWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(zipWithFn$$module$node_modules$rambda$dist$rambda_mjs);var module$node_modules$rambda$dist$rambda_mjs={};module$node_modules$rambda$dist$rambda_mjs.F=F$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.T=T$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.__findHighestArity=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._arity=_arity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._indexOf=_indexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._lastIndexOf=_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs._pipe=_pipe$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.add=add$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.adjust=adjust$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.all=all$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.allPass=allPass$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.always=always$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.and=and$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.any=any$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.anyPass=anyPass$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.append=append$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.apply=apply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.applySpec=applySpec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assoc=assoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assocPath=assocPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.bind=bind$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.both=both$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.chain=chain$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clamp=clamp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clone=clone$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.complement=complement$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.compose=compose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.concat=concat$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.cond=cond$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.converge=converge$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.count=count$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.countBy=countBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curry=curry$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curryN=curryN$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dec=dec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.defaultTo=defaultTo$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.difference=difference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dissoc=dissoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.divide=divide$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.drop=drop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropLast=dropLast$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.dropLastWhile=dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeats=dropRepeats$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeatsWith=dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropWhile=dropWhile$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.either=either$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.endsWith=endsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.eqProps=eqProps$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.equals=equals$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolve=evolve$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.evolveArray=evolveArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolveObject=evolveObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filter=filter$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterArray=filterArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterObject=filterObject$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.find=find$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findIndex=findIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLast=findLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLastIndex=findLastIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.flatten=flatten$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.flip=flip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.forEach=forEach$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.fromPairs=fromPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupBy=groupBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupWith=groupWith$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.has=has$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.hasPath=hasPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.head=head$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identical=identical$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identity=identity$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.ifElse=ifElse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.inc=inc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.includes=includes$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexBy=indexBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexOf=indexOf$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.init=init$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersection=intersection$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersperse=intersperse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.is=is$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.isEmpty=isEmpty$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.isNil=isNil$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.join=join$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.juxt=juxt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.keys=keys$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.last=last$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.lastIndexOf=lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.length=length$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lens=lens$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensIndex=lensIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensPath=lensPath$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.lensProp=lensProp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.map=map$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapArray=mapArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObjIndexed=mapObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObject=mapObject$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.match=match$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mathMod=mathMod$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.max=max$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxBy=maxBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxByFn=maxByFn$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.mean=mean$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.median=median$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.merge=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeAll=mergeAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeDeepRight=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.mergeLeft=mergeLeft$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeRight=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeWith=mergeWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.min=min$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.minBy=minBy$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.minByFn=minByFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modify=modify$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPath=modifyPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPathFn=modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modulo=modulo$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.move=move$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.multiply=multiply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.negate=negate$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.none=none$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.not=not$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.nth=nth$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.objOf=objOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.of=of$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.omit=omit$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.on=on$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.once=once$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.or=or$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.over=over$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partial=partial$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partialObject=partialObject$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.partition=partition$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionArray=partitionArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionObject=partitionObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.path=path$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pathEq=pathEq$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.pathOr=pathOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.paths=paths$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pick=pick$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pickAll=pickAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pipe=pipe$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.pluck=pluck$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prepend=prepend$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.product=product$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prop=prop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propEq=propEq$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.propIs=propIs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propOr=propOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propSatisfies=propSatisfies$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.props=props$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.range=range$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.reduce=reduce$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceFn=reduceFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceStopper=reduceStopper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reject=reject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.repeat=repeat$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.replace=replace$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reverse=reverse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.set=set$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.slice=slice$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sort=sort$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.sortBy=sortBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.split=split$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitAt=splitAt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitEvery=splitEvery$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitWhen=splitWhen$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.startsWith=startsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.subtract=subtract$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sum=sum$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.symmetricDifference=symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tail=tail$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.take=take$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLast=takeLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLastWhile=takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeWhile=takeWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tap=tap$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.test=test$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.times=times$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toLower=toLower$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toPairs=toPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toString=toString$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.toUpper=toUpper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.transpose=transpose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.trim=trim$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tryCatch=tryCatch$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.type=type$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.unapply=unapply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.union=union$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniq=uniq$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqBy=uniqBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqWith=uniqWith$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.unless=unless$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.unwind=unwind$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.update=update$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.updateFn=updateFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.values=values$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.view=view$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.when=when$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.where=where$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereAny=whereAny$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereEq=whereEq$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.without=without$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.xor=xor$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zip=zip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipObj=zipObj$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipWith=zipWith$$module$node_modules$rambda$dist$rambda_mjs;const csoundSetMidiCallbacks$$module$src$modules$rtmidi=a=>b=>{a.exports.csoundSetMidiCallbacks(b)},csoundGetMIDIDevList$$module$src$modules$rtmidi=a=>(b,c)=>{const {buffer:d}=a.wasi.memory,e=a.exports.csoundGetMIDIDevList(b,void 0,c?1:0);if(0===e)return[];const f=sizeofStruct$$module$src$utils$native_sizes(CS_MIDIDEVICE$$module$src$structures),g=a.exports.allocCsMidiDeviceStruct(e);a.exports.csoundGetMIDIDevList(b,g,c?1:0);const h=new Uint8Array(d,g,f*e);b=range$$module$node_modules$rambda$dist$rambda_mjs(0,\\ne).map(k=>structBufferToObject$$module$src$utils$structure_buffer_to_object(CS_MIDIDEVICE$$module$src$structures,h.subarray(k*f,f)));a.exports.freeCsMidiDeviceStruct(g);return b};csoundGetMIDIDevList$$module$src$modules$rtmidi.toString=()=>\"getMIDIDevList = async (isOutput) => Object;\";\\nconst csoundGetRtMidiName$$module$src$modules$rtmidi=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.getRtMidiName(b);c=new Uint8Array(c,b,128);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||\"\"};csoundGetRtMidiName$$module$src$modules$rtmidi.toString=()=>\"getRtMidiName = async () => String;\";\\nconst csoundGetMidiOutFileName$$module$src$modules$rtmidi=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.getMidiOutFileName(b);c=new Uint8Array(c,b,128);b&&0<b.length&&freeStringPtr$$module$src$utils$string_pointers(a,b);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||\"\"},_isRequestingRtMidiInput$$module$src$modules$rtmidi=a=>b=>a.exports.isRequestingRtMidiInput(b),csoundPushMidiMessage$$module$src$modules$rtmidi=a=>(b,c,d,e)=>{a.exports.pushMidiMessage(b,\\nc,d,e)};csoundPushMidiMessage$$module$src$modules$rtmidi.toString=()=>\"midiMessage = async (status, data1, data2) => undefined;\";var module$src$modules$rtmidi={};module$src$modules$rtmidi._isRequestingRtMidiInput=_isRequestingRtMidiInput$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundGetMIDIDevList=csoundGetMIDIDevList$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundGetMidiOutFileName=csoundGetMidiOutFileName$$module$src$modules$rtmidi;\\nmodule$src$modules$rtmidi.csoundGetRtMidiName=csoundGetRtMidiName$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundPushMidiMessage=csoundPushMidiMessage$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundSetMidiCallbacks=csoundSetMidiCallbacks$$module$src$modules$rtmidi;const csoundInputMessage$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundInputMessage(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundInputMessage$$module$src$modules$control_events.toString=()=>\"inputMessage = async (scoreEvent) => Number;\";\\nconst csoundInputMessageAsync$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundInputMessageAsync(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundInputMessageAsync$$module$src$modules$control_events.toString=()=>\"inputMessageAsync = async (scoreEvent) => Number;\";\\nconst csoundGetControlChannel$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundGetControlChannelWasi(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundGetControlChannel$$module$src$modules$control_events.toString=()=>\"getControlChannel = async (channelName) => Number;\";\\nconst csoundSetControlChannel$$module$src$modules$control_events=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);a.exports.csoundSetControlChannel(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c)};csoundSetControlChannel$$module$src$modules$control_events.toString=()=>\"setControlChannel = async (channelName, value) => void;\";\\nconst csoundGetStringChannel$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundGetStringChannelWasi(b,c);const d=ptr2string$$module$src$utils$string_pointers(a,b);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,b);return d};csoundGetStringChannel$$module$src$modules$control_events.toString=()=>\"getStringChannel = async (channelName) => String;\";\\nconst csoundSetStringChannel$$module$src$modules$control_events=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);d=string2ptr$$module$src$utils$string_pointers(a,d);a.exports.csoundSetStringChannel(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,d)};csoundSetStringChannel$$module$src$modules$control_events.toString=()=>\"setStringChannel = async (channelName, value) => void;\";var module$src$modules$control_events={};\\nmodule$src$modules$control_events.csoundGetControlChannel=csoundGetControlChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundGetStringChannel=csoundGetStringChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundInputMessage=csoundInputMessage$$module$src$modules$control_events;module$src$modules$control_events.csoundInputMessageAsync=csoundInputMessageAsync$$module$src$modules$control_events;\\nmodule$src$modules$control_events.csoundSetControlChannel=csoundSetControlChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundSetStringChannel=csoundSetStringChannel$$module$src$modules$control_events;const csoundGetOutputName$$module$src$modules$general_io=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.csoundGetOutputName(b);c=new Uint8Array(c,b,64);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||\"\"};csoundGetOutputName$$module$src$modules$general_io.toString=()=>\"getOutputName = async () => String;\";\\nconst csoundGetInputName$$module$src$modules$general_io=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.csoundGetInputName(b);c=new Uint8Array(c,b,64);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||\"\"};csoundGetInputName$$module$src$modules$general_io.toString=()=>\"getInputName = async (csound) => String;\";var module$src$modules$general_io={};module$src$modules$general_io.csoundGetInputName=csoundGetInputName$$module$src$modules$general_io;\\nmodule$src$modules$general_io.csoundGetOutputName=csoundGetOutputName$$module$src$modules$general_io;const csoundAppendEnv$$module$src$modules$extra=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);d=string2ptr$$module$src$utils$string_pointers(a,d);b=a.exports.csoundAppendEnv(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,d);return b};csoundAppendEnv$$module$src$modules$extra.toString=()=>\"appendEnv = async (csound, variable, value) => Number;\";const csoundShouldDaemonize$$module$src$modules$extra=a=>b=>a.exports.csoundShouldDaemonize(b);\\nvar module$src$modules$extra={};module$src$modules$extra.csoundAppendEnv=csoundAppendEnv$$module$src$modules$extra;module$src$modules$extra.csoundShouldDaemonize=csoundShouldDaemonize$$module$src$modules$extra;const csoundIsScorePending$$module$src$modules$score_handling=a=>b=>a.exports.csoundIsScorePending(b);csoundIsScorePending$$module$src$modules$score_handling.toString=()=>\"isScorePending = async () => Number;\";const csoundSetScorePending$$module$src$modules$score_handling=a=>(b,c)=>a.exports.csoundSetScorePending(b,c);csoundSetScorePending$$module$src$modules$score_handling.toString=()=>\"setScorePending = async (pending) => Number;\";\\nconst csoundReadScore$$module$src$modules$score_handling=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundReadScore(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundReadScore$$module$src$modules$score_handling.toString=()=>\"readScore = async (score) => Number;\";const csoundGetScoreTime$$module$src$modules$score_handling=a=>b=>a.exports.csoundGetScoreTime(b);csoundGetScoreTime$$module$src$modules$score_handling.toString=()=>\"getScoreTime = async () => Number;\";\\nconst csoundGetScoreOffsetSeconds$$module$src$modules$score_handling=a=>b=>a.exports.csoundGetScoreOffsetSeconds(b);csoundGetScoreOffsetSeconds$$module$src$modules$score_handling.toString=()=>\"getScoreOffsetSeconds = async () => Number;\";const csoundSetScoreOffsetSeconds$$module$src$modules$score_handling=a=>(b,c)=>a.exports.csoundSetScoreOffsetSeconds(b,c);csoundSetScoreOffsetSeconds$$module$src$modules$score_handling.toString=()=>\"setScoreOffsetSeconds = async () => Number;\";\\nconst csoundRewindScore$$module$src$modules$score_handling=a=>b=>a.exports.csoundRewindScore(b);csoundRewindScore$$module$src$modules$score_handling.toString=()=>\"rewindScore = async () => undefined;\";var module$src$modules$score_handling={};module$src$modules$score_handling.csoundGetScoreOffsetSeconds=csoundGetScoreOffsetSeconds$$module$src$modules$score_handling;module$src$modules$score_handling.csoundGetScoreTime=csoundGetScoreTime$$module$src$modules$score_handling;\\nmodule$src$modules$score_handling.csoundIsScorePending=csoundIsScorePending$$module$src$modules$score_handling;module$src$modules$score_handling.csoundReadScore=csoundReadScore$$module$src$modules$score_handling;module$src$modules$score_handling.csoundRewindScore=csoundRewindScore$$module$src$modules$score_handling;module$src$modules$score_handling.csoundSetScoreOffsetSeconds=csoundSetScoreOffsetSeconds$$module$src$modules$score_handling;module$src$modules$score_handling.csoundSetScorePending=csoundSetScorePending$$module$src$modules$score_handling;const csoundTableLength$$module$src$modules$table=a=>(b,c)=>a.exports.csoundTableLength(b,c);csoundTableLength$$module$src$modules$table.toString=()=>\"tableLength = async (tableNum) => Number;\";const csoundTableGet$$module$src$modules$table=a=>(b,c,d)=>a.exports.csoundTableGet(b,c,d);csoundTableGet$$module$src$modules$table.toString=()=>\"tableGet = async (tableNum, tableIndex) => Number;\";const csoundTableSet$$module$src$modules$table=a=>(b,c,d,e)=>a.exports.csoundTableSet(b,c,d,e);\\ncsoundTableSet$$module$src$modules$table.toString=()=>\"tableSet = async (tableNum, tableIndex, value) => undefined;\";const csoundTableCopyIn$$module$src$modules$table=a=>(b,c,d)=>{const e=a.exports.allocFloatArray(d.length);(new Float64Array(a.wasi.memory.buffer,e,d.length)).set(d);a.exports.csoundTableCopyIn(b,c,e);a.exports.freeFloatArrayMem(e)};csoundTableCopyIn$$module$src$modules$table.toString=()=>\"tableCopyIn = async (tableNum, float64Array) => undefined;\";\\nconst csoundTableCopyOut$$module$src$modules$table=a=>(b,c)=>{var d=a.exports.csoundTableLength(b,c);if(0<d){const e=a.exports.allocFloatArray(d);a.exports.csoundTableCopyOut(b,c,e);({buffer:b}=a.wasi.memory);d=new Float64Array(b,e,d);a.exports.freeFloatArrayMem(e);return Float64Array.from(d)}};csoundTableCopyOut$$module$src$modules$table.toString=()=>\"tableCopyOut = async (tableNum) => ?Float64Array;\";const csoundGetTable$$module$src$modules$table=csoundTableCopyOut$$module$src$modules$table;\\ncsoundTableCopyOut$$module$src$modules$table.toString=csoundTableCopyOut$$module$src$modules$table.toString;const csoundGetTableArgs$$module$src$modules$table=a=>(b,c)=>{const d=a.exports.allocFloatArray(1024);a.exports.csoundGetTableArgs(b,d,c);({buffer:b}=a.wasi.memory);b=new Float64Array(b,d,1024);a.exports.freeFloatArrayMem(d);return b};csoundGetTableArgs$$module$src$modules$table.toString=()=>\"getTableArgs = async (tableNum) => ?Float64Array;\";\\nconst csoundIsNamedGEN$$module$src$modules$table=a=>(b,c)=>a.exports.csoundIsNamedGEN(b,c);csoundIsNamedGEN$$module$src$modules$table.toString=()=>\"isNamedGEN = async (tableNum) => number;\";const csoundGetNamedGEN$$module$src$modules$table=a=>(b,c)=>{var d=a.exports.csoundIsNamedGEN(b,c);if(0<d){const e=a.exports.allocStringMem(d);a.exports.csoundGetNamedGEN(b,e,c,d);({buffer:b}=a.wasi.memory);d=new Uint8Array(b,e,d);return uint2String$$module$src$utils$text_encoders(d)}};\\ncsoundGetNamedGEN$$module$src$modules$table.toString=()=>\"getNamedGEN = async (tableNum) => ?string;\";var module$src$modules$table={};module$src$modules$table.csoundGetNamedGEN=csoundGetNamedGEN$$module$src$modules$table;module$src$modules$table.csoundGetTable=csoundTableCopyOut$$module$src$modules$table;module$src$modules$table.csoundGetTableArgs=csoundGetTableArgs$$module$src$modules$table;module$src$modules$table.csoundIsNamedGEN=csoundIsNamedGEN$$module$src$modules$table;\\nmodule$src$modules$table.csoundTableCopyIn=csoundTableCopyIn$$module$src$modules$table;module$src$modules$table.csoundTableCopyOut=csoundTableCopyOut$$module$src$modules$table;module$src$modules$table.csoundTableGet=csoundTableGet$$module$src$modules$table;module$src$modules$table.csoundTableLength=csoundTableLength$$module$src$modules$table;module$src$modules$table.csoundTableSet=csoundTableSet$$module$src$modules$table;function writeFile$$module$src$filesystem$worker_fs(a){return(b,c,d)=>{b=\"string\"===typeof d?encoder$$module$src$utils$text_encoders.encode(d):d;a.wasi.writeFile(c,b)}}writeFile$$module$src$filesystem$worker_fs.toString=()=>\"async (path, data) => void\";function appendFile$$module$src$filesystem$worker_fs(a){return(b,c,d)=>{b=\"string\"===typeof d?encoder$$module$src$utils$text_encoders.encode(d):d;a.wasi.appendFile(c,b)}}appendFile$$module$src$filesystem$worker_fs.toString=()=>\"async (path, data) => void\";\\nfunction readFile$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.readFile(c)}readFile$$module$src$filesystem$worker_fs.toString=()=>\"async (path) => ?Uint8Array\";function unlink$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.unlink(c)}unlink$$module$src$filesystem$worker_fs.toString=()=>\"async (path) => void\";function readdir$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.readdir(c)}readdir$$module$src$filesystem$worker_fs.toString=()=>\"async (path) => string[]\";\\nfunction mkdir$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.mkdir(c)}mkdir$$module$src$filesystem$worker_fs.toString=()=>\"async (path) => void\";var module$src$filesystem$worker_fs={};module$src$filesystem$worker_fs.appendFile=appendFile$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.mkdir=mkdir$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.readFile=readFile$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.readdir=readdir$$module$src$filesystem$worker_fs;\\nmodule$src$filesystem$worker_fs.unlink=unlink$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.writeFile=writeFile$$module$src$filesystem$worker_fs;const api$$module$src$libcsound={csoundCreate:csoundCreate$$module$src$modules$instantiation,csoundDestroy:csoundDestroy$$module$src$modules$instantiation,csoundGetAPIVersion:csoundGetAPIVersion$$module$src$modules$instantiation,csoundGetVersion:csoundGetVersion$$module$src$modules$instantiation,csoundInitialize:csoundInitialize$$module$src$modules$instantiation,csoundParseOrc:csoundParseOrc$$module$src$modules$performance,csoundCompileTree:csoundCompileTree$$module$src$modules$performance,csoundCompileOrc:csoundCompileOrc$$module$src$modules$performance,\\ncsoundEvalCode:csoundEvalCode$$module$src$modules$performance,csoundStart:csoundStart$$module$src$modules$performance,csoundCompileCsd:csoundCompileCsd$$module$src$modules$performance,csoundCompileCsdText:csoundCompileCsdText$$module$src$modules$performance,csoundPerform:csoundPerform$$module$src$modules$performance,csoundPerformKsmps:csoundPerformKsmps$$module$src$modules$performance,csoundPerformBuffer:csoundPerformBuffer$$module$src$modules$performance,csoundStop:csoundStop$$module$src$modules$performance,\\ncsoundCleanup:csoundCleanup$$module$src$modules$performance,csoundReset:csoundReset$$module$src$modules$performance,csoundGetSr:csoundGetSr$$module$src$modules$attributes,csoundGetKr:csoundGetKr$$module$src$modules$attributes,csoundGetKsmps:csoundGetKsmps$$module$src$modules$attributes,csoundGetNchnls:csoundGetNchnls$$module$src$modules$attributes,csoundGetNchnlsInput:csoundGetNchnlsInput$$module$src$modules$attributes,csoundGet0dBFS:csoundGet0dBFS$$module$src$modules$attributes,csoundGetA4:csoundGetA4$$module$src$modules$attributes,\\ncsoundGetCurrentTimeSamples:csoundGetCurrentTimeSamples$$module$src$modules$attributes,csoundGetSizeOfMYFLT:csoundGetSizeOfMYFLT$$module$src$modules$attributes,csoundSetOption:csoundSetOption$$module$src$modules$attributes,csoundSetParams:csoundSetParams$$module$src$modules$attributes,csoundGetParams:csoundGetParams$$module$src$modules$attributes,csoundGetDebug:csoundGetDebug$$module$src$modules$attributes,csoundSetDebug:csoundSetDebug$$module$src$modules$attributes,csoundGetInputBufferSize:csoundGetInputBufferSize$$module$src$modules$rtaudio,\\ncsoundGetOutputBufferSize:csoundGetOutputBufferSize$$module$src$modules$rtaudio,csoundGetInputBuffer:csoundGetInputBuffer$$module$src$modules$rtaudio,csoundGetOutputBuffer:csoundGetOutputBuffer$$module$src$modules$rtaudio,csoundGetSpin:csoundGetSpin$$module$src$modules$rtaudio,csoundGetSpout:csoundGetSpout$$module$src$modules$rtaudio,csoundGetMIDIDevList:csoundGetMIDIDevList$$module$src$modules$rtmidi,csoundSetMidiCallbacks:csoundSetMidiCallbacks$$module$src$modules$rtmidi,csoundGetRtMidiName:csoundGetRtMidiName$$module$src$modules$rtmidi,\\ncsoundGetMidiOutFileName:csoundGetMidiOutFileName$$module$src$modules$rtmidi,csoundPushMidiMessage:csoundPushMidiMessage$$module$src$modules$rtmidi,_isRequestingRtMidiInput:_isRequestingRtMidiInput$$module$src$modules$rtmidi,csoundInputMessage:csoundInputMessage$$module$src$modules$control_events,csoundInputMessageAsync:csoundInputMessageAsync$$module$src$modules$control_events,csoundGetControlChannel:csoundGetControlChannel$$module$src$modules$control_events,csoundSetControlChannel:csoundSetControlChannel$$module$src$modules$control_events,\\ncsoundGetStringChannel:csoundGetStringChannel$$module$src$modules$control_events,csoundSetStringChannel:csoundSetStringChannel$$module$src$modules$control_events,csoundGetInputName:csoundGetInputName$$module$src$modules$general_io,csoundGetOutputName:csoundGetOutputName$$module$src$modules$general_io,csoundAppendEnv:csoundAppendEnv$$module$src$modules$extra,csoundShouldDaemonize:csoundShouldDaemonize$$module$src$modules$extra,csoundIsScorePending:csoundIsScorePending$$module$src$modules$score_handling,\\ncsoundSetScorePending:csoundSetScorePending$$module$src$modules$score_handling,csoundReadScore:csoundReadScore$$module$src$modules$score_handling,csoundGetScoreTime:csoundGetScoreTime$$module$src$modules$score_handling,csoundGetScoreOffsetSeconds:csoundGetScoreOffsetSeconds$$module$src$modules$score_handling,csoundSetScoreOffsetSeconds:csoundSetScoreOffsetSeconds$$module$src$modules$score_handling,csoundRewindScore:csoundRewindScore$$module$src$modules$score_handling,csoundTableLength:csoundTableLength$$module$src$modules$table,\\ncsoundTableGet:csoundTableGet$$module$src$modules$table,csoundTableSet:csoundTableSet$$module$src$modules$table,csoundTableCopyIn:csoundTableCopyIn$$module$src$modules$table,csoundTableCopyOut:csoundTableCopyOut$$module$src$modules$table,csoundGetTable:csoundTableCopyOut$$module$src$modules$table,csoundGetTableArgs:csoundGetTableArgs$$module$src$modules$table,csoundIsNamedGEN:csoundIsNamedGEN$$module$src$modules$table,csoundGetNamedGEN:csoundGetNamedGEN$$module$src$modules$table,fs:module$src$filesystem$worker_fs};\\nvar $jscompDefaultExport$$module$src$libcsound=function(a){return mergeAll$$module$node_modules$rambda$dist$rambda_mjs([reduce$$module$node_modules$rambda$dist$rambda_mjs((b,c)=>assoc$$module$node_modules$rambda$dist$rambda_mjs(c,api$$module$src$libcsound[c](a),b),{},keys$$module$node_modules$rambda$dist$rambda_mjs(dissoc$$module$node_modules$rambda$dist$rambda_mjs(\"fs\")(api$$module$src$libcsound))),reduce$$module$node_modules$rambda$dist$rambda_mjs((b,c)=>assoc$$module$node_modules$rambda$dist$rambda_mjs(c,\\napi$$module$src$libcsound.fs[c](a),b),{},keys$$module$node_modules$rambda$dist$rambda_mjs(module$src$filesystem$worker_fs))])},module$src$libcsound={};module$src$libcsound.api=api$$module$src$libcsound;module$src$libcsound.default=$jscompDefaultExport$$module$src$libcsound;const dlinit$$module$src$dlinit=(a,b,c,d)=>{if(b.exports.csoundModuleInit){var e=new WebAssembly.Global({value:\"i32\",mutable:!0},0),f=new WebAssembly.Global({value:\"i32\",mutable:!0},0),g=new WebAssembly.Global({value:\"i32\",mutable:!0},0);const h=new WebAssembly.Global({value:\"i32\",mutable:!0},0);let k=c.length;\"function\"===typeof b.exports.csoundModuleCreate&&(c.grow(1),e.value=k,c.set(k,b.exports.csoundModuleCreate),k+=1);\"function\"===typeof b.exports.csoundModuleInit&&(c.grow(1),f.value=k,c.set(k,\\nb.exports.csoundModuleInit),k+=1);\"function\"===typeof b.exports.csoundModuleDestroy&&(c.grow(1),g.value=k,c.set(k,b.exports.csoundModuleDestroy),k+=1);\"function\"===typeof b.exports.csoundModuleErrorCodeToString&&(c.grow(1),h.value=k,c.set(k,b.exports.csoundModuleErrorCodeToString));a.exports.csoundWasiLoadPlugin(d,e,f,g,h)}else b.exports.csound_opcode_init||b.exports.csound_fgen_init?(e=new WebAssembly.Global({value:\"i32\",mutable:!0},0),f=new WebAssembly.Global({value:\"i32\",mutable:!0},0),g=c.length,\\n\"function\"===typeof b.exports.csound_opcode_init&&(e.value=g,c.grow(1),c.set(g,b.exports.csound_opcode_init),g+=1),\"function\"===typeof b.exports.csound_fgen_init&&(f.value=g,c.grow(1),c.set(g,b.exports.csound_fgen_init)),a.exports.csoundWasiLoadOpcodeLibrary(d,f,e)):console.error(\"Plugin doesn\\'t export nececcary functions to quality as csound plugin.\")};var module$src$dlinit={};module$src$dlinit.dlinit=dlinit$$module$src$dlinit;void 0!==goog.global&&(goog.global={});goog.global.BigInt||(goog.global.BigInt=void 0===BigInt?Number:BigInt);\\nconst WASI_ESUCCESS$$module$src$filesystem$constants=0,WASI_E2BIG$$module$src$filesystem$constants=1,WASI_EACCES$$module$src$filesystem$constants=2,WASI_EADDRINUSE$$module$src$filesystem$constants=3,WASI_EADDRNOTAVAIL$$module$src$filesystem$constants=4,WASI_EAFNOSUPPORT$$module$src$filesystem$constants=5,WASI_EAGAIN$$module$src$filesystem$constants=6,WASI_EALREADY$$module$src$filesystem$constants=7,WASI_EBADF$$module$src$filesystem$constants=8,WASI_EBADMSG$$module$src$filesystem$constants=9,WASI_EBUSY$$module$src$filesystem$constants=\\n10,WASI_ECANCELED$$module$src$filesystem$constants=11,WASI_ECHILD$$module$src$filesystem$constants=12,WASI_ECONNABORTED$$module$src$filesystem$constants=13,WASI_ECONNREFUSED$$module$src$filesystem$constants=14,WASI_ECONNRESET$$module$src$filesystem$constants=15,WASI_EDEADLK$$module$src$filesystem$constants=16,WASI_EDESTADDRREQ$$module$src$filesystem$constants=17,WASI_EDOM$$module$src$filesystem$constants=18,WASI_EDQUOT$$module$src$filesystem$constants=19,WASI_EEXIST$$module$src$filesystem$constants=\\n20,WASI_EFAULT$$module$src$filesystem$constants=21,WASI_EFBIG$$module$src$filesystem$constants=22,WASI_EHOSTUNREACH$$module$src$filesystem$constants=23,WASI_EIDRM$$module$src$filesystem$constants=24,WASI_EILSEQ$$module$src$filesystem$constants=25,WASI_EINPROGRESS$$module$src$filesystem$constants=26,WASI_EINTR$$module$src$filesystem$constants=27,WASI_EINVAL$$module$src$filesystem$constants=28,WASI_EIO$$module$src$filesystem$constants=29,WASI_EISCONN$$module$src$filesystem$constants=30,WASI_EISDIR$$module$src$filesystem$constants=\\n31,WASI_ELOOP$$module$src$filesystem$constants=32,WASI_EMFILE$$module$src$filesystem$constants=33,WASI_EMLINK$$module$src$filesystem$constants=34,WASI_EMSGSIZE$$module$src$filesystem$constants=35,WASI_EMULTIHOP$$module$src$filesystem$constants=36,WASI_ENAMETOOLONG$$module$src$filesystem$constants=37,WASI_ENETDOWN$$module$src$filesystem$constants=38,WASI_ENETRESET$$module$src$filesystem$constants=39,WASI_ENETUNREACH$$module$src$filesystem$constants=40,WASI_ENFILE$$module$src$filesystem$constants=41,\\nWASI_ENOBUFS$$module$src$filesystem$constants=42,WASI_ENODEV$$module$src$filesystem$constants=43,WASI_ENOENT$$module$src$filesystem$constants=44,WASI_ENOEXEC$$module$src$filesystem$constants=45,WASI_ENOLCK$$module$src$filesystem$constants=46,WASI_ENOLINK$$module$src$filesystem$constants=47,WASI_ENOMEM$$module$src$filesystem$constants=48,WASI_ENOMSG$$module$src$filesystem$constants=49,WASI_ENOPROTOOPT$$module$src$filesystem$constants=50,WASI_ENOSPC$$module$src$filesystem$constants=51,WASI_ENOSYS$$module$src$filesystem$constants=\\n52,WASI_ENOTCONN$$module$src$filesystem$constants=53,WASI_ENOTDIR$$module$src$filesystem$constants=54,WASI_ENOTEMPTY$$module$src$filesystem$constants=55,WASI_ENOTRECOVERABLE$$module$src$filesystem$constants=56,WASI_ENOTSOCK$$module$src$filesystem$constants=57,WASI_ENOTSUP$$module$src$filesystem$constants=58,WASI_ENOTTY$$module$src$filesystem$constants=59,WASI_ENXIO$$module$src$filesystem$constants=60,WASI_EOVERFLOW$$module$src$filesystem$constants=61,WASI_EOWNERDEAD$$module$src$filesystem$constants=\\n62,WASI_EPERM$$module$src$filesystem$constants=63,WASI_EPIPE$$module$src$filesystem$constants=64,WASI_EPROTO$$module$src$filesystem$constants=65,WASI_EPROTONOSUPPORT$$module$src$filesystem$constants=66,WASI_EPROTOTYPE$$module$src$filesystem$constants=67,WASI_ERANGE$$module$src$filesystem$constants=68,WASI_EROFS$$module$src$filesystem$constants=69,WASI_ESPIPE$$module$src$filesystem$constants=70,WASI_ESRCH$$module$src$filesystem$constants=71,WASI_ESTALE$$module$src$filesystem$constants=72,WASI_ETIMEDOUT$$module$src$filesystem$constants=\\n73,WASI_ETXTBSY$$module$src$filesystem$constants=74,WASI_EXDEV$$module$src$filesystem$constants=75,WASI_ENOTCAPABLE$$module$src$filesystem$constants=76,WASI_SIGABRT$$module$src$filesystem$constants=0,WASI_SIGALRM$$module$src$filesystem$constants=1,WASI_SIGBUS$$module$src$filesystem$constants=2,WASI_SIGCHLD$$module$src$filesystem$constants=3,WASI_SIGCONT$$module$src$filesystem$constants=4,WASI_SIGFPE$$module$src$filesystem$constants=5,WASI_SIGHUP$$module$src$filesystem$constants=6,WASI_SIGILL$$module$src$filesystem$constants=\\n7,WASI_SIGINT$$module$src$filesystem$constants=8,WASI_SIGKILL$$module$src$filesystem$constants=9,WASI_SIGPIPE$$module$src$filesystem$constants=10,WASI_SIGQUIT$$module$src$filesystem$constants=11,WASI_SIGSEGV$$module$src$filesystem$constants=12,WASI_SIGSTOP$$module$src$filesystem$constants=13,WASI_SIGTERM$$module$src$filesystem$constants=14,WASI_SIGTRAP$$module$src$filesystem$constants=15,WASI_SIGTSTP$$module$src$filesystem$constants=16,WASI_SIGTTIN$$module$src$filesystem$constants=17,WASI_SIGTTOU$$module$src$filesystem$constants=\\n18,WASI_SIGURG$$module$src$filesystem$constants=19,WASI_SIGUSR1$$module$src$filesystem$constants=20,WASI_SIGUSR2$$module$src$filesystem$constants=21,WASI_SIGVTALRM$$module$src$filesystem$constants=22,WASI_SIGXCPU$$module$src$filesystem$constants=23,WASI_SIGXFSZ$$module$src$filesystem$constants=24,WASI_FILETYPE_UNKNOWN$$module$src$filesystem$constants=0,WASI_FILETYPE_BLOCK_DEVICE$$module$src$filesystem$constants=1,WASI_FILETYPE_CHARACTER_DEVICE$$module$src$filesystem$constants=2,WASI_FILETYPE_DIRECTORY$$module$src$filesystem$constants=\\n3,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants=4,WASI_FILETYPE_SOCKET_DGRAM$$module$src$filesystem$constants=5,WASI_FILETYPE_SOCKET_STREAM$$module$src$filesystem$constants=6,WASI_FILETYPE_SYMBOLIC_LINK$$module$src$filesystem$constants=7,WASI_FDFLAG_APPEND$$module$src$filesystem$constants=1,WASI_FDFLAG_DSYNC$$module$src$filesystem$constants=2,WASI_FDFLAG_NONBLOCK$$module$src$filesystem$constants=4,WASI_FDFLAG_RSYNC$$module$src$filesystem$constants=8,WASI_FDFLAG_SYNC$$module$src$filesystem$constants=\\n16,WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants=goog.global.BigInt(1),WASI_RIGHT_FD_READ$$module$src$filesystem$constants=goog.global.BigInt(2),WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants=goog.global.BigInt(4),WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants=goog.global.BigInt(8),WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants=goog.global.BigInt(16),WASI_RIGHT_FD_TELL$$module$src$filesystem$constants=goog.global.BigInt(32),WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants=\\ngoog.global.BigInt(64),WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants=goog.global.BigInt(128),WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants=goog.global.BigInt(256),WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants=goog.global.BigInt(512),WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants=goog.global.BigInt(1024),WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants=goog.global.BigInt(2048),WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants=\\ngoog.global.BigInt(4096),WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants=goog.global.BigInt(8192),WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants=goog.global.BigInt(16384),WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants=goog.global.BigInt(32768),WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants=goog.global.BigInt(65536),WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants=goog.global.BigInt(131072),WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants=\\ngoog.global.BigInt(262144),WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants=goog.global.BigInt(524288),WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants=goog.global.BigInt(1048576),WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants=goog.global.BigInt(2097152),WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants=goog.global.BigInt(4194304),WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants=goog.global.BigInt(8388608),WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants=\\ngoog.global.BigInt(16777216),WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants=goog.global.BigInt(33554432),WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants=goog.global.BigInt(67108864),WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants=goog.global.BigInt(134217728),WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants=goog.global.BigInt(268435456),RIGHTS_ALL$$module$src$filesystem$constants=WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_READ$$module$src$filesystem$constants|\\nWASI_RIGHT_FD_SEEK$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_TELL$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants|\\nWASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants|WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants|\\nWASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants|\\nWASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants,RIGHTS_BLOCK_DEVICE_BASE$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_BLOCK_DEVICE_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_CHARACTER_DEVICE_BASE$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_CHARACTER_DEVICE_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants=\\nWASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_TELL$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|\\nWASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants=goog.global.BigInt(0),RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|\\nWASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants|WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants|\\nWASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants|\\nWASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,RIGHTS_DIRECTORY_INHERITING$$module$src$filesystem$constants=RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants|RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants,RIGHTS_SOCKET_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|\\nWASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants|WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants,RIGHTS_SOCKET_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_TTY_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,\\nRIGHTS_TTY_INHERITING$$module$src$filesystem$constants=goog.global.BigInt(0),WASI_CLOCK_REALTIME$$module$src$filesystem$constants=0,WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants=1,WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants=2,WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants=3,WASI_EVENTTYPE_CLOCK$$module$src$filesystem$constants=0,WASI_EVENTTYPE_FD_READ$$module$src$filesystem$constants=1,WASI_EVENTTYPE_FD_WRITE$$module$src$filesystem$constants=2,WASI_FILESTAT_SET_ATIM$$module$src$filesystem$constants=\\n1,WASI_FILESTAT_SET_ATIM_NOW$$module$src$filesystem$constants=2,WASI_FILESTAT_SET_MTIM$$module$src$filesystem$constants=4,WASI_FILESTAT_SET_MTIM_NOW$$module$src$filesystem$constants=8,WASI_O_CREAT$$module$src$filesystem$constants=1,WASI_O_DIRECTORY$$module$src$filesystem$constants=2,WASI_O_EXCL$$module$src$filesystem$constants=4,WASI_O_TRUNC$$module$src$filesystem$constants=8,WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants=0,WASI_DIRCOOKIE_START$$module$src$filesystem$constants=0,WASI_STDIN_FILENO$$module$src$filesystem$constants=\\n0,WASI_STDOUT_FILENO$$module$src$filesystem$constants=1,WASI_STDERR_FILENO$$module$src$filesystem$constants=2,WASI_WHENCE_SET$$module$src$filesystem$constants=0,WASI_WHENCE_CUR$$module$src$filesystem$constants=1,WASI_WHENCE_END$$module$src$filesystem$constants=2;var module$src$filesystem$constants={};module$src$filesystem$constants.RIGHTS_ALL=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_BLOCK_DEVICE_BASE=RIGHTS_ALL$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.RIGHTS_BLOCK_DEVICE_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_CHARACTER_DEVICE_BASE=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_CHARACTER_DEVICE_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_DIRECTORY_BASE=RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_DIRECTORY_INHERITING=RIGHTS_DIRECTORY_INHERITING$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.RIGHTS_REGULAR_FILE_BASE=RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_REGULAR_FILE_INHERITING=RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_SOCKET_BASE=RIGHTS_SOCKET_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_SOCKET_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_TTY_BASE=RIGHTS_TTY_BASE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.RIGHTS_TTY_INHERITING=RIGHTS_TTY_INHERITING$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_MONOTONIC=WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_PROCESS_CPUTIME_ID=WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_REALTIME=WASI_CLOCK_REALTIME$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_CLOCK_THREAD_CPUTIME_ID=WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_DIRCOOKIE_START=WASI_DIRCOOKIE_START$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_E2BIG=WASI_E2BIG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EACCES=WASI_EACCES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EADDRINUSE=WASI_EADDRINUSE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EADDRNOTAVAIL=WASI_EADDRNOTAVAIL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EAFNOSUPPORT=WASI_EAFNOSUPPORT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EAGAIN=WASI_EAGAIN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EALREADY=WASI_EALREADY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EBADF=WASI_EBADF$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EBADMSG=WASI_EBADMSG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EBUSY=WASI_EBUSY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECANCELED=WASI_ECANCELED$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECHILD=WASI_ECHILD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECONNABORTED=WASI_ECONNABORTED$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ECONNREFUSED=WASI_ECONNREFUSED$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECONNRESET=WASI_ECONNRESET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDEADLK=WASI_EDEADLK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDESTADDRREQ=WASI_EDESTADDRREQ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDOM=WASI_EDOM$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EDQUOT=WASI_EDQUOT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EEXIST=WASI_EEXIST$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EFAULT=WASI_EFAULT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EFBIG=WASI_EFBIG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EHOSTUNREACH=WASI_EHOSTUNREACH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EIDRM=WASI_EIDRM$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EILSEQ=WASI_EILSEQ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINPROGRESS=WASI_EINPROGRESS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINTR=WASI_EINTR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINVAL=WASI_EINVAL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EIO=WASI_EIO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EISCONN=WASI_EISCONN$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EISDIR=WASI_EISDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ELOOP=WASI_ELOOP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMFILE=WASI_EMFILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMLINK=WASI_EMLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMSGSIZE=WASI_EMSGSIZE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMULTIHOP=WASI_EMULTIHOP$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ENAMETOOLONG=WASI_ENAMETOOLONG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETDOWN=WASI_ENETDOWN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETRESET=WASI_ENETRESET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETUNREACH=WASI_ENETUNREACH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENFILE=WASI_ENFILE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ENOBUFS=WASI_ENOBUFS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENODEV=WASI_ENODEV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOENT=WASI_ENOENT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOEXEC=WASI_ENOEXEC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOLCK=WASI_ENOLCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOLINK=WASI_ENOLINK$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ENOMEM=WASI_ENOMEM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOMSG=WASI_ENOMSG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOPROTOOPT=WASI_ENOPROTOOPT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOSPC=WASI_ENOSPC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOSYS=WASI_ENOSYS$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ENOTCAPABLE=WASI_ENOTCAPABLE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTCONN=WASI_ENOTCONN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTDIR=WASI_ENOTDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTEMPTY=WASI_ENOTEMPTY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTRECOVERABLE=WASI_ENOTRECOVERABLE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ENOTSOCK=WASI_ENOTSOCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTSUP=WASI_ENOTSUP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTTY=WASI_ENOTTY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENXIO=WASI_ENXIO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EOVERFLOW=WASI_EOVERFLOW$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EOWNERDEAD=WASI_EOWNERDEAD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPERM=WASI_EPERM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPIPE=WASI_EPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPROTO=WASI_EPROTO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPROTONOSUPPORT=WASI_EPROTONOSUPPORT$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EPROTOTYPE=WASI_EPROTOTYPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ERANGE=WASI_ERANGE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EROFS=WASI_EROFS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESPIPE=WASI_ESPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESRCH=WASI_ESRCH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESTALE=WASI_ESTALE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ESUCCESS=WASI_ESUCCESS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ETIMEDOUT=WASI_ETIMEDOUT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ETXTBSY=WASI_ETXTBSY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EVENTTYPE_CLOCK=WASI_EVENTTYPE_CLOCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EVENTTYPE_FD_READ=WASI_EVENTTYPE_FD_READ$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EVENTTYPE_FD_WRITE=WASI_EVENTTYPE_FD_WRITE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EXDEV=WASI_EXDEV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_APPEND=WASI_FDFLAG_APPEND$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_DSYNC=WASI_FDFLAG_DSYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_NONBLOCK=WASI_FDFLAG_NONBLOCK$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_FDFLAG_RSYNC=WASI_FDFLAG_RSYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_SYNC=WASI_FDFLAG_SYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_ATIM=WASI_FILESTAT_SET_ATIM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_ATIM_NOW=WASI_FILESTAT_SET_ATIM_NOW$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_MTIM=WASI_FILESTAT_SET_MTIM$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_FILESTAT_SET_MTIM_NOW=WASI_FILESTAT_SET_MTIM_NOW$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_BLOCK_DEVICE=WASI_FILETYPE_BLOCK_DEVICE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_CHARACTER_DEVICE=WASI_FILETYPE_CHARACTER_DEVICE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_DIRECTORY=WASI_FILETYPE_DIRECTORY$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_FILETYPE_REGULAR_FILE=WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SOCKET_DGRAM=WASI_FILETYPE_SOCKET_DGRAM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SOCKET_STREAM=WASI_FILETYPE_SOCKET_STREAM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SYMBOLIC_LINK=WASI_FILETYPE_SYMBOLIC_LINK$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_FILETYPE_UNKNOWN=WASI_FILETYPE_UNKNOWN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_CREAT=WASI_O_CREAT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_DIRECTORY=WASI_O_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_EXCL=WASI_O_EXCL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_TRUNC=WASI_O_TRUNC$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_PREOPENTYPE_DIR=WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_ADVISE=WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_ALLOCATE=WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_DATASYNC=WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FDSTAT_SET_FLAGS=WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_GET=WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_SET_SIZE=WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_SET_TIMES=WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_READ=WASI_RIGHT_FD_READ$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_RIGHT_FD_READDIR=WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_SEEK=WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_SYNC=WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_TELL=WASI_RIGHT_FD_TELL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_WRITE=WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_RIGHT_PATH_CREATE_DIRECTORY=WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_CREATE_FILE=WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_GET=WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_SET_SIZE=WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_SET_TIMES=WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_LINK_SOURCE=WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_LINK_TARGET=WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_OPEN=WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_RIGHT_PATH_READLINK=WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_REMOVE_DIRECTORY=WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_RENAME_SOURCE=WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_RENAME_TARGET=WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_RIGHT_PATH_SYMLINK=WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_UNLINK_FILE=WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_POLL_FD_READWRITE=WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_SOCK_SHUTDOWN=WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_SIGABRT=WASI_SIGABRT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGALRM=WASI_SIGALRM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGBUS=WASI_SIGBUS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGCHLD=WASI_SIGCHLD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGCONT=WASI_SIGCONT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGFPE=WASI_SIGFPE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_SIGHUP=WASI_SIGHUP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGILL=WASI_SIGILL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGINT=WASI_SIGINT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGKILL=WASI_SIGKILL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGPIPE=WASI_SIGPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGQUIT=WASI_SIGQUIT$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_SIGSEGV=WASI_SIGSEGV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGSTOP=WASI_SIGSTOP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTERM=WASI_SIGTERM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTRAP=WASI_SIGTRAP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTSTP=WASI_SIGTSTP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTTIN=WASI_SIGTTIN$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_SIGTTOU=WASI_SIGTTOU$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGURG=WASI_SIGURG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGUSR1=WASI_SIGUSR1$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGUSR2=WASI_SIGUSR2$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGVTALRM=WASI_SIGVTALRM$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_SIGXCPU=WASI_SIGXCPU$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGXFSZ=WASI_SIGXFSZ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDERR_FILENO=WASI_STDERR_FILENO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDIN_FILENO=WASI_STDIN_FILENO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDOUT_FILENO=WASI_STDOUT_FILENO$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_WHENCE_CUR=WASI_WHENCE_CUR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_WHENCE_END=WASI_WHENCE_END$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_WHENCE_SET=WASI_WHENCE_SET$$module$src$filesystem$constants;goog.debug={};function module$contents$goog$debug$Error_DebugError(a,b){if(Error.captureStackTrace)Error.captureStackTrace(this,module$contents$goog$debug$Error_DebugError);else{const c=Error().stack;c&&(this.stack=c)}a&&(this.message=String(a));void 0!==b&&(this.cause=b);this.reportErrorToServer=!0}goog.inherits(module$contents$goog$debug$Error_DebugError,Error);module$contents$goog$debug$Error_DebugError.prototype.name=\"CustomError\";goog.debug.Error=module$contents$goog$debug$Error_DebugError;goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;function module$contents$goog$asserts_AssertionError(a,b){module$contents$goog$debug$Error_DebugError.call(this,module$contents$goog$asserts_subs(a,b));this.messagePattern=a}goog.inherits(module$contents$goog$asserts_AssertionError,module$contents$goog$debug$Error_DebugError);goog.asserts.AssertionError=module$contents$goog$asserts_AssertionError;module$contents$goog$asserts_AssertionError.prototype.name=\"AssertionError\";\\ngoog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};let module$contents$goog$asserts_errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;function module$contents$goog$asserts_subs(a,b){a=a.split(\"%s\");let c=\"\";const d=a.length-1;for(let e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:\"%s\");return c+a[d]}\\nfunction module$contents$goog$asserts_doAssertFailure(a,b,c,d){let e=\"Assertion failed\",f;c?(e+=\": \"+c,f=d):a&&(e+=\": \"+a,f=b);a=new module$contents$goog$asserts_AssertionError(\"\"+e,f||[]);module$contents$goog$asserts_errorHandler_(a)}goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(module$contents$goog$asserts_errorHandler_=a)};\\ngoog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&module$contents$goog$asserts_doAssertFailure(\"\",null,b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertExists=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&null==a&&module$contents$goog$asserts_doAssertFailure(\"Expected to exist: %s.\",[a],b,Array.prototype.slice.call(arguments,2));return a};\\ngoog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&module$contents$goog$asserts_errorHandler_(new module$contents$goog$asserts_AssertionError(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&\"number\"!==typeof a&&module$contents$goog$asserts_doAssertFailure(\"Expected number but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\\ngoog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&\"string\"!==typeof a&&module$contents$goog$asserts_doAssertFailure(\"Expected string but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&\"function\"!==typeof a&&module$contents$goog$asserts_doAssertFailure(\"Expected function but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\\ngoog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&module$contents$goog$asserts_doAssertFailure(\"Expected object but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!Array.isArray(a)&&module$contents$goog$asserts_doAssertFailure(\"Expected array but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\\ngoog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&\"boolean\"!==typeof a&&module$contents$goog$asserts_doAssertFailure(\"Expected boolean but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\\ngoog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||module$contents$goog$asserts_doAssertFailure(\"Expected Element but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\\ngoog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||module$contents$goog$asserts_doAssertFailure(\"Expected instanceof %s but got %s.\",[module$contents$goog$asserts_getType(b),module$contents$goog$asserts_getType(a)],c,Array.prototype.slice.call(arguments,3));return a};\\ngoog.asserts.assertFinite=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||\"number\"==typeof a&&isFinite(a)||module$contents$goog$asserts_doAssertFailure(\"Expected %s to be a finite number but it is not.\",[a],b,Array.prototype.slice.call(arguments,2));return a};\\nfunction module$contents$goog$asserts_getType(a){return a instanceof Function?a.displayName||a.name||\"unknown type name\":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?\"null\":typeof a};goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;const module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS=2012<goog.FEATURESET_YEAR;goog.array.ASSUME_NATIVE_FUNCTIONS=module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS;function module$contents$goog$array_peek(a){return a[a.length-1]}goog.array.peek=module$contents$goog$array_peek;goog.array.last=module$contents$goog$array_peek;\\nconst module$contents$goog$array_indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(\"string\"===typeof a)return\"string\"!==typeof b||1!=b.length?-1:a.indexOf(b,c);for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};goog.array.indexOf=module$contents$goog$array_indexOf;\\nconst module$contents$goog$array_lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if(\"string\"===typeof a)return\"string\"!==typeof b||1!=b.length?-1:a.lastIndexOf(b,c);for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1};\\ngoog.array.lastIndexOf=module$contents$goog$array_lastIndexOf;const module$contents$goog$array_forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};goog.array.forEach=module$contents$goog$array_forEach;\\nfunction module$contents$goog$array_forEachRight(a,b,c){var d=a.length;const e=\"string\"===typeof a?a.split(\"\"):a;for(--d;0<=d;--d)d in e&&b.call(c,e[d],d,a)}goog.array.forEachRight=module$contents$goog$array_forEachRight;\\nconst module$contents$goog$array_filter=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){const d=a.length,e=[];let f=0;const g=\"string\"===typeof a?a.split(\"\"):a;for(let h=0;h<d;h++)if(h in g){const k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e};goog.array.filter=module$contents$goog$array_filter;\\nconst module$contents$goog$array_map=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){const d=a.length,e=Array(d),f=\"string\"===typeof a?a.split(\"\"):a;for(let g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};goog.array.map=module$contents$goog$array_map;\\nconst module$contents$goog$array_reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){let e=c;module$contents$goog$array_forEach(a,function(f,g){e=b.call(d,e,f,g,a)});return e};goog.array.reduce=module$contents$goog$array_reduce;\\nconst module$contents$goog$array_reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){let e=c;module$contents$goog$array_forEachRight(a,function(f,g){e=b.call(d,e,f,g,a)});return e};goog.array.reduceRight=module$contents$goog$array_reduceRight;\\nconst module$contents$goog$array_some=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};goog.array.some=module$contents$goog$array_some;\\nconst module$contents$goog$array_every=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};goog.array.every=module$contents$goog$array_every;\\nfunction module$contents$goog$array_count(a,b,c){let d=0;module$contents$goog$array_forEach(a,function(e,f,g){b.call(c,e,f,g)&&++d},c);return d}goog.array.count=module$contents$goog$array_count;function module$contents$goog$array_find(a,b,c){b=module$contents$goog$array_findIndex(a,b,c);return 0>b?null:\"string\"===typeof a?a.charAt(b):a[b]}goog.array.find=module$contents$goog$array_find;\\nfunction module$contents$goog$array_findIndex(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1}goog.array.findIndex=module$contents$goog$array_findIndex;function module$contents$goog$array_findRight(a,b,c){b=module$contents$goog$array_findIndexRight(a,b,c);return 0>b?null:\"string\"===typeof a?a.charAt(b):a[b]}goog.array.findRight=module$contents$goog$array_findRight;\\nfunction module$contents$goog$array_findIndexRight(a,b,c){var d=a.length;const e=\"string\"===typeof a?a.split(\"\"):a;for(--d;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1}goog.array.findIndexRight=module$contents$goog$array_findIndexRight;function module$contents$goog$array_contains(a,b){return 0<=module$contents$goog$array_indexOf(a,b)}goog.array.contains=module$contents$goog$array_contains;function module$contents$goog$array_isEmpty(a){return 0==a.length}goog.array.isEmpty=module$contents$goog$array_isEmpty;\\nfunction module$contents$goog$array_clear(a){if(!Array.isArray(a))for(let b=a.length-1;0<=b;b--)delete a[b];a.length=0}goog.array.clear=module$contents$goog$array_clear;function module$contents$goog$array_insert(a,b){module$contents$goog$array_contains(a,b)||a.push(b)}goog.array.insert=module$contents$goog$array_insert;function module$contents$goog$array_insertAt(a,b,c){module$contents$goog$array_splice(a,c,0,b)}goog.array.insertAt=module$contents$goog$array_insertAt;\\nfunction module$contents$goog$array_insertArrayAt(a,b,c){goog.partial(module$contents$goog$array_splice,a,c,0).apply(null,b)}goog.array.insertArrayAt=module$contents$goog$array_insertArrayAt;function module$contents$goog$array_insertBefore(a,b,c){let d;2==arguments.length||0>(d=module$contents$goog$array_indexOf(a,c))?a.push(b):module$contents$goog$array_insertAt(a,b,d)}goog.array.insertBefore=module$contents$goog$array_insertBefore;\\nfunction module$contents$goog$array_remove(a,b){b=module$contents$goog$array_indexOf(a,b);let c;(c=0<=b)&&module$contents$goog$array_removeAt(a,b);return c}goog.array.remove=module$contents$goog$array_remove;function module$contents$goog$array_removeLast(a,b){b=module$contents$goog$array_lastIndexOf(a,b);return 0<=b?(module$contents$goog$array_removeAt(a,b),!0):!1}goog.array.removeLast=module$contents$goog$array_removeLast;\\nfunction module$contents$goog$array_removeAt(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length}goog.array.removeAt=module$contents$goog$array_removeAt;function module$contents$goog$array_removeIf(a,b,c){b=module$contents$goog$array_findIndex(a,b,c);return 0<=b?(module$contents$goog$array_removeAt(a,b),!0):!1}goog.array.removeIf=module$contents$goog$array_removeIf;\\nfunction module$contents$goog$array_removeAllIf(a,b,c){let d=0;module$contents$goog$array_forEachRight(a,function(e,f){b.call(c,e,f,a)&&module$contents$goog$array_removeAt(a,f)&&d++});return d}goog.array.removeAllIf=module$contents$goog$array_removeAllIf;function module$contents$goog$array_concat(a){return Array.prototype.concat.apply([],arguments)}goog.array.concat=module$contents$goog$array_concat;function module$contents$goog$array_join(a){return Array.prototype.concat.apply([],arguments)}\\ngoog.array.join=module$contents$goog$array_join;function module$contents$goog$array_toArray(a){const b=a.length;if(0<b){const c=Array(b);for(let d=0;d<b;d++)c[d]=a[d];return c}return[]}const module$contents$goog$array_clone=goog.array.toArray=module$contents$goog$array_toArray;goog.array.clone=module$contents$goog$array_toArray;\\nfunction module$contents$goog$array_extend(a,b){for(let c=1;c<arguments.length;c++){const d=arguments[c];if(goog.isArrayLike(d)){const e=a.length||0,f=d.length||0;a.length=e+f;for(let g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}}goog.array.extend=module$contents$goog$array_extend;function module$contents$goog$array_splice(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,module$contents$goog$array_slice(arguments,1))}goog.array.splice=module$contents$goog$array_splice;\\nfunction module$contents$goog$array_slice(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)}goog.array.slice=module$contents$goog$array_slice;\\nfunction module$contents$goog$array_removeDuplicates(a,b,c){b=b||a;var d=function(g){return goog.isObject(g)?\"o\"+goog.getUid(g):(typeof g).charAt(0)+g};c=c||d;let e=d=0;const f={};for(;e<a.length;){const g=a[e++],h=c(g);Object.prototype.hasOwnProperty.call(f,h)||(f[h]=!0,b[d++]=g)}b.length=d}goog.array.removeDuplicates=module$contents$goog$array_removeDuplicates;\\nfunction module$contents$goog$array_binarySearch(a,b,c){return module$contents$goog$array_binarySearch_(a,c||module$contents$goog$array_defaultCompare,!1,b)}goog.array.binarySearch=module$contents$goog$array_binarySearch;function module$contents$goog$array_binarySelect(a,b,c){return module$contents$goog$array_binarySearch_(a,b,!0,void 0,c)}goog.array.binarySelect=module$contents$goog$array_binarySelect;\\nfunction module$contents$goog$array_binarySearch_(a,b,c,d,e){let f=0,g=a.length,h;for(;f<g;){const k=f+(g-f>>>1);let l;l=c?b.call(e,a[k],k,a):b(d,a[k]);0<l?f=k+1:(g=k,h=!l)}return h?f:-f-1}function module$contents$goog$array_sort(a,b){a.sort(b||module$contents$goog$array_defaultCompare)}goog.array.sort=module$contents$goog$array_sort;\\nfunction module$contents$goog$array_stableSort(a,b){const c=Array(a.length);for(let e=0;e<a.length;e++)c[e]={index:e,value:a[e]};const d=b||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(c,function(e,f){return d(e.value,f.value)||e.index-f.index});for(b=0;b<a.length;b++)a[b]=c[b].value}goog.array.stableSort=module$contents$goog$array_stableSort;\\nfunction module$contents$goog$array_sortByKey(a,b,c){const d=c||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(a,function(e,f){return d(b(e),b(f))})}goog.array.sortByKey=module$contents$goog$array_sortByKey;function module$contents$goog$array_sortObjectsByKey(a,b,c){module$contents$goog$array_sortByKey(a,function(d){return d[b]},c)}goog.array.sortObjectsByKey=module$contents$goog$array_sortObjectsByKey;\\nfunction module$contents$goog$array_isSorted(a,b,c){b=b||module$contents$goog$array_defaultCompare;for(let d=1;d<a.length;d++){const e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0}goog.array.isSorted=module$contents$goog$array_isSorted;function module$contents$goog$array_equals(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;const d=a.length;c=c||module$contents$goog$array_defaultCompareEquality;for(let e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0}\\ngoog.array.equals=module$contents$goog$array_equals;function module$contents$goog$array_compare3(a,b,c){c=c||module$contents$goog$array_defaultCompare;const d=Math.min(a.length,b.length);for(let e=0;e<d;e++){const f=c(a[e],b[e]);if(0!=f)return f}return module$contents$goog$array_defaultCompare(a.length,b.length)}goog.array.compare3=module$contents$goog$array_compare3;function module$contents$goog$array_defaultCompare(a,b){return a>b?1:a<b?-1:0}goog.array.defaultCompare=module$contents$goog$array_defaultCompare;\\nfunction module$contents$goog$array_inverseDefaultCompare(a,b){return-module$contents$goog$array_defaultCompare(a,b)}goog.array.inverseDefaultCompare=module$contents$goog$array_inverseDefaultCompare;function module$contents$goog$array_defaultCompareEquality(a,b){return a===b}goog.array.defaultCompareEquality=module$contents$goog$array_defaultCompareEquality;\\nfunction module$contents$goog$array_binaryInsert(a,b,c){c=module$contents$goog$array_binarySearch(a,b,c);return 0>c?(module$contents$goog$array_insertAt(a,b,-(c+1)),!0):!1}goog.array.binaryInsert=module$contents$goog$array_binaryInsert;function module$contents$goog$array_binaryRemove(a,b,c){b=module$contents$goog$array_binarySearch(a,b,c);return 0<=b?module$contents$goog$array_removeAt(a,b):!1}goog.array.binaryRemove=module$contents$goog$array_binaryRemove;\\nfunction module$contents$goog$array_bucket(a,b,c){const d={};for(let e=0;e<a.length;e++){const f=a[e],g=b.call(c,f,e,a);void 0!==g&&(d[g]||(d[g]=[])).push(f)}return d}goog.array.bucket=module$contents$goog$array_bucket;function module$contents$goog$array_bucketToMap(a,b){const c=new Map;for(let d=0;d<a.length;d++){const e=a[d],f=b(e,d,a);if(void 0!==f){let g=c.get(f);g||(g=[],c.set(f,g));g.push(e)}}return c}goog.array.bucketToMap=module$contents$goog$array_bucketToMap;\\nfunction module$contents$goog$array_toObject(a,b,c){const d={};module$contents$goog$array_forEach(a,function(e,f){d[b.call(c,e,f,a)]=e});return d}goog.array.toObject=module$contents$goog$array_toObject;function module$contents$goog$array_toMap(a,b){const c=new Map;for(let d=0;d<a.length;d++){const e=a[d];c.set(b(e,d,a),e)}return c}goog.array.toMap=module$contents$goog$array_toMap;\\nfunction module$contents$goog$array_range(a,b,c){const d=[];let e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d}goog.array.range=module$contents$goog$array_range;function module$contents$goog$array_repeat(a,b){const c=[];for(let d=0;d<b;d++)c[d]=a;return c}goog.array.repeat=module$contents$goog$array_repeat;\\nfunction module$contents$goog$array_flatten(a){const b=[];for(let d=0;d<arguments.length;d++){const e=arguments[d];if(Array.isArray(e))for(let f=0;f<e.length;f+=8192){var c=module$contents$goog$array_slice(e,f,f+8192);c=module$contents$goog$array_flatten.apply(null,c);for(let g=0;g<c.length;g++)b.push(c[g])}else b.push(e)}return b}goog.array.flatten=module$contents$goog$array_flatten;\\nfunction module$contents$goog$array_rotate(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a}goog.array.rotate=module$contents$goog$array_rotate;function module$contents$goog$array_moveItem(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0])}goog.array.moveItem=module$contents$goog$array_moveItem;\\nfunction module$contents$goog$array_zip(a){if(!arguments.length)return[];const b=[];let c=arguments[0].length;for(var d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){const e=[];for(let f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b}goog.array.zip=module$contents$goog$array_zip;function module$contents$goog$array_shuffle(a,b){b=b||Math.random;for(let c=a.length-1;0<c;c--){const d=Math.floor(b()*(c+1)),e=a[c];a[c]=a[d];a[d]=e}}\\ngoog.array.shuffle=module$contents$goog$array_shuffle;function module$contents$goog$array_copyByIndex(a,b){const c=[];module$contents$goog$array_forEach(b,function(d){c.push(a[d])});return c}goog.array.copyByIndex=module$contents$goog$array_copyByIndex;function module$contents$goog$array_concatMap(a,b,c){return module$contents$goog$array_concat.apply([],module$contents$goog$array_map(a,b,c))}goog.array.concatMap=module$contents$goog$array_concatMap;goog.dom.asserts={};goog.dom.asserts.assertIsLocation=function(a){if(goog.asserts.ENABLE_ASSERTS){var b=goog.dom.asserts.getWindow_(a);b&&(!a||!(a instanceof b.Location)&&a instanceof b.Element)&&goog.asserts.fail(\"Argument is not a Location (or a non-Element mock); got: %s\",goog.dom.asserts.debugStringForType_(a))}return a};\\ngoog.dom.asserts.assertIsElementType_=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=goog.dom.asserts.getWindow_(a);c&&\"undefined\"!=typeof c[b]&&(a&&(a instanceof c[b]||!(a instanceof c.Location||a instanceof c.Element))||goog.asserts.fail(\"Argument is not a %s (or a non-Element, non-Location mock); got: %s\",b,goog.dom.asserts.debugStringForType_(a)))}return a};goog.dom.asserts.assertIsHTMLAnchorElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLAnchorElement\")};\\ngoog.dom.asserts.assertIsHTMLButtonElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLButtonElement\")};goog.dom.asserts.assertIsHTMLLinkElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLLinkElement\")};goog.dom.asserts.assertIsHTMLImageElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLImageElement\")};goog.dom.asserts.assertIsHTMLAudioElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLAudioElement\")};\\ngoog.dom.asserts.assertIsHTMLVideoElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLVideoElement\")};goog.dom.asserts.assertIsHTMLInputElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLInputElement\")};goog.dom.asserts.assertIsHTMLTextAreaElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLTextAreaElement\")};goog.dom.asserts.assertIsHTMLCanvasElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLCanvasElement\")};\\ngoog.dom.asserts.assertIsHTMLEmbedElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLEmbedElement\")};goog.dom.asserts.assertIsHTMLFormElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLFormElement\")};goog.dom.asserts.assertIsHTMLFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLFrameElement\")};goog.dom.asserts.assertIsHTMLIFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLIFrameElement\")};\\ngoog.dom.asserts.assertIsHTMLObjectElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLObjectElement\")};goog.dom.asserts.assertIsHTMLScriptElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLScriptElement\")};\\ngoog.dom.asserts.debugStringForType_=function(a){if(goog.isObject(a))try{return a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a)}catch(b){return\"<object could not be stringified>\"}else return void 0===a?\"undefined\":null===a?\"null\":typeof a};goog.dom.asserts.getWindow_=function(a){try{var b=a&&a.ownerDocument,c=b&&(b.defaultView||b.parentWindow);c=c||goog.global;if(c.Element&&c.Location)return c}catch(d){}return null};goog.functions={};goog.functions.constant=function(a){return function(){return a}};goog.functions.FALSE=function(){return!1};goog.functions.TRUE=function(){return!0};goog.functions.NULL=function(){return null};goog.functions.UNDEFINED=function(){};goog.functions.EMPTY=goog.functions.UNDEFINED;goog.functions.identity=function(a,b){return a};goog.functions.error=function(a){return function(){throw Error(a);}};goog.functions.fail=function(a){return function(){throw a;}};\\ngoog.functions.lock=function(a,b){b=b||0;return function(){return a.apply(this,Array.prototype.slice.call(arguments,0,b))}};goog.functions.nth=function(a){return function(){return arguments[a]}};goog.functions.partialRight=function(a,b){const c=Array.prototype.slice.call(arguments,1);return function(){let d=this;d===goog.global&&(d=void 0);const e=Array.prototype.slice.call(arguments);e.push.apply(e,c);return a.apply(d,e)}};\\ngoog.functions.withReturnValue=function(a,b){return goog.functions.sequence(a,goog.functions.constant(b))};goog.functions.equalTo=function(a,b){return function(c){return b?a==c:a===c}};goog.functions.compose=function(a,b){const c=arguments,d=c.length;return function(){let e;d&&(e=c[d-1].apply(this,arguments));for(let f=d-2;0<=f;f--)e=c[f].call(this,e);return e}};\\ngoog.functions.sequence=function(a){const b=arguments,c=b.length;return function(){let d;for(let e=0;e<c;e++)d=b[e].apply(this,arguments);return d}};goog.functions.and=function(a){const b=arguments,c=b.length;return function(){for(let d=0;d<c;d++)if(!b[d].apply(this,arguments))return!1;return!0}};goog.functions.or=function(a){const b=arguments,c=b.length;return function(){for(let d=0;d<c;d++)if(b[d].apply(this,arguments))return!0;return!1}};\\ngoog.functions.not=function(a){return function(){return!a.apply(this,arguments)}};goog.functions.create=function(a,b){var c=function(){};c.prototype=a.prototype;c=new c;a.apply(c,Array.prototype.slice.call(arguments,1));return c};goog.functions.CACHE_RETURN_VALUE=!0;goog.functions.cacheReturnValue=function(a){let b=!1,c;return function(){if(!goog.functions.CACHE_RETURN_VALUE)return a();b||(c=a(),b=!0);return c}};goog.functions.once=function(a){let b=a;return function(){if(b){const c=b;b=null;c()}}};\\ngoog.functions.debounce=function(a,b,c){let d=0;return function(e){goog.global.clearTimeout(d);const f=arguments;d=goog.global.setTimeout(function(){a.apply(c,f)},b)}};goog.functions.throttle=function(a,b,c){let d=0,e=!1,f=[];const g=function(){d=0;e&&(e=!1,h())},h=function(){d=goog.global.setTimeout(g,b);let k=f;f=[];a.apply(c,k)};return function(k){f=arguments;d?e=!0:h()}};\\ngoog.functions.rateLimit=function(a,b,c){let d=0;const e=function(){d=0};return function(f){d||(d=goog.global.setTimeout(e,b),a.apply(c,arguments))}};goog.functions.isFunction=a=>\"function\"===typeof a;goog.string={};goog.string.TypedString=function(){};goog.string.Const=function(a,b){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_=a===goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_&&b||\"\";this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_};goog.string.Const.prototype.implementsGoogStringTypedString=!0;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};\\ngoog.DEBUG&&(goog.string.Const.prototype.toString=function(){return\"Const{\"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+\"}\"});goog.string.Const.unwrap=function(a){if(a instanceof goog.string.Const&&a.constructor===goog.string.Const&&a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_)return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;goog.asserts.fail(\"expected object of type Const, got \\'\"+a+\"\\'\");return\"type_error:Const\"};\\ngoog.string.Const.from=function(a){return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_,a)};goog.string.Const.TYPE_MARKER_={};goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_={};goog.string.Const.EMPTY=goog.string.Const.from(\"\");goog.html={};goog.html.trustedtypes={};goog.html.trustedtypes.POLICY_NAME=goog.TRUSTED_TYPES_POLICY_NAME?goog.TRUSTED_TYPES_POLICY_NAME+\"#html\":\"\";goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse=function(){if(!goog.html.trustedtypes.POLICY_NAME)return null;void 0===goog.html.trustedtypes.cachedPolicy_&&(goog.html.trustedtypes.cachedPolicy_=goog.createTrustedTypesPolicy(goog.html.trustedtypes.POLICY_NAME));return goog.html.trustedtypes.cachedPolicy_};const module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE={};\\nclass module$contents$goog$html$SafeScript_SafeScript{constructor(a,b){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=b===module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE?a:\"\";this.implementsGoogStringTypedString=!0}toString(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static fromConstant(a){a=goog.string.Const.unwrap(a);return 0===a.length?module$contents$goog$html$SafeScript_SafeScript.EMPTY:module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a)}static fromJson(a){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(module$contents$goog$html$SafeScript_SafeScript.stringify_(a))}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static unwrap(a){return module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(a).toString()}static unwrapTrustedScript(a){if(a instanceof\\nmodule$contents$goog$html$SafeScript_SafeScript&&a.constructor===module$contents$goog$html$SafeScript_SafeScript)return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;(0,goog.asserts.fail)(\"expected object of type SafeScript, got \\'\"+a+\"\\' of type \"+goog.typeOf(a));return\"type_error:SafeScript\"}static stringify_(a){return JSON.stringify(a).replace(/</g,\"\\\\\\\\x3c\")}static createSafeScriptSecurityPrivateDoNotAccessOrElse(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createScript(a):\\na;return new module$contents$goog$html$SafeScript_SafeScript(a,module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE)}}module$contents$goog$html$SafeScript_SafeScript.EMPTY=function(){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(\"\")}();goog.html.SafeScript=module$contents$goog$html$SafeScript_SafeScript;goog.fs={};goog.fs.url={};goog.fs.url.createObjectUrl=function(a){return goog.fs.url.getUrlObject_().createObjectURL(a)};goog.fs.url.revokeObjectUrl=function(a){goog.fs.url.getUrlObject_().revokeObjectURL(a)};goog.fs.url.UrlObject_=function(){};goog.fs.url.UrlObject_.prototype.createObjectURL=function(a){};goog.fs.url.UrlObject_.prototype.revokeObjectURL=function(a){};\\ngoog.fs.url.getUrlObject_=function(){const a=goog.fs.url.findUrlObject_();if(null!=a)return a;throw Error(\"This browser doesn\\'t seem to support blob URLs\");};goog.fs.url.findUrlObject_=function(){return void 0!==goog.global.URL&&void 0!==goog.global.URL.createObjectURL?goog.global.URL:void 0!==goog.global.createObjectURL?goog.global:null};goog.fs.url.browserSupportsObjectUrls=function(){return null!=goog.fs.url.findUrlObject_()};goog.fs.blob={};goog.fs.blob.getBlob=function(a){var b=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(void 0!==b){b=new b;for(let c=0;c<arguments.length;c++)b.append(arguments[c]);return b.getBlob()}return goog.fs.blob.getBlobWithProperties(Array.prototype.slice.call(arguments))};\\ngoog.fs.blob.getBlobWithProperties=function(a,b,c){var d=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(void 0!==d){d=new d;for(let e=0;e<a.length;e++)d.append(a[e],c);return d.getBlob(b)}if(void 0!==goog.global.Blob)return d={},b&&(d.type=b),c&&(d.endings=c),new Blob(a,d);throw Error(\"This browser doesn\\'t seem to support creating Blobs\");};goog.html.TrustedResourceUrl=class{constructor(a,b){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=b===goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_?a:\"\"}toString(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+\"\"}};goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString()};\\ngoog.html.TrustedResourceUrl.prototype.cloneWithParams=function(a,b){var c=goog.html.TrustedResourceUrl.unwrap(this);c=goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c);var d=c[3]||\"\";return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1]+goog.html.TrustedResourceUrl.stringifyParams_(\"?\",c[2]||\"\",a)+goog.html.TrustedResourceUrl.stringifyParams_(\"#\",d,b))};goog.html.TrustedResourceUrl.unwrap=function(a){return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a).toString()};\\ngoog.html.TrustedResourceUrl.unwrapTrustedScriptURL=function(a){if(a instanceof goog.html.TrustedResourceUrl&&a.constructor===goog.html.TrustedResourceUrl)return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;goog.asserts.fail(\"expected object of type TrustedResourceUrl, got \\'\"+a+\"\\' of type \"+goog.typeOf(a));return\"type_error:TrustedResourceUrl\"};\\ngoog.html.TrustedResourceUrl.format=function(a,b){var c=goog.string.Const.unwrap(a);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(c))throw Error(\"Invalid TrustedResourceUrl format: \"+c);a=c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(d,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error(\\'Found marker, \"\\'+e+\\'\", in format string, \"\\'+c+\\'\", but no valid label mapping found in args: \\'+JSON.stringify(b));d=b[e];return d instanceof goog.string.Const?goog.string.Const.unwrap(d):\\nencodeURIComponent(String(d))});return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\\\\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=RegExp(\"^((https:)?//[0-9a-z.:[\\\\\\\\]-]+/|/[^/\\\\\\\\\\\\\\\\]|[^:/\\\\\\\\\\\\\\\\%]+/|[^:/\\\\\\\\\\\\\\\\%]*[?#]|about:blank#)\",\"i\");goog.html.TrustedResourceUrl.URL_PARAM_PARSER_=/^([^?#]*)(\\\\?[^#]*)?(#[\\\\s\\\\S]*)?/;\\ngoog.html.TrustedResourceUrl.formatWithParams=function(a,b,c,d){return goog.html.TrustedResourceUrl.format(a,b).cloneWithParams(c,d)};goog.html.TrustedResourceUrl.fromConstant=function(a){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};goog.html.TrustedResourceUrl.fromConstants=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=goog.string.Const.unwrap(a[c]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};\\ngoog.html.TrustedResourceUrl.fromSafeScript=function(a){a=goog.fs.blob.getBlobWithProperties([module$contents$goog$html$SafeScript_SafeScript.unwrap(a)],\"text/javascript\");a=goog.fs.url.createObjectUrl(a);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};\\ngoog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createScriptURL(a):a;return new goog.html.TrustedResourceUrl(a,goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};\\ngoog.html.TrustedResourceUrl.stringifyParams_=function(a,b,c){if(null==c)return b;if(\"string\"===typeof c)return c?a+encodeURIComponent(c):\"\";for(var d in c)if(Object.prototype.hasOwnProperty.call(c,d)){var e=c[d];e=Array.isArray(e)?e:[e];for(var f=0;f<e.length;f++){var g=e[f];null!=g&&(b||(b=a),b+=(b.length>a.length?\"&\":\"\")+encodeURIComponent(d)+\"=\"+encodeURIComponent(String(g)))}}return b};goog.string.internal={};goog.string.internal.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.internal.endsWith=function(a,b){const c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.internal.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.slice(0,b.length))};goog.string.internal.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.slice(a.length-b.length))};\\ngoog.string.internal.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.internal.isEmptyOrWhitespace=function(a){return/^[\\\\s\\\\xa0]*$/.test(a)};goog.string.internal.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\\\\s\\\\xa0]*([\\\\s\\\\S]*?)[\\\\s\\\\xa0]*$/.exec(a)[1]};goog.string.internal.caseInsensitiveCompare=function(a,b){a=String(a).toLowerCase();b=String(b).toLowerCase();return a<b?-1:a==b?0:1};\\ngoog.string.internal.newLineToBr=function(a,b){return a.replace(/(\\\\r\\\\n|\\\\r|\\\\n)/g,b?\"<br />\":\"<br>\")};\\ngoog.string.internal.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.internal.AMP_RE_,\"&amp;\").replace(goog.string.internal.LT_RE_,\"&lt;\").replace(goog.string.internal.GT_RE_,\"&gt;\").replace(goog.string.internal.QUOT_RE_,\"&quot;\").replace(goog.string.internal.SINGLE_QUOTE_RE_,\"&#39;\").replace(goog.string.internal.NULL_RE_,\"&#0;\");else{if(!goog.string.internal.ALL_RE_.test(a))return a;-1!=a.indexOf(\"&\")&&(a=a.replace(goog.string.internal.AMP_RE_,\"&amp;\"));-1!=a.indexOf(\"<\")&&(a=a.replace(goog.string.internal.LT_RE_,\\n\"&lt;\"));-1!=a.indexOf(\">\")&&(a=a.replace(goog.string.internal.GT_RE_,\"&gt;\"));-1!=a.indexOf(\\'\"\\')&&(a=a.replace(goog.string.internal.QUOT_RE_,\"&quot;\"));-1!=a.indexOf(\"\\'\")&&(a=a.replace(goog.string.internal.SINGLE_QUOTE_RE_,\"&#39;\"));-1!=a.indexOf(\"\\\\x00\")&&(a=a.replace(goog.string.internal.NULL_RE_,\"&#0;\"))}return a};goog.string.internal.AMP_RE_=/&/g;goog.string.internal.LT_RE_=/</g;goog.string.internal.GT_RE_=/>/g;goog.string.internal.QUOT_RE_=/\"/g;goog.string.internal.SINGLE_QUOTE_RE_=/\\'/g;\\ngoog.string.internal.NULL_RE_=/\\\\x00/g;goog.string.internal.ALL_RE_=/[\\\\x00&<>\"\\']/;goog.string.internal.whitespaceEscape=function(a,b){return goog.string.internal.newLineToBr(a.replace(/  /g,\" &#160;\"),b)};goog.string.internal.contains=function(a,b){return-1!=a.indexOf(b)};goog.string.internal.caseInsensitiveContains=function(a,b){return goog.string.internal.contains(a.toLowerCase(),b.toLowerCase())};\\ngoog.string.internal.compareVersions=function(a,b){var c=0;a=goog.string.internal.trim(String(a)).split(\".\");b=goog.string.internal.trim(String(b)).split(\".\");const d=Math.max(a.length,b.length);for(let g=0;0==c&&g<d;g++){var e=a[g]||\"\",f=b[g]||\"\";do{e=/(\\\\d*)(\\\\D*)(.*)/.exec(e)||[\"\",\"\",\"\",\"\"];f=/(\\\\d*)(\\\\D*)(.*)/.exec(f)||[\"\",\"\",\"\",\"\"];if(0==e[0].length&&0==f[0].length)break;c=0==e[1].length?0:parseInt(e[1],10);const h=0==f[1].length?0:parseInt(f[1],10);c=goog.string.internal.compareElements_(c,h)||\\ngoog.string.internal.compareElements_(0==e[2].length,0==f[2].length)||goog.string.internal.compareElements_(e[2],f[2]);e=e[3];f=f[3]}while(0==c)}return c};goog.string.internal.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.html.SafeUrl=class{constructor(a,b){this.privateDoNotAccessOrElseSafeUrlWrappedValue_=b===goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_?a:\"\"}toString(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()}};goog.html.SafeUrl.INNOCUOUS_STRING=\"about:invalid#zClosurez\";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()};\\ngoog.html.SafeUrl.unwrap=function(a){if(a instanceof goog.html.SafeUrl&&a.constructor===goog.html.SafeUrl)return a.privateDoNotAccessOrElseSafeUrlWrappedValue_;goog.asserts.fail(\"expected object of type SafeUrl, got \\'\"+a+\"\\' of type \"+goog.typeOf(a));return\"type_error:SafeUrl\"};goog.html.SafeUrl.fromConstant=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};\\ngoog.html.SAFE_MIME_TYPE_PATTERN_=RegExp(\\'^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font/\\\\\\\\w+|image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon|heic|heif)|video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\\\\\\\\w+=(?:\\\\\\\\w+|\"[\\\\\\\\w;,= ]+\"))*$\\',\"i\");goog.html.SafeUrl.isSafeMimeType=function(a){return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a)};\\ngoog.html.SafeUrl.fromBlob=function(a){a=goog.html.SafeUrl.isSafeMimeType(a.type)?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.revokeObjectUrl=function(a){a=a.getTypedStringValue();a!==goog.html.SafeUrl.INNOCUOUS_STRING&&goog.fs.url.revokeObjectUrl(a)};\\ngoog.html.SafeUrl.fromMediaSource=function(a){goog.asserts.assert(\"MediaSource\"in goog.global,\"No support for MediaSource\");a=a instanceof MediaSource?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.DATA_URL_PATTERN_=/^data:(.*);base64,[a-z0-9+\\\\/]+=*$/i;\\ngoog.html.SafeUrl.tryFromDataUrl=function(a){a=String(a);a=a.replace(/(%0A|%0D)/g,\"\");return a.match(goog.html.DATA_URL_PATTERN_)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a):null};goog.html.SafeUrl.fromDataUrl=function(a){return goog.html.SafeUrl.tryFromDataUrl(a)||goog.html.SafeUrl.INNOCUOUS_URL};goog.html.SafeUrl.fromTelUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"tel:\")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\\ngoog.html.SIP_URL_PATTERN_=RegExp(\"^sip[s]?:[+a-z0-9_.!$%&\\'*\\\\\\\\/=^`{|}~-]+@([a-z0-9-]+\\\\\\\\.)+[a-z0-9]{2,63}$\",\"i\");goog.html.SafeUrl.fromSipUrl=function(a){goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a))||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromFacebookMessengerUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"fb-messenger://share\")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\\ngoog.html.SafeUrl.fromWhatsAppUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"whatsapp://send\")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromSmsUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"sms:\")&&goog.html.SafeUrl.isSmsUrlBodyValid_(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\\ngoog.html.SafeUrl.isSmsUrlBodyValid_=function(a){var b=a.indexOf(\"#\");0<b&&(a=a.substring(0,b));b=a.match(/[?&]body=/gi);if(!b)return!0;if(1<b.length)return!1;a=a.match(/[?&]body=([^&]*)/)[1];if(!a)return!0;try{decodeURIComponent(a)}catch(c){return!1}return/^(?:[a-z0-9\\\\-_.~]|%[0-9a-f]{2})+$/i.test(a)};goog.html.SafeUrl.fromSshUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"ssh://\")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\\ngoog.html.SafeUrl.sanitizeChromeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\\\\/\\\\/([^\\\\/]+)\\\\//,a,b)};goog.html.SafeUrl.sanitizeFirefoxExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\\\\/\\\\/([^\\\\/]+)\\\\//,a,b)};goog.html.SafeUrl.sanitizeEdgeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\\\\/\\\\/([^\\\\/]+)\\\\//,a,b)};\\ngoog.html.SafeUrl.sanitizeExtensionUrl_=function(a,b,c){(a=a.exec(b))?(a=a[1],-1==(c instanceof goog.string.Const?[goog.string.Const.unwrap(c)]:c.map(function(d){return goog.string.Const.unwrap(d)})).indexOf(a)&&(b=goog.html.SafeUrl.INNOCUOUS_STRING)):b=goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};goog.html.SafeUrl.fromTrustedResourceUrl=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a))};\\ngoog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;goog.html.SafeUrl.SAFE_URL_PATTERN=goog.html.SAFE_URL_PATTERN_;goog.html.SafeUrl.trySanitize=function(a){if(a instanceof goog.html.SafeUrl)return a;a=\"object\"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return goog.html.SAFE_URL_PATTERN_.test(a)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a):goog.html.SafeUrl.tryFromDataUrl(a)};\\ngoog.html.SafeUrl.sanitize=function(a){return goog.html.SafeUrl.trySanitize(a)||goog.html.SafeUrl.INNOCUOUS_URL};\\ngoog.html.SafeUrl.sanitizeAssertUnchanged=function(a,b){if(a instanceof goog.html.SafeUrl)return a;a=\"object\"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);if(b&&/^data:/i.test(a)&&(b=goog.html.SafeUrl.fromDataUrl(a),b.getTypedStringValue()==a))return b;goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a),\"%s does not match the safe URL pattern\",a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\\ngoog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(a){return new goog.html.SafeUrl(a,goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};goog.html.SafeUrl.INNOCUOUS_URL=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\"about:blank\");const module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE={};\\nclass module$contents$goog$html$SafeStyle_SafeStyle{constructor(a,b){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=b===module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE?a:\"\";this.implementsGoogStringTypedString=!0}static fromConstant(a){a=goog.string.Const.unwrap(a);if(0===a.length)return module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;(0,goog.asserts.assert)((0,goog.string.internal.endsWith)(a,\";\"),`Last character of style string is not \\';\\': ${a}`);(0,goog.asserts.assert)((0,goog.string.internal.contains)(a,\\n\":\"),\"Style string must contain at least one \\':\\', to specify a \\\\\"name: value\\\\\" pair: \"+a);return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a)}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_}toString(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString()}static unwrap(a){if(a instanceof module$contents$goog$html$SafeStyle_SafeStyle&&a.constructor===module$contents$goog$html$SafeStyle_SafeStyle)return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;\\n(0,goog.asserts.fail)(`expected object of type SafeStyle, got \\'${a}`+\"\\' of type \"+goog.typeOf(a));return\"type_error:SafeStyle\"}static createSafeStyleSecurityPrivateDoNotAccessOrElse(a){return new module$contents$goog$html$SafeStyle_SafeStyle(a,module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE)}static create(a){let b=\"\";for(let c in a)if(Object.prototype.hasOwnProperty.call(a,c)){if(!/^[-_a-zA-Z0-9]+$/.test(c))throw Error(`Name allows only [-_a-zA-Z0-9], got: ${c}`);let d=a[c];null!=d&&\\n(d=Array.isArray(d)?d.map(module$contents$goog$html$SafeStyle_sanitizePropertyValue).join(\" \"):module$contents$goog$html$SafeStyle_sanitizePropertyValue(d),b+=`${c}:${d};`)}return b?module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):module$contents$goog$html$SafeStyle_SafeStyle.EMPTY}static concat(a){let b=\"\";const c=d=>{Array.isArray(d)?d.forEach(c):b+=module$contents$goog$html$SafeStyle_SafeStyle.unwrap(d)};Array.prototype.forEach.call(arguments,c);\\nreturn b?module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):module$contents$goog$html$SafeStyle_SafeStyle.EMPTY}}module$contents$goog$html$SafeStyle_SafeStyle.EMPTY=module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(\"\");module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING=\"zClosurez\";\\nfunction module$contents$goog$html$SafeStyle_sanitizePropertyValue(a){if(a instanceof goog.html.SafeUrl)return\\'url(\"\\'+goog.html.SafeUrl.unwrap(a).replace(/</g,\"%3c\").replace(/[\\\\\\\\\"]/g,\"\\\\\\\\$&\")+\\'\")\\';a=a instanceof goog.string.Const?goog.string.Const.unwrap(a):module$contents$goog$html$SafeStyle_sanitizePropertyValueString(String(a));if(/[{;}]/.test(a))throw new module$contents$goog$asserts_AssertionError(\"Value does not allow [{;}], got: %s.\",[a]);return a}\\nfunction module$contents$goog$html$SafeStyle_sanitizePropertyValueString(a){const b=a.replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE,\"$1\").replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE,\"$1\").replace(module$contents$goog$html$SafeStyle_URL_RE,\"url\");if(module$contents$goog$html$SafeStyle_VALUE_RE.test(b)){if(module$contents$goog$html$SafeStyle_COMMENT_RE.test(a))return(0,goog.asserts.fail)(`String value disallows comments, got: ${a}`),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;\\nif(!module$contents$goog$html$SafeStyle_hasBalancedQuotes(a))return(0,goog.asserts.fail)(`String value requires balanced quotes, got: ${a}`),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;if(!module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a))return(0,goog.asserts.fail)(\"String value requires balanced square brackets and one identifier per pair of brackets, got: \"+a),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING}else return(0,goog.asserts.fail)(`String value allows only ${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}`+\\n\" and simple functions, got: \"+a),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;return module$contents$goog$html$SafeStyle_sanitizeUrl(a)}function module$contents$goog$html$SafeStyle_hasBalancedQuotes(a){let b=!0,c=!0;for(let d=0;d<a.length;d++){const e=a.charAt(d);\"\\'\"==e&&c?b=!b:\\'\"\\'==e&&b&&(c=!c)}return b&&c}\\nfunction module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a){let b=!0;const c=/^[-_a-zA-Z0-9]$/;for(let d=0;d<a.length;d++){const e=a.charAt(d);if(\"]\"==e){if(b)return!1;b=!0}else if(\"[\"==e){if(!b)return!1;b=!1}else if(!b&&!c.test(e))return!1}return b}\\nconst module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS=\"[-,.\\\\\"\\'%_!#/ a-zA-Z0-9\\\\\\\\[\\\\\\\\]]\",module$contents$goog$html$SafeStyle_VALUE_RE=new RegExp(`^${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}+\\\\$`),module$contents$goog$html$SafeStyle_URL_RE=RegExp(\"\\\\\\\\b(url\\\\\\\\([ \\\\t\\\\n]*)(\\'[ -&(-\\\\\\\\[\\\\\\\\]-~]*\\'|\\\\\"[ !#-\\\\\\\\[\\\\\\\\]-~]*\\\\\"|[!#-&*-\\\\\\\\[\\\\\\\\]-~]*)([ \\\\t\\\\n]*\\\\\\\\))\",\"g\"),module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS=\"calc cubic-bezier fit-content hsl hsla linear-gradient matrix minmax radial-gradient repeat rgb rgba (rotate|scale|translate)(X|Y|Z|3d)? steps var\".split(\" \"),\\nmodule$contents$goog$html$SafeStyle_FUNCTIONS_RE=new RegExp(\"\\\\\\\\b(\"+module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS.join(\"|\")+\")\\\\\\\\([-+*/0-9a-zA-Z.%#\\\\\\\\[\\\\\\\\], ]+\\\\\\\\)\",\"g\"),module$contents$goog$html$SafeStyle_COMMENT_RE=/\\\\/\\\\*/;function module$contents$goog$html$SafeStyle_sanitizeUrl(a){return a.replace(module$contents$goog$html$SafeStyle_URL_RE,(b,c,d,e)=>{let f=\"\";d=d.replace(/^([\\'\"])(.*)\\\\1$/,(g,h,k)=>{f=h;return k});b=goog.html.SafeUrl.sanitize(d).getTypedStringValue();return c+f+b+f+e})}\\ngoog.html.SafeStyle=module$contents$goog$html$SafeStyle_SafeStyle;goog.object={};function module$contents$goog$object_forEach(a,b,c){for(const d in a)b.call(c,a[d],d,a)}function module$contents$goog$object_filter(a,b,c){const d={};for(const e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d}function module$contents$goog$object_map(a,b,c){const d={};for(const e in a)d[e]=b.call(c,a[e],e,a);return d}function module$contents$goog$object_some(a,b,c){for(const d in a)if(b.call(c,a[d],d,a))return!0;return!1}\\nfunction module$contents$goog$object_every(a,b,c){for(const d in a)if(!b.call(c,a[d],d,a))return!1;return!0}function module$contents$goog$object_getCount(a){let b=0;for(const c in a)b++;return b}function module$contents$goog$object_getAnyKey(a){for(const b in a)return b}function module$contents$goog$object_getAnyValue(a){for(const b in a)return a[b]}function module$contents$goog$object_contains(a,b){return module$contents$goog$object_containsValue(a,b)}\\nfunction module$contents$goog$object_getValues(a){const b=[];let c=0;for(const d in a)b[c++]=a[d];return b}function module$contents$goog$object_getKeys(a){const b=[];let c=0;for(const d in a)b[c++]=d;return b}function module$contents$goog$object_getValueByKeys(a,b){var c=goog.isArrayLike(b);const d=c?b:arguments;for(c=c?0:1;c<d.length;c++){if(null==a)return;a=a[d[c]]}return a}function module$contents$goog$object_containsKey(a,b){return null!==a&&b in a}\\nfunction module$contents$goog$object_containsValue(a,b){for(const c in a)if(a[c]==b)return!0;return!1}function module$contents$goog$object_findKey(a,b,c){for(const d in a)if(b.call(c,a[d],d,a))return d}function module$contents$goog$object_findValue(a,b,c){return(b=module$contents$goog$object_findKey(a,b,c))&&a[b]}function module$contents$goog$object_isEmpty(a){for(const b in a)return!1;return!0}function module$contents$goog$object_clear(a){for(const b in a)delete a[b]}\\nfunction module$contents$goog$object_remove(a,b){let c;(c=b in a)&&delete a[b];return c}function module$contents$goog$object_add(a,b,c){if(null!==a&&b in a)throw Error(`The object already contains the key \"${b}\"`);module$contents$goog$object_set(a,b,c)}function module$contents$goog$object_get(a,b,c){return null!==a&&b in a?a[b]:c}function module$contents$goog$object_set(a,b,c){a[b]=c}function module$contents$goog$object_setIfUndefined(a,b,c){return b in a?a[b]:a[b]=c}\\nfunction module$contents$goog$object_setWithReturnValueIfNotSet(a,b,c){if(b in a)return a[b];c=c();return a[b]=c}function module$contents$goog$object_equals(a,b){for(const c in a)if(!(c in b)||a[c]!==b[c])return!1;for(const c in b)if(!(c in a))return!1;return!0}function module$contents$goog$object_clone(a){const b={};for(const c in a)b[c]=a[c];return b}\\nfunction module$contents$goog$object_unsafeClone(a){if(!a||\"object\"!==typeof a)return a;if(\"function\"===typeof a.clone)return a.clone();if(\"undefined\"!==typeof Map&&a instanceof Map)return new Map(a);if(\"undefined\"!==typeof Set&&a instanceof Set)return new Set(a);if(a instanceof Date)return new Date(a.getTime());const b=Array.isArray(a)?[]:\"function\"!==typeof ArrayBuffer||\"function\"!==typeof ArrayBuffer.isView||!ArrayBuffer.isView(a)||a instanceof DataView?{}:new a.constructor(a.length);for(const c in a)b[c]=\\nmodule$contents$goog$object_unsafeClone(a[c]);return b}function module$contents$goog$object_transpose(a){const b={};for(const c in a)b[a[c]]=c;return b}const module$contents$goog$object_PROTOTYPE_FIELDS=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\\nfunction module$contents$goog$object_extend(a,b){let c,d;for(let e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(let f=0;f<module$contents$goog$object_PROTOTYPE_FIELDS.length;f++)c=module$contents$goog$object_PROTOTYPE_FIELDS[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}}\\nfunction module$contents$goog$object_create(a){const b=arguments.length;if(1==b&&Array.isArray(arguments[0]))return module$contents$goog$object_create.apply(null,arguments[0]);if(b%2)throw Error(\"Uneven number of arguments\");const c={};for(let d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c}\\nfunction module$contents$goog$object_createSet(a){const b=arguments.length;if(1==b&&Array.isArray(arguments[0]))return module$contents$goog$object_createSet.apply(null,arguments[0]);const c={};for(let d=0;d<b;d++)c[arguments[d]]=!0;return c}function module$contents$goog$object_createImmutableView(a){let b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b}function module$contents$goog$object_isImmutableView(a){return!!Object.isFrozen&&Object.isFrozen(a)}\\nfunction module$contents$goog$object_getAllPropertyNames(a,b,c){if(!a)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return module$contents$goog$object_getKeys(a);const d={};for(;a&&(a!==Object.prototype||b)&&(a!==Function.prototype||c);){const e=Object.getOwnPropertyNames(a);for(let f=0;f<e.length;f++)d[e[f]]=!0;a=Object.getPrototypeOf(a)}return module$contents$goog$object_getKeys(d)}\\nfunction module$contents$goog$object_getSuperClass(a){return(a=Object.getPrototypeOf(a.prototype))&&a.constructor}goog.object.add=module$contents$goog$object_add;goog.object.clear=module$contents$goog$object_clear;goog.object.clone=module$contents$goog$object_clone;goog.object.contains=module$contents$goog$object_contains;goog.object.containsKey=module$contents$goog$object_containsKey;goog.object.containsValue=module$contents$goog$object_containsValue;goog.object.create=module$contents$goog$object_create;\\ngoog.object.createImmutableView=module$contents$goog$object_createImmutableView;goog.object.createSet=module$contents$goog$object_createSet;goog.object.equals=module$contents$goog$object_equals;goog.object.every=module$contents$goog$object_every;goog.object.extend=module$contents$goog$object_extend;goog.object.filter=module$contents$goog$object_filter;goog.object.findKey=module$contents$goog$object_findKey;goog.object.findValue=module$contents$goog$object_findValue;goog.object.forEach=module$contents$goog$object_forEach;\\ngoog.object.get=module$contents$goog$object_get;goog.object.getAllPropertyNames=module$contents$goog$object_getAllPropertyNames;goog.object.getAnyKey=module$contents$goog$object_getAnyKey;goog.object.getAnyValue=module$contents$goog$object_getAnyValue;goog.object.getCount=module$contents$goog$object_getCount;goog.object.getKeys=module$contents$goog$object_getKeys;goog.object.getSuperClass=module$contents$goog$object_getSuperClass;goog.object.getValueByKeys=module$contents$goog$object_getValueByKeys;\\ngoog.object.getValues=module$contents$goog$object_getValues;goog.object.isEmpty=module$contents$goog$object_isEmpty;goog.object.isImmutableView=module$contents$goog$object_isImmutableView;goog.object.map=module$contents$goog$object_map;goog.object.remove=module$contents$goog$object_remove;goog.object.set=module$contents$goog$object_set;goog.object.setIfUndefined=module$contents$goog$object_setIfUndefined;goog.object.setWithReturnValueIfNotSet=module$contents$goog$object_setWithReturnValueIfNotSet;\\ngoog.object.some=module$contents$goog$object_some;goog.object.transpose=module$contents$goog$object_transpose;goog.object.unsafeClone=module$contents$goog$object_unsafeClone;const module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE={};\\nclass module$contents$goog$html$SafeStyleSheet_SafeStyleSheet{constructor(a,b){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=b===module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE?a:\"\";this.implementsGoogStringTypedString=!0}toString(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString()}static createRule(a,b){if((0,goog.string.internal.contains)(a,\"<\"))throw Error(`Selector does not allow \\'<\\', got: ${a}`);const c=a.replace(/(\\'|\")((?!\\\\1)[^\\\\r\\\\n\\\\f\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*\\\\1/g,\\n\"\");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\\\\]()=^$|]+$/.test(c))throw Error(\"Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\\\\\\\]()=^$|] and strings, got: \"+a);if(!module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.hasBalancedBrackets_(c))throw Error(\"() and [] in selector must be balanced, got: \"+a);b instanceof module$contents$goog$html$SafeStyle_SafeStyle||(b=module$contents$goog$html$SafeStyle_SafeStyle.create(b));a=`${a}{`+module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b).replace(/</g,\"\\\\\\\\3C \")+\"}\";\\nreturn module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)}static hasBalancedBrackets_(a){const b={\"(\":\")\",\"[\":\"]\"},c=[];for(let d=0;d<a.length;d++){const e=a[d];if(b[e])c.push(b[e]);else if(module$contents$goog$object_contains(b,e)&&c.pop()!=e)return!1}return 0==c.length}static concat(a){let b=\"\";const c=d=>{Array.isArray(d)?d.forEach(c):b+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(d)};Array.prototype.forEach.call(arguments,\\nc);return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)}static fromConstant(a){a=goog.string.Const.unwrap(a);if(0===a.length)return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY;(0,goog.asserts.assert)(!(0,goog.string.internal.contains)(a,\"<\"),`Forbidden \\'<\\' character in style sheet string: ${a}`);return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_}static unwrap(a){if(a instanceof\\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet&&a.constructor===module$contents$goog$html$SafeStyleSheet_SafeStyleSheet)return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;(0,goog.asserts.fail)(\"expected object of type SafeStyleSheet, got \\'\"+a+\"\\' of type \"+goog.typeOf(a));return\"type_error:SafeStyleSheet\"}static createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a){return new module$contents$goog$html$SafeStyleSheet_SafeStyleSheet(a,module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE)}}\\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(\"\");goog.html.SafeStyleSheet=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet;goog.dom.HtmlElement=function(){};goog.dom.TagName=class{static cast(a,b){return a}constructor(){}toString(){}};goog.dom.TagName.A=\"A\";goog.dom.TagName.ABBR=\"ABBR\";goog.dom.TagName.ACRONYM=\"ACRONYM\";goog.dom.TagName.ADDRESS=\"ADDRESS\";goog.dom.TagName.APPLET=\"APPLET\";goog.dom.TagName.AREA=\"AREA\";goog.dom.TagName.ARTICLE=\"ARTICLE\";goog.dom.TagName.ASIDE=\"ASIDE\";goog.dom.TagName.AUDIO=\"AUDIO\";goog.dom.TagName.B=\"B\";goog.dom.TagName.BASE=\"BASE\";goog.dom.TagName.BASEFONT=\"BASEFONT\";goog.dom.TagName.BDI=\"BDI\";goog.dom.TagName.BDO=\"BDO\";\\ngoog.dom.TagName.BIG=\"BIG\";goog.dom.TagName.BLOCKQUOTE=\"BLOCKQUOTE\";goog.dom.TagName.BODY=\"BODY\";goog.dom.TagName.BR=\"BR\";goog.dom.TagName.BUTTON=\"BUTTON\";goog.dom.TagName.CANVAS=\"CANVAS\";goog.dom.TagName.CAPTION=\"CAPTION\";goog.dom.TagName.CENTER=\"CENTER\";goog.dom.TagName.CITE=\"CITE\";goog.dom.TagName.CODE=\"CODE\";goog.dom.TagName.COL=\"COL\";goog.dom.TagName.COLGROUP=\"COLGROUP\";goog.dom.TagName.COMMAND=\"COMMAND\";goog.dom.TagName.DATA=\"DATA\";goog.dom.TagName.DATALIST=\"DATALIST\";goog.dom.TagName.DD=\"DD\";\\ngoog.dom.TagName.DEL=\"DEL\";goog.dom.TagName.DETAILS=\"DETAILS\";goog.dom.TagName.DFN=\"DFN\";goog.dom.TagName.DIALOG=\"DIALOG\";goog.dom.TagName.DIR=\"DIR\";goog.dom.TagName.DIV=\"DIV\";goog.dom.TagName.DL=\"DL\";goog.dom.TagName.DT=\"DT\";goog.dom.TagName.EM=\"EM\";goog.dom.TagName.EMBED=\"EMBED\";goog.dom.TagName.FIELDSET=\"FIELDSET\";goog.dom.TagName.FIGCAPTION=\"FIGCAPTION\";goog.dom.TagName.FIGURE=\"FIGURE\";goog.dom.TagName.FONT=\"FONT\";goog.dom.TagName.FOOTER=\"FOOTER\";goog.dom.TagName.FORM=\"FORM\";\\ngoog.dom.TagName.FRAME=\"FRAME\";goog.dom.TagName.FRAMESET=\"FRAMESET\";goog.dom.TagName.H1=\"H1\";goog.dom.TagName.H2=\"H2\";goog.dom.TagName.H3=\"H3\";goog.dom.TagName.H4=\"H4\";goog.dom.TagName.H5=\"H5\";goog.dom.TagName.H6=\"H6\";goog.dom.TagName.HEAD=\"HEAD\";goog.dom.TagName.HEADER=\"HEADER\";goog.dom.TagName.HGROUP=\"HGROUP\";goog.dom.TagName.HR=\"HR\";goog.dom.TagName.HTML=\"HTML\";goog.dom.TagName.I=\"I\";goog.dom.TagName.IFRAME=\"IFRAME\";goog.dom.TagName.IMG=\"IMG\";goog.dom.TagName.INPUT=\"INPUT\";\\ngoog.dom.TagName.INS=\"INS\";goog.dom.TagName.ISINDEX=\"ISINDEX\";goog.dom.TagName.KBD=\"KBD\";goog.dom.TagName.KEYGEN=\"KEYGEN\";goog.dom.TagName.LABEL=\"LABEL\";goog.dom.TagName.LEGEND=\"LEGEND\";goog.dom.TagName.LI=\"LI\";goog.dom.TagName.LINK=\"LINK\";goog.dom.TagName.MAIN=\"MAIN\";goog.dom.TagName.MAP=\"MAP\";goog.dom.TagName.MARK=\"MARK\";goog.dom.TagName.MATH=\"MATH\";goog.dom.TagName.MENU=\"MENU\";goog.dom.TagName.MENUITEM=\"MENUITEM\";goog.dom.TagName.META=\"META\";goog.dom.TagName.METER=\"METER\";\\ngoog.dom.TagName.NAV=\"NAV\";goog.dom.TagName.NOFRAMES=\"NOFRAMES\";goog.dom.TagName.NOSCRIPT=\"NOSCRIPT\";goog.dom.TagName.OBJECT=\"OBJECT\";goog.dom.TagName.OL=\"OL\";goog.dom.TagName.OPTGROUP=\"OPTGROUP\";goog.dom.TagName.OPTION=\"OPTION\";goog.dom.TagName.OUTPUT=\"OUTPUT\";goog.dom.TagName.P=\"P\";goog.dom.TagName.PARAM=\"PARAM\";goog.dom.TagName.PICTURE=\"PICTURE\";goog.dom.TagName.PRE=\"PRE\";goog.dom.TagName.PROGRESS=\"PROGRESS\";goog.dom.TagName.Q=\"Q\";goog.dom.TagName.RP=\"RP\";goog.dom.TagName.RT=\"RT\";\\ngoog.dom.TagName.RTC=\"RTC\";goog.dom.TagName.RUBY=\"RUBY\";goog.dom.TagName.S=\"S\";goog.dom.TagName.SAMP=\"SAMP\";goog.dom.TagName.SCRIPT=\"SCRIPT\";goog.dom.TagName.SECTION=\"SECTION\";goog.dom.TagName.SELECT=\"SELECT\";goog.dom.TagName.SMALL=\"SMALL\";goog.dom.TagName.SOURCE=\"SOURCE\";goog.dom.TagName.SPAN=\"SPAN\";goog.dom.TagName.STRIKE=\"STRIKE\";goog.dom.TagName.STRONG=\"STRONG\";goog.dom.TagName.STYLE=\"STYLE\";goog.dom.TagName.SUB=\"SUB\";goog.dom.TagName.SUMMARY=\"SUMMARY\";goog.dom.TagName.SUP=\"SUP\";\\ngoog.dom.TagName.SVG=\"SVG\";goog.dom.TagName.TABLE=\"TABLE\";goog.dom.TagName.TBODY=\"TBODY\";goog.dom.TagName.TD=\"TD\";goog.dom.TagName.TEMPLATE=\"TEMPLATE\";goog.dom.TagName.TEXTAREA=\"TEXTAREA\";goog.dom.TagName.TFOOT=\"TFOOT\";goog.dom.TagName.TH=\"TH\";goog.dom.TagName.THEAD=\"THEAD\";goog.dom.TagName.TIME=\"TIME\";goog.dom.TagName.TITLE=\"TITLE\";goog.dom.TagName.TR=\"TR\";goog.dom.TagName.TRACK=\"TRACK\";goog.dom.TagName.TT=\"TT\";goog.dom.TagName.U=\"U\";goog.dom.TagName.UL=\"UL\";goog.dom.TagName.VAR=\"VAR\";\\ngoog.dom.TagName.VIDEO=\"VIDEO\";goog.dom.TagName.WBR=\"WBR\";goog.labs={};goog.labs.userAgent={};const module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE=\"\",module$contents$goog$labs$userAgent_USE_CLIENT_HINTS=!1;let module$contents$goog$labs$userAgent_forceClientHintsInTests=!1;goog.labs.userAgent.setUseClientHintsForTesting=a=>{module$contents$goog$labs$userAgent_forceClientHintsInTests=a};\\nconst module$contents$goog$labs$userAgent_useClientHintsRuntimeOverride=module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE?!!goog.getObjectByName(module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE):!1;goog.labs.userAgent.useClientHints=()=>module$contents$goog$labs$userAgent_USE_CLIENT_HINTS||module$contents$goog$labs$userAgent_useClientHintsRuntimeOverride||module$contents$goog$labs$userAgent_forceClientHintsInTests;goog.labs.userAgent.util={};const module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT=!1;function module$contents$goog$labs$userAgent$util_getNativeUserAgentString(){var a=module$contents$goog$labs$userAgent$util_getNavigator();return a&&(a=a.userAgent)?a:\"\"}function module$contents$goog$labs$userAgent$util_getNativeUserAgentData(){const a=module$contents$goog$labs$userAgent$util_getNavigator();return a?a.userAgentData||null:null}\\nfunction module$contents$goog$labs$userAgent$util_getNavigator(){return goog.global.navigator}let module$contents$goog$labs$userAgent$util_userAgentInternal=null,module$contents$goog$labs$userAgent$util_userAgentDataInternal=module$contents$goog$labs$userAgent$util_getNativeUserAgentData();\\nfunction module$contents$goog$labs$userAgent$util_setUserAgent(a){module$contents$goog$labs$userAgent$util_userAgentInternal=\"string\"===typeof a?a:module$contents$goog$labs$userAgent$util_getNativeUserAgentString()}function module$contents$goog$labs$userAgent$util_getUserAgent(){return null==module$contents$goog$labs$userAgent$util_userAgentInternal?module$contents$goog$labs$userAgent$util_getNativeUserAgentString():module$contents$goog$labs$userAgent$util_userAgentInternal}\\nfunction module$contents$goog$labs$userAgent$util_setUserAgentData(a){module$contents$goog$labs$userAgent$util_userAgentDataInternal=a}function module$contents$goog$labs$userAgent$util_resetUserAgentData(){module$contents$goog$labs$userAgent$util_userAgentDataInternal=module$contents$goog$labs$userAgent$util_getNativeUserAgentData()}function module$contents$goog$labs$userAgent$util_getUserAgentData(){return module$contents$goog$labs$userAgent$util_userAgentDataInternal}\\nfunction module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(a){if(!(0,goog.labs.userAgent.useClientHints)())return!1;const b=module$contents$goog$labs$userAgent$util_getUserAgentData();return b?b.brands.some(({brand:c})=>c&&(0,goog.string.internal.contains)(c,a)):!1}function module$contents$goog$labs$userAgent$util_matchUserAgent(a){const b=module$contents$goog$labs$userAgent$util_getUserAgent();return(0,goog.string.internal.contains)(b,a)}\\nfunction module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase(a){const b=module$contents$goog$labs$userAgent$util_getUserAgent();return(0,goog.string.internal.caseInsensitiveContains)(b,a)}function module$contents$goog$labs$userAgent$util_extractVersionTuples(a){const b=RegExp(\"([A-Z][\\\\\\\\w ]+)/([^\\\\\\\\s]+)\\\\\\\\s*(?:\\\\\\\\((.*?)\\\\\\\\))?\",\"g\"),c=[];let d;for(;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c}goog.labs.userAgent.util.ASSUME_CLIENT_HINTS_SUPPORT=module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT;\\ngoog.labs.userAgent.util.extractVersionTuples=module$contents$goog$labs$userAgent$util_extractVersionTuples;goog.labs.userAgent.util.getNativeUserAgentString=module$contents$goog$labs$userAgent$util_getNativeUserAgentString;goog.labs.userAgent.util.getUserAgent=module$contents$goog$labs$userAgent$util_getUserAgent;goog.labs.userAgent.util.getUserAgentData=module$contents$goog$labs$userAgent$util_getUserAgentData;goog.labs.userAgent.util.matchUserAgent=module$contents$goog$labs$userAgent$util_matchUserAgent;\\ngoog.labs.userAgent.util.matchUserAgentDataBrand=module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand;goog.labs.userAgent.util.matchUserAgentIgnoreCase=module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase;goog.labs.userAgent.util.resetUserAgentData=module$contents$goog$labs$userAgent$util_resetUserAgentData;goog.labs.userAgent.util.setUserAgent=module$contents$goog$labs$userAgent$util_setUserAgent;goog.labs.userAgent.util.setUserAgentData=module$contents$goog$labs$userAgent$util_setUserAgentData;var module$exports$goog$labs$userAgent$highEntropy$highEntropyValue={AsyncValue:class{getIfLoaded(){}load(){}},HighEntropyValue:class{constructor(a){this.key_=a;this.promise_=this.value_=void 0;this.pending_=!1}getIfLoaded(){if(module$contents$goog$labs$userAgent$util_getUserAgentData())return this.value_}async load(){const a=module$contents$goog$labs$userAgent$util_getUserAgentData();if(a)return this.promise_||(this.pending_=!0,this.promise_=(async()=>{try{return this.value_=(await a.getHighEntropyValues([this.key_]))[this.key_]}finally{this.pending_=\\n!1}})()),await this.promise_}resetForTesting(){if(this.pending_)throw Error(\"Unsafe call to resetForTesting\");this.value_=this.promise_=void 0;this.pending_=!1}},Version:class{constructor(a){this.versionString_=a}toVersionStringForLogging(){return this.versionString_}isAtLeast(a){return 0<=(0,goog.string.internal.compareVersions)(this.versionString_,a)}}};var module$exports$goog$labs$userAgent$highEntropy$highEntropyData={};module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue(\"fullVersionList\");module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue(\"platformVersion\");goog.labs.userAgent.browser={};const module$contents$goog$labs$userAgent$browser_Brand={ANDROID_BROWSER:\"Android Browser\",CHROMIUM:\"Chromium\",EDGE:\"Microsoft Edge\",FIREFOX:\"Firefox\",IE:\"Internet Explorer\",OPERA:\"Opera\",SAFARI:\"Safari\",SILK:\"Silk\"};goog.labs.userAgent.browser.Brand=module$contents$goog$labs$userAgent$browser_Brand;\\nfunction module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(a=!1){if(module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT)return!0;if(!a&&!(0,goog.labs.userAgent.useClientHints)())return!1;a=module$contents$goog$labs$userAgent$util_getUserAgentData();return!!a&&0<a.brands.length}\\nfunction module$contents$goog$labs$userAgent$browser_hasFullVersionList(){return module$contents$goog$labs$userAgent$browser_isAtLeast(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM,98)}function module$contents$goog$labs$userAgent$browser_matchOpera(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent(\"Opera\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchIE(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent(\"Trident\")||module$contents$goog$labs$userAgent$util_matchUserAgent(\"MSIE\")}function module$contents$goog$labs$userAgent$browser_matchEdgeHtml(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent(\"Edge\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchEdgeChromium(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.EDGE):module$contents$goog$labs$userAgent$util_matchUserAgent(\"Edg/\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchOperaChromium(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.OPERA):module$contents$goog$labs$userAgent$util_matchUserAgent(\"OPR\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchFirefox(){return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Firefox\")||module$contents$goog$labs$userAgent$util_matchUserAgent(\"FxiOS\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchSafari(){return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Safari\")&&!(module$contents$goog$labs$userAgent$browser_matchChrome()||module$contents$goog$labs$userAgent$browser_matchCoast()||module$contents$goog$labs$userAgent$browser_matchOpera()||module$contents$goog$labs$userAgent$browser_matchEdgeHtml()||module$contents$goog$labs$userAgent$browser_matchEdgeChromium()||module$contents$goog$labs$userAgent$browser_matchOperaChromium()||\\nmodule$contents$goog$labs$userAgent$browser_matchFirefox()||module$contents$goog$labs$userAgent$browser_isSilk()||module$contents$goog$labs$userAgent$util_matchUserAgent(\"Android\"))}function module$contents$goog$labs$userAgent$browser_matchCoast(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent(\"Coast\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchIosWebview(){return(module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPad\")||module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPhone\"))&&!module$contents$goog$labs$userAgent$browser_matchSafari()&&!module$contents$goog$labs$userAgent$browser_matchChrome()&&!module$contents$goog$labs$userAgent$browser_matchCoast()&&!module$contents$goog$labs$userAgent$browser_matchFirefox()&&module$contents$goog$labs$userAgent$util_matchUserAgent(\"AppleWebKit\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchChrome(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM):(module$contents$goog$labs$userAgent$util_matchUserAgent(\"Chrome\")||module$contents$goog$labs$userAgent$util_matchUserAgent(\"CriOS\"))&&!module$contents$goog$labs$userAgent$browser_matchEdgeHtml()||module$contents$goog$labs$userAgent$browser_isSilk()}\\nfunction module$contents$goog$labs$userAgent$browser_matchAndroidBrowser(){return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Android\")&&!(module$contents$goog$labs$userAgent$browser_matchChrome()||module$contents$goog$labs$userAgent$browser_matchFirefox()||module$contents$goog$labs$userAgent$browser_matchOpera()||module$contents$goog$labs$userAgent$browser_isSilk())}const module$contents$goog$labs$userAgent$browser_isOpera=module$contents$goog$labs$userAgent$browser_matchOpera;\\ngoog.labs.userAgent.browser.isOpera=module$contents$goog$labs$userAgent$browser_matchOpera;const module$contents$goog$labs$userAgent$browser_isIE=module$contents$goog$labs$userAgent$browser_matchIE;goog.labs.userAgent.browser.isIE=module$contents$goog$labs$userAgent$browser_matchIE;const module$contents$goog$labs$userAgent$browser_isEdge=module$contents$goog$labs$userAgent$browser_matchEdgeHtml;goog.labs.userAgent.browser.isEdge=module$contents$goog$labs$userAgent$browser_matchEdgeHtml;\\nconst module$contents$goog$labs$userAgent$browser_isEdgeChromium=module$contents$goog$labs$userAgent$browser_matchEdgeChromium;goog.labs.userAgent.browser.isEdgeChromium=module$contents$goog$labs$userAgent$browser_matchEdgeChromium;const module$contents$goog$labs$userAgent$browser_isOperaChromium=module$contents$goog$labs$userAgent$browser_matchOperaChromium;goog.labs.userAgent.browser.isOperaChromium=module$contents$goog$labs$userAgent$browser_matchOperaChromium;\\nconst module$contents$goog$labs$userAgent$browser_isFirefox=module$contents$goog$labs$userAgent$browser_matchFirefox;goog.labs.userAgent.browser.isFirefox=module$contents$goog$labs$userAgent$browser_matchFirefox;const module$contents$goog$labs$userAgent$browser_isSafari=module$contents$goog$labs$userAgent$browser_matchSafari;goog.labs.userAgent.browser.isSafari=module$contents$goog$labs$userAgent$browser_matchSafari;const module$contents$goog$labs$userAgent$browser_isCoast=module$contents$goog$labs$userAgent$browser_matchCoast;\\ngoog.labs.userAgent.browser.isCoast=module$contents$goog$labs$userAgent$browser_matchCoast;const module$contents$goog$labs$userAgent$browser_isIosWebview=module$contents$goog$labs$userAgent$browser_matchIosWebview;goog.labs.userAgent.browser.isIosWebview=module$contents$goog$labs$userAgent$browser_matchIosWebview;const module$contents$goog$labs$userAgent$browser_isChrome=module$contents$goog$labs$userAgent$browser_matchChrome;goog.labs.userAgent.browser.isChrome=module$contents$goog$labs$userAgent$browser_matchChrome;\\nconst module$contents$goog$labs$userAgent$browser_isAndroidBrowser=module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;goog.labs.userAgent.browser.isAndroidBrowser=module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;function module$contents$goog$labs$userAgent$browser_isSilk(){return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Silk\")}goog.labs.userAgent.browser.isSilk=module$contents$goog$labs$userAgent$browser_isSilk;\\nfunction module$contents$goog$labs$userAgent$browser_createVersionMap(a){const b={};a.forEach(c=>{b[c[0]]=c[1]});return c=>b[c.find(d=>d in b)]||\"\"}\\nfunction module$contents$goog$labs$userAgent$browser_getVersion(){var a=module$contents$goog$labs$userAgent$util_getUserAgent();if(module$contents$goog$labs$userAgent$browser_matchIE())return module$contents$goog$labs$userAgent$browser_getIEVersion(a);a=module$contents$goog$labs$userAgent$util_extractVersionTuples(a);const b=module$contents$goog$labs$userAgent$browser_createVersionMap(a);return module$contents$goog$labs$userAgent$browser_matchOpera()?b([\"Version\",\"Opera\"]):module$contents$goog$labs$userAgent$browser_matchEdgeHtml()?\\nb([\"Edge\"]):module$contents$goog$labs$userAgent$browser_matchEdgeChromium()?b([\"Edg\"]):module$contents$goog$labs$userAgent$browser_isSilk()?b([\"Silk\"]):module$contents$goog$labs$userAgent$browser_matchChrome()?b([\"Chrome\",\"CriOS\",\"HeadlessChrome\"]):(a=a[2])&&a[1]||\"\"}goog.labs.userAgent.browser.getVersion=module$contents$goog$labs$userAgent$browser_getVersion;\\nfunction module$contents$goog$labs$userAgent$browser_isVersionOrHigher(a){return 0<=(0,goog.string.internal.compareVersions)(module$contents$goog$labs$userAgent$browser_getVersion(),a)}goog.labs.userAgent.browser.isVersionOrHigher=module$contents$goog$labs$userAgent$browser_isVersionOrHigher;\\nfunction module$contents$goog$labs$userAgent$browser_getIEVersion(a){var b=/rv: *([\\\\d\\\\.]*)/.exec(a);if(b&&b[1])return b[1];b=\"\";const c=/MSIE +([\\\\d\\\\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\\\\/(\\\\d.\\\\d)/.exec(a),\"7.0\"==c[1])if(a&&a[1])switch(a[1]){case \"4.0\":b=\"8.0\";break;case \"5.0\":b=\"9.0\";break;case \"6.0\":b=\"10.0\";break;case \"7.0\":b=\"11.0\"}else b=\"7.0\";else b=c[1];return b}\\nfunction module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a){var b=module$contents$goog$labs$userAgent$util_getUserAgent();if(a===module$contents$goog$labs$userAgent$browser_Brand.IE)return module$contents$goog$labs$userAgent$browser_matchIE()?module$contents$goog$labs$userAgent$browser_getIEVersion(b):\"\";b=module$contents$goog$labs$userAgent$util_extractVersionTuples(b);const c=module$contents$goog$labs$userAgent$browser_createVersionMap(b);switch(a){case module$contents$goog$labs$userAgent$browser_Brand.OPERA:if(module$contents$goog$labs$userAgent$browser_matchOpera())return c([\"Version\",\\n\"Opera\"]);if(module$contents$goog$labs$userAgent$browser_matchOperaChromium())return c([\"OPR\"]);break;case module$contents$goog$labs$userAgent$browser_Brand.EDGE:if(module$contents$goog$labs$userAgent$browser_matchEdgeHtml())return c([\"Edge\"]);if(module$contents$goog$labs$userAgent$browser_matchEdgeChromium())return c([\"Edg\"]);break;case module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM:if(module$contents$goog$labs$userAgent$browser_matchChrome())return c([\"Chrome\",\"CriOS\",\"HeadlessChrome\"])}return a===\\nmodule$contents$goog$labs$userAgent$browser_Brand.FIREFOX&&module$contents$goog$labs$userAgent$browser_matchFirefox()||a===module$contents$goog$labs$userAgent$browser_Brand.SAFARI&&module$contents$goog$labs$userAgent$browser_matchSafari()||a===module$contents$goog$labs$userAgent$browser_Brand.ANDROID_BROWSER&&module$contents$goog$labs$userAgent$browser_matchAndroidBrowser()||a===module$contents$goog$labs$userAgent$browser_Brand.SILK&&module$contents$goog$labs$userAgent$browser_isSilk()?(a=b[2])&&\\na[1]||\"\":\"\"}\\nfunction module$contents$goog$labs$userAgent$browser_versionOf_(a){if(module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()&&a!==module$contents$goog$labs$userAgent$browser_Brand.SILK){var b=module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:c})=>c===a);if(!b||!b.version)return NaN;b=b.version.split(\".\")}else{b=module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a);if(\"\"===b)return NaN;b=b.split(\".\")}return 0===b.length?NaN:Number(b[0])}\\nfunction module$contents$goog$labs$userAgent$browser_isAtLeast(a,b){(0,goog.asserts.assert)(Math.floor(b)===b,\"Major version must be an integer\");return module$contents$goog$labs$userAgent$browser_versionOf_(a)>=b}goog.labs.userAgent.browser.isAtLeast=module$contents$goog$labs$userAgent$browser_isAtLeast;\\nfunction module$contents$goog$labs$userAgent$browser_isAtMost(a,b){(0,goog.asserts.assert)(Math.floor(b)===b,\"Major version must be an integer\");return module$contents$goog$labs$userAgent$browser_versionOf_(a)<=b}goog.labs.userAgent.browser.isAtMost=module$contents$goog$labs$userAgent$browser_isAtMost;\\nclass module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion{constructor(a,b,c){this.brand_=a;this.version_=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(c);this.useUach_=b}getIfLoaded(){if(this.useUach_){var a=module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.getIfLoaded();if(void 0!==a)return a=a.find(({brand:b})=>this.brand_===b),(0,goog.asserts.assertExists)(a),new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(a.version)}if(module$contents$goog$labs$userAgent$browser_preUachHasLoaded)return this.version_}async load(){if(this.useUach_){var a=\\nawait module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load();if(void 0!==a)return a=a.find(({brand:b})=>this.brand_===b),(0,goog.asserts.assertExists)(a),new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(a.version)}else await 0;module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!0;return this.version_}}let module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!1;\\nasync function module$contents$goog$labs$userAgent$browser_loadFullVersions(){module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0)&&await module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load();module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!0}goog.labs.userAgent.browser.loadFullVersions=module$contents$goog$labs$userAgent$browser_loadFullVersions;\\ngoog.labs.userAgent.browser.resetForTesting=()=>{module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!1;module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.resetForTesting()};\\nfunction module$contents$goog$labs$userAgent$browser_fullVersionOf(a){let b=\"\";module$contents$goog$labs$userAgent$browser_hasFullVersionList()||(b=module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a));const c=a!==module$contents$goog$labs$userAgent$browser_Brand.SILK&&module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0);if(c){if(!module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:d})=>d===a))return}else if(\"\"===b)return;return new module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion(a,\\nc,b)}goog.labs.userAgent.browser.fullVersionOf=module$contents$goog$labs$userAgent$browser_fullVersionOf;\\nfunction module$contents$goog$labs$userAgent$browser_getVersionStringForLogging(a){if(module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0)){var b=module$contents$goog$labs$userAgent$browser_fullVersionOf(a);if(b){if(b=b.getIfLoaded())return b.toVersionStringForLogging();b=module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:c})=>c===a);(0,goog.asserts.assertExists)(b);return b.version}return\"\"}return module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a)}\\ngoog.labs.userAgent.browser.getVersionStringForLogging=module$contents$goog$labs$userAgent$browser_getVersionStringForLogging;goog.dom.tags={};goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};goog.dom.tags.isVoidTag=function(a){return!0===goog.dom.tags.VOID_TAGS_[a]};const module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE={};\\nclass module$contents$goog$html$SafeHtml_SafeHtml{constructor(a,b){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=b===module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE?a:\"\";this.implementsGoogStringTypedString=!0}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()}toString(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()}static unwrap(a){return module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(a).toString()}static unwrapTrustedHTML(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml&&\\na.constructor===module$contents$goog$html$SafeHtml_SafeHtml)return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;goog.asserts.fail(`expected object of type SafeHtml, got \\'${a}\\' of type `+goog.typeOf(a));return\"type_error:SafeHtml\"}static htmlEscape(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml)return a;a=\"object\"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a))}static htmlEscapePreservingNewlines(a){if(a instanceof\\nmodule$contents$goog$html$SafeHtml_SafeHtml)return a;a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static htmlEscapePreservingNewlinesAndSpaces(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml)return a;a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static comment(a){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"\\\\x3c!--\"+\\ngoog.string.internal.htmlEscape(a)+\"--\\\\x3e\")}static create(a,b,c){module$contents$goog$html$SafeHtml_SafeHtml.verifyTagName(String(a));return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a),b,c)}static verifyTagName(a){if(!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(a))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Invalid tag name <${a}>.`:\"\");if(a.toUpperCase()in module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\\n`Tag name <${a}> is not allowed for SafeHtml.`:\"\");}static createIframe(a,b,c,d){a&&goog.html.TrustedResourceUrl.unwrap(a);const e={};e.src=a||null;e.srcdoc=b&&module$contents$goog$html$SafeHtml_SafeHtml.unwrap(b);a=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e,{sandbox:\"\"},c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"iframe\",a,d)}static createSandboxIframe(a,b,c,d){if(!module$contents$goog$html$SafeHtml_SafeHtml.canUseSandboxIframe())throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\\n\"The browser does not support sandboxed iframes.\":\"\");const e={};e.src=a?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)):null;e.srcdoc=b||null;e.sandbox=\"\";a=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e,{},c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"iframe\",a,d)}static canUseSandboxIframe(){return goog.global.HTMLIFrameElement&&\"sandbox\"in goog.global.HTMLIFrameElement.prototype}static createScriptSrc(a,b){goog.html.TrustedResourceUrl.unwrap(a);\\na=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({src:a},{},b);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"script\",a)}static createScript(a,b){for(var c in b)if(Object.prototype.hasOwnProperty.call(b,c)){var d=c.toLowerCase();if(\"language\"==d||\"src\"==d||\"text\"==d)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Cannot set \"${d}\" attribute`:\"\");}c=\"\";a=module$contents$goog$array_concat(a);for(d=0;d<\\na.length;d++)c+=module$contents$goog$html$SafeScript_SafeScript.unwrap(a[d]);a=module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"script\",b,a)}static createStyle(a,b){b=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({type:\"text/css\"},{},b);let c=\"\";a=module$contents$goog$array_concat(a);for(let d=0;d<a.length;d++)c+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(a[d]);\\na=module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"style\",b,a)}static createMetaRefresh(a,b){a=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a));(module$contents$goog$labs$userAgent$browser_matchIE()||module$contents$goog$labs$userAgent$browser_matchEdgeHtml())&&goog.string.internal.contains(a,\";\")&&(a=\"\\'\"+a.replace(/\\'/g,\"%27\")+\"\\'\");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"meta\",\\n{\"http-equiv\":\"refresh\",content:(b||0)+\"; url=\"+a})}static join(a,b){a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);const c=[],d=e=>{Array.isArray(e)?e.forEach(d):(e=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(e),c.push(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(e)))};b.forEach(d);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c.join(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static concat(a){return module$contents$goog$html$SafeHtml_SafeHtml.join(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY,\\nArray.prototype.slice.call(arguments))}static createSafeHtmlSecurityPrivateDoNotAccessOrElse(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createHTML(a):a;return new module$contents$goog$html$SafeHtml_SafeHtml(a,module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE)}static createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(a,b,c){b=`<${a}`+module$contents$goog$html$SafeHtml_SafeHtml.stringifyAttributes(a,b);null==c?c=[]:Array.isArray(c)||(c=[c]);goog.dom.tags.isVoidTag(a.toLowerCase())?\\n(goog.asserts.assert(!c.length,`Void tag <${a}> does not allow content.`),b+=\">\"):(c=module$contents$goog$html$SafeHtml_SafeHtml.concat(c),b+=\">\"+module$contents$goog$html$SafeHtml_SafeHtml.unwrap(c)+\"</\"+a+\">\");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b)}static stringifyAttributes(a,b){let c=\"\";if(b)for(let d in b)if(Object.prototype.hasOwnProperty.call(b,d)){if(!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(d))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\\n`Invalid attribute name \"${d}\".`:\"\");const e=b[d];null!=e&&(c+=\" \"+module$contents$goog$html$SafeHtml_getAttrNameAndValue(a,d,e))}return c}static combineAttributes(a,b,c){const d={};for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&(goog.asserts.assert(e.toLowerCase()==e,\"Must be lower case\"),d[e]=a[e]);for(const f in b)Object.prototype.hasOwnProperty.call(b,f)&&(goog.asserts.assert(f.toLowerCase()==f,\"Must be lower case\"),d[f]=b[f]);if(c)for(const f in c)if(Object.prototype.hasOwnProperty.call(c,\\nf)){e=f.toLowerCase();if(e in a)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Cannot override \"${e}\" attribute, got \"`+f+\\'\" with value \"\\'+c[f]+\\'\"\\':\"\");e in b&&delete d[e];d[f]=c[f]}return d}}module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES=goog.DEBUG;module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE=!0;module$contents$goog$html$SafeHtml_SafeHtml.from=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape;\\nconst module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG=/^[a-zA-Z0-9-]+$/,module$contents$goog$html$SafeHtml_URL_ATTRIBUTES={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0},module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES={[goog.dom.TagName.APPLET]:!0,[goog.dom.TagName.BASE]:!0,[goog.dom.TagName.EMBED]:!0,[goog.dom.TagName.IFRAME]:!0,[goog.dom.TagName.LINK]:!0,[goog.dom.TagName.MATH]:!0,[goog.dom.TagName.META]:!0,[goog.dom.TagName.OBJECT]:!0,[goog.dom.TagName.SCRIPT]:!0,\\n[goog.dom.TagName.STYLE]:!0,[goog.dom.TagName.SVG]:!0,[goog.dom.TagName.TEMPLATE]:!0};\\nfunction module$contents$goog$html$SafeHtml_getAttrNameAndValue(a,b,c){if(c instanceof goog.string.Const)c=goog.string.Const.unwrap(c);else if(\"style\"==b.toLowerCase())if(module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE)c=module$contents$goog$html$SafeHtml_getStyleValue(c);else throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\\'Attribute \"style\" not supported.\\':\"\");else{if(/^on/i.test(b))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\\n`Attribute \"${b}`+\\'\" requires goog.string.Const value, \"\\'+c+\\'\" given.\\':\"\");if(b.toLowerCase()in module$contents$goog$html$SafeHtml_URL_ATTRIBUTES)if(c instanceof goog.html.TrustedResourceUrl)c=goog.html.TrustedResourceUrl.unwrap(c);else if(c instanceof goog.html.SafeUrl)c=goog.html.SafeUrl.unwrap(c);else if(\"string\"===typeof c)c=goog.html.SafeUrl.sanitize(c).getTypedStringValue();else throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Attribute \"${b}\" on tag \"${a}`+\\'\" requires goog.html.SafeUrl, goog.string.Const, or string, value \"\\'+\\nc+\\'\" given.\\':\"\");}c.implementsGoogStringTypedString&&(c=c.getTypedStringValue());goog.asserts.assert(\"string\"===typeof c||\"number\"===typeof c,\"String or number value expected, got \"+typeof c+\" with value: \"+c);return`${b}=\"`+goog.string.internal.htmlEscape(String(c))+\\'\"\\'}\\nfunction module$contents$goog$html$SafeHtml_getStyleValue(a){if(!goog.isObject(a))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\\'The \"style\" attribute requires goog.html.SafeStyle or map of style properties, \\'+typeof a+\" given: \"+a:\"\");a instanceof module$contents$goog$html$SafeStyle_SafeStyle||(a=module$contents$goog$html$SafeStyle_SafeStyle.create(a));return module$contents$goog$html$SafeStyle_SafeStyle.unwrap(a)}\\nmodule$contents$goog$html$SafeHtml_SafeHtml.DOCTYPE_HTML=function(){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"<!DOCTYPE html>\")}();module$contents$goog$html$SafeHtml_SafeHtml.EMPTY=new module$contents$goog$html$SafeHtml_SafeHtml(goog.global.trustedTypes&&goog.global.trustedTypes.emptyHTML||\"\",module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE);module$contents$goog$html$SafeHtml_SafeHtml.BR=function(){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"<br>\")}();\\ngoog.html.SafeHtml=module$contents$goog$html$SafeHtml_SafeHtml;goog.html.uncheckedconversions={};goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b)};\\ngoog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b)};\\ngoog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b)};\\ngoog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};\\ngoog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};\\ngoog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};goog.dom.safe={};goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:\"afterbegin\",AFTEREND:\"afterend\",BEFOREBEGIN:\"beforebegin\",BEFOREEND:\"beforeend\"};goog.dom.safe.insertAdjacentHtml=function(a,b,c){a.insertAdjacentHTML(b,module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(c))};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};\\ngoog.dom.safe.isInnerHtmlCleanupRecursive_=goog.functions.cacheReturnValue(function(){if(goog.DEBUG&&\"undefined\"===typeof document)return!1;var a=document.createElement(\"div\"),b=document.createElement(\"div\");b.appendChild(document.createElement(\"div\"));a.appendChild(b);if(goog.DEBUG&&!a.firstChild)return!1;b=a.firstChild.firstChild;a.innerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY);return!b.parentElement});\\ngoog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(a,b){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;a.lastChild;)a.removeChild(a.lastChild);a.innerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};\\ngoog.dom.safe.setInnerHtml=function(a,b){if(goog.asserts.ENABLE_ASSERTS&&a.tagName){var c=a.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c])throw Error(\"goog.dom.safe.setInnerHtml cannot be used to set content of \"+a.tagName+\".\");}goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a,b)};\\ngoog.dom.safe.setInnerHtmlFromConstant=function(a,b){goog.dom.safe.setInnerHtml(a,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\"Constant HTML to be immediatelly used.\"),goog.string.Const.unwrap(b)))};goog.dom.safe.setOuterHtml=function(a,b){a.outerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};\\ngoog.dom.safe.setFormElementAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLFormElement(a).action=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setButtonFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLButtonElement(a).formAction=goog.html.SafeUrl.unwrap(b)};\\ngoog.dom.safe.setInputFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLInputElement(a).formAction=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setStyle=function(a,b){a.style.cssText=module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b)};goog.dom.safe.documentWrite=function(a,b){a.write(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b))};\\ngoog.dom.safe.setAnchorHref=function(a,b){goog.dom.asserts.assertIsHTMLAnchorElement(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setAudioSrc=function(a,b){goog.dom.asserts.assertIsHTMLAudioElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:audio\\\\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};\\ngoog.dom.safe.setVideoSrc=function(a,b){goog.dom.asserts.assertIsHTMLVideoElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:video\\\\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setEmbedSrc=function(a,b){goog.dom.asserts.assertIsHTMLEmbedElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setFrameSrc=function(a,b){goog.dom.asserts.assertIsHTMLFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};\\ngoog.dom.safe.setIframeSrc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};goog.dom.safe.setIframeSrcdoc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.srcdoc=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};\\ngoog.dom.safe.setLinkHrefAndRel=function(a,b,c){goog.dom.asserts.assertIsHTMLLinkElement(a);a.rel=c;goog.string.internal.caseInsensitiveContains(c,\"stylesheet\")?(goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl,\\'URL must be TrustedResourceUrl because \"rel\" contains \"stylesheet\"\\'),a.href=goog.html.TrustedResourceUrl.unwrap(b),(b=goog.dom.safe.getStyleNonce(a.ownerDocument&&a.ownerDocument.defaultView))&&a.setAttribute(\"nonce\",b)):a.href=b instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrap(b):\\nb instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrap(b):goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(b))};goog.dom.safe.setObjectData=function(a,b){goog.dom.asserts.assertIsHTMLObjectElement(a);a.data=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setScriptSrc=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);goog.dom.safe.setNonceForScriptElement_(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};\\ngoog.dom.safe.setScriptContent=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);goog.dom.safe.setNonceForScriptElement_(a);a.textContent=module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(b)};goog.dom.safe.setNonceForScriptElement_=function(a){const b=goog.dom.safe.getScriptNonce(a.ownerDocument&&a.ownerDocument.defaultView);b&&a.setAttribute(\"nonce\",b)};\\ngoog.dom.safe.setLocationHref=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.assignLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.assign(goog.html.SafeUrl.unwrap(b))};\\ngoog.dom.safe.replaceLocation=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.replace(goog.html.SafeUrl.unwrap(b))};goog.dom.safe.openInWindow=function(a,b,c,d){a=a instanceof goog.html.SafeUrl?a:goog.html.SafeUrl.sanitizeAssertUnchanged(a);b=b||goog.global;c=c instanceof goog.string.Const?goog.string.Const.unwrap(c):c||\"\";return void 0!==d?b.open(goog.html.SafeUrl.unwrap(a),c,d):b.open(goog.html.SafeUrl.unwrap(a),c)};\\ngoog.dom.safe.parseFromStringHtml=function(a,b){return goog.dom.safe.parseFromString(a,b,\"text/html\")};goog.dom.safe.parseFromString=function(a,b,c){return a.parseFromString(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b),c)};\\ngoog.dom.safe.createImageFromBlob=function(a){if(!/^image\\\\/.*/g.test(a.type))throw Error(\"goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.\");var b=goog.global.URL.createObjectURL(a);a=new goog.global.Image;a.onload=function(){goog.global.URL.revokeObjectURL(b)};a.src=b;return a};goog.dom.safe.createContextualFragment=function(a,b){return a.createContextualFragment(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b))};\\ngoog.dom.safe.getScriptNonce=function(a){return goog.dom.safe.getNonce_(\"script[nonce]\",a)};goog.dom.safe.getStyleNonce=function(a){return goog.dom.safe.getNonce_(\\'style[nonce],link[rel=\"stylesheet\"][nonce]\\',a)};goog.dom.safe.NONCE_PATTERN_=/^[\\\\w+/_-]+[=]{0,2}$/;goog.dom.safe.getNonce_=function(a,b){b=(b||goog.global).document;return b.querySelector?(a=b.querySelector(a))&&(a=a.nonce||a.getAttribute(\"nonce\"))&&goog.dom.safe.NONCE_PATTERN_.test(a)?a:\"\":\"\"};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:\"\\\\u00a0\",ZERO_WIDTH_SPACE:\"\\\\u200b\"};goog.string.startsWith=goog.string.internal.startsWith;goog.string.endsWith=goog.string.internal.endsWith;goog.string.caseInsensitiveStartsWith=goog.string.internal.caseInsensitiveStartsWith;goog.string.caseInsensitiveEndsWith=goog.string.internal.caseInsensitiveEndsWith;goog.string.caseInsensitiveEquals=goog.string.internal.caseInsensitiveEquals;\\ngoog.string.subs=function(a,b){const c=a.split(\"%s\");let d=\"\";const e=Array.prototype.slice.call(arguments,1);for(;e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")};goog.string.collapseWhitespace=function(a){return a.replace(/[\\\\s\\\\xa0]+/g,\" \").replace(/^\\\\s+|\\\\s+$/g,\"\")};goog.string.isEmptyOrWhitespace=goog.string.internal.isEmptyOrWhitespace;goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;\\ngoog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return!/[^\\\\t\\\\n\\\\r ]/.test(a)};goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)};goog.string.isNumeric=function(a){return!/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return\" \"==a};\\ngoog.string.isUnicodeChar=function(a){return 1==a.length&&\" \"<=a&&\"~\">=a||\"\\\\u0080\"<=a&&\"\\\\ufffd\">=a};goog.string.stripNewlines=function(a){return a.replace(/(\\\\r\\\\n|\\\\r|\\\\n)+/g,\" \")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\\\\r\\\\n|\\\\r|\\\\n)/g,\"\\\\n\")};goog.string.normalizeWhitespace=function(a){return a.replace(/\\\\xa0|\\\\s/g,\" \")};goog.string.normalizeSpaces=function(a){return a.replace(/\\\\xa0|[ \\\\t]+/g,\" \")};\\ngoog.string.collapseBreakingSpaces=function(a){return a.replace(/[\\\\t\\\\r\\\\n ]+/g,\" \").replace(/^[\\\\t\\\\r\\\\n ]+|[\\\\t\\\\r\\\\n ]+$/g,\"\")};goog.string.trim=goog.string.internal.trim;goog.string.trimLeft=function(a){return a.replace(/^[\\\\s\\\\xa0]+/,\"\")};goog.string.trimRight=function(a){return a.replace(/[\\\\s\\\\xa0]+$/,\"\")};goog.string.caseInsensitiveCompare=goog.string.internal.caseInsensitiveCompare;\\ngoog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;const d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length);for(let g=0;g<f;g++){c=d[g];const h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\\\d+|\\\\D+/g)};\\ngoog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\\\d+|\\\\.\\\\d+|\\\\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\\\\+/g,\" \"))};goog.string.newLineToBr=goog.string.internal.newLineToBr;\\ngoog.string.htmlEscape=function(a,b){a=goog.string.internal.htmlEscape(a,b);goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,\"&#101;\"));return a};goog.string.E_RE_=/e/g;goog.string.unescapeEntities=function(a){return goog.string.contains(a,\"&\")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&\"document\"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};\\ngoog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,\"&\")?goog.string.unescapeEntitiesUsingDom_(a,b):a};\\ngoog.string.unescapeEntitiesUsingDom_=function(a,b){const c={\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":\\'\"\\'};let d;d=b?b.createElement(\"div\"):goog.global.document.createElement(\"div\");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(e,f){let g=c[e];if(g)return g;\"#\"==f.charAt(0)&&(f=Number(\"0\"+f.slice(1)),isNaN(f)||(g=String.fromCharCode(f)));g||(goog.dom.safe.setInnerHtml(d,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\"Single HTML entity.\"),\\ne+\" \")),g=d.firstChild.nodeValue.slice(0,-1));return c[e]=g})};goog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(b,c){switch(c){case \"amp\":return\"&\";case \"lt\":return\"<\";case \"gt\":return\">\";case \"quot\":return\\'\"\\';default:return\"#\"!=c.charAt(0)||(c=Number(\"0\"+c.slice(1)),isNaN(c))?b:String.fromCharCode(c)}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\\\\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g,\" &#160;\"),b)};\\ngoog.string.preserveSpaces=function(a){return a.replace(/(^|[\\\\n ]) /g,\"$1\"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){const c=b.length;for(let d=0;d<c;d++){const e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+\"...\");c&&(a=goog.string.htmlEscape(a));return a};\\ngoog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+\"...\"+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+\"...\"+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={\"\\\\x00\":\"\\\\\\\\0\",\"\\\\b\":\"\\\\\\\\b\",\"\\\\f\":\"\\\\\\\\f\",\"\\\\n\":\"\\\\\\\\n\",\"\\\\r\":\"\\\\\\\\r\",\"\\\\t\":\"\\\\\\\\t\",\"\\\\v\":\"\\\\\\\\x0B\",\\'\"\\':\\'\\\\\\\\\"\\',\"\\\\\\\\\":\"\\\\\\\\\\\\\\\\\",\"<\":\"\\\\\\\\u003C\"};goog.string.jsEscapeCache_={\"\\'\":\"\\\\\\\\\\'\"};\\ngoog.string.quote=function(a){a=String(a);const b=[\\'\"\\'];for(let c=0;c<a.length;c++){const d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}b.push(\\'\"\\');return b.join(\"\")};goog.string.escapeString=function(a){const b=[];for(let c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join(\"\")};\\ngoog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];let b;const c=a.charCodeAt(0);if(31<c&&127>c)b=a;else{if(256>c){if(b=\"\\\\\\\\x\",16>c||256<c)b+=\"0\"}else b=\"\\\\\\\\u\",4096>c&&(b+=\"0\");b+=c.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[a]=b};goog.string.contains=goog.string.internal.contains;\\ngoog.string.caseInsensitiveContains=goog.string.internal.caseInsensitiveContains;goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){let d=a;0<=b&&b<a.length&&0<c&&(d=a.slice(0,b)+a.slice(b+c));return d};goog.string.remove=function(a,b){return a.replace(b,\"\")};goog.string.removeAll=function(a,b){b=new RegExp(goog.string.regExpEscape(b),\"g\");return a.replace(b,\"\")};\\ngoog.string.replaceAll=function(a,b,c){b=new RegExp(goog.string.regExpEscape(b),\"g\");return a.replace(b,c.replace(/\\\\$/g,\"$$$$\"))};goog.string.regExpEscape=function(a){return String(a).replace(/([-()\\\\[\\\\]{}+?*.$\\\\^|,:#<!\\\\\\\\])/g,\"\\\\\\\\$1\").replace(/\\\\x08/g,\"\\\\\\\\x08\")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};\\ngoog.string.padNumber=function(a,b,c){if(!Number.isFinite(a))return String(a);a=void 0!==c?a.toFixed(c):String(a);c=a.indexOf(\".\");-1===c&&(c=a.length);const d=\"-\"===a[0]?\"-\":\"\";d&&(a=a.substring(1));return d+goog.string.repeat(\"0\",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?\"\":String(a)};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};\\ngoog.string.compareVersions=goog.string.internal.compareVersions;goog.string.hashCode=function(a){let b=0;for(let c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;goog.string.createUniqueString=function(){return\"goog_\"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(a){const b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)};\\ngoog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\\\\-([a-z])/g,function(b,c){return c.toUpperCase()})};goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,\"-$1\").toLowerCase()};goog.string.toTitleCase=function(a,b){b=\"string\"===typeof b?goog.string.regExpEscape(b):\"\\\\\\\\s\";return a.replace(new RegExp(\"(^\"+(b?\"|[\"+b+\"]+\":\"\")+\")([a-z])\",\"g\"),function(c,d,e){return d+e.toUpperCase()})};\\ngoog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.slice(1)).toLowerCase()};goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return\"string\"===typeof a?/^\\\\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};goog.string.splitLimit=function(a,b,c){a=a.split(b);const d=[];for(;0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};\\ngoog.string.lastComponent=function(a,b){if(b)\"string\"==typeof b&&(b=[b]);else return a;let c=-1;for(let d=0;d<b.length;d++){if(\"\"==b[d])continue;const e=a.lastIndexOf(b[d]);e>c&&(c=e)}return-1==c?a:a.slice(c+1)};\\ngoog.string.editDistance=function(a,b){const c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]};goog.string.path={};goog.string.path.baseName=function(a){const b=a.lastIndexOf(\"/\")+1;return a.slice(b)};goog.string.path.basename=goog.string.path.baseName;goog.string.path.dirname=function(a){const b=a.lastIndexOf(\"/\")+1;a=a.slice(0,b);/^\\\\/+$/.test(a)||(a=a.replace(/\\\\/+$/,\"\"));return a};goog.string.path.extension=function(a){a=goog.string.path.baseName(a).replace(/\\\\.+/g,\".\");const b=a.lastIndexOf(\".\");return 0>=b?\"\":a.slice(b+1)};\\ngoog.string.path.join=function(a){let b=arguments[0];for(let c=1;c<arguments.length;c++){const d=arguments[c];b=goog.string.startsWith(d,\"/\")?d:\"\"==b||goog.string.endsWith(b,\"/\")?b+d:b+(\"/\"+d)}return b};\\ngoog.string.path.normalizePath=function(a){if(\"\"==a)return\".\";let b=\"\";goog.string.startsWith(a,\"/\")&&(b=\"/\",goog.string.startsWith(a,\"//\")&&!goog.string.startsWith(a,\"///\")&&(b=\"//\"));a=a.split(\"/\");const c=[];for(let d=0;d<a.length;d++){const e=a[d];\"\"!=e&&\".\"!=e&&(\"..\"!=e||!b&&!c.length||\"..\"==module$contents$goog$array_peek(c)?c.push(e):c.pop())}return b+c.join(\"/\")||\".\"};goog.string.path.split=function(a){const b=goog.string.path.dirname(a);a=goog.string.path.baseName(a);return[b,a]};const DEBUG_WASI$$module$src$filesystem$wasi=!1;function assertLeadingSlash$$module$src$filesystem$wasi(a){return/^\\\\//g.test(a)?a:`/${a}`}function removeLeadingSlash$$module$src$filesystem$wasi(a){return a.replace(/^\\\\//g,\"\")}function shouldOpenReader$$module$src$filesystem$wasi(a){return(a&(WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants))!==goog.global.BigInt(0)}\\nfunction performanceNowPoly$$module$src$filesystem$wasi(){if(\"undefined\"===typeof performance||\"undefined\"===typeof performance.now){const a=Date.now();return Date.now()-a}return performance.now()}function concatUint8Arrays$$module$src$filesystem$wasi(a){var b=a.reduce((d,e)=>d+e.length,0);if(0!==a.length){b=new Uint8Array(b);var c=0;for(const d of a)b.set(d,c),c+=d.length;return b}}\\nconst WASI$$module$src$filesystem$wasi=function({}){this.fd=Array.from({length:4});this.fd[0]={fd:0,path:\"/dev/stdin\",seekPos:goog.global.BigInt(0),buffers:[]};this.fd[1]={fd:1,path:\"/dev/stdout\",seekPos:goog.global.BigInt(0),buffers:[]};this.fd[2]={fd:2,path:\"/dev/stderr\",seekPos:goog.global.BigInt(0),buffers:[]};this.fd[3]={fd:3,path:\"/\",seekPos:goog.global.BigInt(0),buffers:[]};this.getMemory=this.getMemory.bind(this);this.CPUTIME_START=0};\\nWASI$$module$src$filesystem$wasi.prototype.start=function(a){this.CPUTIME_START=performanceNowPoly$$module$src$filesystem$wasi();a.exports._start()};WASI$$module$src$filesystem$wasi.prototype.getImports=function(a){const b={};a=WebAssembly.Module.imports(a);for(const c of a)\"function\"===c.kind&&c.module.startsWith(\"wasi_\")&&(\"object\"!==typeof b[c.module]&&(b[c.module]={}),b[c.module][c.name]=this[c.name].bind(this));return b};\\nWASI$$module$src$filesystem$wasi.prototype.setMemory=function(a){this.memory=a};WASI$$module$src$filesystem$wasi.prototype.getMemory=function(){this.view&&this.view.buffer&&this.view.buffer.byteLength||(this.view=new DataView(this.memory.buffer));return this.view};WASI$$module$src$filesystem$wasi.prototype.msToNs=function(a){const b=Math.trunc(a);a=goog.global.BigInt(Math.round(1E6*(a-b)));return goog.global.BigInt(b)*goog.global.BigInt(1E6)+a};\\nWASI$$module$src$filesystem$wasi.prototype.now=function(a){switch(a){case WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants:return Math.floor(performanceNowPoly$$module$src$filesystem$wasi());case WASI_CLOCK_REALTIME$$module$src$filesystem$constants:return this.msToNs(Date.now());case WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants:case WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants:return Math.floor(performanceNowPoly$$module$src$filesystem$wasi()-this.CPUTIME_START);\\ndefault:return 0}};WASI$$module$src$filesystem$wasi.prototype.args_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"args_get\",a,b,module$src$filesystem$constants);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.args_sizes_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"args_sizes_get\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.clock_res_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"args_get\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.clock_time_get=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"clock_time_get\",a,b,c,arguments);const d=this.getMemory(),e=this.now(a);d.setBigUint64(c,goog.global.BigInt(e),!0);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.environ_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"environ_get\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.environ_sizes_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"environ_sizes_get\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_advise=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_advise\",a,b,c,d,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_allocate=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_allocate\",a,b,c,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_close=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_close\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_datasync=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_datasync\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_fdstat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_fdstat_get\",a,b,arguments);const c=this.getMemory();c.setUint8(b+4,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants);c.setUint16(b+2,0,!0);c.setUint16(b+4,0,!0);c.setBigUint64(b+8,goog.global.BigInt(RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants),!0);c.setBigUint64(b+8+8,goog.global.BigInt(RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants),\\n!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_set_flags=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_fdstat_set_flags\",a,b,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_set_rights=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_fdstat_set_rights\",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_filestat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_filestat_get\",a,b,arguments);let c=0;this.fd[a]&&(c=this.fd[a].buffers.reduce(function(e,f){return e+(null==f?void 0:f.byteLength)?null==f?void 0:f.byteLength:0},0));const d=this.getMemory();d.setBigUint64(b,goog.global.BigInt(a),!0);b+=8;d.setBigUint64(b,goog.global.BigInt(a),!0);b+=8;d.setUint8(b,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants);b+=8;d.setBigUint64(b,\\ngoog.global.BigInt(1),!0);b+=8;d.setBigUint64(b,goog.global.BigInt(c),!0);b+=8;d.setBigUint64(b,this.msToNs(this.CPUTIME_START),!0);b+=8;d.setBigUint64(b,this.msToNs(this.CPUTIME_START),!0);d.setBigUint64(b+8,this.msToNs(this.CPUTIME_START),!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_filestat_set_size=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_filestat_set_size\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_filestat_set_times=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_filestat_set_times\",a,b,c,d,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_pread=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_pread\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_prestat_dir_name=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_prestat_dir_name\",a,b,c,this.fd[a]);if(!this.fd[a]&&!this.fd[a-1])return WASI_EBADF$$module$src$filesystem$constants;({path:c}=this.fd[a]);a=this.getMemory();c=encoder$$module$src$utils$text_encoders.encode(c);(new Uint8Array(a.buffer)).set(c,b);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_prestat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_prestat_get\",a,b,this.fd[a]);if(!this.fd[a])return WASI_EBADF$$module$src$filesystem$constants;var {path:c}=this.fd[a];a=this.getMemory();c=encoder$$module$src$utils$text_encoders.encode(c);a.setUint8(b,WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants);a.setUint32(b+4,c.byteLength,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_pwrite=function(a,b,c,d,e){console.log(\"fd_pwrite\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_read=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_read\",a,b,c,d,arguments);const e=this.fd[a]&&this.fd[a].buffers;var f=e.reduce((n,p)=>n+p.length,0);const g=this.getMemory();if(e&&0!==e.length){var h=Number(this.fd[a].seekPos),k=0,l=!1;if(h>=f)return-1;for(f=0;f<c;f++){var m=b+8*f;const n=g.getUint32(m,!0);m=g.getUint32(m+4,!0);l||(k+=m,Array.from({length:m},(p,q)=>q).reduce((p,q)=>{if(l)return p;const [w,r]=p;let u=p=0,A=\\n!1,x=0,t;if(0===q)for(;!A;)t=e[p]?e[p].byteLength:0,x<=h&&t+x>h?(A=!0,u=h-x):(x+=t,p+=1);else p=w,u=r;e[p]?(g.setUint8(n+q,e[p][u]),u+1>=e[p].byteLength?(p=w+1,u=0):u+=1):(g.setUint8(n+q,\"\\\\x00\"),h+=q,l=!0);return[p,u]},[0,0]),l||(h+=m))}this.fd[a].seekPos=goog.global.BigInt(h);g.setUint32(d,k,!0);return WASI_ESUCCESS$$module$src$filesystem$constants}console.error(\"Reading non existent file\",a,this.fd[a])};\\nWASI$$module$src$filesystem$wasi.prototype.fd_readdir=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_readdir\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_renumber=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_renumber\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_seek=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_seek\",a,b,c,d,arguments);const e=this.getMemory();switch(c){case WASI_WHENCE_CUR$$module$src$filesystem$constants:var f;this.fd[a].seekPos=(null!=(f=this.fd[a].seekPos)?f:goog.global.BigInt(0))+goog.global.BigInt(b);break;case WASI_WHENCE_END$$module$src$filesystem$constants:f=(this.fd[a].buffers||[]).reduce((g,h)=>g+h.length,0);this.fd[a].seekPos=BigInt(f)+BigInt(b);break;\\ncase WASI_WHENCE_SET$$module$src$filesystem$constants:this.fd[a].seekPos=BigInt(b)}e.setBigUint64(d,this.fd[a].seekPos,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_sync=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_sync\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_tell=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_tell\",a,b,arguments);const c=this.getMemory();this.fd[a].seekPos||(this.fd[a].seekPos=goog.global.BigInt(0));c.setBigUint64(b,this.fd[a].seekPos,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_write=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_write\",{fd:a,iovs:b,iovsLength:c,nwritten:d});let e=!1;const f=this.getMemory();this.fd[a].buffers=this.fd[a].buffers||[];this.fd[a].seekPos===goog.global.BigInt(0)&&0<this.fd[a].buffers.length&&(e=!0);let g=0;for(let l=0;l<c;l++){var h=b+8*l,k=f.getUint32(h,!0);h=f.getUint32(h+4,!0);g+=h;k=new Uint8Array(f.buffer,k,h);e?this.fd[a].buffers.unshift(k.slice(0,h)):this.fd[a].buffers.push(k.slice(0,\\nh))}this.fd[a].seekPos+=goog.global.BigInt(g);f.setUint32(d,g,!0);[1,2].includes(a)&&console.log(decoder$$module$src$utils$text_encoders.decode(concatUint8Arrays$$module$src$filesystem$wasi(this.fd[a].buffers)));return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_create_directory=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_create_directory\",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.path_filestat_get=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_filestat_get\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_filestat_set_times=function(a,b,c,d,e,f,g){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_filestat_set_times\",a,b,c,d,e,f,g,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.path_link=function(a,b,c,d,e,f,g){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_link\",a,b,c,d,e,f,g,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.path_open=function(a,b,c,d,e,f,g,h,k){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_open\",a,b,c,d,e,f,g,h,k,arguments);const l=this.getMemory();var m=(this.fd[a]||{path:\"/\"}).path,n=new Uint8Array(l.buffer,c,d);n=decoder$$module$src$utils$text_encoders.decode(n);const p=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(goog.string.path.join(3===a?\"\":m,n)));DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\";; opening path\",\\np,\"withREader\",shouldOpenReader$$module$src$filesystem$wasi(f));if(p.startsWith(\"/..\")||\"/._\"===p||\"/.AppleDouble\"===p)return WASI_EBADF$$module$src$filesystem$constants;(m=Object.values(this.fd).find(q=>q.path===p&&Array.isArray(q.buffers)))?n=m.fd:(n=this.fd.length,this.fd[n]={fd:n});this.fd[n]={...this.fd[n],path:p,type:\"file\",seekPos:goog.global.BigInt(0),buffers:m?this.fd[n].buffers:[]};shouldOpenReader$$module$src$filesystem$wasi(f)&&DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"should open a read handle for\",\\np);l.setUint32(k,n,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_readlink=function(a,b,c,d,e,f){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_readlink\",a,b,c,d,e,f,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_remove_directory=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_remove_directory\",a,b,c);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.path_rename=function(a,b,c,d,e,f){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_rename\",a,b,c,d,e,f,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_symlink=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_symlink\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.path_unlink_file=function(a,b,c){3<a&&DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_unlink_file\",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.poll_oneoff=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"poll_oneoff\",a,b,c,d,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.proc_exit=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"proc_exit\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.proc_raise=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"proc_raise\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.random_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"random_get\",a,b);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sched_yield=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"sched_yield\",arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.sock_recv=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"sock_recv\",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sock_send=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"sock_send\",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.sock_shutdown=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"sock_shutdown\",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.findBuffers=function(a){const b=Object.values(this.fd).find(({path:c})=>c===a);return b&&b.buffers};\\nWASI$$module$src$filesystem$wasi.prototype.readdir=function(a){const b=(assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a))+\"/\").replace(\"//\",\"/\"),c=[];Object.values(this.fd).forEach(({path:d})=>!/\\\\//g.test(d.replace(b,\"\"))&&c.push(d));return c.map(d=>removeLeadingSlash$$module$src$filesystem$wasi(d.replace(b,\"\"))).filter(d=>!!d)};\\nWASI$$module$src$filesystem$wasi.prototype.writeFile=function(a,b){const c=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));a=Object.keys(this.fd).length;const d=Object.values(this.fd).find(({path:e})=>e===c);this.fd[a]={fd:a,path:c,seekPos:goog.global.BigInt(0),buffers:[b]};d&&delete this.fd[d]};\\nWASI$$module$src$filesystem$wasi.prototype.appendFile=function(a,b){var c=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));(c=this.findBuffers(c))?c.push(b):console.error(`Can\\'t append to non-existing file ${a}`)};WASI$$module$src$filesystem$wasi.prototype.readFile=function(a){a=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));if(a=this.findBuffers(a))return concatUint8Arrays$$module$src$filesystem$wasi(a)};\\nWASI$$module$src$filesystem$wasi.prototype.readStdOut=function(){const a=Object.values(this.fd[0]);return concatUint8Arrays$$module$src$filesystem$wasi(a&&a.buffers||[])};WASI$$module$src$filesystem$wasi.prototype.unlink=function(a){const b=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));(a=Object.values(this.fd).find(({path:c})=>c===b))?delete this.fd[a]:console.error(`While trying to unlink ${b}, path not found`)};\\nWASI$$module$src$filesystem$wasi.prototype.mkdir=function(a){const b=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a)),c=[];Object.values(this.fd).forEach(({path:d})=>d.startsWith(b)&&c.push(d));0<c.length?console.warn(`mkdir: path ${a} already exists`):(a=Object.keys(this.fd).length,this.fd[a]={fd:a,path:b})};var module$src$filesystem$wasi={};module$src$filesystem$wasi.WASI=WASI$$module$src$filesystem$wasi;function clearArray$$module$src$utils$clear_array(a){for(;0<a.length;)a.pop()}var module$src$utils$clear_array={};module$src$utils$clear_array.clearArray=clearArray$$module$src$utils$clear_array;const CompressionMethod$$module$src$zlib$zlib={DEFLATE:8,RESERVED:15};var module$src$zlib$zlib={};module$src$zlib$zlib.CompressionMethod=CompressionMethod$$module$src$zlib$zlib;/*\\n zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */\\nfunction Huffman$$module$src$zlib$huffman(a){const b=a.length;let c=0,d=Number.POSITIVE_INFINITY,e,f,g,h;let k,l;for(k=0;k<b;++k)a[k]>c&&(c=a[k]),a[k]<d&&(d=a[k]);const m=1<<c,n=new Uint32Array(m);e=1;f=0;for(g=2;e<=c;){for(k=0;k<b;++k)if(a[k]===e){h=0;var p=f;for(l=0;l<e;++l)h=h<<1|p&1,p>>=1;p=e<<16|k;for(l=h;l<m;l+=g)n[l]=p;++f}++e;f<<=1;g<<=1}return[n,c,d]}var module$src$zlib$huffman={};module$src$zlib$huffman.Huffman=Huffman$$module$src$zlib$huffman;const ZLIB_RAW_INFLATE_BUFFER_SIZE$$module$src$zlib$rawinflate=32768;\\nfunction RawInflate$$module$src$zlib$rawinflate(a,b){this.blocks=[];this.bufferSize=ZLIB_RAW_INFLATE_BUFFER_SIZE$$module$src$zlib$rawinflate;this.bitsbuflen=this.bitsbuf=this.ip=this.totalpos=0;this.input=new Uint8Array(a);this.bfinal=!1;this.bufferType=RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE;this.resize=!1;if(b||!(b={}))b.index&&(this.ip=b.index),b.bufferSize&&(this.bufferSize=b.bufferSize),b.bufferType&&(this.bufferType=b.bufferType),b.resize&&(this.resize=b.resize);switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.op=\\nRawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;this.output=new Uint8Array(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength+this.bufferSize+RawInflate$$module$src$zlib$rawinflate.MaxCopyLength);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.op=0;this.output=new Uint8Array(this.bufferSize);break;default:throw Error(\"invalid inflate mode\");}}RawInflate$$module$src$zlib$rawinflate.BufferType={BLOCK:0,ADAPTIVE:1};\\nRawInflate$$module$src$zlib$rawinflate.prototype.decompress=function(){for(;!this.bfinal;)this.parseBlock();switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:return this.concatBufferBlock();case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:return this.concatBufferDynamic();default:throw Error(\"invalid inflate mode\");}};RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength=32768;RawInflate$$module$src$zlib$rawinflate.MaxCopyLength=258;\\nRawInflate$$module$src$zlib$rawinflate.Order=function(a){return new Uint16Array(a)}([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);RawInflate$$module$src$zlib$rawinflate.LengthCodeTable=function(a){return new Uint16Array(a)}([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]);RawInflate$$module$src$zlib$rawinflate.LengthExtraTable=function(a){return new Uint8Array(a)}([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]);\\nRawInflate$$module$src$zlib$rawinflate.DistCodeTable=function(a){return new Uint16Array(a)}([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]);RawInflate$$module$src$zlib$rawinflate.DistExtraTable=function(a){return new Uint8Array(a)}([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\\nRawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable=function(a){return a}(function(){const a=new Uint8Array(288);let b,c;b=0;for(c=a.length;b<c;++b)a[b]=143>=b?8:255>=b?9:279>=b?7:8;return Huffman$$module$src$zlib$huffman(a)}());RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable=function(a){return a}(function(){const a=new Uint8Array(30);let b,c;b=0;for(c=a.length;b<c;++b)a[b]=5;return Huffman$$module$src$zlib$huffman(a)}());\\nRawInflate$$module$src$zlib$rawinflate.prototype.parseBlock=function(){let a=this.readBits(3);a&1&&(this.bfinal=!0);a>>>=1;switch(a){case 0:this.parseUncompressedBlock();break;case 1:this.parseFixedHuffmanBlock();break;case 2:this.parseDynamicHuffmanBlock();break;default:throw Error(\"unknown BTYPE: \"+a);}};\\nRawInflate$$module$src$zlib$rawinflate.prototype.readBits=function(a){let b=this.bitsbuf,c=this.bitsbuflen;const d=this.input;let e=this.ip;if(e+(a-c+7>>3)>=d.length)throw Error(\"input buffer is broken\");for(;c<a;)b|=d[e++]<<c,c+=8;this.bitsbuf=b>>>a;this.bitsbuflen=c-a;this.ip=e;return b&(1<<a)-1};\\nRawInflate$$module$src$zlib$rawinflate.prototype.readCodeByTable=function(a){let b=this.bitsbuf,c=this.bitsbuflen;var d=this.input;let e=this.ip;var f=d.length;const g=a[0];for(a=a[1];c<a&&!(e>=f);)b|=d[e++]<<c,c+=8;d=g[b&(1<<a)-1];f=d>>>16;if(f>c)throw Error(\"invalid code length: \"+f);this.bitsbuf=b>>f;this.bitsbuflen=c-f;this.ip=e;return d&65535};\\nRawInflate$$module$src$zlib$rawinflate.prototype.parseUncompressedBlock=function(){const a=this.input;let b=this.ip,c=this.output,d=this.op;var e=a.length;let f;const g=c.length;this.bitsbuflen=this.bitsbuf=0;if(b+1>=e)throw Error(\"invalid uncompressed block header: LEN\");f=a[b++]|a[b++]<<8;if(b+1>=e)throw Error(\"invalid uncompressed block header: NLEN\");e=a[b++]|a[b++]<<8;if(f===~e)throw Error(\"invalid uncompressed block header: length verify\");if(b+f>a.length)throw Error(\"input buffer is broken\");\\nswitch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:for(;d+f>c.length;)e=g-d,f-=e,c.set(a.subarray(b,b+e),d),d+=e,b+=e,this.op=d,c=this.expandBufferBlock(),d=this.op;break;case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:for(;d+f>c.length;)c=this.expandBufferAdaptive({fixRatio:2});break;default:throw Error(\"invalid inflate mode\");}c.set(a.subarray(b,b+f),d);this.ip=b+f;this.op=d+f;this.output=c};\\nRawInflate$$module$src$zlib$rawinflate.prototype.parseFixedHuffmanBlock=function(){switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.decodeHuffmanAdaptive(RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable,RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.decodeHuffmanBlock(RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable,RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable);\\nbreak;default:throw Error(\"invalid inflate mode\");}};\\nRawInflate$$module$src$zlib$rawinflate.prototype.parseDynamicHuffmanBlock=function(){var a=this.readBits(5)+257,b=this.readBits(5)+1,c=this.readBits(4)+4,d=new Uint8Array(RawInflate$$module$src$zlib$rawinflate.Order.length);let e;for(e=0;e<c;++e)d[RawInflate$$module$src$zlib$rawinflate.Order[e]]=this.readBits(3);d=Huffman$$module$src$zlib$huffman(d);c=new Uint8Array(a+b);e=0;for(b=a+b;e<b;){var f=this.readCodeByTable(d);switch(f){case 16:for(f=3+this.readBits(2);f--;)c[e++]=g;break;case 17:for(f=\\n3+this.readBits(3);f--;)c[e++]=0;var g=0;break;case 18:for(f=11+this.readBits(7);f--;)c[e++]=0;g=0;break;default:g=c[e++]=f}}g=Huffman$$module$src$zlib$huffman(c.subarray(0,a));a=Huffman$$module$src$zlib$huffman(c.subarray(a));switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.decodeHuffmanAdaptive(g,a);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.decodeHuffmanBlock(g,a);break;default:throw Error(\"invalid inflate mode\");}};\\nRawInflate$$module$src$zlib$rawinflate.prototype.decodeHuffmanBlock=function(a,b){let c=this.output,d=this.op;this.currentLitlenTable=a;const e=c.length-RawInflate$$module$src$zlib$rawinflate.MaxCopyLength;var f;let g,h;const k=RawInflate$$module$src$zlib$rawinflate.LengthCodeTable,l=RawInflate$$module$src$zlib$rawinflate.LengthExtraTable,m=RawInflate$$module$src$zlib$rawinflate.DistCodeTable,n=RawInflate$$module$src$zlib$rawinflate.DistExtraTable;for(;256!==(f=this.readCodeByTable(a));)if(256>f)d>=\\ne&&(this.op=d,c=this.expandBufferBlock(),d=this.op),c[d++]=f;else for(f-=257,h=k[f],0<l[f]&&(h+=this.readBits(l[f])),f=this.readCodeByTable(b),g=m[f],0<n[f]&&(g+=this.readBits(n[f])),d>=e&&(this.op=d,c=this.expandBufferBlock(),d=this.op);h--;)c[d]=c[d++-g];for(;8<=this.bitsbuflen;)this.bitsbuflen-=8,this.ip--;this.op=d};\\nRawInflate$$module$src$zlib$rawinflate.prototype.decodeHuffmanAdaptive=function(a,b){let c=this.output,d=this.op;this.currentLitlenTable=a;let e=c.length;var f;let g,h;const k=RawInflate$$module$src$zlib$rawinflate.LengthCodeTable,l=RawInflate$$module$src$zlib$rawinflate.LengthExtraTable,m=RawInflate$$module$src$zlib$rawinflate.DistCodeTable,n=RawInflate$$module$src$zlib$rawinflate.DistExtraTable;for(;256!==(f=this.readCodeByTable(a));)if(256>f)d>=e&&(c=this.expandBufferAdaptive(),e=c.length),c[d++]=\\nf;else for(f-=257,h=k[f],0<l[f]&&(h+=this.readBits(l[f])),f=this.readCodeByTable(b),g=m[f],0<n[f]&&(g+=this.readBits(n[f])),d+h>e&&(c=this.expandBufferAdaptive(),e=c.length);h--;)c[d]=c[d++-g];for(;8<=this.bitsbuflen;)this.bitsbuflen-=8,this.ip--;this.op=d};\\nRawInflate$$module$src$zlib$rawinflate.prototype.expandBufferBlock=function(a){a=new Uint8Array(this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength);const b=this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,c=this.output;a.set(c.subarray(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,a.length));this.blocks.push(a);this.totalpos+=a.length;c.set(c.subarray(b,b+RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength));this.op=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;\\nreturn c};RawInflate$$module$src$zlib$rawinflate.prototype.expandBufferAdaptive=function(a){let b=Math.trunc(this.input.length/this.ip+1);const c=this.input,d=this.output;a&&(\"number\"===typeof a.fixRatio&&(b=a.fixRatio),\"number\"===typeof a.addRatio&&(b+=a.addRatio));2>b?(a=(c.length-this.ip)/this.currentLitlenTable[2],a=Math.trunc(a/2*258),a=a<d.length?d.length+a:d.length<<1):a=d.length*b;a=new Uint8Array(a);a.set(d);return this.output=a};\\nRawInflate$$module$src$zlib$rawinflate.prototype.concatBufferBlock=function(){let a=0;const b=this.output,c=this.blocks;let d;const e=new Uint8Array(this.totalpos+(this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength));let f,g,h,k;if(0===c.length)return this.output.subarray(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,this.op);f=0;for(g=c.length;f<g;++f)for(d=c[f],h=0,k=d.length;h<k;++h)e[a++]=d[h];f=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;for(g=this.op;f<\\ng;++f)e[a++]=b[f];this.blocks=[];return this.buffer=e};RawInflate$$module$src$zlib$rawinflate.prototype.concatBufferDynamic=function(){let a;const b=this.op;this.resize?(a=new Uint8Array(b),a.set(this.output.subarray(0,b))):a=this.output.subarray(0,b);return this.buffer=a};var module$src$zlib$rawinflate={};module$src$zlib$rawinflate.RawInflate=RawInflate$$module$src$zlib$rawinflate;function Util$$module$src$zlib$util(){}Util$$module$src$zlib$util.stringToByteArray=function(a){a=[...a];let b,c;b=0;for(c=a.length;b<c;b++)a[b]=(a[b].charPointAt(0)&255)>>>0;return new Uint8Array([a])};var module$src$zlib$util={};module$src$zlib$util.Util=Util$$module$src$zlib$util;function Adler32$$module$src$zlib$adler32(a){\"string\"===typeof a&&(a=Util$$module$src$zlib$util.stringToByteArray(a));return Adler32$$module$src$zlib$adler32.update(1,a)}Adler32$$module$src$zlib$adler32.update=function(a,b){let c=a&65535;a=a>>>16&65535;let d=b.length,e,f=0;for(;0<d;){e=d>Adler32$$module$src$zlib$adler32.OptimizationParameter?Adler32$$module$src$zlib$adler32.OptimizationParameter:d;d-=e;do c+=b[f++],a+=c;while(--e);c%=65521;a%=65521}return(a<<16|c)>>>0};\\nAdler32$$module$src$zlib$adler32.OptimizationParameter=1024;var module$src$zlib$adler32={};module$src$zlib$adler32.Adler32=Adler32$$module$src$zlib$adler32;function Inflate$$module$src$zlib$inflate(a,b){this.input=a;this.ip=0;if(b||!(b={}))b.index&&(this.ip=b.index),b.verify&&(this.verify=b.verify);const c=a[this.ip++],d=a[this.ip++];switch(c&15){case CompressionMethod$$module$src$zlib$zlib.DEFLATE:this.method=CompressionMethod$$module$src$zlib$zlib.DEFLATE;break;default:throw Error(\"unsupported compression method\");}if(0!==((c<<8)+d)%31)throw Error(\"invalid fcheck flag:\"+((c<<8)+d)%31);if(d&32)throw Error(\"fdict flag is not supported\");this.rawinflate=\\nnew RawInflate$$module$src$zlib$rawinflate(a,{index:this.ip,bufferSize:b.bufferSize,bufferType:b.bufferType,resize:b.resize})}Inflate$$module$src$zlib$inflate.BufferType=RawInflate$$module$src$zlib$rawinflate.BufferType;\\nInflate$$module$src$zlib$inflate.prototype.decompress=function(){var a=this.input;const b=this.rawinflate.decompress();this.ip=this.rawinflate.ip;if(this.verify&&(a=(a[this.ip++]<<24|a[this.ip++]<<16|a[this.ip++]<<8|a[this.ip++])>>>0,a!==Adler32$$module$src$zlib$adler32(b)))throw Error(\"invalid adler-32 checksum\");return b};var module$src$zlib$inflate={};module$src$zlib$inflate.Inflate=Inflate$$module$src$zlib$inflate;const PAGE_SIZE$$module$src$module=65536,PAGES_PER_MB$$module$src$module=16,csoundWasiJsMessageCallback$$module$src$module=({memory:a,messagePort:b,streamBuffer:c})=>function(d,e,f,g){if(a){d=new Uint8Array(a.buffer,g,f);d=uint2String$$module$src$utils$text_encoders(d);var h=/\\\\n$/g.test(d);e=/^\\\\n/g.test(d);var k=d.split(\"\\\\n\").filter(m=>0<m.length),l=[];if(0===k.length&&h||e)l.push(c.join(\"\")),clearArray$$module$src$utils$clear_array(c);k.forEach((m,n)=>{n+1===k.length?h?0===n?(l.push(c.join(\"\")+m),\\nclearArray$$module$src$utils$clear_array(c)):l.push(m):c.push(m):0===n?(l.push(c.join(\"\")+m),clearArray$$module$src$utils$clear_array(c)):l.push(m)});l.forEach(m=>{m.replace(/(\\\\r\\\\n|\\\\n|\\\\r)/gm,\"\")&&b.post({log:m})})}},assertPluginExports$$module$src$module=a=>{if(a&&\"object\"===typeof a&&\"object\"===typeof a.exports){if(a.exports.__wasm_call_ctors){if(a.exports.csoundModuleCreate||a.exports.csound_opcode_init||a.exports.csound_fgen_init)return!0;console.error(a.exports,\"A csound plugin turns out to be neither a plugin, opcode or module.\\\\nPerhaps csdl.h or module.h wasn\\'t imported correctly?\");\\nreturn!1}console.error(\"A csound plugin didn\\'t export __wasm_call_ctors.\\\\nPlease re-run wasm-ld with either --export-all or include --export=__wasm_call_ctors\");return!1}console.error(\"Error instantiating a csound plugin, instance and/or export is missing!\");return!1},getBinaryHeaderData$$module$src$module=a=>{function b(){let l=0,m=1;for(;;){const n=a[c++];l+=(n&127)*m;m*=128;if(!(n&128))break}return l}1836278016!==(new Uint32Array((new Uint8Array(a.subarray(0,24))).buffer))[0]&&console.error(\"Wasm magic number is missing!\");\\nif(0!==a[8])return logWasmModule$$module$src$logger(\"Dylink section wasn\\'t found in wasm binary, assuming static wasm.\"),\"static\";let c=9;const d=b();c++;(0,goog.asserts.assert)(a[c]===\"d\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"y\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"l\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"i\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"n\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"k\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\\n\".\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"0\".codePointAt(0));c+=3;const e=b(),f=b(),g=b(),h=b(),k=b();return{sectionSize:d,memorySize:e,memoryAlign:f,neededDynlibsCount:k,tableSize:g,tableAlign:h}},loadStaticWasm$$module$src$module=async({wasmBytes:a,wasi:b,messagePort:c})=>{const d=await WebAssembly.compile(a);a=new WebAssembly.Memory({initial:16384});const e=b.getImports(d);e.env=e.env||{};e.env.csoundLoadModules=()=>0;e.env.memory=a;e.env.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module({memory:e.env.memory,\\nstreamBuffer:[],messagePort:c});c=await WebAssembly.instantiate(d,e);b.setMemory(a);b.start(c);c.exports.__wasi_js_csoundSetMessageStringCallback();return[c,b]};\\nvar $jscompDefaultExport$$module$src$module=async function({wasmDataURI:a,withPlugins:b=[],messagePort:c}){var d={};const e=new WASI$$module$src$filesystem$wasi({preopens:{\"/\":\"/\"}});a=new Uint8Array(a);a=(new Inflate$$module$src$zlib$inflate(a)).decompress();var f=getBinaryHeaderData$$module$src$module(a);if(\"static\"===f)return await loadStaticWasm$$module$src$module({messagePort:c,wasmBytes:a,wasmFs:d,wasi:e});const {memorySize:g,memoryAlign:h,tableSize:k}=f;b=await b.reduce(async(t,z)=>{t=await t;\\nlet v,y;try{v=new Uint8Array(z),y=getBinaryHeaderData$$module$src$module(v)}catch(C){console.error(\"Error in plugin\",C)}y&&t.push({headerData:y,wasmPluginBytes:v});return t},[]);var l=128*PAGES_PER_MB$$module$src$module;d=Math.ceil((g+h)/PAGE_SIZE$$module$src$module);f=Math.ceil(b.reduce((t,{headerData:z})=>\"static\"===z?0:t+(z.memorySize+h),0)/PAGE_SIZE$$module$src$module);f=d+f+l;const m=new WebAssembly.Memory({initial:f,maximum:1024*PAGES_PER_MB$$module$src$module}),n=new WebAssembly.Table({initial:k+\\n1,element:\"anyfunc\"});e.setMemory(m);const p=new WebAssembly.Global({value:\"i32\",mutable:!0},f*PAGE_SIZE$$module$src$module);f=new WebAssembly.Global({value:\"i32\",mutable:!0},f*PAGE_SIZE$$module$src$module);l=new WebAssembly.Global({value:\"i32\",mutable:!1},l);const q=new WebAssembly.Global({value:\"i32\",mutable:!1},1),w=new WebAssembly.Global({value:\"i32\",mutable:!0},0);a=await WebAssembly.compile(a);const r=e.getImports(a);let u=[],A=d;r.env=r.env||{};r.env.memory=m;r.env.__indirect_function_table=\\nn;r.env.__stack_pointer=p;r.env.__memory_base=l;r.env.__table_base=q;r.env.csoundLoadModules=t=>{u.forEach(z=>{void 0===x?console.error(\"csound-wasm internal: timing problem detected!\"):dlinit$$module$src$dlinit(x,z,n,t)});return 0};r.env._ZTH5errno=function(){};r.env.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module({memory:m,messagePort:c,streamBuffer:[]});r.env.printDebugCallback=(t,z)=>{t=new Uint8Array(m.buffer,t,z);t=uint2String$$module$src$utils$text_encoders(t);console.log(t)};\\nr[\"GOT.mem\"]=r[\"GOT.mem\"]||{};r[\"GOT.mem\"].__heap_base=f;r[\"GOT.func\"]=r[\"GOT.func\"]||{};const x=await WebAssembly.instantiate(a,r);c=Object.assign({},x.exports);a={};a.exports=Object.assign(c,{memory:m});u=await b.reduce(async(t,{headerData:z,wasmPluginBytes:v})=>{t=await t;try{const {memorySize:y,memoryAlign:C,tableSize:F}=z,E=await WebAssembly.compile(v),B=e.getImports(E),G=new WebAssembly.Global({value:\"i32\",mutable:!1},A*PAGE_SIZE$$module$src$module);n.grow(F);B.env=Object.assign({},B.env);B.env.memory=\\nm;B.env.__indirect_function_table=n;B.env.__memory_base=G;B.env.__stack_pointer=p;B.env.__table_base=q;B.env.csoundLoadModules=w;delete B.env.csoundWasiJsMessageCallback;A+=Math.ceil((y+C)/PAGE_SIZE$$module$src$module);const D=await WebAssembly.instantiate(E,B);assertPluginExports$$module$src$module(D)&&(D.exports.__wasm_call_ctors(),t.push(D))}catch(y){console.error(\"Error while compiling csound-plugin\",y)}return t},[]);e.start(a);a.exports.__wasi_js_csoundSetMessageStringCallback();return[a,e]},\\nmodule$src$module={};module$src$module.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module;module$src$module.default=$jscompDefaultExport$$module$src$module;let combined$$module$src$workers$vanilla_worker,audioProcessCallback$$module$src$workers$vanilla_worker=()=>{};\\nconst rtmidiQueue$$module$src$workers$vanilla_worker=[],createAudioInputBuffers$$module$src$workers$vanilla_worker=(a,b)=>{for(let c=0;c<b;++c)a.buffers.push(new Float64Array(RING_BUFFER_SIZE$$module$src$constants))},generateAudioFrames$$module$src$workers$vanilla_worker=(a,b)=>{if(\"realtimePerformanceEnded\"!==b.vanillaWorkerState)return audioProcessCallback$$module$src$workers$vanilla_worker(a)},createRealtimeAudioThread$$module$src$workers$vanilla_worker=({libraryCsound:a,wasm:b,workerMessagePort:c,\\naudioInputs:d,inputChannelCount:e,outputChannelCount:f,sampleRate:g})=>({csound:h})=>{var k=a.csoundGetInputName(h).includes(\"adc\");g&&a.csoundSetOption(h,`--sr=${g}`);f&&a.csoundSetOption(h,`--nchnls=${f}`);e&&a.csoundSetOption(h,`--nchnls_i=${e}`);const l=a.csoundGetNchnls(h),m=0<e?e:k?a.csoundGetNchnlsInput(h):0,n=a.csoundGet0dBFS(h);k=a.csoundGetSpin(h);const p=a.csoundGetSpout(h),q=a.csoundGetKsmps(h);let w=new Float64Array(b.wasi.memory.buffer,k,q*m),r=new Float64Array(b.wasi.memory.buffer,\\np,q*l),u=0,A=0;c.broadcastPlayState(\"realtimePerformanceStarted\");audioProcessCallback$$module$src$workers$vanilla_worker=({numFrames:x})=>{const t=instantiateAudioPacket$$module$src$workers$common_utils(l,x),z=0<d.buffers.length&&d.availableFrames>=x;0<rtmidiQueue$$module$src$workers$vanilla_worker.length&&(rtmidiQueue$$module$src$workers$vanilla_worker.forEach(v=>{a.csoundPushMidiMessage(h,v[0],v[1],v[2])}),clearArray$$module$src$utils$clear_array(rtmidiQueue$$module$src$workers$vanilla_worker));\\nfor(let v=0;v<x;v++){A=(A+1)%q;if(\"realtimePerformanceEnded\"===c.vanillaWorkerState)return 0===u&&(a.csoundStop(h),u=a.csoundPerformKsmps(h)),c.broadcastPlayState(\"realtimePerformanceEnded\"),audioProcessCallback$$module$src$workers$vanilla_worker=()=>{},clearArray$$module$src$utils$clear_array(rtmidiQueue$$module$src$workers$vanilla_worker),d.port=void 0,{framesLeft:v};if(0===A&&0===u&&(u=a.csoundPerformKsmps(h),0!==u))return c.broadcastPlayState(\"realtimePerformanceEnded\"),audioProcessCallback$$module$src$workers$vanilla_worker=\\n()=>{},clearArray$$module$src$utils$clear_array(rtmidiQueue$$module$src$workers$vanilla_worker),d.port=void 0,{framesLeft:v};0===w.length&&(w=new Float64Array(b.wasi.memory.buffer,a.csoundGetSpin(h),q*m));0===r.length&&(r=new Float64Array(b.wasi.memory.buffer,a.csoundGetSpout(h),q*l));t.forEach((y,C)=>{0<r.length&&(y[v]=(r[A*l+C]||0)/n)});if(z)for(let y=0;y<m;y++)w[A*m+y]=(d.buffers[y][v+d.inputReadIndex%RING_BUFFER_SIZE$$module$src$constants]||0)*n}z&&(d.availableFrames-=x,d.inputReadIndex+=x%RING_BUFFER_SIZE$$module$src$constants);\\nreturn{audioPacket:t,framesLeft:0}}},callUncloned$$module$src$workers$vanilla_worker=async(a,b)=>(a=combined$$module$src$workers$vanilla_worker.get(a))&&a.apply({},b||[]),initMessagePort$$module$src$workers$vanilla_worker=({port:a})=>{logVANWorker$$module$src$logger(\"initMessagePort\")();const b=new $jscompDefaultExport$$module$src$utils$message_port_state;b.port=a;b.post=c=>a.postMessage({log:c});b.broadcastPlayState=c=>{b.vanillaWorkerState=c;a.postMessage({playStateChange:c})};b.ready=!0;return b},\\ninitRequestPort$$module$src$workers$vanilla_worker=({csoundWorkerFrameRequestPort:a,workerMessagePort:b})=>{logVANWorker$$module$src$logger(\"initRequestPort\")();a.addEventListener(\"message\",c=>{const {framesLeft:d=0,audioPacket:e}=generateAudioFrames$$module$src$workers$vanilla_worker(c.data,b)||{};a.postMessage({numFrames:c.data.numFrames-d,audioPacket:e,...c.data})});a.start();return a},initAudioInputPort$$module$src$workers$vanilla_worker=({port:a})=>{logVANWorker$$module$src$logger(\"initAudioInputPort\")();\\nconst b={availableFrames:0,buffers:[],inputReadIndex:0,inputWriteIndex:0,port:a};b.port.addEventListener(\"message\",({data:c})=>{0===b.buffers.length&&createAudioInputBuffers$$module$src$workers$vanilla_worker(b,c.length);b.buffers.forEach((d,e)=>{d.set(c[e],b.inputWriteIndex)});b.inputWriteIndex+=c[0].length;b.availableFrames+=c[0].length;b.inputWriteIndex>=RING_BUFFER_SIZE$$module$src$constants&&(b.inputWriteIndex=0)});b.port.start();return b},initRtMidiEventPort$$module$src$workers$vanilla_worker=\\n({rtmidiPort:a})=>{logVANWorker$$module$src$logger(\"initRtMidiEventPort\")();a.addEventListener(\"message\",({data:b})=>{rtmidiQueue$$module$src$workers$vanilla_worker.push(b)});a.start();return a},initialize$$module$src$workers$vanilla_worker=async({audioInputPort:a,inputChannelCount:b,messagePort:c,outputChannelCount:d,requestPort:e,rtmidiPort:f,wasmDataURI:g,wasmTransformerDataURI:h,withPlugins:k=[]})=>{logVANWorker$$module$src$logger(\"initializing wasm and exposing csoundAPI functions from worker to main\")();\\nconst l=initMessagePort$$module$src$workers$vanilla_worker({port:c}),m=initAudioInputPort$$module$src$workers$vanilla_worker({port:a});initRequestPort$$module$src$workers$vanilla_worker({csoundWorkerFrameRequestPort:e,workerMessagePort:l});initRtMidiEventPort$$module$src$workers$vanilla_worker({rtmidiPort:f});const [n,p]=await $jscompDefaultExport$$module$src$module({wasmDataURI:g,wasmTransformerDataURI:h,withPlugins:k,messagePort:l});n.wasi=p;const q=$jscompDefaultExport$$module$src$libcsound(n);\\na=pipe$$module$node_modules$rambda$dist$rambda_mjs(assoc$$module$node_modules$rambda$dist$rambda_mjs(\"csoundStart\",(r,u)=>handleCsoundStart$$module$src$workers$common_utils(l,q,p,createRealtimeAudioThread$$module$src$workers$vanilla_worker({audioInputs:m,inputChannelCount:b,libraryCsound:q,outputChannelCount:d,wasm:n,wasi:p,workerMessagePort:l}),renderFunction$$module$src$workers$common_utils({inputChannelCount:b,libraryCsound:q,outputChannelCount:d,wasm:n,workerMessagePort:l}))(u)),assoc$$module$node_modules$rambda$dist$rambda_mjs(\"wasm\",\\nn))(q);combined$$module$src$workers$vanilla_worker=new Map(Object.entries(a));q.csoundInitialize(0);const w=q.csoundCreate();l.port.addEventListener(\"message\",r=>{r.data&&r.data.newPlayState&&(\"realtimePerformanceEnded\"===r.data.newPlayState&&(q.csoundStop(w),\"realtimePerformanceEnded\"!==l.vanillaWorkerState&&q.csoundPerformKsmps(w),l.broadcastPlayState(\"realtimePerformanceEnded\")),l.vanillaWorkerState=r.data.newPlayState)});l.port.start();return w};\\nexpose$$module$node_modules$comlink$dist$esm$comlink_mjs({initialize:initialize$$module$src$workers$vanilla_worker,callUncloned:callUncloned$$module$src$workers$vanilla_worker});var module$src$workers$vanilla_worker={};}).call(this);\\n//# sourceMappingURL=__compiled.vanilla.worker.js.map\\n'])),\nmodule$dist$__compiled_vanilla_worker_inline={};module$dist$__compiled_vanilla_worker_inline.default=$jscompDefaultExport$$module$dist$__compiled_vanilla_worker_inline;class VanillaWorkerMainThread$$module$src$mains$vanilla_main{constructor({audioContext:a,audioWorker:b,audioContextIsProvided:c,inputChannelCount:d,outputChannelCount:e}){this.ipcMessagePorts=new IPCMessagePorts$$module$src$mains$messages_main;this.eventPromises=new EventPromises$$module$src$utils$event_promises;this.publicEvents=new PublicEventAPI$$module$src$events(this);b.ipcMessagePorts=this.ipcMessagePorts;b.csoundWorkerMain=this;b.publicEvents=this.publicEvents;this.audioWorker=b;if(this.audioContextIsProvided=\nc)this.sampleRate=a.sampleRate;d&&(this.inputChannelCount=d);e&&(this.outputChannelCount=e);this.exportApi={};this.currentPlayState=this.csoundInstance=void 0;this.midiPortStarted=!1;this.onPlayStateChange=this.onPlayStateChange.bind(this)}async terminateInstance(){this.csoundWorker&&(this.csoundWorker.terminate(),delete this.csoundWorker);this.audioWorker&&this.audioWorker.terminateInstance&&(await this.audioWorker.terminateInstance(),delete this.audioWorker.terminateInstance);this.proxyPort&&(this.proxyPort[releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs](),\ndelete this.proxyPort);this.publicEvents&&this.publicEvents.terminateInstance();Object.keys(this.exportApi).forEach(a=>delete this.exportApi[a]);Object.keys(this).forEach(a=>delete this[a])}get api(){return this.exportApi}handleMidiInput({data:a}){this.ipcMessagePorts.csoundMainRtMidiPort.postMessage&&this.ipcMessagePorts.csoundMainRtMidiPort.postMessage(a)}async prepareRealtimePerformance(){if(this.csoundInstance){this.audioWorker.sampleRate=await this.exportApi.getSr(this.csoundInstance);var a=\nawait this.exportApi.getInputName(this.csoundInstance);this.audioWorker.isRequestingInput=a.includes(\"adc\");this.audioWorker.isRequestingMidi=await this.exportApi._isRequestingRtMidiInput(this.csoundInstance);this.audioWorker.outputsCount=await this.exportApi.getNchnls(this.csoundInstance);this.audioWorker.inputsCount=this.audioWorker.isRequestingInput?1:0;logVANMain$$module$src$logger(\"vars for rtPerf set\")()}else console.error(\"fatal error: csound instance not found?\")}async onPlayStateChange(a){if(this.publicEvents){this.currentPlayState=\na;switch(a){case \"realtimePerformanceStarted\":logVANMain$$module$src$logger(\"event: realtimePerformanceStarted from worker, now preparingRT..\")();await this.prepareRealtimePerformance();break;case \"realtimePerformanceEnded\":logVANMain$$module$src$logger(\"event: realtimePerformanceEnded\")();this.eventPromises.createStopPromise();this.midiPortStarted=!1;this.publicEvents.triggerRealtimePerformanceEnded(this);await this.eventPromises.releaseStopPromise();break;case \"renderStarted\":await this.eventPromises.releaseStartPromise();\nthis.publicEvents.triggerRenderStarted(this);break;case \"renderEnded\":logVANMain$$module$src$logger(\"event: renderEnded received, beginning cleanup\")(),this.publicEvents.triggerRenderEnded(this),await this.eventPromises.releaseStopPromise()}this.audioWorker.ipcMessagePorts||(this.audioWorker.ipcMessagePorts=this.ipcMessagePorts);await this.audioWorker.onPlayStateChange(a)}}async csoundPause(){if(this.eventPromises.isWaiting(\"pause\"))return-1;this.eventPromises.createPausePromise();this.audioWorker&&\nvoid 0!==this.audioWorker.workletProxy?await this.audioWorker.workletProxy.pause():await this.audioWorker.onPlayStateChange(\"realtimePerformancePaused\");await this.eventPromises.waitForPause();return 0}async csoundResume(){if(this.eventPromises.isWaiting(\"resume\"))return-1;this.eventPromises.createResumePromise();this.audioWorker&&void 0!==this.audioWorker.workletProxy?await this.audioWorker.workletProxy.resume():await this.audioWorker.onPlayStateChange(\"realtimePerformanceResumed\");await this.eventPromises.waitForResume();\nreturn 0}async initialize({wasmDataURI:a,withPlugins:b}){a=a();\"function\"===typeof this.audioWorker.initIframe&&await this.audioWorker.initIframe();b&&!isEmpty$$module$node_modules$rambda$dist$rambda_mjs(b)&&(b=await fetchPlugins$$module$src$utils(b));logVANMain$$module$src$logger(\"vanilla.main: initialize\")();this.csoundWorker=this.csoundWorker||new Worker($jscompDefaultExport$$module$dist$__compiled_vanilla_worker_inline());this.ipcMessagePorts.mainMessagePort.addEventListener(\"message\",messageEventHandler$$module$src$mains$messages_main(this));\nthis.ipcMessagePorts.mainMessagePort2.addEventListener(\"message\",messageEventHandler$$module$src$mains$messages_main(this));this.ipcMessagePorts.mainMessagePort.start();const c=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(this.csoundWorker);this.proxyPort=c;this.csoundInstance=await c.initialize(transfer$$module$node_modules$comlink$dist$esm$comlink_mjs({wasmDataURI:a,messagePort:this.ipcMessagePorts.workerMessagePort,requestPort:this.ipcMessagePorts.csoundWorkerFrameRequestPort,audioInputPort:this.ipcMessagePorts.csoundWorkerAudioInputPort,\nrtmidiPort:this.ipcMessagePorts.csoundWorkerRtMidiPort,sampleRate:this.sampleRate,inputChannelCount:this.inputChannelCount,outputChannelCount:this.outputChannelCount,withPlugins:b},[a,this.ipcMessagePorts.workerMessagePort,this.ipcMessagePorts.csoundWorkerFrameRequestPort,this.ipcMessagePorts.csoundWorkerAudioInputPort,this.ipcMessagePorts.csoundWorkerRtMidiPort]));this.exportApi.pause=this.csoundPause.bind(this);this.exportApi.resume=this.csoundResume.bind(this);this.exportApi.terminateInstance=\nthis.terminateInstance.bind(this);this.exportApi.getAudioContext=async()=>this.audioWorker.audioContext;this.exportApi.getNode=async()=>{const d=this.audioWorker.audioWorkletNode;return d?d:await new Promise(e=>{this.exportApi.once(\"onAudioNodeCreated\",e)})};this.exportApi=this.publicEvents.decorateAPI(this.exportApi);this.exportApi.enableAudioInput=()=>console.warn(\"enableAudioInput was ignored: please use -iadc option before calling start with useWorker=true\");this.exportApi.addListener(\"message\",\nconsole.log);for(const d of Object.keys(api$$module$src$libcsound)){const e=api$$module$src$libcsound[d],f=makeProxyCallback$$module$src$utils(c,this.csoundInstance,d,this.currentPlayState);switch(d){case \"csoundCreate\":break;case \"csoundStart\":b=async function(){if(this.eventPromises.isWaiting(\"start\"))return-1;this.eventPromises.createStartPromise();const g=await f({csound:this.csoundInstance});await this.eventPromises.waitForStart();return g};b.toString=()=>e.toString();this.exportApi.start=b.bind(this);\nbreak;case \"csoundStop\":b=async function(){if(this.eventPromises.isWaiting(\"stop\"))return-1;this.eventPromises.createStopPromise();this.ipcMessagePorts.mainMessagePort.postMessage({newPlayState:\"renderStarted\"===this.currentPlayState?\"renderEnded\":\"realtimePerformanceEnded\"});await this.eventPromises.waitForStop();return 0};this.exportApi.stop=b.bind(this);b.toString=e.toString;break;case \"csoundReset\":b=async()=>{if(this.currentPlayState){if(this.eventPromises.isWaiting(\"reset\"))return-1;stopableStates$$module$src$utils.has(this.currentPlayState)&&\nawait this.exportApi.stop();const g=await f([]);this.audioContextIsProvided||(await this.audioWorker.terminateInstance(),delete this.audioWorker.audioContext);this.ipcMessagePorts.restartAudioWorkerPorts();return g}};this.exportApi.reset=b.bind(this);b.toString=e.toString;break;case \"fs\":this.exportApi.fs={};Object.keys(e).forEach(g=>{const h=makeProxyCallback$$module$src$utils(c,this.csoundInstance,g,this.currentPlayState);h.toString=e[g].toString;this.exportApi.fs[g]=h});break;default:f.toString=\ne.toString,this.exportApi[csoundApiRename$$module$src$utils(d)]=f}}logVANMain$$module$src$logger(\"exportAPI generated\")()}}var $jscompDefaultExport$$module$src$mains$vanilla_main=VanillaWorkerMainThread$$module$src$mains$vanilla_main,module$src$mains$vanilla_main={};module$src$mains$vanilla_main.default=$jscompDefaultExport$$module$src$mains$vanilla_main;/*\n unmute-ios-audio. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nvar module$node_modules$unmute_ios_audio$index={default:function(){function a(n){\"blocked\"===e&&(e=\"pending\",b());\"blocked\"===f&&(f=\"pending\",h=new d,k=h.createBufferSource(),k.buffer=h.createBuffer(1,1,22050),k.connect(h.destination),k.start(),\"running\"===h.state?(f=\"allowed\",c()):(f=\"blocked\",k.disconnect(h.destination),k=null,h.close(),h=null))}function b(){g=document.createElement(\"audio\");g.setAttribute(\"x-webkit-airplay\",\"deny\");g.preload=\"auto\";g.loop=!0;g.src=m;g.load();g.play().then(()=>\n{e=\"allowed\";c()},()=>{e=\"blocked\";g.pause();g.removeAttribute(\"src\");g.load();g=null})}function c(){\"allowed\"===e&&\"allowed\"===f&&USER_ACTIVATION_EVENTS$$module$node_modules$unmute_ios_audio$index.forEach(n=>{window.removeEventListener(n,a,{capture:!0,passive:!0})})}const d=window.webkitAudioContext;if(0<navigator.maxTouchPoints&&null!=d){var e=\"blocked\",f=\"blocked\",g,h,k,m=function(n){const l=new ArrayBuffer(10),p=new DataView(l);p.setUint32(0,n,!0);p.setUint32(4,n,!0);p.setUint16(8,1,!0);return`data:audio/wav;base64,UklGRisAAABXQVZFZm10IBAAAAABAAEA${window.btoa(String.fromCharCode(...(new Uint8Array(l)))).slice(0,\n13)}AgAZGF0YQcAAACAgICAgICAAAA=`}((new d).sampleRate);USER_ACTIVATION_EVENTS$$module$node_modules$unmute_ios_audio$index.forEach(n=>{window.addEventListener(n,a,{capture:!0,passive:!0})})}}};const USER_ACTIVATION_EVENTS$$module$node_modules$unmute_ios_audio$index=\"auxclick click contextmenu dblclick keydown keyup mousedown mouseup touchend\".split(\" \");const DEFAULT_BUFFER_LEN$$module$src$constants=128,MAX_CHANNELS$$module$src$constants=32,RING_BUFFER_SIZE$$module$src$constants=16384,MIDI_BUFFER_SIZE$$module$src$constants=1024,MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants=3,CALLBACK_DATA_BUFFER_SIZE$$module$src$constants=16384,initialSharedState$$module$src$constants=[0,4096,0,0,0,0,-1,-1,-1,-1,0,DEFAULT_BUFFER_LEN$$module$src$constants,0,0,0,0,0,0,0,0],AUDIO_STATE$$module$src$constants={CSOUND_LOCK:0,FRAMES_REQUESTED:1,IS_PERFORMING:2,IS_RENDERING:3,\nIS_PAUSED:4,STOP:5,SAMPLE_RATE:6,KSMPS:7,NCHNLS:8,NCHNLS_I:9,IS_REQUESTING_MIC:10,BUFFER_LEN:11,OUTPUT_READ_INDEX:12,OUTPUT_WRITE_INDEX:13,AVAIL_IN_BUFS:14,AVAIL_OUT_BUFS:15,IS_REQUESTING_RTMIDI:16,RTMIDI_INDEX:17,AVAIL_RTMIDI_EVENTS:18,HAS_PENDING_CALLBACKS:19},DATA_TYPE$$module$src$constants={NUMBER:0,STRING:1,FLOAT_32:2,FLOAT_64:3};var module$src$constants={};module$src$constants.AUDIO_STATE=AUDIO_STATE$$module$src$constants;module$src$constants.CALLBACK_DATA_BUFFER_SIZE=CALLBACK_DATA_BUFFER_SIZE$$module$src$constants;\nmodule$src$constants.DATA_TYPE=DATA_TYPE$$module$src$constants;module$src$constants.DEFAULT_BUFFER_LEN=DEFAULT_BUFFER_LEN$$module$src$constants;module$src$constants.MAX_CHANNELS=MAX_CHANNELS$$module$src$constants;module$src$constants.MIDI_BUFFER_PAYLOAD_SIZE=MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants;module$src$constants.MIDI_BUFFER_SIZE=MIDI_BUFFER_SIZE$$module$src$constants;module$src$constants.RING_BUFFER_SIZE=RING_BUFFER_SIZE$$module$src$constants;module$src$constants.initialSharedState=initialSharedState$$module$src$constants;var $jscompDefaultExport$$module$dist$__compiled_sab_worker_inline=()=>(window.URL||window.webkitURL).createObjectURL(new Blob(['(function(){/*\\n\\n Copyright The Closure Library Authors.\\n SPDX-License-Identifier: Apache-2.0\\n*/\\nvar $jscomp=$jscomp||{};$jscomp.scope={};var COMPILED=!0,goog=goog||{};goog.global=this||self;goog.exportPath_=function(a,b,c,d){a=a.split(\".\");d=d||goog.global;a[0]in d||\"undefined\"==typeof d.execScript||d.execScript(\"var \"+a[0]);for(var e;a.length&&(e=a.shift());)if(a.length||void 0===b)d=d[e]&&d[e]!==Object.prototype[e]?d[e]:d[e]={};else if(!c&&goog.isObject(b)&&goog.isObject(d[e]))for(var f in b)b.hasOwnProperty(f)&&(d[e][f]=b[f]);else d[e]=b};\\ngoog.define=function(a,b){if(!COMPILED){var c=goog.global.CLOSURE_UNCOMPILED_DEFINES,d=goog.global.CLOSURE_DEFINES;c&&void 0===c.nodeType&&Object.prototype.hasOwnProperty.call(c,a)?b=c[a]:d&&void 0===d.nodeType&&Object.prototype.hasOwnProperty.call(d,a)&&(b=d[a])}return b};goog.FEATURESET_YEAR=2020;goog.DEBUG=!0;goog.LOCALE=\"en\";goog.getLocale=function(){return goog.LOCALE};goog.TRUSTED_SITE=!0;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;\\ngoog.provide=function(a){if(goog.isInModuleLoader_())throw Error(\"goog.provide cannot be used within a module.\");if(!COMPILED&&goog.isProvided_(a))throw Error(\\'Namespace \"\\'+a+\\'\" already declared.\\');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b,c){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var d=a;(d=d.substring(0,d.lastIndexOf(\".\")))&&!goog.getObjectByName(d);)goog.implicitNamespaces_[d]=!0}goog.exportPath_(a,b,c)};goog.NONCE_PATTERN_=/^[\\\\w+/_-]+[=]{0,2}$/;\\ngoog.getScriptNonce_=function(a){a=(a||goog.global).document;return(a=a.querySelector&&a.querySelector(\"script[nonce]\"))&&(a=a.nonce||a.getAttribute(\"nonce\"))&&goog.NONCE_PATTERN_.test(a)?a:\"\"};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\\ngoog.module=function(a){if(\"string\"!==typeof a||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error(\"Invalid module identifier\");if(!goog.isInGoogModuleLoader_())throw Error(\"Module \"+a+\" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You\\'re likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.\");if(goog.moduleLoaderState_.moduleName)throw Error(\"goog.module may only be called once per module.\");\\ngoog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error(\\'Namespace \"\\'+a+\\'\" already declared.\\');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a].exports;if(!goog.implicitNamespaces_[a])return a=goog.getObjectByName(a),null!=a?a:null}return null};goog.ModuleType={ES6:\"es6\",GOOG:\"goog\"};goog.moduleLoaderState_=null;\\ngoog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var a=goog.global.$jscomp;return a?\"function\"!=typeof a.getCurrentModulePath?!1:!!a.getCurrentModulePath():!1};\\ngoog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");goog.moduleLoaderState_.declareLegacyNamespace=!0};\\ngoog.declareModuleId=function(a){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error(\"goog.declareModuleId may only be called from within an ES6 module\");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error(\"goog.declareModuleId may only be called once per module.\");if(a in goog.loadedModules_)throw Error(\\'Module with namespace \"\\'+a+\\'\" already exists.\\');}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=a;else{var b=goog.global.$jscomp;if(!b||\"function\"!=typeof b.getCurrentModulePath)throw Error(\\'Module with namespace \"\\'+\\na+\\'\" has been loaded incorrectly.\\');b=b.require(b.getCurrentModulePath());goog.loadedModules_[a]={exports:b,type:goog.ModuleType.ES6,moduleId:a}}};goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||\"\",Error(\"Importing test-only code into non-debug environment\"+(a?\": \"+a:\".\"));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&null!=goog.getObjectByName(a)},goog.implicitNamespaces_={\"goog.module\":!0});\\ngoog.getObjectByName=function(a,b){a=a.split(\".\");b=b||goog.global;for(var c=0;c<a.length;c++)if(b=b[a[c]],null==b)return null;return b};goog.addDependency=function(a,b,c,d){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(a,b,c,d)};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};\\ngoog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(a);if(goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(a)}finally{goog.moduleLoaderState_=b}}return null}};goog.requireType=function(a){return{}};goog.basePath=\"\";goog.abstractMethod=function(){throw Error(\"unimplemented abstract method\");};\\ngoog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.TRANSPILE=\"detect\";goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRUSTED_TYPES_POLICY_NAME=\"goog\";\\ngoog.hasBadLetScoping=null;\\ngoog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:\"\",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};var c={},d=c;if(\"function\"===typeof a)d=a.call(void 0,d);else if(\"string\"===typeof a)d=goog.loadModuleFromSource_.call(void 0,d,a);else throw Error(\"Invalid module definition\");var e=goog.moduleLoaderState_.moduleName;if(\"string\"===typeof e&&e)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(e,d,c!==d):goog.SEAL_MODULE_EXPORTS&&\\nObject.seal&&\"object\"==typeof d&&null!=d&&Object.seal(d),goog.loadedModules_[e]={exports:d,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error(\\'Invalid module name \"\\'+e+\\'\"\\');}finally{goog.moduleLoaderState_=b}};goog.loadModuleFromSource_=function(a,b){eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(b));return a};goog.normalizePath_=function(a){a=a.split(\"/\");for(var b=0;b<a.length;)\".\"==a[b]?a.splice(b,1):b&&\"..\"==a[b]&&a[b-1]&&\"..\"!=a[b-1]?a.splice(--b,2):b++;return a.join(\"/\")};\\ngoog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open(\"get\",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};goog.typeOf=function(a){var b=typeof a;return\"object\"!=b?b:a?Array.isArray(a)?\"array\":b:\"null\"};goog.isArrayLike=function(a){var b=goog.typeOf(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length};\\ngoog.isDateLike=function(a){return goog.isObject(a)&&\"function\"==typeof a.getFullYear};goog.isObject=function(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b};goog.getUid=function(a){return Object.prototype.hasOwnProperty.call(a,goog.UID_PROPERTY_)&&a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&\"removeAttribute\"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};\\ngoog.UID_PROPERTY_=\"closure_uid_\"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.cloneObject=function(a){var b=goog.typeOf(a);if(\"object\"==b||\"array\"==b){if(\"function\"===typeof a.clone)return a.clone();if(\"undefined\"!==typeof Map&&a instanceof Map)return new Map(a);if(\"undefined\"!==typeof Set&&a instanceof Set)return new Set(a);b=\"array\"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};\\ngoog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};\\ngoog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}};goog.now=function(){return Date.now()};goog.globalEval=function(a){(0,eval)(a)};\\ngoog.getCssName=function(a,b){if(\".\"==String(a).charAt(0))throw Error(\\'className passed in goog.getCssName must not start with \".\". You passed: \\'+a);var c=function(e){return goog.cssNameMapping_[e]||e},d=function(e){e=e.split(\"-\");for(var f=[],g=0;g<e.length;g++)f.push(c(e[g]));return f.join(\"-\")};d=goog.cssNameMapping_?\"BY_WHOLE\"==goog.cssNameMappingStyle_?c:d:function(e){return e};a=b?a+\"-\"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a};\\ngoog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.GetMsgOptions=function(){};\\ngoog.getMsg=function(a,b,c){c&&c.html&&(a=a.replace(/</g,\"&lt;\"));c&&c.unescapeHtmlEntities&&(a=a.replace(/&lt;/g,\"<\").replace(/&gt;/g,\">\").replace(/&apos;/g,\"\\'\").replace(/&quot;/g,\\'\"\\').replace(/&amp;/g,\"&\"));b&&(a=a.replace(/\\\\{\\\\$([^}]+)}/g,function(d,e){return null!=b&&e in b?b[e]:d}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,!0,c)};goog.exportProperty=function(a,b,c){a[b]=c};\\ngoog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(d,e,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[e].apply(d,g)}};goog.scope=function(a){if(goog.isInModuleLoader_())throw Error(\"goog.scope is not supported within a module.\");a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);\\ngoog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error(\"cannot instantiate an interface (no constructor defined).\");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;\\ngoog.defineClass.createSealingConstructor_=function(a,b){return goog.defineClass.SEAL_CLASS_INSTANCES?function(){var c=a.apply(this,arguments)||this;c[goog.UID_PROPERTY_]=c[goog.UID_PROPERTY_];return c}:a};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\\ngoog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};goog.identity_=function(a){return a};\\ngoog.createTrustedTypesPolicy=function(a){var b=null,c=goog.global.trustedTypes;if(!c||!c.createPolicy)return b;try{b=c.createPolicy(a,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_})}catch(d){goog.logToConsole_(d.message)}return b};\\n!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.isEdge_=function(){return!!(goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:\"\").match(/Edge\\\\/(\\\\d+)(\\\\.\\\\d)*/i)},goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&\"write\"in a},goog.isDocumentLoading_=function(){var a=goog.global.document;return a.attachEvent?\"complete\"!=a.readyState:\"loading\"==a.readyState},goog.findBasePath_=function(){if(void 0!=goog.global.CLOSURE_BASE_PATH&&\"string\"===typeof goog.global.CLOSURE_BASE_PATH)goog.basePath=\\ngoog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;a=b?[b]:a.getElementsByTagName(\"SCRIPT\");for(b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf(\"?\");d=-1==d?c.length:d;if(\"base.js\"==c.slice(d-7,d)){goog.basePath=c.slice(0,d-7);break}}}},goog.findBasePath_(),goog.protectScriptTag_=function(a){return a.replace(/<\\\\/(SCRIPT)/ig,\"\\\\\\\\x3c/$1\")},goog.DebugLoader_=function(){this.dependencies_={};this.idToPath_={};this.written_={};this.loadingDeps_=\\n[];this.depsToLoad_=[];this.paused_=!1;this.factory_=new goog.DependencyFactory;this.deferredCallbacks_={};this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(a,b){function c(){d&&(goog.global.setTimeout(d,0),d=null)}var d=b;if(a.length){b=[];for(var e=0;e<a.length;e++){var f=this.getPathFromDeps_(a[e]);if(!f)throw Error(\"Unregonized namespace: \"+a[e]);b.push(this.dependencies_[f])}f=goog.require;var g=0;for(e=0;e<a.length;e++)f(a[e]),b[e].onLoad(function(){++g==a.length&&c()})}else c()},\\ngoog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+\"deps.js\"),\"deps.js\",[],[],{}));this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(a,b){(a=this.getPathFromDeps_(a))&&(b||this.areDepsLoaded_(this.dependencies_[a].requires))&&(b=this.deferredCallbacks_[a])&&(delete this.deferredCallbacks_[a],b())},goog.DebugLoader_.prototype.setDependencyFactory=function(a){this.factory_=a},goog.DebugLoader_.prototype.load_=\\nfunction(a){if(this.getPathFromDeps_(a)){var b=this,c=[],d=function(e){var f=b.getPathFromDeps_(e);if(!f)throw Error(\"Bad dependency path or symbol: \"+e);if(!b.written_[f]){b.written_[f]=!0;e=b.dependencies_[f];for(f=0;f<e.requires.length;f++)goog.isProvided_(e.requires[f])||d(e.requires[f]);c.push(e)}};d(a);a=!!this.depsToLoad_.length;this.depsToLoad_=this.depsToLoad_.concat(c);this.paused_||a||this.loadDeps_()}else goog.logToConsole_(\"goog.require could not find: \"+a)},goog.DebugLoader_.prototype.loadDeps_=\\nfunction(){for(var a=this,b=this.paused_;this.depsToLoad_.length&&!b;)(function(){var c=!1,d=a.depsToLoad_.shift(),e=!1;a.loading_(d);var f={pause:function(){if(c)throw Error(\"Cannot call pause after the call to load.\");b=!0},resume:function(){c?a.resume_():b=!1},loaded:function(){if(e)throw Error(\"Double call to loaded.\");e=!0;a.loaded_(d)},pending:function(){for(var g=[],h=0;h<a.loadingDeps_.length;h++)g.push(a.loadingDeps_[h]);return g},setModuleState:function(g){goog.moduleLoaderState_={type:g,\\nmoduleName:\"\",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(g,h,k){k&&(goog.loadedModules_[k]={exports:h,type:goog.ModuleType.ES6,moduleId:k||\"\"})},registerGoogModuleExports:function(g,h){goog.loadedModules_[g]={exports:h,type:goog.ModuleType.GOOG,moduleId:g}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(g){if(c)throw Error(\"Cannot register with defer after the call to load.\");a.defer_(d,g)},areDepsLoaded:function(){return a.areDepsLoaded_(d.requires)}};\\ntry{d.load(f)}finally{c=!0}})();b&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(a){this.loadingDeps_.push(a)},goog.DebugLoader_.prototype.loaded_=function(a){for(var b=0;b<this.loadingDeps_.length;b++)if(this.loadingDeps_[b]==a){this.loadingDeps_.splice(b,1);break}for(b=0;b<this.deferredQueue_.length;b++)if(this.deferredQueue_[b]==\\na.path){this.deferredQueue_.splice(b,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);a.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(a){for(var b=0;b<a.length;b++){var c=this.getPathFromDeps_(a[b]);if(!c||!(c in this.deferredCallbacks_||goog.isProvided_(a[b])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=function(a){return a in this.idToPath_?\\nthis.idToPath_[a]:a in this.dependencies_?a:null},goog.DebugLoader_.prototype.defer_=function(a,b){this.deferredCallbacks_[a.path]=b;this.deferredQueue_.push(a.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(a,b,c){},goog.LoadController.prototype.setModuleState=\\nfunction(a){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(a){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(a,b,c,d,e){this.path=a;this.relativePath=b;this.provides=c;this.requires=d;this.loadFlags=e;this.loaded_=!1;this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var a=this.path,b=a.indexOf(\"://\");0<=b&&(a=a.substring(b+3),b=a.indexOf(\"/\"),0<=b&&(a=a.substring(b+1)));return a},\\ngoog.Dependency.prototype.onLoad=function(a){this.loaded_?a():this.loadCallbacks_.push(a)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var a=this.loadCallbacks_;this.loadCallbacks_=[];for(var b=0;b<a.length;b++)a[b]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(a){var b=Math.random().toString(32);goog.Dependency.callbackMap_[b]=a;return b},goog.Dependency.unregisterCallback_=function(a){delete goog.Dependency.callbackMap_[a]},\\ngoog.Dependency.callback_=function(a,b){if(a in goog.Dependency.callbackMap_){for(var c=goog.Dependency.callbackMap_[a],d=[],e=1;e<arguments.length;e++)d.push(arguments[e]);c.apply(void 0,d)}else throw Error(\"Callback key \"+a+\" does not exist (was base.js loaded more than once?).\");},goog.Dependency.prototype.load=function(a){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var b=goog.global.document;if(\"complete\"==\\nb.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\\\\bdeps.js$/.test(this.path)){a.loaded();return}throw Error(\\'Cannot write \"\\'+this.path+\\'\" after document load\\');}var c=goog.getScriptNonce_();if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var d=function(h){h.readyState&&\"complete\"!=h.readyState?h.onload=d:(goog.Dependency.unregisterCallback_(e),a.loaded())};var e=goog.Dependency.registerCallback_(d);c=c?\\' nonce=\"\\'+c+\\'\"\\':\"\";var f=\\'<script src=\"\\'+this.path+\\'\"\\'+\\nc+(goog.Dependency.defer_?\" defer\":\"\")+\\' id=\"script-\\'+e+\\'\">\\\\x3c/script>\\';f+=\"<script\"+c+\">\";f=goog.Dependency.defer_?f+(\"document.getElementById(\\'script-\"+e+\"\\').onload = function() {\\\\n  goog.Dependency.callback_(\\'\"+e+\"\\', this);\\\\n};\\\\n\"):f+(\"goog.Dependency.callback_(\\'\"+e+\"\\', document.getElementById(\\'script-\"+e+\"\\'));\");f+=\"\\\\x3c/script>\";b.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(f):f)}else{var g=b.createElement(\"script\");g.defer=goog.Dependency.defer_;g.async=!1;c&&(g.nonce=\\nc);g.onload=function(){g.onload=null;a.loaded()};g.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path;b.head.appendChild(g)}}else goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"),\"deps.js\"==this.relativePath?(goog.logToConsole_(\"Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true.\"),a.loaded()):a.pause()},goog.Es6ModuleDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,\\nb,c,d,e)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(a){function b(l,n){var m=\"\",p=goog.getScriptNonce_();p&&(m=\\' nonce=\"\\'+p+\\'\"\\');l=n?\\'<script type=\"module\" crossorigin\\'+m+\">\"+n+\"\\\\x3c/script>\":\\'<script type=\"module\" crossorigin src=\"\\'+l+\\'\"\\'+m+\">\\\\x3c/script>\";d.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(l):l)}function c(l,n){var m=d.createElement(\"script\");m.defer=!0;m.async=!1;m.type=\"module\";m.setAttribute(\"crossorigin\",\\n!0);var p=goog.getScriptNonce_();p&&(m.nonce=p);n?m.text=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(n):n:m.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(l):l;d.head.appendChild(m)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var d=goog.global.document,e=this;if(goog.isDocumentLoading_()){var f=b;goog.Dependency.defer_=!0}else f=c;var g=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(g);\\na.setModuleState(goog.ModuleType.ES6)});f(void 0,\\'goog.Dependency.callback_(\"\\'+g+\\'\")\\');f(this.path,void 0);var h=goog.Dependency.registerCallback_(function(l){goog.Dependency.unregisterCallback_(h);a.registerEs6ModuleExports(e.path,l,goog.moduleLoaderState_.moduleName)});f(void 0,\\'import * as m from \"\\'+this.path+\\'\"; goog.Dependency.callback_(\"\\'+h+\\'\", m)\\');var k=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(k);a.clearModuleState();a.loaded()});f(void 0,\\'goog.Dependency.callback_(\"\\'+\\nk+\\'\")\\')}else goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"),a.pause()},goog.TransformedDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e);this.contents_=null;this.lazyFetch_=!goog.inHtmlDocument_()||!(\"noModule\"in goog.global.document.createElement(\"script\"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(a){function b(){e.contents_=goog.loadFileSync_(e.path);e.contents_&&(e.contents_=\\ne.transform(e.contents_),e.contents_&&(e.contents_+=\"\\\\n//# sourceURL=\"+e.path))}function c(){e.lazyFetch_&&b();if(e.contents_){f&&a.setModuleState(goog.ModuleType.ES6);try{var l=e.contents_;e.contents_=null;goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(l));if(f)var n=goog.moduleLoaderState_.moduleName}finally{f&&a.clearModuleState()}f&&goog.global.$jscomp.require.ensure([e.getPathName()],function(){a.registerEs6ModuleExports(e.path,goog.global.$jscomp.require(e.getPathName()),n)});a.loaded()}}\\nfunction d(){var l=goog.global.document,n=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(n);c()}),m=goog.getScriptNonce_();m=\"<script\"+(m?\\' nonce=\"\\'+m+\\'\"\\':\"\")+\">\"+goog.protectScriptTag_(\\'goog.Dependency.callback_(\"\\'+n+\\'\");\\')+\"\\\\x3c/script>\";l.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(m):m)}var e=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)b(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT(\"\",this.contents_)?(this.contents_=null,a.loaded()):\\na.pause();else{var f=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||b();var g=1<a.pending().length;if(goog.Dependency.defer_&&(g||goog.isDocumentLoading_()))a.defer(function(){c()});else{var h=goog.global.document;g=goog.inHtmlDocument_()&&(\"ActiveXObject\"in goog.global||goog.isEdge_());if(f&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!g){goog.Dependency.defer_=!0;a.pause();var k=h.onreadystatechange;h.onreadystatechange=function(){\"interactive\"==h.readyState&&(h.onreadystatechange=\\nk,c(),a.resume());\"function\"===typeof k&&k.apply(void 0,arguments)}}else goog.inHtmlDocument_()&&goog.isDocumentLoading_()?d():c()}}},goog.TransformedDependency.prototype.transform=function(a){},goog.PreTranspiledEs6ModuleDependency=function(a,b,c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(a){return a},goog.GoogModuleDependency=function(a,b,\\nc,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(a){return goog.LOAD_MODULE_USING_EVAL&&void 0!==goog.global.JSON?\"goog.loadModule(\"+goog.global.JSON.stringify(a+\"\\\\n//# sourceURL=\"+this.path+\"\\\\n\")+\");\":\\'goog.loadModule(function(exports) {\"use strict\";\\'+a+\"\\\\n;return exports});\\\\n//# sourceURL=\"+this.path+\"\\\\n\"},goog.DebugLoader_.prototype.addDependency=function(a,b,c,d){b=\\nb||[];a=a.replace(/\\\\\\\\/g,\"/\");var e=goog.normalizePath_(goog.basePath+a);d&&\"boolean\"!==typeof d||(d=d?{module:goog.ModuleType.GOOG}:{});c=this.factory_.createDependency(e,a,b,c,d);this.dependencies_[e]=c;for(c=0;c<b.length;c++)this.idToPath_[b[c]]=e;this.idToPath_[a]=e},goog.DependencyFactory=function(){},goog.DependencyFactory.prototype.createDependency=function(a,b,c,d,e){return e.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(a,b,c,d,e):e.module==goog.ModuleType.ES6?goog.ASSUME_ES_MODULES_TRANSPILED?\\nnew goog.PreTranspiledEs6ModuleDependency(a,b,c,d,e):new goog.Es6ModuleDependency(a,b,c,d,e):new goog.Dependency(a,b,c,d,e)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(a){goog.debugLoader_.setDependencyFactory(a)},goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+\"#base\"):null,goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),\\ngoog.bootstrap=function(a,b){goog.debugLoader_.bootstrap(a,b)});if(!COMPILED){var isChrome87=!1;try{isChrome87=eval(goog.global.trustedTypes.emptyScript)!==goog.global.trustedTypes.emptyScript}catch(a){}goog.CLOSURE_EVAL_PREFILTER_=goog.global.trustedTypes&&isChrome87&&goog.createTrustedTypesPolicy(\"goog#base#devonly#eval\")||{createScript:goog.identity_}};const proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.proxy\"),createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.endpoint\"),releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.releaseProxy\"),throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.thrown\"),isObject$$module$node_modules$comlink$dist$esm$comlink_mjs=a=>\"object\"===typeof a&&null!==a||\"function\"===typeof a,proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs=\\n{canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs],serialize(a){const {port1:b,port2:c}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b);return[c,[c]]},deserialize(a){a.start();return wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a)}},throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs={canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&\\nthrowMarker$$module$node_modules$comlink$dist$esm$comlink_mjs in a,serialize({value:a}){return[a instanceof Error?{isError:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{isError:!1,value:a},[]]},deserialize(a){if(a.isError)throw Object.assign(Error(a.value.message),a.value);throw a.value;}},transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs=new Map([[\"proxy\",proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs],[\"throw\",throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs]]);\\nfunction expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self){b.addEventListener(\"message\",function e(d){if(d&&d.data){var {id:f,type:g,path:h}=Object.assign({path:[]},d.data),k=(d.data.argumentList||[]).map(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);try{const n=h.slice(0,-1).reduce((p,q)=>p[q],a),m=h.reduce((p,q)=>p[q],a);switch(g){case \"GET\":var l=m;break;case \"SET\":n[h.slice(-1)[0]]=fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(d.data.value);\\nl=!0;break;case \"APPLY\":l=m.apply(n,k);break;case \"CONSTRUCT\":const p=new m(...k);l=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(p);break;case \"ENDPOINT\":const {port1:q,port2:B}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,B);l=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(q,[q]);break;case \"RELEASE\":l=void 0;break;default:return}}catch(n){l={value:n,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0}}Promise.resolve(l).catch(n=>\\n({value:n,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0})).then(n=>{const [m,p]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(n);b.postMessage(Object.assign(Object.assign({},m),{id:f}),p);\"RELEASE\"===g&&(b.removeEventListener(\"message\",e),closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(b))})}});b.start&&b.start()}function isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return\"MessagePort\"===a.constructor.name}\\nfunction closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a){isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a.close()}function wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[],b)}function throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(a){if(a)throw Error(\"Proxy has been released and is not useable\");}\\nfunction createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=[],c=function(){}){let d=!1;const e=new Proxy(c,{get(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);if(g===releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs)return()=>requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"RELEASE\",path:b.map(h=>h.toString())}).then(()=>{closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a);d=!0});if(\"then\"===\\ng){if(0===b.length)return{then:()=>e};f=requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"GET\",path:b.map(h=>h.toString())}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return f.then.bind(f)}return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[...b,g])},set(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [k,l]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,\\n{type:\"SET\",path:[...b,g].map(n=>n.toString()),value:k},l).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},apply(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);f=b[b.length-1];if(f===createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs)return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"ENDPOINT\"}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);if(\"bind\"===f)return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,\\nb.slice(0,-1));const [k,l]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"APPLY\",path:b.map(n=>n.toString()),argumentList:k},l).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},construct(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [h,k]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(g);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,\\n{type:\"CONSTRUCT\",path:b.map(l=>l.toString()),argumentList:h},k).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)}});return e}function myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Array.prototype.concat.apply([],a)}\\nfunction processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(a){a=a.map(toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return[a.map(b=>b[0]),myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a.map(b=>b[1]))]}const transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs=new WeakMap;function transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.set(a,b);return a}\\nfunction proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Object.assign(a,{[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:!0})}function windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self,c=\"*\"){return{postMessage:(d,e)=>a.postMessage(d,c,e),addEventListener:b.addEventListener.bind(b),removeEventListener:b.removeEventListener.bind(b)}}\\nfunction toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){for(const [b,c]of transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs)if(c.canHandle(a)){const [d,e]=c.serialize(a);return[{type:\"HANDLER\",name:b,value:d},e]}return[{type:\"RAW\",value:a},transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a)||[]]}\\nfunction fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){switch(a.type){case \"HANDLER\":return transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a.name).deserialize(a.value);case \"RAW\":return a.value}}\\nfunction requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b,c){return new Promise(d=>{const e=generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs();a.addEventListener(\"message\",function h(g){g.data&&g.data.id&&g.data.id===e&&(a.removeEventListener(\"message\",h),d(g.data))});a.start&&a.start();a.postMessage(Object.assign({id:e},b),c)})}\\nfunction generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs(){return Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join(\"-\")}var module$node_modules$comlink$dist$esm$comlink_mjs={};module$node_modules$comlink$dist$esm$comlink_mjs.createEndpoint=createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.expose=expose$$module$node_modules$comlink$dist$esm$comlink_mjs;\\nmodule$node_modules$comlink$dist$esm$comlink_mjs.proxy=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.proxyMarker=proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.releaseProxy=releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.transfer=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs;\\nmodule$node_modules$comlink$dist$esm$comlink_mjs.transferHandlers=transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.windowEndpoint=windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.wrap=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs;function MessagePortState$$module$src$utils$message_port_state(){}MessagePortState$$module$src$utils$message_port_state.prototype.ready=!1;MessagePortState$$module$src$utils$message_port_state.prototype.port=void 0;MessagePortState$$module$src$utils$message_port_state.prototype.post=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.broadcastPlayState=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.workerState=void 0;\\nMessagePortState$$module$src$utils$message_port_state.prototype.vanillaWorkerState=void 0;var $jscompDefaultExport$$module$src$utils$message_port_state=MessagePortState$$module$src$utils$message_port_state,module$src$utils$message_port_state={};module$src$utils$message_port_state.MessagePortState=MessagePortState$$module$src$utils$message_port_state;module$src$utils$message_port_state.default=$jscompDefaultExport$$module$src$utils$message_port_state;const csoundCreate$$module$src$modules$instantiation=a=>()=>a.exports.csoundCreateWasi();csoundCreate$$module$src$modules$instantiation.toString=()=>\"create = async () => undefined;\";const csoundDestroy$$module$src$modules$instantiation=a=>b=>a.exports.csoundDestroy(b);csoundDestroy$$module$src$modules$instantiation.toString=()=>\"destroy = async () => undefined;\";const csoundGetAPIVersion$$module$src$modules$instantiation=a=>()=>a.exports.csoundGetAPIVersion();\\ncsoundGetAPIVersion$$module$src$modules$instantiation.toString=()=>\"getAPIVersion = async () => Number;\";const csoundGetVersion$$module$src$modules$instantiation=a=>()=>a.exports.csoundGetVersion();csoundGetVersion$$module$src$modules$instantiation.toString=()=>\"getVersion = async () => Number;\";const csoundInitialize$$module$src$modules$instantiation=a=>(b,c)=>a.exports.csoundInitialize(c);csoundInitialize$$module$src$modules$instantiation.toString=()=>\"initialize = async () => Number;\";\\nvar module$src$modules$instantiation={};module$src$modules$instantiation.csoundCreate=csoundCreate$$module$src$modules$instantiation;module$src$modules$instantiation.csoundDestroy=csoundDestroy$$module$src$modules$instantiation;module$src$modules$instantiation.csoundGetAPIVersion=csoundGetAPIVersion$$module$src$modules$instantiation;module$src$modules$instantiation.csoundGetVersion=csoundGetVersion$$module$src$modules$instantiation;module$src$modules$instantiation.csoundInitialize=csoundInitialize$$module$src$modules$instantiation;const WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders=!1;function TextEncoderPoly$$module$src$utils$text_encoders(){this.encoding=\"utf8\";return this}TextEncoderPoly$$module$src$utils$text_encoders.prototype.encode=function(a){if(\"string\"!==typeof a)throw new TypeError(\"passed argument must be of type string \"+a+\" \"+typeof a);a=unescape(encodeURIComponent(a));const b=new Uint8Array(a.length);[...a].forEach(function(c,d){b[d]=c.codePointAt(0)});return b};\\nfunction TextDecoderPoly$$module$src$utils$text_encoders(){this.encoding=\"utf8\";this.ignoreBOM=!1;this.trimNull=a=>{const b=a.indexOf(\"\\\\x00\");return-1<b?a.slice(0,Math.max(0,b)):a};this.decode=function(a,b){if(void 0===a)return\"\";if(\"boolean\"!==typeof(void 0!==b&&\"stream\"in b?b.stream:!1))throw new TypeError(\"stream option must be boolean\");if(ArrayBuffer.isView(a)){a=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);const c=Array.from({length:a.length});a.forEach(function(d,e){c[e]=String.fromCodePoint(d)});\\nreturn this.trimNull(c.join(\"\"))}throw new TypeError(\"passed argument must be an array buffer view\");}}\\nconst decoder$$module$src$utils$text_encoders=WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders?new TextDecoderPoly$$module$src$utils$text_encoders:new TextDecoder(\"utf8\"),encoder$$module$src$utils$text_encoders=WITH_TEXT_ENCODER_POLYFILL$$module$src$utils$text_encoders?new TextEncoderPoly$$module$src$utils$text_encoders:new TextEncoder(\"utf8\"),uint2String$$module$src$utils$text_encoders=a=>decoder$$module$src$utils$text_encoders.decode(a);var module$src$utils$text_encoders={};\\nmodule$src$utils$text_encoders.decoder=decoder$$module$src$utils$text_encoders;module$src$utils$text_encoders.encoder=encoder$$module$src$utils$text_encoders;module$src$utils$text_encoders.uint2String=uint2String$$module$src$utils$text_encoders;const trimNull$$module$src$utils$trim_null=a=>{const b=a.indexOf(\"\\\\x00\");return-1<b?a.substr(0,b):a};var module$src$utils$trim_null={};module$src$utils$trim_null.trimNull=trimNull$$module$src$utils$trim_null;const freeStringPtr$$module$src$utils$string_pointers=(a,b)=>{a.exports.freeStringMem(b)},ptr2string$$module$src$utils$string_pointers=(a,b)=>{({buffer:a}=a.wasi.memory);b=new Uint8Array(a,b);b=uint2String$$module$src$utils$text_encoders(b);return trimNull$$module$src$utils$trim_null(b)},string2ptr$$module$src$utils$string_pointers=(a,b)=>{if(\"string\"!==typeof b)console.error(\"Expected string but got\",typeof b);else{b=encoder$$module$src$utils$text_encoders.encode(b);var c=a.exports.allocStringMem(b.length);\\n({buffer:a}=a.wasi.memory);(new Uint8Array(a,c,b.length+1)).set(b);return c}};var module$src$utils$string_pointers={};module$src$utils$string_pointers.freeStringPtr=freeStringPtr$$module$src$utils$string_pointers;module$src$utils$string_pointers.ptr2string=ptr2string$$module$src$utils$string_pointers;module$src$utils$string_pointers.string2ptr=string2ptr$$module$src$utils$string_pointers;const csoundParseOrc$$module$src$modules$performance=a=>(b,c)=>a.exports.csoundParseOrc(b,c);csoundParseOrc$$module$src$modules$performance.toString=()=>\"parseOrc = async (orchestra) => Object;\";const csoundCompileTree$$module$src$modules$performance=a=>(b,c)=>a.exports.csoundCompileTree(b,c);csoundCompileTree$$module$src$modules$performance.toString=()=>\"compileTree = async (tree) => Number;\";\\nconst csoundCompileOrc$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundCompileOrc(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundCompileOrc$$module$src$modules$performance.toString=()=>\"compileOrc = async (orchestra) => Number;\";\\nconst csoundEvalCode$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundEvalCode(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundEvalCode$$module$src$modules$performance.toString=()=>\"csoundEvalCode = async (orchestra) => Number;\";const csoundStart$$module$src$modules$performance=a=>b=>a.exports.csoundStartWasi(b);csoundStart$$module$src$modules$performance.toString=()=>\"start = async () => Number;\";\\nconst csoundCompileCsd$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);let d;try{d=a.exports.csoundCompileCsd(b,c)}catch(e){console.error(e)}freeStringPtr$$module$src$utils$string_pointers(a,c);return d};csoundCompileCsd$$module$src$modules$performance.toString=()=>\"compileCsd = async (path) => Number;\";\\nconst csoundCompileCsdText$$module$src$modules$performance=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundCompileCsdText(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundCompileCsdText$$module$src$modules$performance.toString=()=>\"compileCsdText = async (csoundDocument) => Number;\";const csoundPerform$$module$src$modules$performance=a=>b=>a.exports.csoundPerform(b);csoundPerform$$module$src$modules$performance.toString=()=>\"perform = async () => Number;\";\\nconst csoundPerformKsmps$$module$src$modules$performance=a=>b=>a.exports.csoundPerformKsmpsWasi(b);csoundPerformKsmps$$module$src$modules$performance.toString=()=>\"performKsmps = async (csound) => Number;\";const csoundPerformBuffer$$module$src$modules$performance=a=>b=>a.exports.csoundPerformBuffer(b);csoundPerformBuffer$$module$src$modules$performance.toString=()=>\"performBuffer = async (csound) => Number;\";const csoundStop$$module$src$modules$performance=a=>b=>a.exports.csoundStop(b);\\ncsoundStop$$module$src$modules$performance.toString=()=>\"stop = async () => undefined;\";const csoundCleanup$$module$src$modules$performance=a=>b=>a.exports.csoundCleanup(b);csoundCleanup$$module$src$modules$performance.toString=()=>\"cleanup = async () => Number;\";const csoundReset$$module$src$modules$performance=a=>b=>a.exports.csoundResetWasi(b);csoundReset$$module$src$modules$performance.toString=()=>\"reset = async () => Number;\";var module$src$modules$performance={};\\nmodule$src$modules$performance.csoundCleanup=csoundCleanup$$module$src$modules$performance;module$src$modules$performance.csoundCompileCsd=csoundCompileCsd$$module$src$modules$performance;module$src$modules$performance.csoundCompileCsdText=csoundCompileCsdText$$module$src$modules$performance;module$src$modules$performance.csoundCompileOrc=csoundCompileOrc$$module$src$modules$performance;module$src$modules$performance.csoundCompileTree=csoundCompileTree$$module$src$modules$performance;\\nmodule$src$modules$performance.csoundEvalCode=csoundEvalCode$$module$src$modules$performance;module$src$modules$performance.csoundParseOrc=csoundParseOrc$$module$src$modules$performance;module$src$modules$performance.csoundPerform=csoundPerform$$module$src$modules$performance;module$src$modules$performance.csoundPerformBuffer=csoundPerformBuffer$$module$src$modules$performance;module$src$modules$performance.csoundPerformKsmps=csoundPerformKsmps$$module$src$modules$performance;\\nmodule$src$modules$performance.csoundReset=csoundReset$$module$src$modules$performance;module$src$modules$performance.csoundStart=csoundStart$$module$src$modules$performance;module$src$modules$performance.csoundStop=csoundStop$$module$src$modules$performance;const sizeOfPrimitive$$module$src$utils$native_sizes={int:4,MYFLT:4,char:1},sizeofStruct$$module$src$utils$native_sizes=a=>a.reduce((b,[,c,...d])=>b+(\"char\"===c?sizeOfPrimitive$$module$src$utils$native_sizes[c]*d[0]:sizeOfPrimitive$$module$src$utils$native_sizes[c]),0);var module$src$utils$native_sizes={};module$src$utils$native_sizes.sizeOfPrimitive=sizeOfPrimitive$$module$src$utils$native_sizes;module$src$utils$native_sizes.sizeofStruct=sizeofStruct$$module$src$utils$native_sizes;const structBufferToObject$$module$src$utils$structure_buffer_to_object=(a,b)=>{[a]=a.reduce(([c,d],[e,f,...g])=>{g=\"char\"===f?sizeOfPrimitive$$module$src$utils$native_sizes[f]*g[0]:sizeOfPrimitive$$module$src$utils$native_sizes[f];f=\"char\"===f?trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(b.subarray(d,g)))||\"\":b[d];c[e]=f;return[c,d+g]},[{},0]);return a};var module$src$utils$structure_buffer_to_object={};\\nmodule$src$utils$structure_buffer_to_object.structBufferToObject=structBufferToObject$$module$src$utils$structure_buffer_to_object;const CSOUND_PARAMS$$module$src$structures=[[\"debug_mode\",\"int\"],[\"buffer_frames\",\"int\"],[\"hardware_buffer_frames\",\"int\"],[\"displays\",\"int\"],[\"ascii_graphs\",\"int\"],[\"postscript_graphs\",\"int\"],[\"message_level\",\"int\"],[\"tempo\",\"int\"],[\"ring_bell\",\"int\"],[\"use_cscore\",\"int\"],[\"terminate_on_midi\",\"int\"],[\"heartbeat\",\"int\"],[\"defer_gen01_load\",\"int\"],[\"midi_key\",\"int\"],[\"midi_key_cps\",\"int\"],[\"midi_key_oct\",\"int\"],[\"midi_key_pch\",\"int\"],[\"midi_velocity\",\"int\"],[\"midi_velocity_amp\",\"int\"],[\"no_default_paths\",\\n\"int\"],[\"number_of_threads\",\"int\"],[\"syntax_check_only\",\"int\"],[\"csd_line_counts\",\"int\"],[\"compute_weights\",\"int\"],[\"realtime_mode\",\"int\"],[\"sample_accurate\",\"int\"],[\"sample_rate_override\",\"MYFLT\"],[\"control_rate_override\",\"MYFLT\"],[\"nchnls_override\",\"int\"],[\"nchnls_i_override\",\"int\"],[\"e0dbfs_override\",\"MYFLT\"],[\"daemon\",\"int\"],[\"ksmps_override\",\"int\"],[\"FFT_library\",\"int\"]],CS_MIDIDEVICE$$module$src$structures=[[\"device_name\",\"char\",64],[\"interface_name\",\"char\",64],[\"device_id\",\"char\",64],[\"midi_module\",\\n\"char\",64],[\"isOutput\",\"int\"]];var module$src$structures={};const csoundGetSr$$module$src$modules$attributes=a=>b=>a.exports.csoundGetSr(b);csoundGetSr$$module$src$modules$attributes.toString=()=>\"getSr = async () => Number;\";const csoundGetKr$$module$src$modules$attributes=a=>b=>a.exports.csoundGetKr(b);csoundGetKr$$module$src$modules$attributes.toString=()=>\"getKr = async () => Number;\";const csoundGetKsmps$$module$src$modules$attributes=a=>b=>a.exports.csoundGetKsmps(b);csoundGetKsmps$$module$src$modules$attributes.toString=()=>\"getKsmps = async () => Number;\";\\nconst csoundGetNchnls$$module$src$modules$attributes=a=>b=>a.exports.csoundGetNchnls(b);csoundGetNchnls$$module$src$modules$attributes.toString=()=>\"getNchnls = async () => Number;\";const csoundGetNchnlsInput$$module$src$modules$attributes=a=>b=>a.exports.csoundGetNchnlsInput(b);csoundGetNchnlsInput$$module$src$modules$attributes.toString=()=>\"getNchnlsInput = async () => Number;\";const csoundGet0dBFS$$module$src$modules$attributes=a=>b=>a.exports.csoundGet0dBFS(b);\\ncsoundGet0dBFS$$module$src$modules$attributes.toString=()=>\"get0dBFS = async () => Number;\";const csoundGetA4$$module$src$modules$attributes=a=>b=>a.exports.csoundGetA4(b);csoundGetA4$$module$src$modules$attributes.toString=()=>\"getA4 = async () => Number;\";const csoundGetCurrentTimeSamples$$module$src$modules$attributes=a=>b=>a.exports.csoundGetCurrentTimeSamples(b);csoundGetCurrentTimeSamples$$module$src$modules$attributes.toString=()=>\"getCurrentTimeSamples = async () => Number;\";\\nconst csoundGetSizeOfMYFLT$$module$src$modules$attributes=a=>b=>a.exports.csoundGetSizeOfMYFLT(b);csoundGetSizeOfMYFLT$$module$src$modules$attributes.toString=()=>\"getSizeOfMYFLT = async () => Number;\";const csoundSetOption$$module$src$modules$attributes=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundSetOption(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundSetOption$$module$src$modules$attributes.toString=()=>\"setOption = async (option) => Number;\";\\nconst csoundSetParams$$module$src$modules$attributes=a=>(b,c)=>{a.exports.csoundSetParams(b,c)};csoundSetParams$$module$src$modules$attributes.toString=()=>\"setParams = async (csoundParams) => undefined;\";\\nconst csoundGetParams$$module$src$modules$attributes=a=>b=>{var {buffer:c}=a.wasi.memory;const d=sizeofStruct$$module$src$utils$native_sizes(CSOUND_PARAMS$$module$src$structures),e=a.exports.allocCsoundParamsStruct();c=new Uint8Array(c,e,d);a.exports.csoundGetParams(b,e);b=structBufferToObject$$module$src$utils$structure_buffer_to_object(CSOUND_PARAMS$$module$src$structures,c);a.exports.freeCsoundParams(e);return b};csoundGetParams$$module$src$modules$attributes.toString=()=>\"getParams = async () => CSOUND_PARAMS;\";\\nconst csoundGetDebug$$module$src$modules$attributes=a=>b=>a.exports.csoundGetDebug(b);csoundGetDebug$$module$src$modules$attributes.toString=()=>\"getDebug = async () => Number;\";const csoundSetDebug$$module$src$modules$attributes=a=>(b,c)=>{a.exports.csoundSetDebug(b,c)};csoundSetDebug$$module$src$modules$attributes.toString=()=>\"setDebug = async (number) => undefined;\";var module$src$modules$attributes={};module$src$modules$attributes.csoundGet0dBFS=csoundGet0dBFS$$module$src$modules$attributes;\\nmodule$src$modules$attributes.csoundGetA4=csoundGetA4$$module$src$modules$attributes;module$src$modules$attributes.csoundGetCurrentTimeSamples=csoundGetCurrentTimeSamples$$module$src$modules$attributes;module$src$modules$attributes.csoundGetDebug=csoundGetDebug$$module$src$modules$attributes;module$src$modules$attributes.csoundGetKr=csoundGetKr$$module$src$modules$attributes;module$src$modules$attributes.csoundGetKsmps=csoundGetKsmps$$module$src$modules$attributes;\\nmodule$src$modules$attributes.csoundGetNchnls=csoundGetNchnls$$module$src$modules$attributes;module$src$modules$attributes.csoundGetNchnlsInput=csoundGetNchnlsInput$$module$src$modules$attributes;module$src$modules$attributes.csoundGetParams=csoundGetParams$$module$src$modules$attributes;module$src$modules$attributes.csoundGetSizeOfMYFLT=csoundGetSizeOfMYFLT$$module$src$modules$attributes;module$src$modules$attributes.csoundGetSr=csoundGetSr$$module$src$modules$attributes;\\nmodule$src$modules$attributes.csoundSetDebug=csoundSetDebug$$module$src$modules$attributes;module$src$modules$attributes.csoundSetOption=csoundSetOption$$module$src$modules$attributes;module$src$modules$attributes.csoundSetParams=csoundSetParams$$module$src$modules$attributes;const csoundGetInputBufferSize$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetInputBufferSize(b);csoundGetInputBufferSize$$module$src$modules$rtaudio.toString=()=>\"getInputBufferSize = async () => Number;\";const csoundGetOutputBufferSize$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetOutputBufferSize(b);csoundGetOutputBufferSize$$module$src$modules$rtaudio.toString=()=>\"getOutputBufferSize = async () => Number;\";const csoundGetInputBuffer$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetInputBuffer(b);\\ncsoundGetInputBuffer$$module$src$modules$rtaudio.toString=()=>\"getInputBuffer = async () => Number;\";const csoundGetOutputBuffer$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetOutputBuffer(b);csoundGetOutputBuffer$$module$src$modules$rtaudio.toString=()=>\"getOutputBuffer = async () => Number;\";const csoundGetSpin$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetSpin(b);csoundGetSpin$$module$src$modules$rtaudio.toString=()=>\"getSpin = async (csound) => Number;\";\\nconst csoundGetSpout$$module$src$modules$rtaudio=a=>b=>a.exports.csoundGetSpout(b);csoundGetSpout$$module$src$modules$rtaudio.toString=()=>\"getSpout = async () => Number;\";var module$src$modules$rtaudio={};module$src$modules$rtaudio.csoundGetInputBuffer=csoundGetInputBuffer$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetInputBufferSize=csoundGetInputBufferSize$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetOutputBuffer=csoundGetOutputBuffer$$module$src$modules$rtaudio;\\nmodule$src$modules$rtaudio.csoundGetOutputBufferSize=csoundGetOutputBufferSize$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetSpin=csoundGetSpin$$module$src$modules$rtaudio;module$src$modules$rtaudio.csoundGetSpout=csoundGetSpout$$module$src$modules$rtaudio;function add$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>add$$module$node_modules$rambda$dist$rambda_mjs(a,c):Number(a)+Number(b)}const cloneList$$module$node_modules$rambda$dist$rambda_mjs=a=>Array.prototype.slice.call(a);function curry$$module$node_modules$rambda$dist$rambda_mjs(a,b=[]){return(...c)=>{c=[...b,...c];return c.length>=a.length?a(...c):curry$$module$node_modules$rambda$dist$rambda_mjs(a,c)}}\\nfunction adjustFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d=0>a?c.length+a:a;if(a>=c.length||0>d)return c;a=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);a[d]=b(a[d]);return a}const adjust$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(adjustFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction all$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>all$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(!a(b[c]))return!1;return!0}function allPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(!a[c](...b))return!1;c++}return!0}}function always$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>a}\\nfunction and$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>and$$module$node_modules$rambda$dist$rambda_mjs(a,c):a&&b}function any$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>any$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=0;for(;c<b.length;){if(a(b[c],c))return!0;c++}return!1}\\nfunction anyPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(a[c](...b))return!0;c++}return!1}}function append$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>append$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(\"string\"===typeof b)return b.split(\"\").concat(a);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);c.push(a);return c}\\nfunction apply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>apply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.apply(this,b)}const {isArray:isArray$$module$node_modules$rambda$dist$rambda_mjs}=Array;\\nfunction __findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a,b=0){for(const c in a)!1!==a.hasOwnProperty(c)&&\"constructor\"!==c&&(\"object\"===typeof a[c]&&(b=Math.max(b,__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a[c]))),\"function\"===typeof a[c]&&(b=Math.max(b,a[c].length)));return b}\\nfunction __filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(){const a=[];let b=0;const c=arguments.length;for(;b<c&&\"undefined\"!==typeof arguments[b];)a[b]=arguments[b],b++;return a}\\nfunction __applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){var d=b-c.length;if(1===d)return f=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f));if(2===d)return(f,g)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g));if(3===d)return(f,g,h)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,\\nb,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h));if(4===d)return(f,g,h,k)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h,k));if(4<d)return(...f)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,...f));if(isArray$$module$node_modules$rambda$dist$rambda_mjs(a)){var e=[];d=0;const f=a.length;\\nfor(;d<f;d++){if(\"object\"===typeof a[d]||isArray$$module$node_modules$rambda$dist$rambda_mjs(a[d]))e[d]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[d],b,c);\"function\"===typeof a[d]&&(e[d]=a[d](...c))}return e}d={};for(e in a)!1!==a.hasOwnProperty(e)&&\"constructor\"!==e&&(\"object\"===typeof a[e]?d[e]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[e],b,c):\"function\"===typeof a[e]&&(d[e]=a[e](...c)));return d}\\nfunction applySpec$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a);return 0===c?()=>({}):__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,c,b)}function assocFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return Object.assign({},c,{[a]:b})}const assoc$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction _isInteger$$module$node_modules$rambda$dist$rambda_mjs(a){return a<<0===a}const isInteger$$module$node_modules$rambda$dist$rambda_mjs=Number.isInteger||_isInteger$$module$node_modules$rambda$dist$rambda_mjs;\\nfunction assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d=\"string\"===typeof a?a.split(\".\").map(e=>isInteger$$module$node_modules$rambda$dist$rambda_mjs(Number(e))?Number(e):e):a;if(0===d.length)return b;a=d[0];if(1<d.length){const e=\"object\"===typeof c&&null!==c&&c.hasOwnProperty(a)?c[a]:isInteger$$module$node_modules$rambda$dist$rambda_mjs(d[1])?[]:{};b=assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(d,1),b,e)}return isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)&&\\nisArray$$module$node_modules$rambda$dist$rambda_mjs(c)?(c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c),c[a]=b,c):assoc$$module$node_modules$rambda$dist$rambda_mjs(a,b,c)}const assocPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocPathFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction _curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return function(){var d=0;let e=0;const f=b.length,g=arguments.length,h=Array(f+g);for(;d<f;)h[d]=b[d],d++;for(;e<g;)h[f+e]=arguments[e],e++;d=a-h.length;return h.length>=a?c.apply(this,h):_arity$1$$module$node_modules$rambda$dist$rambda_mjs(d,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,h,c))}}\\nfunction _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};\\ncase 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,l){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,l,n){return b.apply(this,arguments)};default:return function(c,d,e,f,g,h,k,l,n,m){return b.apply(this,arguments)}}}\\nfunction curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>curryN$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(10<a)throw Error(\"First argument to _arity must be a non-negative integer no greater than ten\");return _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,[],b))}\\nfunction bind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>bind$$module$node_modules$rambda$dist$rambda_mjs(a,c):curryN$$module$node_modules$rambda$dist$rambda_mjs(a.length,(...c)=>a.apply(b,c))}function both$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>both$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>a(...c)&&b(...c)}\\nfunction chain$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>chain$$module$node_modules$rambda$dist$rambda_mjs(a,c):[].concat(...b.map(a))}function clampFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(a>b)throw Error(\"min must not be greater than max in clamp(min, max, value)\");if(c>=a&&c<=b)return c;if(c>b)return b;if(c<a)return a}const clamp$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(clampFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction clone$$module$node_modules$rambda$dist$rambda_mjs(a){const b=isArray$$module$node_modules$rambda$dist$rambda_mjs(a)?Array(a.length):{};if(a&&a.getTime)return new Date(a.getTime());for(const c in a){const d=a[c];b[c]=\"object\"===typeof d&&null!==d?d.getTime?new Date(d.getTime()):clone$$module$node_modules$rambda$dist$rambda_mjs(d):d}return b}function complement$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>!a(...b)}\\nclass ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs{constructor(a){this.value=a}}function reduceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(c))throw new TypeError(\"reduce: list must be array or iterable\");let d=0;const e=c.length;for(;d<e;){b=a(b,c[d],d,c);if(b instanceof ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs)return b.value;d++}return b}\\nconst reduce$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(reduceFn$$module$node_modules$rambda$dist$rambda_mjs),reduceStopper$$module$node_modules$rambda$dist$rambda_mjs=a=>new ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs(a);\\nfunction _arity$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};\\ncase 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,l){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,l,n){return b.apply(this,arguments)};case 10:return function(c,d,e,f,g,h,k,l,n,m){return b.apply(this,arguments)};default:throw Error(\"First argument to _arity must be a non-negative integer no greater than ten\");}}\\nfunction _pipe$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(){return b.call(this,a.apply(this,arguments))}}\\nfunction pipe$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error(\"pipe requires at least one argument\");return _arity$$module$node_modules$rambda$dist$rambda_mjs(arguments[0].length,reduceFn$$module$node_modules$rambda$dist$rambda_mjs(_pipe$$module$node_modules$rambda$dist$rambda_mjs,arguments[0],Array.prototype.slice.call(arguments,1,Infinity)))}\\nfunction compose$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error(\"compose requires at least one argument\");return pipe$$module$node_modules$rambda$dist$rambda_mjs.apply(this,Array.prototype.slice.call(arguments,0).reverse())}function concat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>concat$$module$node_modules$rambda$dist$rambda_mjs(a,c):\"string\"===typeof a?`${a}${b}`:[...a,...b]}\\nfunction cond$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>{let c=!1,d;a.forEach(([e,f])=>{!c&&e(b)&&(c=!0,d=f(b))});return d}}const {keys:keys$1$$module$node_modules$rambda$dist$rambda_mjs}=Object;function mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=Array(b.length);for(;d<b.length;)e[d]=c?a(b[d],d):a(b[d]),d++;return e}\\nfunction mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,g);let c=0;const d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b),e=d.length,f={};for(;c<e;){const g=d[c];f[g]=a(b[g],g,b);c++}return f}const mapObjIndexed$$module$node_modules$rambda$dist$rambda_mjs=mapObject$$module$node_modules$rambda$dist$rambda_mjs;\\nfunction map$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>map$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error(INCORRECT_ITERABLE_INPUT);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}\\nfunction max$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>max$$module$node_modules$rambda$dist$rambda_mjs(a,c):b>a?b:a}\\nfunction converge$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>converge$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=reduce$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>max$$module$node_modules$rambda$dist$rambda_mjs(d,e.length),0,b);return curryN$$module$node_modules$rambda$dist$rambda_mjs(c,function(){return a.apply(this,map$$module$node_modules$rambda$dist$rambda_mjs(d=>d.apply(this,arguments),b))})}\\nfunction count$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>count$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?b.filter(c=>a(c)).length:0}function countBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>countBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};b.forEach(d=>{d=a(d);c[d]?c[d]++:c[d]=1});return c}\\nconst dec$$module$node_modules$rambda$dist$rambda_mjs=a=>a-1;function isFalsy$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a||!0===Number.isNaN(a)}function defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c):isFalsy$$module$node_modules$rambda$dist$rambda_mjs(b)?a:b}\\nfunction type$$module$node_modules$rambda$dist$rambda_mjs(a){if(null===a)return\"Null\";if(void 0===a)return\"Undefined\";if(Number.isNaN(a))return\"NaN\";a=Object.prototype.toString.call(a).slice(8,-1);return\"AsyncFunction\"===a?\"Promise\":a}\\nfunction _lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(`Cannot read property \\'indexOf\\' of ${b}`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(![\"Object\",\"Array\",\"NaN\",\"RegExp\"].includes(c))return b.lastIndexOf(a);({length:c}=b);let d=-1;for(;-1<--c&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}\\nfunction _indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(`Cannot read property \\'indexOf\\' of ${b}`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(![\"Object\",\"Array\",\"NaN\",\"RegExp\"].includes(c))return b.indexOf(a);let d=c=-1;const {length:e}=b;for(;++c<e&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}\\nfunction _arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a){const b=[];let c;for(;!(c=a.next()).done;)b.push(c.value);return b}function _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(a.size!==b.size)return!1;a=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a.values());const c=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(b.values());return 0===a.filter(d=>-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,c)).length}\\nfunction parseError$$module$node_modules$rambda$dist$rambda_mjs(a){const b=a.__proto__.toString();return[\"Error\",\"TypeError\"].includes(b)?[b,a.message]:[]}function parseDate$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toDateString?[!0,a.getTime()]:[!1]}function parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a){return a.constructor!==RegExp?[!1]:[!0,a.toString()]}\\nfunction equals$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>equals$$module$node_modules$rambda$dist$rambda_mjs(a,f);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(c!==type$$module$node_modules$rambda$dist$rambda_mjs(b))return!1;if(\"Function\"===c)return void 0===a.name?!1:a.name===b.name;if([\"NaN\",\"Undefined\",\"Null\"].includes(c))return!0;if(\"Number\"===c)return Object.is(-0,a)!==Object.is(-0,b)?!1:a.toString()===b.toString();if([\"String\",\"Boolean\"].includes(c))return a.toString()===\\nb.toString();if(\"Array\"===c){c=Array.from(a);const f=Array.from(b);if(c.toString()!==f.toString())return!1;let g=!0;c.forEach((h,k)=>{g&&(h===f[k]||equals$$module$node_modules$rambda$dist$rambda_mjs(h,f[k])||(g=!1))});return g}var d=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a),e=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseDate$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseDate$$module$node_modules$rambda$dist$rambda_mjs(b);\\nif(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseError$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseError$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[0]===e[0]&&d[1]===e[1]:!1;if(\"Set\"===c)return _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b);if(\"Object\"===c){c=Object.keys(a);if(c.length!==Object.keys(b).length)return!1;let f=!0;c.forEach(g=>{if(f){const h=a[g];g=b[g];h===g||equals$$module$node_modules$rambda$dist$rambda_mjs(h,g)||(f=!1)}});\\nreturn f}return!1}function includes$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>includes$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(\"string\"===typeof b)return b.includes(a);if(!b)throw new TypeError(`Cannot read property \\\\\\'indexOf\\\\\\' of ${b}`);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b):!1}\\nclass _Set$$module$node_modules$rambda$dist$rambda_mjs{constructor(){this.set=new Set;this.items={}}checkUniqueness(a){var b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return[\"Null\",\"Undefined\",\"NaN\"].includes(b)?b in this.items?!1:this.items[b]=!0:[\"Object\",\"Array\"].includes(b)?b in this.items?-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,this.items[b])?(this.items[b].push(a),!0):!1:(this.items[b]=[a],!0):(b=this.set.size,this.set.add(a),this.set.size!==b)}}\\nfunction uniq$$module$node_modules$rambda$dist$rambda_mjs(a){const b=new _Set$$module$node_modules$rambda$dist$rambda_mjs,c=[];a.forEach(d=>{b.checkUniqueness(d)&&c.push(d)});return c}function difference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>difference$$module$node_modules$rambda$dist$rambda_mjs(a,c):uniq$$module$node_modules$rambda$dist$rambda_mjs(a).filter(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b))}\\nfunction dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(null===b||void 0===b)return{};const c={};for(const d in b)c[d]=b[d];delete c[a];return c}function divide$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>divide$$module$node_modules$rambda$dist$rambda_mjs(a,c):a/b}\\nfunction drop$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>drop$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.slice(0<a?a:0)}function dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,c):0<a?b.slice(0,-a):b.slice()}\\nfunction dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(0===b.length)return b;const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(\"function\"!==typeof a)throw Error(`\\'predicate\\' is from wrong type ${typeof a}`);if(!c&&\"string\"!==typeof b)throw Error(`\\'iterable\\' is from wrong type ${typeof b}`);let d=!1;const e=[];let f=b.length;for(;0<f;)f--,d||!1!==a(b[f])?d&&e.push(b[f]):\\n(d=!0,e.push(b[f]));return c?e.reverse():e.reverse().join(\"\")}function dropRepeats$$module$node_modules$rambda$dist$rambda_mjs(a){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(`${a} is not a list`);const b=[];a.reduce((c,d)=>{equals$$module$node_modules$rambda$dist$rambda_mjs(c,d)||b.push(d);return d},void 0);return b}\\nfunction dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(`${b} is not a list`);const c=[];b.reduce((d,e)=>{if(void 0===d)return c.push(e),e;a(d,e)||c.push(e);return e},void 0);return c}\\nfunction dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&\"string\"!==typeof b)throw Error(\"`iterable` is neither list nor a string\");let d=!1;const e=[];let f=-1;for(;f++<b.length-1;)d?e.push(b[f]):a(b[f])||(d||(d=!0),e.push(b[f]));return c?e:e.join(\"\")}\\nfunction either$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>either$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>!(!a(...c)&&!b(...c))}\\nfunction endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(\"string\"===typeof b)return b.endsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;const c=b.length-a.length;let d=!0;return a.filter((e,f)=>{if(!d)return!1;(e=equals$$module$node_modules$rambda$dist$rambda_mjs(e,b[f+c]))||(d=!1);return e}).length===a.length}\\nfunction prop$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>prop$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(b)return b[a]}function eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a,b),prop$$module$node_modules$rambda$dist$rambda_mjs(a,c))}const eqProps$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapArray$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>\"Function\"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c,b,!0)}\\nfunction evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapObject$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>{if(\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(c)){const e=type$$module$node_modules$rambda$dist$rambda_mjs(a[d]);return\"Function\"===e?a[d](c):\"Object\"===e?evolve$$module$node_modules$rambda$dist$rambda_mjs(a[d],c):c}return\"Function\"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c},b)}\\nfunction evolve$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>evolve$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=type$$module$node_modules$rambda$dist$rambda_mjs(a),d=type$$module$node_modules$rambda$dist$rambda_mjs(b);if(d!==c)throw Error(\"iterableType !== rulesType\");if(![\"Object\",\"Array\"].includes(c))throw Error(`\\'iterable\\' and \\'rules\\' are from wrong type ${c}`);return\"Object\"===d?evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b):evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,\\nb)}function F$$module$node_modules$rambda$dist$rambda_mjs(){return!1}function filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(const d in b)a(b[d],d,b)&&(c[d]=b[d]);return c}function filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=b.length,f=[];for(;d<e;)(c?a(b[d],d):a(b[d]))&&f.push(b[d]),d++;return f}\\nfunction filter$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>filter$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error(\"Incorrect iterable input\");return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,!1):filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}\\nfunction find$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>find$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=0;const d=b.length;for(;c<d;){const e=b[c];if(a(e))return e;c++}}function findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;let d=-1;for(;++d<c;)if(a(b[d]))return d;return-1}\\nfunction findLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLast$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return b[c]}function findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return c;return-1}\\nfunction flatten$$module$node_modules$rambda$dist$rambda_mjs(a,b){b=void 0===b?[]:b;for(let c=0;c<a.length;c++)isArray$$module$node_modules$rambda$dist$rambda_mjs(a[c])?flatten$$module$node_modules$rambda$dist$rambda_mjs(a[c],b):b.push(a[c]);return b}\\nfunction flipFn$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{if(1===b.length)return c=>a(c,b[0]);if(2===b.length)return a(b[1],b[0]);if(3===b.length)return a(b[1],b[0],b[2]);if(4===b.length)return a(b[1],b[0],b[2],b[3]);throw Error(\"R.flip doesn\\'t work with arity > 4\");}}function flip$$module$node_modules$rambda$dist$rambda_mjs(a){return flipFn$$module$node_modules$rambda$dist$rambda_mjs(a)}\\nfunction forEach$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>forEach$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(void 0!==b){if(isArray$$module$node_modules$rambda$dist$rambda_mjs(b))for(var c=0,d=b.length;c<d;)a(b[c]),c++;else{c=0;d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b);const e=d.length;for(;c<e;){const f=d[c];a(b[f],f,b);c++}}return b}}\\nfunction fromPairs$$module$node_modules$rambda$dist$rambda_mjs(a){const b={};a.forEach(([c,d])=>b[c]=d);return b}function groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};for(let d=0;d<b.length;d++){const e=b[d],f=a(e);c[f]||(c[f]=[]);c[f].push(e)}return c}\\nfunction groupWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw new TypeError(\"list.reduce is not a function\");const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);if(1===b.length)return[c];const d=[];let e=[];c.reduce((f,g,h)=>{if(0===h)return g;const k=a(f,g),l=0===e.length;h=h===b.length-1;if(k)return l&&e.push(f),e.push(g),h&&d.push(e),g;if(l)return d.push([f]),h&&d.push([g]),g;d.push(e);h&&d.push([g]);e=[];return g},\\nvoid 0);return d}function has$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>has$$module$node_modules$rambda$dist$rambda_mjs(a,c):b?b.hasOwnProperty(a):!1}function createPath$$module$node_modules$rambda$dist$rambda_mjs(a,b=\".\"){return\"string\"===typeof a?a.split(b):a}\\nfunction path$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>path$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=b,d=0,e=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);d<e.length;){if(null===c||void 0===c||null===c[e[d]])return;c=c[e[d]];d++}return c}}\\nfunction hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,c):void 0!==path$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function head$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a[0]||\"\":a[0]}function _objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b}const objectIs$$module$node_modules$rambda$dist$rambda_mjs=Object.is||_objectIs$$module$node_modules$rambda$dist$rambda_mjs;\\nfunction identical$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>identical$$module$node_modules$rambda$dist$rambda_mjs(a,c):objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function identity$$module$node_modules$rambda$dist$rambda_mjs(a){return a}function ifElseFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return(...d)=>!0===(\"boolean\"===typeof a?a:a(...d))?b(...d):c(...d)}\\nconst ifElse$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(ifElseFn$$module$node_modules$rambda$dist$rambda_mjs),inc$$module$node_modules$rambda$dist$rambda_mjs=a=>a+1;function indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(let d=0;d<b.length;d++){const e=b[d];c[path$$module$node_modules$rambda$dist$rambda_mjs(a,e)]=e}return c}\\nfunction indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(\"string\"===typeof a)return indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b);const c={};for(let d=0;d<b.length;d++){const e=b[d];c[a(e)]=e}return c}\\nfunction indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=-1,{length:e}=a;c=c>e?e:c;0>c&&(c+=e);e=b>c?0:c-b>>>0;b>>>=0;for(c=Array(e);++d<e;)c[d]=a[d+b];return c}\\nfunction init$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a.slice(0,-1):a.length?baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,0,-1):[]}function intersection$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>intersection$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b)}\\nfunction intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,f);let c=-1;const d=b.length,e=[];for(;++c<d;)c===d-1?e.push(b[c]):e.push(b[c],a);return e}function is$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>is$$module$node_modules$rambda$dist$rambda_mjs(a,c):null!=b&&b.constructor===a||b instanceof a}\\nfunction isEmpty$$module$node_modules$rambda$dist$rambda_mjs(a){const b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return[\"Undefined\",\"NaN\",\"Number\",\"Null\"].includes(b)?!1:a?\"Object\"===b?0===Object.keys(a).length:\"Array\"===b?0===a.length:!1:!0}function isNil$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a}\\nfunction join$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>join$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.join(a)}function juxt$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>a.map(c=>c(...b))}function keys$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.keys(a)}function last$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a[a.length-1]||\"\":a[a.length-1]}\\nfunction lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function length$$module$node_modules$rambda$dist$rambda_mjs(a){return isArray$$module$node_modules$rambda$dist$rambda_mjs(a)||\"string\"===typeof a?a.length:NaN}\\nfunction lens$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(c){return function(d){return c(a(d)).map(e=>b(e,d))}}}function nth$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>nth$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=0>a?b.length+a:a;return\"[object String]\"===Object.prototype.toString.call(b)?b.charAt(c):b[c]}\\nfunction updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);return-1===a?c.fill(b,a):c.fill(b,a,a+1)}const update$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(updateFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction lensIndex$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(nth$$module$node_modules$rambda$dist$rambda_mjs(a),update$$module$node_modules$rambda$dist$rambda_mjs(a))}function lensPath$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a),assocPath$$module$node_modules$rambda$dist$rambda_mjs(a))}\\nfunction lensProp$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a),assoc$$module$node_modules$rambda$dist$rambda_mjs(a))}function match$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>match$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=b.match(a);return null===c?[]:c}\\nfunction mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,c):!isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)||!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||1>b?NaN:(a%b+b)%b}function maxByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)>a(b)?c:b}const maxBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(maxByFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction sum$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>b+c,0)}function mean$$module$node_modules$rambda$dist$rambda_mjs(a){return sum$$module$node_modules$rambda$dist$rambda_mjs(a)/a.length}function median$$module$node_modules$rambda$dist$rambda_mjs(a){var b=a.length;if(0===b)return NaN;const c=2-b%2;b=(b-c)/2;return mean$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,0).sort((d,e)=>d===e?0:d<e?-1:1).slice(b,b+c))}\\nfunction mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,c):Object.assign({},a||{},b||{})}function mergeAll$$module$node_modules$rambda$dist$rambda_mjs(a){let b={};map$$module$node_modules$rambda$dist$rambda_mjs(c=>{b=mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,c)},a);return b}\\nfunction mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=clone$$module$node_modules$rambda$dist$rambda_mjs(a);Object.keys(b).forEach(d=>{\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(b[d])?\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?c[d]=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a[d],b[d]):c[d]=b[d]:c[d]=b[d]});return c}\\nfunction mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,c):mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,a)}function mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d={};Object.keys(b).forEach(e=>{d[e]=void 0===c[e]?b[e]:a(b[e],c[e])});Object.keys(c).forEach(e=>{void 0===d[e]&&(d[e]=void 0===b[e]?c[e]:a(b[e],c[e]))});return d}\\nconst mergeWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs);function min$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>min$$module$node_modules$rambda$dist$rambda_mjs(a,c):b<a?b:a}function minByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)<a(b)?c:b}const minBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(minByFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction ownKeys$$module$node_modules$rambda$dist$rambda_mjs(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}));c.push.apply(c,d)}return c}\\nfunction _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c),!0).forEach(function(d){_defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,d,c[d])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c)).forEach(function(d){Object.defineProperty(a,\\nd,Object.getOwnPropertyDescriptor(c,d))})}return a}function _defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c;return a}function isIterable$$module$node_modules$rambda$dist$rambda_mjs(a){return Array.isArray(a)||\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(a)}\\nfunction modifyFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return isIterable$$module$node_modules$rambda$dist$rambda_mjs(c)&&void 0!==c[a]?isArray$$module$node_modules$rambda$dist$rambda_mjs(c)?updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b(c[a]),c):_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a]:b(c[a])}):c}const modify$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){a=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);if(1===a.length)return _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a[0]]:b(c[a[0]])});if(void 0===path$$module$node_modules$rambda$dist$rambda_mjs(a,c))return c;b=modifyPath$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,1),b,c[a[0]]);return b===c[a[0]]?c:assoc$$module$node_modules$rambda$dist$rambda_mjs(a[0],\\nb,c)}const modifyPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs);function modulo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>modulo$$module$node_modules$rambda$dist$rambda_mjs(a,c):a%b}\\nfunction moveFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(0>a||0>b)throw Error(\"Rambda.move does not support negative indexes\");if(a>c.length-1||b>c.length-1)return c;const d=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);d[a]=c[b];d[b]=c[a];return d}const move$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(moveFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction multiply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>multiply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a*b}function negate$$module$node_modules$rambda$dist$rambda_mjs(a){return-a}function none$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>none$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(a(b[c]))return!1;return!0}\\nfunction not$$module$node_modules$rambda$dist$rambda_mjs(a){return!a}function objOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>objOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):{[a]:b}}function of$$module$node_modules$rambda$dist$rambda_mjs(a){return[a]}\\nfunction omit$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>omit$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(null!==b&&void 0!==b){var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,\",\"),d={};for(const e in b)c.includes(e)||(d[e]=b[e]);return d}}\\nfunction on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,d){return 3===arguments.length?e=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,e):2===arguments.length?(e,f)=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,e,f):a(b(c),b(d))}function onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b){let c;return function(){a&&(c=a.apply(b||this,arguments),a=null);return c}}\\nfunction once$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length){const c=onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b);return curry$$module$node_modules$rambda$dist$rambda_mjs(c)}return onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function or$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>or$$module$node_modules$rambda$dist$rambda_mjs(a,c):a||b}const Identity$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(a))});\\nfunction overFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(d=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(d)))(c).x}const over$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(overFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction partial$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=a.length;return(...d)=>b.length+d.length>=c?a(...b,...d):partial$$module$node_modules$rambda$dist$rambda_mjs(a,...[...b,...d])}function partialObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return c=>a(mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(c,b))}\\nfunction partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={},d={};Object.entries(b).forEach(([e,f])=>{a(f,e)?c[e]=f:d[e]=f});return[c,d]}function partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){const d=[],e=[];let f=-1;for(;f++<b.length-1;)(c?a(b[f],f):a(b[f]))?d.push(b[f]):e.push(b[f]);return[d,e]}\\nfunction partition$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>partition$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}\\nfunction pathEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a,c),b)}const pathEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathEqFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction pathOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,path$$module$node_modules$rambda$dist$rambda_mjs(b,c))}const pathOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathOrFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction paths$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>paths$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.map(c=>path$$module$node_modules$rambda$dist$rambda_mjs(c,b))}\\nfunction pick$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pick$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,\",\"),d={},e=0;e<c.length;)c[e]in b&&(d[c[e]]=b[c[e]]),e++;return d}}\\nfunction pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,\",\"),d={},e=0;e<c.length;)d[c[e]]=c[e]in b?b[c[e]]:void 0,e++;return d}}\\nfunction pluck$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>pluck$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=[];map$$module$node_modules$rambda$dist$rambda_mjs(d=>{void 0!==d[a]&&c.push(d[a])},b);return c}function prepend$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>prepend$$module$node_modules$rambda$dist$rambda_mjs(a,c):\"string\"===typeof b?[a].concat(b.split(\"\")):[a].concat(b)}\\nconst product$$module$node_modules$rambda$dist$rambda_mjs=reduce$$module$node_modules$rambda$dist$rambda_mjs(multiply$$module$node_modules$rambda$dist$rambda_mjs,1);function propEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?equals$$module$node_modules$rambda$dist$rambda_mjs(b,prop$$module$node_modules$rambda$dist$rambda_mjs(a,c)):!1}const propEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propEqFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction propIsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return is$$module$node_modules$rambda$dist$rambda_mjs(a,c[b])}const propIs$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propIsFn$$module$node_modules$rambda$dist$rambda_mjs);function propOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c[b]):a}const propOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propOrFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction props$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>props$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(\"propsToPick is not a list\");return mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>b[c],a)}function propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(prop$$module$node_modules$rambda$dist$rambda_mjs(b,c))}\\nconst propSatisfies$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction range$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>range$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(Number.isNaN(Number(a))||Number.isNaN(Number(b)))throw new TypeError(\"Both arguments to range must be numbers\");if(b<a)return[];const c=b-a,d=Array(c);for(let e=0;e<c;e++)d[e]=a+e;return d}\\nfunction reject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>reject$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!a(c),b)}function repeat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>repeat$$module$node_modules$rambda$dist$rambda_mjs(a,c):Array(b).fill(a)}function replaceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.replace(a,b)}\\nconst replace$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(replaceFn$$module$node_modules$rambda$dist$rambda_mjs);function reverse$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a.split(\"\").reverse().join(\"\"):a.slice().reverse()}function setFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return over$$module$node_modules$rambda$dist$rambda_mjs(a,always$$module$node_modules$rambda$dist$rambda_mjs(b),c)}\\nconst set$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(setFn$$module$node_modules$rambda$dist$rambda_mjs);function sliceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.slice(a,b)}const slice$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(sliceFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction sort$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sort$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort(a)}function sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort((c,d)=>{c=a(c);d=a(d);return c===d?0:c<d?-1:1})}\\nfunction split$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>split$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.split(a)}function maybe$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b=a&&\"Function\"===type$$module$node_modules$rambda$dist$rambda_mjs(b)?b():b;c=a||\"Function\"!==type$$module$node_modules$rambda$dist$rambda_mjs(c)?c:c();return a?b:c}\\nfunction take$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>take$$module$node_modules$rambda$dist$rambda_mjs(a,c):0>a?b.slice():\"string\"===typeof b?b.slice(0,a):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,0,a)}\\nfunction splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!b)throw new TypeError(`Cannot read property \\'slice\\' of ${b}`);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b)&&\"string\"!==typeof b)return[[],[]];const c=maybe$$module$node_modules$rambda$dist$rambda_mjs(0>a,0>b.length+a?0:b.length+a,a);return[take$$module$node_modules$rambda$dist$rambda_mjs(c,b),drop$$module$node_modules$rambda$dist$rambda_mjs(c,\\nb)]}function splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(1>a)throw Error(\"First argument to splitEvery must be a positive integer\");const c=[];let d=0;for(;d<b.length;)c.push(b.slice(d,d+=a));return c}\\nfunction splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(!b)throw new TypeError(`Cannot read property \\'length\\' of ${b}`);const c=[],d=[];let e=!1,f=-1;for(;f++<b.length-1;)e?d.push(b[f]):a(b[f])?(d.push(b[f]),e=!0):c.push(b[f]);return[c,d]}\\nfunction startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(\"string\"===typeof b)return b.startsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;let c=!0;return a.filter((d,e)=>{if(!c)return!1;(d=equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]))||(c=!1);return d}).length===a.length}\\nfunction subtract$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>subtract$$module$node_modules$rambda$dist$rambda_mjs(a,c):a-b}\\nfunction symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,c):concat$$module$node_modules$rambda$dist$rambda_mjs(filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b),a),filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b))}\\nfunction T$$module$node_modules$rambda$dist$rambda_mjs(){return!0}function tail$$module$node_modules$rambda$dist$rambda_mjs(a){return drop$$module$node_modules$rambda$dist$rambda_mjs(1,a)}\\nfunction takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;if(0>a)return b.slice();let d=a>c?c:a;return\"string\"===typeof b?b.slice(c-d):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,c-d,c)}\\nfunction takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(0===b.length)return b;let c=!1;const d=[];let e=b.length;for(;!c||0===e;)e--,!1===a(b[e])?c=!0:c||d.push(b[e]);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?d.reverse():d.reverse().join(\"\")}\\nfunction takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&\"string\"!==typeof b)throw Error(\"`iterable` is neither list nor a string\");let d=!0;const e=[];let f=-1;for(;f++<b.length-1;)a(b[f])?d&&e.push(b[f]):d&&(d=!1);return c?e:e.join(\"\")}\\nfunction tap$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>tap$$module$node_modules$rambda$dist$rambda_mjs(a,c);a(b);return b}function test$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>test$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(\"string\"===typeof a)throw new TypeError(`\\\\u2018test\\\\u2019 requires a value of type RegExp as its first argument; received \"${a}\"`);return-1!==b.search(a)}\\nfunction times$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>times$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||0>b)throw new RangeError(\"n must be an integer\");return map$$module$node_modules$rambda$dist$rambda_mjs(a,range$$module$node_modules$rambda$dist$rambda_mjs(0,b))}function toLower$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toLowerCase()}\\nfunction toPairs$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.entries(a)}function toString$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toString()}function toUpper$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toUpperCase()}function transpose$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>{c.forEach((d,e)=>isArray$$module$node_modules$rambda$dist$rambda_mjs(b[e])?b[e].push(d):b.push([d]));return b},[])}\\nfunction trim$$module$node_modules$rambda$dist$rambda_mjs(a){return a.trim()}const isFunction$$module$node_modules$rambda$dist$rambda_mjs=a=>[\"Promise\",\"Function\"].includes(type$$module$node_modules$rambda$dist$rambda_mjs(a));\\nfunction tryCatch$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isFunction$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(`R.tryCatch | fn \\'${a}\\'`);const c=isFunction$$module$node_modules$rambda$dist$rambda_mjs(b);return(...d)=>{try{return a(...d)}catch(e){return c?b(e,...d):b}}}function unapply$$module$node_modules$rambda$dist$rambda_mjs(a){return function(...b){return a.call(this,b)}}\\nfunction union$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>union$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(a);b.forEach(d=>{includes$$module$node_modules$rambda$dist$rambda_mjs(d,a)||c.push(d)});return c}\\nfunction uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=new Set;return b.filter(d=>{if(c.has(a(d)))return!1;c.add(a(d));return!0})}function includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=!1,e=-1;for(;++e<c.length&&!d;)a(b,c[e])&&(d=!0);return d}\\nfunction uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=-1;const d=[];for(;++c<b.length;){const e=b[c];includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,e,d)||d.push(e)}return d}function unless$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unless$$module$node_modules$rambda$dist$rambda_mjs(a,c):c=>a(c)?c:b(c)}\\nfunction unwind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unwind$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b[a])?mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},b),{},{[a]:c}),b[a]):[b]}\\nfunction values$$module$node_modules$rambda$dist$rambda_mjs(a){return\"Object\"!==type$$module$node_modules$rambda$dist$rambda_mjs(a)?[]:Object.values(a)}const Const$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Const$$module$node_modules$rambda$dist$rambda_mjs(a)});function view$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>view$$module$node_modules$rambda$dist$rambda_mjs(a,c):a(Const$$module$node_modules$rambda$dist$rambda_mjs)(b).x}\\nfunction whenFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)?b(c):c}const when$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(whenFn$$module$node_modules$rambda$dist$rambda_mjs);function where$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return d=>where$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=!0;for(const d in a){if(!c)continue;const e=a[d](b[d]);c&&!1===e&&(c=!1)}return c}\\nfunction whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return c=>whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(const c in a)if(a[c](b[c]))return!0;return!1}\\nfunction whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=filter$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]),a);return Object.keys(c).length===Object.keys(a).length}\\nfunction without$$module$node_modules$rambda$dist$rambda_mjs(a,b){return void 0===b?c=>without$$module$node_modules$rambda$dist$rambda_mjs(a,c):reduce$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,a)?c:c.concat(d),[],b)}function xor$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>xor$$module$node_modules$rambda$dist$rambda_mjs(a,c):!!a&&!b||!!b&&!a}\\nfunction zip$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>zip$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=[],d=Math.min(a.length,b.length);for(let e=0;e<d;e++)c[e]=[a[e],b[e]];return c}function zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,c):take$$module$node_modules$rambda$dist$rambda_mjs(b.length,a).reduce((c,d,e)=>{c[d]=b[e];return c},{})}\\nfunction zipWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return take$$module$node_modules$rambda$dist$rambda_mjs(b.length>c.length?c.length:b.length,b).map((d,e)=>a(d,c[e]))}const zipWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(zipWithFn$$module$node_modules$rambda$dist$rambda_mjs);var module$node_modules$rambda$dist$rambda_mjs={};module$node_modules$rambda$dist$rambda_mjs.F=F$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.T=T$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.__findHighestArity=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._arity=_arity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._indexOf=_indexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._lastIndexOf=_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs._pipe=_pipe$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.add=add$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.adjust=adjust$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.all=all$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.allPass=allPass$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.always=always$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.and=and$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.any=any$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.anyPass=anyPass$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.append=append$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.apply=apply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.applySpec=applySpec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assoc=assoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assocPath=assocPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.bind=bind$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.both=both$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.chain=chain$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clamp=clamp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clone=clone$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.complement=complement$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.compose=compose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.concat=concat$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.cond=cond$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.converge=converge$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.count=count$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.countBy=countBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curry=curry$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curryN=curryN$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dec=dec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.defaultTo=defaultTo$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.difference=difference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dissoc=dissoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.divide=divide$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.drop=drop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropLast=dropLast$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.dropLastWhile=dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeats=dropRepeats$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeatsWith=dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropWhile=dropWhile$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.either=either$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.endsWith=endsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.eqProps=eqProps$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.equals=equals$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolve=evolve$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.evolveArray=evolveArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolveObject=evolveObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filter=filter$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterArray=filterArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterObject=filterObject$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.find=find$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findIndex=findIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLast=findLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLastIndex=findLastIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.flatten=flatten$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.flip=flip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.forEach=forEach$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.fromPairs=fromPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupBy=groupBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupWith=groupWith$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.has=has$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.hasPath=hasPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.head=head$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identical=identical$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identity=identity$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.ifElse=ifElse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.inc=inc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.includes=includes$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexBy=indexBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexOf=indexOf$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.init=init$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersection=intersection$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersperse=intersperse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.is=is$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.isEmpty=isEmpty$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.isNil=isNil$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.join=join$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.juxt=juxt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.keys=keys$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.last=last$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.lastIndexOf=lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.length=length$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lens=lens$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensIndex=lensIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensPath=lensPath$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.lensProp=lensProp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.map=map$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapArray=mapArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObjIndexed=mapObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObject=mapObject$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.match=match$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mathMod=mathMod$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.max=max$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxBy=maxBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxByFn=maxByFn$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.mean=mean$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.median=median$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.merge=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeAll=mergeAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeDeepRight=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.mergeLeft=mergeLeft$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeRight=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeWith=mergeWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.min=min$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.minBy=minBy$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.minByFn=minByFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modify=modify$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPath=modifyPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPathFn=modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modulo=modulo$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.move=move$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.multiply=multiply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.negate=negate$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.none=none$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.not=not$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.nth=nth$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.objOf=objOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.of=of$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.omit=omit$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.on=on$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.once=once$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.or=or$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.over=over$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partial=partial$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partialObject=partialObject$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.partition=partition$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionArray=partitionArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionObject=partitionObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.path=path$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pathEq=pathEq$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.pathOr=pathOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.paths=paths$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pick=pick$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pickAll=pickAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pipe=pipe$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.pluck=pluck$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prepend=prepend$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.product=product$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prop=prop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propEq=propEq$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.propIs=propIs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propOr=propOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propSatisfies=propSatisfies$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.props=props$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.range=range$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.reduce=reduce$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceFn=reduceFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceStopper=reduceStopper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reject=reject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.repeat=repeat$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.replace=replace$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reverse=reverse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.set=set$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.slice=slice$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sort=sort$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.sortBy=sortBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.split=split$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitAt=splitAt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitEvery=splitEvery$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitWhen=splitWhen$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.startsWith=startsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.subtract=subtract$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sum=sum$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.symmetricDifference=symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tail=tail$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.take=take$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLast=takeLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLastWhile=takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeWhile=takeWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tap=tap$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.test=test$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.times=times$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toLower=toLower$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toPairs=toPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toString=toString$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.toUpper=toUpper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.transpose=transpose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.trim=trim$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tryCatch=tryCatch$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.type=type$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.unapply=unapply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.union=union$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniq=uniq$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqBy=uniqBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqWith=uniqWith$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.unless=unless$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.unwind=unwind$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.update=update$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.updateFn=updateFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.values=values$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.view=view$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.when=when$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.where=where$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereAny=whereAny$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereEq=whereEq$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.without=without$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.xor=xor$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zip=zip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipObj=zipObj$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipWith=zipWith$$module$node_modules$rambda$dist$rambda_mjs;const csoundSetMidiCallbacks$$module$src$modules$rtmidi=a=>b=>{a.exports.csoundSetMidiCallbacks(b)},csoundGetMIDIDevList$$module$src$modules$rtmidi=a=>(b,c)=>{const {buffer:d}=a.wasi.memory,e=a.exports.csoundGetMIDIDevList(b,void 0,c?1:0);if(0===e)return[];const f=sizeofStruct$$module$src$utils$native_sizes(CS_MIDIDEVICE$$module$src$structures),g=a.exports.allocCsMidiDeviceStruct(e);a.exports.csoundGetMIDIDevList(b,g,c?1:0);const h=new Uint8Array(d,g,f*e);b=range$$module$node_modules$rambda$dist$rambda_mjs(0,\\ne).map(k=>structBufferToObject$$module$src$utils$structure_buffer_to_object(CS_MIDIDEVICE$$module$src$structures,h.subarray(k*f,f)));a.exports.freeCsMidiDeviceStruct(g);return b};csoundGetMIDIDevList$$module$src$modules$rtmidi.toString=()=>\"getMIDIDevList = async (isOutput) => Object;\";\\nconst csoundGetRtMidiName$$module$src$modules$rtmidi=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.getRtMidiName(b);c=new Uint8Array(c,b,128);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||\"\"};csoundGetRtMidiName$$module$src$modules$rtmidi.toString=()=>\"getRtMidiName = async () => String;\";\\nconst csoundGetMidiOutFileName$$module$src$modules$rtmidi=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.getMidiOutFileName(b);c=new Uint8Array(c,b,128);b&&0<b.length&&freeStringPtr$$module$src$utils$string_pointers(a,b);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||\"\"},_isRequestingRtMidiInput$$module$src$modules$rtmidi=a=>b=>a.exports.isRequestingRtMidiInput(b),csoundPushMidiMessage$$module$src$modules$rtmidi=a=>(b,c,d,e)=>{a.exports.pushMidiMessage(b,\\nc,d,e)};csoundPushMidiMessage$$module$src$modules$rtmidi.toString=()=>\"midiMessage = async (status, data1, data2) => undefined;\";var module$src$modules$rtmidi={};module$src$modules$rtmidi._isRequestingRtMidiInput=_isRequestingRtMidiInput$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundGetMIDIDevList=csoundGetMIDIDevList$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundGetMidiOutFileName=csoundGetMidiOutFileName$$module$src$modules$rtmidi;\\nmodule$src$modules$rtmidi.csoundGetRtMidiName=csoundGetRtMidiName$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundPushMidiMessage=csoundPushMidiMessage$$module$src$modules$rtmidi;module$src$modules$rtmidi.csoundSetMidiCallbacks=csoundSetMidiCallbacks$$module$src$modules$rtmidi;const csoundInputMessage$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundInputMessage(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundInputMessage$$module$src$modules$control_events.toString=()=>\"inputMessage = async (scoreEvent) => Number;\";\\nconst csoundInputMessageAsync$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundInputMessageAsync(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundInputMessageAsync$$module$src$modules$control_events.toString=()=>\"inputMessageAsync = async (scoreEvent) => Number;\";\\nconst csoundGetControlChannel$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundGetControlChannelWasi(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundGetControlChannel$$module$src$modules$control_events.toString=()=>\"getControlChannel = async (channelName) => Number;\";\\nconst csoundSetControlChannel$$module$src$modules$control_events=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);a.exports.csoundSetControlChannel(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c)};csoundSetControlChannel$$module$src$modules$control_events.toString=()=>\"setControlChannel = async (channelName, value) => void;\";\\nconst csoundGetStringChannel$$module$src$modules$control_events=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundGetStringChannelWasi(b,c);const d=ptr2string$$module$src$utils$string_pointers(a,b);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,b);return d};csoundGetStringChannel$$module$src$modules$control_events.toString=()=>\"getStringChannel = async (channelName) => String;\";\\nconst csoundSetStringChannel$$module$src$modules$control_events=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);d=string2ptr$$module$src$utils$string_pointers(a,d);a.exports.csoundSetStringChannel(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,d)};csoundSetStringChannel$$module$src$modules$control_events.toString=()=>\"setStringChannel = async (channelName, value) => void;\";var module$src$modules$control_events={};\\nmodule$src$modules$control_events.csoundGetControlChannel=csoundGetControlChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundGetStringChannel=csoundGetStringChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundInputMessage=csoundInputMessage$$module$src$modules$control_events;module$src$modules$control_events.csoundInputMessageAsync=csoundInputMessageAsync$$module$src$modules$control_events;\\nmodule$src$modules$control_events.csoundSetControlChannel=csoundSetControlChannel$$module$src$modules$control_events;module$src$modules$control_events.csoundSetStringChannel=csoundSetStringChannel$$module$src$modules$control_events;const csoundGetOutputName$$module$src$modules$general_io=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.csoundGetOutputName(b);c=new Uint8Array(c,b,64);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||\"\"};csoundGetOutputName$$module$src$modules$general_io.toString=()=>\"getOutputName = async () => String;\";\\nconst csoundGetInputName$$module$src$modules$general_io=a=>b=>{var {buffer:c}=a.wasi.memory;b=a.exports.csoundGetInputName(b);c=new Uint8Array(c,b,64);return trimNull$$module$src$utils$trim_null(uint2String$$module$src$utils$text_encoders(c))||\"\"};csoundGetInputName$$module$src$modules$general_io.toString=()=>\"getInputName = async (csound) => String;\";var module$src$modules$general_io={};module$src$modules$general_io.csoundGetInputName=csoundGetInputName$$module$src$modules$general_io;\\nmodule$src$modules$general_io.csoundGetOutputName=csoundGetOutputName$$module$src$modules$general_io;const csoundAppendEnv$$module$src$modules$extra=a=>(b,c,d)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);d=string2ptr$$module$src$utils$string_pointers(a,d);b=a.exports.csoundAppendEnv(b,c,d);freeStringPtr$$module$src$utils$string_pointers(a,c);freeStringPtr$$module$src$utils$string_pointers(a,d);return b};csoundAppendEnv$$module$src$modules$extra.toString=()=>\"appendEnv = async (csound, variable, value) => Number;\";const csoundShouldDaemonize$$module$src$modules$extra=a=>b=>a.exports.csoundShouldDaemonize(b);\\nvar module$src$modules$extra={};module$src$modules$extra.csoundAppendEnv=csoundAppendEnv$$module$src$modules$extra;module$src$modules$extra.csoundShouldDaemonize=csoundShouldDaemonize$$module$src$modules$extra;const csoundIsScorePending$$module$src$modules$score_handling=a=>b=>a.exports.csoundIsScorePending(b);csoundIsScorePending$$module$src$modules$score_handling.toString=()=>\"isScorePending = async () => Number;\";const csoundSetScorePending$$module$src$modules$score_handling=a=>(b,c)=>a.exports.csoundSetScorePending(b,c);csoundSetScorePending$$module$src$modules$score_handling.toString=()=>\"setScorePending = async (pending) => Number;\";\\nconst csoundReadScore$$module$src$modules$score_handling=a=>(b,c)=>{c=string2ptr$$module$src$utils$string_pointers(a,c);b=a.exports.csoundReadScore(b,c);freeStringPtr$$module$src$utils$string_pointers(a,c);return b};csoundReadScore$$module$src$modules$score_handling.toString=()=>\"readScore = async (score) => Number;\";const csoundGetScoreTime$$module$src$modules$score_handling=a=>b=>a.exports.csoundGetScoreTime(b);csoundGetScoreTime$$module$src$modules$score_handling.toString=()=>\"getScoreTime = async () => Number;\";\\nconst csoundGetScoreOffsetSeconds$$module$src$modules$score_handling=a=>b=>a.exports.csoundGetScoreOffsetSeconds(b);csoundGetScoreOffsetSeconds$$module$src$modules$score_handling.toString=()=>\"getScoreOffsetSeconds = async () => Number;\";const csoundSetScoreOffsetSeconds$$module$src$modules$score_handling=a=>(b,c)=>a.exports.csoundSetScoreOffsetSeconds(b,c);csoundSetScoreOffsetSeconds$$module$src$modules$score_handling.toString=()=>\"setScoreOffsetSeconds = async () => Number;\";\\nconst csoundRewindScore$$module$src$modules$score_handling=a=>b=>a.exports.csoundRewindScore(b);csoundRewindScore$$module$src$modules$score_handling.toString=()=>\"rewindScore = async () => undefined;\";var module$src$modules$score_handling={};module$src$modules$score_handling.csoundGetScoreOffsetSeconds=csoundGetScoreOffsetSeconds$$module$src$modules$score_handling;module$src$modules$score_handling.csoundGetScoreTime=csoundGetScoreTime$$module$src$modules$score_handling;\\nmodule$src$modules$score_handling.csoundIsScorePending=csoundIsScorePending$$module$src$modules$score_handling;module$src$modules$score_handling.csoundReadScore=csoundReadScore$$module$src$modules$score_handling;module$src$modules$score_handling.csoundRewindScore=csoundRewindScore$$module$src$modules$score_handling;module$src$modules$score_handling.csoundSetScoreOffsetSeconds=csoundSetScoreOffsetSeconds$$module$src$modules$score_handling;module$src$modules$score_handling.csoundSetScorePending=csoundSetScorePending$$module$src$modules$score_handling;const csoundTableLength$$module$src$modules$table=a=>(b,c)=>a.exports.csoundTableLength(b,c);csoundTableLength$$module$src$modules$table.toString=()=>\"tableLength = async (tableNum) => Number;\";const csoundTableGet$$module$src$modules$table=a=>(b,c,d)=>a.exports.csoundTableGet(b,c,d);csoundTableGet$$module$src$modules$table.toString=()=>\"tableGet = async (tableNum, tableIndex) => Number;\";const csoundTableSet$$module$src$modules$table=a=>(b,c,d,e)=>a.exports.csoundTableSet(b,c,d,e);\\ncsoundTableSet$$module$src$modules$table.toString=()=>\"tableSet = async (tableNum, tableIndex, value) => undefined;\";const csoundTableCopyIn$$module$src$modules$table=a=>(b,c,d)=>{const e=a.exports.allocFloatArray(d.length);(new Float64Array(a.wasi.memory.buffer,e,d.length)).set(d);a.exports.csoundTableCopyIn(b,c,e);a.exports.freeFloatArrayMem(e)};csoundTableCopyIn$$module$src$modules$table.toString=()=>\"tableCopyIn = async (tableNum, float64Array) => undefined;\";\\nconst csoundTableCopyOut$$module$src$modules$table=a=>(b,c)=>{var d=a.exports.csoundTableLength(b,c);if(0<d){const e=a.exports.allocFloatArray(d);a.exports.csoundTableCopyOut(b,c,e);({buffer:b}=a.wasi.memory);d=new Float64Array(b,e,d);a.exports.freeFloatArrayMem(e);return Float64Array.from(d)}};csoundTableCopyOut$$module$src$modules$table.toString=()=>\"tableCopyOut = async (tableNum) => ?Float64Array;\";const csoundGetTable$$module$src$modules$table=csoundTableCopyOut$$module$src$modules$table;\\ncsoundTableCopyOut$$module$src$modules$table.toString=csoundTableCopyOut$$module$src$modules$table.toString;const csoundGetTableArgs$$module$src$modules$table=a=>(b,c)=>{const d=a.exports.allocFloatArray(1024);a.exports.csoundGetTableArgs(b,d,c);({buffer:b}=a.wasi.memory);b=new Float64Array(b,d,1024);a.exports.freeFloatArrayMem(d);return b};csoundGetTableArgs$$module$src$modules$table.toString=()=>\"getTableArgs = async (tableNum) => ?Float64Array;\";\\nconst csoundIsNamedGEN$$module$src$modules$table=a=>(b,c)=>a.exports.csoundIsNamedGEN(b,c);csoundIsNamedGEN$$module$src$modules$table.toString=()=>\"isNamedGEN = async (tableNum) => number;\";const csoundGetNamedGEN$$module$src$modules$table=a=>(b,c)=>{var d=a.exports.csoundIsNamedGEN(b,c);if(0<d){const e=a.exports.allocStringMem(d);a.exports.csoundGetNamedGEN(b,e,c,d);({buffer:b}=a.wasi.memory);d=new Uint8Array(b,e,d);return uint2String$$module$src$utils$text_encoders(d)}};\\ncsoundGetNamedGEN$$module$src$modules$table.toString=()=>\"getNamedGEN = async (tableNum) => ?string;\";var module$src$modules$table={};module$src$modules$table.csoundGetNamedGEN=csoundGetNamedGEN$$module$src$modules$table;module$src$modules$table.csoundGetTable=csoundTableCopyOut$$module$src$modules$table;module$src$modules$table.csoundGetTableArgs=csoundGetTableArgs$$module$src$modules$table;module$src$modules$table.csoundIsNamedGEN=csoundIsNamedGEN$$module$src$modules$table;\\nmodule$src$modules$table.csoundTableCopyIn=csoundTableCopyIn$$module$src$modules$table;module$src$modules$table.csoundTableCopyOut=csoundTableCopyOut$$module$src$modules$table;module$src$modules$table.csoundTableGet=csoundTableGet$$module$src$modules$table;module$src$modules$table.csoundTableLength=csoundTableLength$$module$src$modules$table;module$src$modules$table.csoundTableSet=csoundTableSet$$module$src$modules$table;function writeFile$$module$src$filesystem$worker_fs(a){return(b,c,d)=>{b=\"string\"===typeof d?encoder$$module$src$utils$text_encoders.encode(d):d;a.wasi.writeFile(c,b)}}writeFile$$module$src$filesystem$worker_fs.toString=()=>\"async (path, data) => void\";function appendFile$$module$src$filesystem$worker_fs(a){return(b,c,d)=>{b=\"string\"===typeof d?encoder$$module$src$utils$text_encoders.encode(d):d;a.wasi.appendFile(c,b)}}appendFile$$module$src$filesystem$worker_fs.toString=()=>\"async (path, data) => void\";\\nfunction readFile$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.readFile(c)}readFile$$module$src$filesystem$worker_fs.toString=()=>\"async (path) => ?Uint8Array\";function unlink$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.unlink(c)}unlink$$module$src$filesystem$worker_fs.toString=()=>\"async (path) => void\";function readdir$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.readdir(c)}readdir$$module$src$filesystem$worker_fs.toString=()=>\"async (path) => string[]\";\\nfunction mkdir$$module$src$filesystem$worker_fs(a){return(b,c)=>a.wasi.mkdir(c)}mkdir$$module$src$filesystem$worker_fs.toString=()=>\"async (path) => void\";var module$src$filesystem$worker_fs={};module$src$filesystem$worker_fs.appendFile=appendFile$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.mkdir=mkdir$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.readFile=readFile$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.readdir=readdir$$module$src$filesystem$worker_fs;\\nmodule$src$filesystem$worker_fs.unlink=unlink$$module$src$filesystem$worker_fs;module$src$filesystem$worker_fs.writeFile=writeFile$$module$src$filesystem$worker_fs;const api$$module$src$libcsound={csoundCreate:csoundCreate$$module$src$modules$instantiation,csoundDestroy:csoundDestroy$$module$src$modules$instantiation,csoundGetAPIVersion:csoundGetAPIVersion$$module$src$modules$instantiation,csoundGetVersion:csoundGetVersion$$module$src$modules$instantiation,csoundInitialize:csoundInitialize$$module$src$modules$instantiation,csoundParseOrc:csoundParseOrc$$module$src$modules$performance,csoundCompileTree:csoundCompileTree$$module$src$modules$performance,csoundCompileOrc:csoundCompileOrc$$module$src$modules$performance,\\ncsoundEvalCode:csoundEvalCode$$module$src$modules$performance,csoundStart:csoundStart$$module$src$modules$performance,csoundCompileCsd:csoundCompileCsd$$module$src$modules$performance,csoundCompileCsdText:csoundCompileCsdText$$module$src$modules$performance,csoundPerform:csoundPerform$$module$src$modules$performance,csoundPerformKsmps:csoundPerformKsmps$$module$src$modules$performance,csoundPerformBuffer:csoundPerformBuffer$$module$src$modules$performance,csoundStop:csoundStop$$module$src$modules$performance,\\ncsoundCleanup:csoundCleanup$$module$src$modules$performance,csoundReset:csoundReset$$module$src$modules$performance,csoundGetSr:csoundGetSr$$module$src$modules$attributes,csoundGetKr:csoundGetKr$$module$src$modules$attributes,csoundGetKsmps:csoundGetKsmps$$module$src$modules$attributes,csoundGetNchnls:csoundGetNchnls$$module$src$modules$attributes,csoundGetNchnlsInput:csoundGetNchnlsInput$$module$src$modules$attributes,csoundGet0dBFS:csoundGet0dBFS$$module$src$modules$attributes,csoundGetA4:csoundGetA4$$module$src$modules$attributes,\\ncsoundGetCurrentTimeSamples:csoundGetCurrentTimeSamples$$module$src$modules$attributes,csoundGetSizeOfMYFLT:csoundGetSizeOfMYFLT$$module$src$modules$attributes,csoundSetOption:csoundSetOption$$module$src$modules$attributes,csoundSetParams:csoundSetParams$$module$src$modules$attributes,csoundGetParams:csoundGetParams$$module$src$modules$attributes,csoundGetDebug:csoundGetDebug$$module$src$modules$attributes,csoundSetDebug:csoundSetDebug$$module$src$modules$attributes,csoundGetInputBufferSize:csoundGetInputBufferSize$$module$src$modules$rtaudio,\\ncsoundGetOutputBufferSize:csoundGetOutputBufferSize$$module$src$modules$rtaudio,csoundGetInputBuffer:csoundGetInputBuffer$$module$src$modules$rtaudio,csoundGetOutputBuffer:csoundGetOutputBuffer$$module$src$modules$rtaudio,csoundGetSpin:csoundGetSpin$$module$src$modules$rtaudio,csoundGetSpout:csoundGetSpout$$module$src$modules$rtaudio,csoundGetMIDIDevList:csoundGetMIDIDevList$$module$src$modules$rtmidi,csoundSetMidiCallbacks:csoundSetMidiCallbacks$$module$src$modules$rtmidi,csoundGetRtMidiName:csoundGetRtMidiName$$module$src$modules$rtmidi,\\ncsoundGetMidiOutFileName:csoundGetMidiOutFileName$$module$src$modules$rtmidi,csoundPushMidiMessage:csoundPushMidiMessage$$module$src$modules$rtmidi,_isRequestingRtMidiInput:_isRequestingRtMidiInput$$module$src$modules$rtmidi,csoundInputMessage:csoundInputMessage$$module$src$modules$control_events,csoundInputMessageAsync:csoundInputMessageAsync$$module$src$modules$control_events,csoundGetControlChannel:csoundGetControlChannel$$module$src$modules$control_events,csoundSetControlChannel:csoundSetControlChannel$$module$src$modules$control_events,\\ncsoundGetStringChannel:csoundGetStringChannel$$module$src$modules$control_events,csoundSetStringChannel:csoundSetStringChannel$$module$src$modules$control_events,csoundGetInputName:csoundGetInputName$$module$src$modules$general_io,csoundGetOutputName:csoundGetOutputName$$module$src$modules$general_io,csoundAppendEnv:csoundAppendEnv$$module$src$modules$extra,csoundShouldDaemonize:csoundShouldDaemonize$$module$src$modules$extra,csoundIsScorePending:csoundIsScorePending$$module$src$modules$score_handling,\\ncsoundSetScorePending:csoundSetScorePending$$module$src$modules$score_handling,csoundReadScore:csoundReadScore$$module$src$modules$score_handling,csoundGetScoreTime:csoundGetScoreTime$$module$src$modules$score_handling,csoundGetScoreOffsetSeconds:csoundGetScoreOffsetSeconds$$module$src$modules$score_handling,csoundSetScoreOffsetSeconds:csoundSetScoreOffsetSeconds$$module$src$modules$score_handling,csoundRewindScore:csoundRewindScore$$module$src$modules$score_handling,csoundTableLength:csoundTableLength$$module$src$modules$table,\\ncsoundTableGet:csoundTableGet$$module$src$modules$table,csoundTableSet:csoundTableSet$$module$src$modules$table,csoundTableCopyIn:csoundTableCopyIn$$module$src$modules$table,csoundTableCopyOut:csoundTableCopyOut$$module$src$modules$table,csoundGetTable:csoundTableCopyOut$$module$src$modules$table,csoundGetTableArgs:csoundGetTableArgs$$module$src$modules$table,csoundIsNamedGEN:csoundIsNamedGEN$$module$src$modules$table,csoundGetNamedGEN:csoundGetNamedGEN$$module$src$modules$table,fs:module$src$filesystem$worker_fs};\\nvar $jscompDefaultExport$$module$src$libcsound=function(a){return mergeAll$$module$node_modules$rambda$dist$rambda_mjs([reduce$$module$node_modules$rambda$dist$rambda_mjs((b,c)=>assoc$$module$node_modules$rambda$dist$rambda_mjs(c,api$$module$src$libcsound[c](a),b),{},keys$$module$node_modules$rambda$dist$rambda_mjs(dissoc$$module$node_modules$rambda$dist$rambda_mjs(\"fs\")(api$$module$src$libcsound))),reduce$$module$node_modules$rambda$dist$rambda_mjs((b,c)=>assoc$$module$node_modules$rambda$dist$rambda_mjs(c,\\napi$$module$src$libcsound.fs[c](a),b),{},keys$$module$node_modules$rambda$dist$rambda_mjs(module$src$filesystem$worker_fs))])},module$src$libcsound={};module$src$libcsound.api=api$$module$src$libcsound;module$src$libcsound.default=$jscompDefaultExport$$module$src$libcsound;const dlinit$$module$src$dlinit=(a,b,c,d)=>{if(b.exports.csoundModuleInit){var e=new WebAssembly.Global({value:\"i32\",mutable:!0},0),f=new WebAssembly.Global({value:\"i32\",mutable:!0},0),g=new WebAssembly.Global({value:\"i32\",mutable:!0},0);const h=new WebAssembly.Global({value:\"i32\",mutable:!0},0);let k=c.length;\"function\"===typeof b.exports.csoundModuleCreate&&(c.grow(1),e.value=k,c.set(k,b.exports.csoundModuleCreate),k+=1);\"function\"===typeof b.exports.csoundModuleInit&&(c.grow(1),f.value=k,c.set(k,\\nb.exports.csoundModuleInit),k+=1);\"function\"===typeof b.exports.csoundModuleDestroy&&(c.grow(1),g.value=k,c.set(k,b.exports.csoundModuleDestroy),k+=1);\"function\"===typeof b.exports.csoundModuleErrorCodeToString&&(c.grow(1),h.value=k,c.set(k,b.exports.csoundModuleErrorCodeToString));a.exports.csoundWasiLoadPlugin(d,e,f,g,h)}else b.exports.csound_opcode_init||b.exports.csound_fgen_init?(e=new WebAssembly.Global({value:\"i32\",mutable:!0},0),f=new WebAssembly.Global({value:\"i32\",mutable:!0},0),g=c.length,\\n\"function\"===typeof b.exports.csound_opcode_init&&(e.value=g,c.grow(1),c.set(g,b.exports.csound_opcode_init),g+=1),\"function\"===typeof b.exports.csound_fgen_init&&(f.value=g,c.grow(1),c.set(g,b.exports.csound_fgen_init)),a.exports.csoundWasiLoadOpcodeLibrary(d,f,e)):console.error(\"Plugin doesn\\'t export nececcary functions to quality as csound plugin.\")};var module$src$dlinit={};module$src$dlinit.dlinit=dlinit$$module$src$dlinit;void 0!==goog.global&&(goog.global={});goog.global.BigInt||(goog.global.BigInt=void 0===BigInt?Number:BigInt);\\nconst WASI_ESUCCESS$$module$src$filesystem$constants=0,WASI_E2BIG$$module$src$filesystem$constants=1,WASI_EACCES$$module$src$filesystem$constants=2,WASI_EADDRINUSE$$module$src$filesystem$constants=3,WASI_EADDRNOTAVAIL$$module$src$filesystem$constants=4,WASI_EAFNOSUPPORT$$module$src$filesystem$constants=5,WASI_EAGAIN$$module$src$filesystem$constants=6,WASI_EALREADY$$module$src$filesystem$constants=7,WASI_EBADF$$module$src$filesystem$constants=8,WASI_EBADMSG$$module$src$filesystem$constants=9,WASI_EBUSY$$module$src$filesystem$constants=\\n10,WASI_ECANCELED$$module$src$filesystem$constants=11,WASI_ECHILD$$module$src$filesystem$constants=12,WASI_ECONNABORTED$$module$src$filesystem$constants=13,WASI_ECONNREFUSED$$module$src$filesystem$constants=14,WASI_ECONNRESET$$module$src$filesystem$constants=15,WASI_EDEADLK$$module$src$filesystem$constants=16,WASI_EDESTADDRREQ$$module$src$filesystem$constants=17,WASI_EDOM$$module$src$filesystem$constants=18,WASI_EDQUOT$$module$src$filesystem$constants=19,WASI_EEXIST$$module$src$filesystem$constants=\\n20,WASI_EFAULT$$module$src$filesystem$constants=21,WASI_EFBIG$$module$src$filesystem$constants=22,WASI_EHOSTUNREACH$$module$src$filesystem$constants=23,WASI_EIDRM$$module$src$filesystem$constants=24,WASI_EILSEQ$$module$src$filesystem$constants=25,WASI_EINPROGRESS$$module$src$filesystem$constants=26,WASI_EINTR$$module$src$filesystem$constants=27,WASI_EINVAL$$module$src$filesystem$constants=28,WASI_EIO$$module$src$filesystem$constants=29,WASI_EISCONN$$module$src$filesystem$constants=30,WASI_EISDIR$$module$src$filesystem$constants=\\n31,WASI_ELOOP$$module$src$filesystem$constants=32,WASI_EMFILE$$module$src$filesystem$constants=33,WASI_EMLINK$$module$src$filesystem$constants=34,WASI_EMSGSIZE$$module$src$filesystem$constants=35,WASI_EMULTIHOP$$module$src$filesystem$constants=36,WASI_ENAMETOOLONG$$module$src$filesystem$constants=37,WASI_ENETDOWN$$module$src$filesystem$constants=38,WASI_ENETRESET$$module$src$filesystem$constants=39,WASI_ENETUNREACH$$module$src$filesystem$constants=40,WASI_ENFILE$$module$src$filesystem$constants=41,\\nWASI_ENOBUFS$$module$src$filesystem$constants=42,WASI_ENODEV$$module$src$filesystem$constants=43,WASI_ENOENT$$module$src$filesystem$constants=44,WASI_ENOEXEC$$module$src$filesystem$constants=45,WASI_ENOLCK$$module$src$filesystem$constants=46,WASI_ENOLINK$$module$src$filesystem$constants=47,WASI_ENOMEM$$module$src$filesystem$constants=48,WASI_ENOMSG$$module$src$filesystem$constants=49,WASI_ENOPROTOOPT$$module$src$filesystem$constants=50,WASI_ENOSPC$$module$src$filesystem$constants=51,WASI_ENOSYS$$module$src$filesystem$constants=\\n52,WASI_ENOTCONN$$module$src$filesystem$constants=53,WASI_ENOTDIR$$module$src$filesystem$constants=54,WASI_ENOTEMPTY$$module$src$filesystem$constants=55,WASI_ENOTRECOVERABLE$$module$src$filesystem$constants=56,WASI_ENOTSOCK$$module$src$filesystem$constants=57,WASI_ENOTSUP$$module$src$filesystem$constants=58,WASI_ENOTTY$$module$src$filesystem$constants=59,WASI_ENXIO$$module$src$filesystem$constants=60,WASI_EOVERFLOW$$module$src$filesystem$constants=61,WASI_EOWNERDEAD$$module$src$filesystem$constants=\\n62,WASI_EPERM$$module$src$filesystem$constants=63,WASI_EPIPE$$module$src$filesystem$constants=64,WASI_EPROTO$$module$src$filesystem$constants=65,WASI_EPROTONOSUPPORT$$module$src$filesystem$constants=66,WASI_EPROTOTYPE$$module$src$filesystem$constants=67,WASI_ERANGE$$module$src$filesystem$constants=68,WASI_EROFS$$module$src$filesystem$constants=69,WASI_ESPIPE$$module$src$filesystem$constants=70,WASI_ESRCH$$module$src$filesystem$constants=71,WASI_ESTALE$$module$src$filesystem$constants=72,WASI_ETIMEDOUT$$module$src$filesystem$constants=\\n73,WASI_ETXTBSY$$module$src$filesystem$constants=74,WASI_EXDEV$$module$src$filesystem$constants=75,WASI_ENOTCAPABLE$$module$src$filesystem$constants=76,WASI_SIGABRT$$module$src$filesystem$constants=0,WASI_SIGALRM$$module$src$filesystem$constants=1,WASI_SIGBUS$$module$src$filesystem$constants=2,WASI_SIGCHLD$$module$src$filesystem$constants=3,WASI_SIGCONT$$module$src$filesystem$constants=4,WASI_SIGFPE$$module$src$filesystem$constants=5,WASI_SIGHUP$$module$src$filesystem$constants=6,WASI_SIGILL$$module$src$filesystem$constants=\\n7,WASI_SIGINT$$module$src$filesystem$constants=8,WASI_SIGKILL$$module$src$filesystem$constants=9,WASI_SIGPIPE$$module$src$filesystem$constants=10,WASI_SIGQUIT$$module$src$filesystem$constants=11,WASI_SIGSEGV$$module$src$filesystem$constants=12,WASI_SIGSTOP$$module$src$filesystem$constants=13,WASI_SIGTERM$$module$src$filesystem$constants=14,WASI_SIGTRAP$$module$src$filesystem$constants=15,WASI_SIGTSTP$$module$src$filesystem$constants=16,WASI_SIGTTIN$$module$src$filesystem$constants=17,WASI_SIGTTOU$$module$src$filesystem$constants=\\n18,WASI_SIGURG$$module$src$filesystem$constants=19,WASI_SIGUSR1$$module$src$filesystem$constants=20,WASI_SIGUSR2$$module$src$filesystem$constants=21,WASI_SIGVTALRM$$module$src$filesystem$constants=22,WASI_SIGXCPU$$module$src$filesystem$constants=23,WASI_SIGXFSZ$$module$src$filesystem$constants=24,WASI_FILETYPE_UNKNOWN$$module$src$filesystem$constants=0,WASI_FILETYPE_BLOCK_DEVICE$$module$src$filesystem$constants=1,WASI_FILETYPE_CHARACTER_DEVICE$$module$src$filesystem$constants=2,WASI_FILETYPE_DIRECTORY$$module$src$filesystem$constants=\\n3,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants=4,WASI_FILETYPE_SOCKET_DGRAM$$module$src$filesystem$constants=5,WASI_FILETYPE_SOCKET_STREAM$$module$src$filesystem$constants=6,WASI_FILETYPE_SYMBOLIC_LINK$$module$src$filesystem$constants=7,WASI_FDFLAG_APPEND$$module$src$filesystem$constants=1,WASI_FDFLAG_DSYNC$$module$src$filesystem$constants=2,WASI_FDFLAG_NONBLOCK$$module$src$filesystem$constants=4,WASI_FDFLAG_RSYNC$$module$src$filesystem$constants=8,WASI_FDFLAG_SYNC$$module$src$filesystem$constants=\\n16,WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants=goog.global.BigInt(1),WASI_RIGHT_FD_READ$$module$src$filesystem$constants=goog.global.BigInt(2),WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants=goog.global.BigInt(4),WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants=goog.global.BigInt(8),WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants=goog.global.BigInt(16),WASI_RIGHT_FD_TELL$$module$src$filesystem$constants=goog.global.BigInt(32),WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants=\\ngoog.global.BigInt(64),WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants=goog.global.BigInt(128),WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants=goog.global.BigInt(256),WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants=goog.global.BigInt(512),WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants=goog.global.BigInt(1024),WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants=goog.global.BigInt(2048),WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants=\\ngoog.global.BigInt(4096),WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants=goog.global.BigInt(8192),WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants=goog.global.BigInt(16384),WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants=goog.global.BigInt(32768),WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants=goog.global.BigInt(65536),WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants=goog.global.BigInt(131072),WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants=\\ngoog.global.BigInt(262144),WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants=goog.global.BigInt(524288),WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants=goog.global.BigInt(1048576),WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants=goog.global.BigInt(2097152),WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants=goog.global.BigInt(4194304),WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants=goog.global.BigInt(8388608),WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants=\\ngoog.global.BigInt(16777216),WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants=goog.global.BigInt(33554432),WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants=goog.global.BigInt(67108864),WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants=goog.global.BigInt(134217728),WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants=goog.global.BigInt(268435456),RIGHTS_ALL$$module$src$filesystem$constants=WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_READ$$module$src$filesystem$constants|\\nWASI_RIGHT_FD_SEEK$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_TELL$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants|\\nWASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants|WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants|\\nWASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants|\\nWASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants,RIGHTS_BLOCK_DEVICE_BASE$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_BLOCK_DEVICE_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_CHARACTER_DEVICE_BASE$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_CHARACTER_DEVICE_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants=\\nWASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_TELL$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|\\nWASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants=goog.global.BigInt(0),RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|\\nWASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants|WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants|\\nWASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants|\\nWASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,RIGHTS_DIRECTORY_INHERITING$$module$src$filesystem$constants=RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants|RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants,RIGHTS_SOCKET_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|\\nWASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants|WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants,RIGHTS_SOCKET_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_TTY_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,\\nRIGHTS_TTY_INHERITING$$module$src$filesystem$constants=goog.global.BigInt(0),WASI_CLOCK_REALTIME$$module$src$filesystem$constants=0,WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants=1,WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants=2,WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants=3,WASI_EVENTTYPE_CLOCK$$module$src$filesystem$constants=0,WASI_EVENTTYPE_FD_READ$$module$src$filesystem$constants=1,WASI_EVENTTYPE_FD_WRITE$$module$src$filesystem$constants=2,WASI_FILESTAT_SET_ATIM$$module$src$filesystem$constants=\\n1,WASI_FILESTAT_SET_ATIM_NOW$$module$src$filesystem$constants=2,WASI_FILESTAT_SET_MTIM$$module$src$filesystem$constants=4,WASI_FILESTAT_SET_MTIM_NOW$$module$src$filesystem$constants=8,WASI_O_CREAT$$module$src$filesystem$constants=1,WASI_O_DIRECTORY$$module$src$filesystem$constants=2,WASI_O_EXCL$$module$src$filesystem$constants=4,WASI_O_TRUNC$$module$src$filesystem$constants=8,WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants=0,WASI_DIRCOOKIE_START$$module$src$filesystem$constants=0,WASI_STDIN_FILENO$$module$src$filesystem$constants=\\n0,WASI_STDOUT_FILENO$$module$src$filesystem$constants=1,WASI_STDERR_FILENO$$module$src$filesystem$constants=2,WASI_WHENCE_SET$$module$src$filesystem$constants=0,WASI_WHENCE_CUR$$module$src$filesystem$constants=1,WASI_WHENCE_END$$module$src$filesystem$constants=2;var module$src$filesystem$constants={};module$src$filesystem$constants.RIGHTS_ALL=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_BLOCK_DEVICE_BASE=RIGHTS_ALL$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.RIGHTS_BLOCK_DEVICE_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_CHARACTER_DEVICE_BASE=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_CHARACTER_DEVICE_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_DIRECTORY_BASE=RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_DIRECTORY_INHERITING=RIGHTS_DIRECTORY_INHERITING$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.RIGHTS_REGULAR_FILE_BASE=RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_REGULAR_FILE_INHERITING=RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_SOCKET_BASE=RIGHTS_SOCKET_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_SOCKET_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_TTY_BASE=RIGHTS_TTY_BASE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.RIGHTS_TTY_INHERITING=RIGHTS_TTY_INHERITING$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_MONOTONIC=WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_PROCESS_CPUTIME_ID=WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_REALTIME=WASI_CLOCK_REALTIME$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_CLOCK_THREAD_CPUTIME_ID=WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_DIRCOOKIE_START=WASI_DIRCOOKIE_START$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_E2BIG=WASI_E2BIG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EACCES=WASI_EACCES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EADDRINUSE=WASI_EADDRINUSE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EADDRNOTAVAIL=WASI_EADDRNOTAVAIL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EAFNOSUPPORT=WASI_EAFNOSUPPORT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EAGAIN=WASI_EAGAIN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EALREADY=WASI_EALREADY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EBADF=WASI_EBADF$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EBADMSG=WASI_EBADMSG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EBUSY=WASI_EBUSY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECANCELED=WASI_ECANCELED$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECHILD=WASI_ECHILD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECONNABORTED=WASI_ECONNABORTED$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ECONNREFUSED=WASI_ECONNREFUSED$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECONNRESET=WASI_ECONNRESET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDEADLK=WASI_EDEADLK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDESTADDRREQ=WASI_EDESTADDRREQ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDOM=WASI_EDOM$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EDQUOT=WASI_EDQUOT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EEXIST=WASI_EEXIST$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EFAULT=WASI_EFAULT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EFBIG=WASI_EFBIG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EHOSTUNREACH=WASI_EHOSTUNREACH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EIDRM=WASI_EIDRM$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EILSEQ=WASI_EILSEQ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINPROGRESS=WASI_EINPROGRESS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINTR=WASI_EINTR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINVAL=WASI_EINVAL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EIO=WASI_EIO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EISCONN=WASI_EISCONN$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EISDIR=WASI_EISDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ELOOP=WASI_ELOOP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMFILE=WASI_EMFILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMLINK=WASI_EMLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMSGSIZE=WASI_EMSGSIZE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMULTIHOP=WASI_EMULTIHOP$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ENAMETOOLONG=WASI_ENAMETOOLONG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETDOWN=WASI_ENETDOWN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETRESET=WASI_ENETRESET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETUNREACH=WASI_ENETUNREACH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENFILE=WASI_ENFILE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ENOBUFS=WASI_ENOBUFS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENODEV=WASI_ENODEV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOENT=WASI_ENOENT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOEXEC=WASI_ENOEXEC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOLCK=WASI_ENOLCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOLINK=WASI_ENOLINK$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ENOMEM=WASI_ENOMEM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOMSG=WASI_ENOMSG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOPROTOOPT=WASI_ENOPROTOOPT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOSPC=WASI_ENOSPC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOSYS=WASI_ENOSYS$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ENOTCAPABLE=WASI_ENOTCAPABLE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTCONN=WASI_ENOTCONN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTDIR=WASI_ENOTDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTEMPTY=WASI_ENOTEMPTY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTRECOVERABLE=WASI_ENOTRECOVERABLE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ENOTSOCK=WASI_ENOTSOCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTSUP=WASI_ENOTSUP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTTY=WASI_ENOTTY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENXIO=WASI_ENXIO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EOVERFLOW=WASI_EOVERFLOW$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EOWNERDEAD=WASI_EOWNERDEAD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPERM=WASI_EPERM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPIPE=WASI_EPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPROTO=WASI_EPROTO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPROTONOSUPPORT=WASI_EPROTONOSUPPORT$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EPROTOTYPE=WASI_EPROTOTYPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ERANGE=WASI_ERANGE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EROFS=WASI_EROFS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESPIPE=WASI_ESPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESRCH=WASI_ESRCH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESTALE=WASI_ESTALE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_ESUCCESS=WASI_ESUCCESS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ETIMEDOUT=WASI_ETIMEDOUT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ETXTBSY=WASI_ETXTBSY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EVENTTYPE_CLOCK=WASI_EVENTTYPE_CLOCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EVENTTYPE_FD_READ=WASI_EVENTTYPE_FD_READ$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_EVENTTYPE_FD_WRITE=WASI_EVENTTYPE_FD_WRITE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EXDEV=WASI_EXDEV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_APPEND=WASI_FDFLAG_APPEND$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_DSYNC=WASI_FDFLAG_DSYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_NONBLOCK=WASI_FDFLAG_NONBLOCK$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_FDFLAG_RSYNC=WASI_FDFLAG_RSYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_SYNC=WASI_FDFLAG_SYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_ATIM=WASI_FILESTAT_SET_ATIM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_ATIM_NOW=WASI_FILESTAT_SET_ATIM_NOW$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_MTIM=WASI_FILESTAT_SET_MTIM$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_FILESTAT_SET_MTIM_NOW=WASI_FILESTAT_SET_MTIM_NOW$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_BLOCK_DEVICE=WASI_FILETYPE_BLOCK_DEVICE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_CHARACTER_DEVICE=WASI_FILETYPE_CHARACTER_DEVICE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_DIRECTORY=WASI_FILETYPE_DIRECTORY$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_FILETYPE_REGULAR_FILE=WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SOCKET_DGRAM=WASI_FILETYPE_SOCKET_DGRAM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SOCKET_STREAM=WASI_FILETYPE_SOCKET_STREAM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SYMBOLIC_LINK=WASI_FILETYPE_SYMBOLIC_LINK$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_FILETYPE_UNKNOWN=WASI_FILETYPE_UNKNOWN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_CREAT=WASI_O_CREAT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_DIRECTORY=WASI_O_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_EXCL=WASI_O_EXCL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_TRUNC=WASI_O_TRUNC$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_PREOPENTYPE_DIR=WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_ADVISE=WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_ALLOCATE=WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_DATASYNC=WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FDSTAT_SET_FLAGS=WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_GET=WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_SET_SIZE=WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_SET_TIMES=WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_READ=WASI_RIGHT_FD_READ$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_RIGHT_FD_READDIR=WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_SEEK=WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_SYNC=WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_TELL=WASI_RIGHT_FD_TELL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_WRITE=WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_RIGHT_PATH_CREATE_DIRECTORY=WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_CREATE_FILE=WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_GET=WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_SET_SIZE=WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_SET_TIMES=WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_LINK_SOURCE=WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_LINK_TARGET=WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_OPEN=WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_RIGHT_PATH_READLINK=WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_REMOVE_DIRECTORY=WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_RENAME_SOURCE=WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_RENAME_TARGET=WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_RIGHT_PATH_SYMLINK=WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_UNLINK_FILE=WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_POLL_FD_READWRITE=WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_SOCK_SHUTDOWN=WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_SIGABRT=WASI_SIGABRT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGALRM=WASI_SIGALRM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGBUS=WASI_SIGBUS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGCHLD=WASI_SIGCHLD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGCONT=WASI_SIGCONT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGFPE=WASI_SIGFPE$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_SIGHUP=WASI_SIGHUP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGILL=WASI_SIGILL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGINT=WASI_SIGINT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGKILL=WASI_SIGKILL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGPIPE=WASI_SIGPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGQUIT=WASI_SIGQUIT$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_SIGSEGV=WASI_SIGSEGV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGSTOP=WASI_SIGSTOP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTERM=WASI_SIGTERM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTRAP=WASI_SIGTRAP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTSTP=WASI_SIGTSTP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTTIN=WASI_SIGTTIN$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_SIGTTOU=WASI_SIGTTOU$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGURG=WASI_SIGURG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGUSR1=WASI_SIGUSR1$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGUSR2=WASI_SIGUSR2$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGVTALRM=WASI_SIGVTALRM$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_SIGXCPU=WASI_SIGXCPU$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGXFSZ=WASI_SIGXFSZ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDERR_FILENO=WASI_STDERR_FILENO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDIN_FILENO=WASI_STDIN_FILENO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDOUT_FILENO=WASI_STDOUT_FILENO$$module$src$filesystem$constants;\\nmodule$src$filesystem$constants.WASI_WHENCE_CUR=WASI_WHENCE_CUR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_WHENCE_END=WASI_WHENCE_END$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_WHENCE_SET=WASI_WHENCE_SET$$module$src$filesystem$constants;goog.debug={};function module$contents$goog$debug$Error_DebugError(a,b){if(Error.captureStackTrace)Error.captureStackTrace(this,module$contents$goog$debug$Error_DebugError);else{const c=Error().stack;c&&(this.stack=c)}a&&(this.message=String(a));void 0!==b&&(this.cause=b);this.reportErrorToServer=!0}goog.inherits(module$contents$goog$debug$Error_DebugError,Error);module$contents$goog$debug$Error_DebugError.prototype.name=\"CustomError\";goog.debug.Error=module$contents$goog$debug$Error_DebugError;goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;function module$contents$goog$asserts_AssertionError(a,b){module$contents$goog$debug$Error_DebugError.call(this,module$contents$goog$asserts_subs(a,b));this.messagePattern=a}goog.inherits(module$contents$goog$asserts_AssertionError,module$contents$goog$debug$Error_DebugError);goog.asserts.AssertionError=module$contents$goog$asserts_AssertionError;module$contents$goog$asserts_AssertionError.prototype.name=\"AssertionError\";\\ngoog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};let module$contents$goog$asserts_errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;function module$contents$goog$asserts_subs(a,b){a=a.split(\"%s\");let c=\"\";const d=a.length-1;for(let e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:\"%s\");return c+a[d]}\\nfunction module$contents$goog$asserts_doAssertFailure(a,b,c,d){let e=\"Assertion failed\",f;c?(e+=\": \"+c,f=d):a&&(e+=\": \"+a,f=b);a=new module$contents$goog$asserts_AssertionError(\"\"+e,f||[]);module$contents$goog$asserts_errorHandler_(a)}goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(module$contents$goog$asserts_errorHandler_=a)};\\ngoog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&module$contents$goog$asserts_doAssertFailure(\"\",null,b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertExists=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&null==a&&module$contents$goog$asserts_doAssertFailure(\"Expected to exist: %s.\",[a],b,Array.prototype.slice.call(arguments,2));return a};\\ngoog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&module$contents$goog$asserts_errorHandler_(new module$contents$goog$asserts_AssertionError(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&\"number\"!==typeof a&&module$contents$goog$asserts_doAssertFailure(\"Expected number but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\\ngoog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&\"string\"!==typeof a&&module$contents$goog$asserts_doAssertFailure(\"Expected string but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&\"function\"!==typeof a&&module$contents$goog$asserts_doAssertFailure(\"Expected function but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\\ngoog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&module$contents$goog$asserts_doAssertFailure(\"Expected object but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!Array.isArray(a)&&module$contents$goog$asserts_doAssertFailure(\"Expected array but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\\ngoog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&\"boolean\"!==typeof a&&module$contents$goog$asserts_doAssertFailure(\"Expected boolean but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\\ngoog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||module$contents$goog$asserts_doAssertFailure(\"Expected Element but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\\ngoog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||module$contents$goog$asserts_doAssertFailure(\"Expected instanceof %s but got %s.\",[module$contents$goog$asserts_getType(b),module$contents$goog$asserts_getType(a)],c,Array.prototype.slice.call(arguments,3));return a};\\ngoog.asserts.assertFinite=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||\"number\"==typeof a&&isFinite(a)||module$contents$goog$asserts_doAssertFailure(\"Expected %s to be a finite number but it is not.\",[a],b,Array.prototype.slice.call(arguments,2));return a};\\nfunction module$contents$goog$asserts_getType(a){return a instanceof Function?a.displayName||a.name||\"unknown type name\":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?\"null\":typeof a};goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;const module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS=2012<goog.FEATURESET_YEAR;goog.array.ASSUME_NATIVE_FUNCTIONS=module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS;function module$contents$goog$array_peek(a){return a[a.length-1]}goog.array.peek=module$contents$goog$array_peek;goog.array.last=module$contents$goog$array_peek;\\nconst module$contents$goog$array_indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(\"string\"===typeof a)return\"string\"!==typeof b||1!=b.length?-1:a.indexOf(b,c);for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};goog.array.indexOf=module$contents$goog$array_indexOf;\\nconst module$contents$goog$array_lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if(\"string\"===typeof a)return\"string\"!==typeof b||1!=b.length?-1:a.lastIndexOf(b,c);for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1};\\ngoog.array.lastIndexOf=module$contents$goog$array_lastIndexOf;const module$contents$goog$array_forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};goog.array.forEach=module$contents$goog$array_forEach;\\nfunction module$contents$goog$array_forEachRight(a,b,c){var d=a.length;const e=\"string\"===typeof a?a.split(\"\"):a;for(--d;0<=d;--d)d in e&&b.call(c,e[d],d,a)}goog.array.forEachRight=module$contents$goog$array_forEachRight;\\nconst module$contents$goog$array_filter=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){const d=a.length,e=[];let f=0;const g=\"string\"===typeof a?a.split(\"\"):a;for(let h=0;h<d;h++)if(h in g){const k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e};goog.array.filter=module$contents$goog$array_filter;\\nconst module$contents$goog$array_map=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){const d=a.length,e=Array(d),f=\"string\"===typeof a?a.split(\"\"):a;for(let g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};goog.array.map=module$contents$goog$array_map;\\nconst module$contents$goog$array_reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){let e=c;module$contents$goog$array_forEach(a,function(f,g){e=b.call(d,e,f,g,a)});return e};goog.array.reduce=module$contents$goog$array_reduce;\\nconst module$contents$goog$array_reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){let e=c;module$contents$goog$array_forEachRight(a,function(f,g){e=b.call(d,e,f,g,a)});return e};goog.array.reduceRight=module$contents$goog$array_reduceRight;\\nconst module$contents$goog$array_some=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};goog.array.some=module$contents$goog$array_some;\\nconst module$contents$goog$array_every=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};goog.array.every=module$contents$goog$array_every;\\nfunction module$contents$goog$array_count(a,b,c){let d=0;module$contents$goog$array_forEach(a,function(e,f,g){b.call(c,e,f,g)&&++d},c);return d}goog.array.count=module$contents$goog$array_count;function module$contents$goog$array_find(a,b,c){b=module$contents$goog$array_findIndex(a,b,c);return 0>b?null:\"string\"===typeof a?a.charAt(b):a[b]}goog.array.find=module$contents$goog$array_find;\\nfunction module$contents$goog$array_findIndex(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1}goog.array.findIndex=module$contents$goog$array_findIndex;function module$contents$goog$array_findRight(a,b,c){b=module$contents$goog$array_findIndexRight(a,b,c);return 0>b?null:\"string\"===typeof a?a.charAt(b):a[b]}goog.array.findRight=module$contents$goog$array_findRight;\\nfunction module$contents$goog$array_findIndexRight(a,b,c){var d=a.length;const e=\"string\"===typeof a?a.split(\"\"):a;for(--d;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1}goog.array.findIndexRight=module$contents$goog$array_findIndexRight;function module$contents$goog$array_contains(a,b){return 0<=module$contents$goog$array_indexOf(a,b)}goog.array.contains=module$contents$goog$array_contains;function module$contents$goog$array_isEmpty(a){return 0==a.length}goog.array.isEmpty=module$contents$goog$array_isEmpty;\\nfunction module$contents$goog$array_clear(a){if(!Array.isArray(a))for(let b=a.length-1;0<=b;b--)delete a[b];a.length=0}goog.array.clear=module$contents$goog$array_clear;function module$contents$goog$array_insert(a,b){module$contents$goog$array_contains(a,b)||a.push(b)}goog.array.insert=module$contents$goog$array_insert;function module$contents$goog$array_insertAt(a,b,c){module$contents$goog$array_splice(a,c,0,b)}goog.array.insertAt=module$contents$goog$array_insertAt;\\nfunction module$contents$goog$array_insertArrayAt(a,b,c){goog.partial(module$contents$goog$array_splice,a,c,0).apply(null,b)}goog.array.insertArrayAt=module$contents$goog$array_insertArrayAt;function module$contents$goog$array_insertBefore(a,b,c){let d;2==arguments.length||0>(d=module$contents$goog$array_indexOf(a,c))?a.push(b):module$contents$goog$array_insertAt(a,b,d)}goog.array.insertBefore=module$contents$goog$array_insertBefore;\\nfunction module$contents$goog$array_remove(a,b){b=module$contents$goog$array_indexOf(a,b);let c;(c=0<=b)&&module$contents$goog$array_removeAt(a,b);return c}goog.array.remove=module$contents$goog$array_remove;function module$contents$goog$array_removeLast(a,b){b=module$contents$goog$array_lastIndexOf(a,b);return 0<=b?(module$contents$goog$array_removeAt(a,b),!0):!1}goog.array.removeLast=module$contents$goog$array_removeLast;\\nfunction module$contents$goog$array_removeAt(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length}goog.array.removeAt=module$contents$goog$array_removeAt;function module$contents$goog$array_removeIf(a,b,c){b=module$contents$goog$array_findIndex(a,b,c);return 0<=b?(module$contents$goog$array_removeAt(a,b),!0):!1}goog.array.removeIf=module$contents$goog$array_removeIf;\\nfunction module$contents$goog$array_removeAllIf(a,b,c){let d=0;module$contents$goog$array_forEachRight(a,function(e,f){b.call(c,e,f,a)&&module$contents$goog$array_removeAt(a,f)&&d++});return d}goog.array.removeAllIf=module$contents$goog$array_removeAllIf;function module$contents$goog$array_concat(a){return Array.prototype.concat.apply([],arguments)}goog.array.concat=module$contents$goog$array_concat;function module$contents$goog$array_join(a){return Array.prototype.concat.apply([],arguments)}\\ngoog.array.join=module$contents$goog$array_join;function module$contents$goog$array_toArray(a){const b=a.length;if(0<b){const c=Array(b);for(let d=0;d<b;d++)c[d]=a[d];return c}return[]}const module$contents$goog$array_clone=goog.array.toArray=module$contents$goog$array_toArray;goog.array.clone=module$contents$goog$array_toArray;\\nfunction module$contents$goog$array_extend(a,b){for(let c=1;c<arguments.length;c++){const d=arguments[c];if(goog.isArrayLike(d)){const e=a.length||0,f=d.length||0;a.length=e+f;for(let g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}}goog.array.extend=module$contents$goog$array_extend;function module$contents$goog$array_splice(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,module$contents$goog$array_slice(arguments,1))}goog.array.splice=module$contents$goog$array_splice;\\nfunction module$contents$goog$array_slice(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)}goog.array.slice=module$contents$goog$array_slice;\\nfunction module$contents$goog$array_removeDuplicates(a,b,c){b=b||a;var d=function(g){return goog.isObject(g)?\"o\"+goog.getUid(g):(typeof g).charAt(0)+g};c=c||d;let e=d=0;const f={};for(;e<a.length;){const g=a[e++],h=c(g);Object.prototype.hasOwnProperty.call(f,h)||(f[h]=!0,b[d++]=g)}b.length=d}goog.array.removeDuplicates=module$contents$goog$array_removeDuplicates;\\nfunction module$contents$goog$array_binarySearch(a,b,c){return module$contents$goog$array_binarySearch_(a,c||module$contents$goog$array_defaultCompare,!1,b)}goog.array.binarySearch=module$contents$goog$array_binarySearch;function module$contents$goog$array_binarySelect(a,b,c){return module$contents$goog$array_binarySearch_(a,b,!0,void 0,c)}goog.array.binarySelect=module$contents$goog$array_binarySelect;\\nfunction module$contents$goog$array_binarySearch_(a,b,c,d,e){let f=0,g=a.length,h;for(;f<g;){const k=f+(g-f>>>1);let l;l=c?b.call(e,a[k],k,a):b(d,a[k]);0<l?f=k+1:(g=k,h=!l)}return h?f:-f-1}function module$contents$goog$array_sort(a,b){a.sort(b||module$contents$goog$array_defaultCompare)}goog.array.sort=module$contents$goog$array_sort;\\nfunction module$contents$goog$array_stableSort(a,b){const c=Array(a.length);for(let e=0;e<a.length;e++)c[e]={index:e,value:a[e]};const d=b||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(c,function(e,f){return d(e.value,f.value)||e.index-f.index});for(b=0;b<a.length;b++)a[b]=c[b].value}goog.array.stableSort=module$contents$goog$array_stableSort;\\nfunction module$contents$goog$array_sortByKey(a,b,c){const d=c||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(a,function(e,f){return d(b(e),b(f))})}goog.array.sortByKey=module$contents$goog$array_sortByKey;function module$contents$goog$array_sortObjectsByKey(a,b,c){module$contents$goog$array_sortByKey(a,function(d){return d[b]},c)}goog.array.sortObjectsByKey=module$contents$goog$array_sortObjectsByKey;\\nfunction module$contents$goog$array_isSorted(a,b,c){b=b||module$contents$goog$array_defaultCompare;for(let d=1;d<a.length;d++){const e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0}goog.array.isSorted=module$contents$goog$array_isSorted;function module$contents$goog$array_equals(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;const d=a.length;c=c||module$contents$goog$array_defaultCompareEquality;for(let e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0}\\ngoog.array.equals=module$contents$goog$array_equals;function module$contents$goog$array_compare3(a,b,c){c=c||module$contents$goog$array_defaultCompare;const d=Math.min(a.length,b.length);for(let e=0;e<d;e++){const f=c(a[e],b[e]);if(0!=f)return f}return module$contents$goog$array_defaultCompare(a.length,b.length)}goog.array.compare3=module$contents$goog$array_compare3;function module$contents$goog$array_defaultCompare(a,b){return a>b?1:a<b?-1:0}goog.array.defaultCompare=module$contents$goog$array_defaultCompare;\\nfunction module$contents$goog$array_inverseDefaultCompare(a,b){return-module$contents$goog$array_defaultCompare(a,b)}goog.array.inverseDefaultCompare=module$contents$goog$array_inverseDefaultCompare;function module$contents$goog$array_defaultCompareEquality(a,b){return a===b}goog.array.defaultCompareEquality=module$contents$goog$array_defaultCompareEquality;\\nfunction module$contents$goog$array_binaryInsert(a,b,c){c=module$contents$goog$array_binarySearch(a,b,c);return 0>c?(module$contents$goog$array_insertAt(a,b,-(c+1)),!0):!1}goog.array.binaryInsert=module$contents$goog$array_binaryInsert;function module$contents$goog$array_binaryRemove(a,b,c){b=module$contents$goog$array_binarySearch(a,b,c);return 0<=b?module$contents$goog$array_removeAt(a,b):!1}goog.array.binaryRemove=module$contents$goog$array_binaryRemove;\\nfunction module$contents$goog$array_bucket(a,b,c){const d={};for(let e=0;e<a.length;e++){const f=a[e],g=b.call(c,f,e,a);void 0!==g&&(d[g]||(d[g]=[])).push(f)}return d}goog.array.bucket=module$contents$goog$array_bucket;function module$contents$goog$array_bucketToMap(a,b){const c=new Map;for(let d=0;d<a.length;d++){const e=a[d],f=b(e,d,a);if(void 0!==f){let g=c.get(f);g||(g=[],c.set(f,g));g.push(e)}}return c}goog.array.bucketToMap=module$contents$goog$array_bucketToMap;\\nfunction module$contents$goog$array_toObject(a,b,c){const d={};module$contents$goog$array_forEach(a,function(e,f){d[b.call(c,e,f,a)]=e});return d}goog.array.toObject=module$contents$goog$array_toObject;function module$contents$goog$array_toMap(a,b){const c=new Map;for(let d=0;d<a.length;d++){const e=a[d];c.set(b(e,d,a),e)}return c}goog.array.toMap=module$contents$goog$array_toMap;\\nfunction module$contents$goog$array_range(a,b,c){const d=[];let e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d}goog.array.range=module$contents$goog$array_range;function module$contents$goog$array_repeat(a,b){const c=[];for(let d=0;d<b;d++)c[d]=a;return c}goog.array.repeat=module$contents$goog$array_repeat;\\nfunction module$contents$goog$array_flatten(a){const b=[];for(let d=0;d<arguments.length;d++){const e=arguments[d];if(Array.isArray(e))for(let f=0;f<e.length;f+=8192){var c=module$contents$goog$array_slice(e,f,f+8192);c=module$contents$goog$array_flatten.apply(null,c);for(let g=0;g<c.length;g++)b.push(c[g])}else b.push(e)}return b}goog.array.flatten=module$contents$goog$array_flatten;\\nfunction module$contents$goog$array_rotate(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a}goog.array.rotate=module$contents$goog$array_rotate;function module$contents$goog$array_moveItem(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0])}goog.array.moveItem=module$contents$goog$array_moveItem;\\nfunction module$contents$goog$array_zip(a){if(!arguments.length)return[];const b=[];let c=arguments[0].length;for(var d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){const e=[];for(let f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b}goog.array.zip=module$contents$goog$array_zip;function module$contents$goog$array_shuffle(a,b){b=b||Math.random;for(let c=a.length-1;0<c;c--){const d=Math.floor(b()*(c+1)),e=a[c];a[c]=a[d];a[d]=e}}\\ngoog.array.shuffle=module$contents$goog$array_shuffle;function module$contents$goog$array_copyByIndex(a,b){const c=[];module$contents$goog$array_forEach(b,function(d){c.push(a[d])});return c}goog.array.copyByIndex=module$contents$goog$array_copyByIndex;function module$contents$goog$array_concatMap(a,b,c){return module$contents$goog$array_concat.apply([],module$contents$goog$array_map(a,b,c))}goog.array.concatMap=module$contents$goog$array_concatMap;goog.dom.asserts={};goog.dom.asserts.assertIsLocation=function(a){if(goog.asserts.ENABLE_ASSERTS){var b=goog.dom.asserts.getWindow_(a);b&&(!a||!(a instanceof b.Location)&&a instanceof b.Element)&&goog.asserts.fail(\"Argument is not a Location (or a non-Element mock); got: %s\",goog.dom.asserts.debugStringForType_(a))}return a};\\ngoog.dom.asserts.assertIsElementType_=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=goog.dom.asserts.getWindow_(a);c&&\"undefined\"!=typeof c[b]&&(a&&(a instanceof c[b]||!(a instanceof c.Location||a instanceof c.Element))||goog.asserts.fail(\"Argument is not a %s (or a non-Element, non-Location mock); got: %s\",b,goog.dom.asserts.debugStringForType_(a)))}return a};goog.dom.asserts.assertIsHTMLAnchorElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLAnchorElement\")};\\ngoog.dom.asserts.assertIsHTMLButtonElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLButtonElement\")};goog.dom.asserts.assertIsHTMLLinkElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLLinkElement\")};goog.dom.asserts.assertIsHTMLImageElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLImageElement\")};goog.dom.asserts.assertIsHTMLAudioElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLAudioElement\")};\\ngoog.dom.asserts.assertIsHTMLVideoElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLVideoElement\")};goog.dom.asserts.assertIsHTMLInputElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLInputElement\")};goog.dom.asserts.assertIsHTMLTextAreaElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLTextAreaElement\")};goog.dom.asserts.assertIsHTMLCanvasElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLCanvasElement\")};\\ngoog.dom.asserts.assertIsHTMLEmbedElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLEmbedElement\")};goog.dom.asserts.assertIsHTMLFormElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLFormElement\")};goog.dom.asserts.assertIsHTMLFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLFrameElement\")};goog.dom.asserts.assertIsHTMLIFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLIFrameElement\")};\\ngoog.dom.asserts.assertIsHTMLObjectElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLObjectElement\")};goog.dom.asserts.assertIsHTMLScriptElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLScriptElement\")};\\ngoog.dom.asserts.debugStringForType_=function(a){if(goog.isObject(a))try{return a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a)}catch(b){return\"<object could not be stringified>\"}else return void 0===a?\"undefined\":null===a?\"null\":typeof a};goog.dom.asserts.getWindow_=function(a){try{var b=a&&a.ownerDocument,c=b&&(b.defaultView||b.parentWindow);c=c||goog.global;if(c.Element&&c.Location)return c}catch(d){}return null};goog.functions={};goog.functions.constant=function(a){return function(){return a}};goog.functions.FALSE=function(){return!1};goog.functions.TRUE=function(){return!0};goog.functions.NULL=function(){return null};goog.functions.UNDEFINED=function(){};goog.functions.EMPTY=goog.functions.UNDEFINED;goog.functions.identity=function(a,b){return a};goog.functions.error=function(a){return function(){throw Error(a);}};goog.functions.fail=function(a){return function(){throw a;}};\\ngoog.functions.lock=function(a,b){b=b||0;return function(){return a.apply(this,Array.prototype.slice.call(arguments,0,b))}};goog.functions.nth=function(a){return function(){return arguments[a]}};goog.functions.partialRight=function(a,b){const c=Array.prototype.slice.call(arguments,1);return function(){let d=this;d===goog.global&&(d=void 0);const e=Array.prototype.slice.call(arguments);e.push.apply(e,c);return a.apply(d,e)}};\\ngoog.functions.withReturnValue=function(a,b){return goog.functions.sequence(a,goog.functions.constant(b))};goog.functions.equalTo=function(a,b){return function(c){return b?a==c:a===c}};goog.functions.compose=function(a,b){const c=arguments,d=c.length;return function(){let e;d&&(e=c[d-1].apply(this,arguments));for(let f=d-2;0<=f;f--)e=c[f].call(this,e);return e}};\\ngoog.functions.sequence=function(a){const b=arguments,c=b.length;return function(){let d;for(let e=0;e<c;e++)d=b[e].apply(this,arguments);return d}};goog.functions.and=function(a){const b=arguments,c=b.length;return function(){for(let d=0;d<c;d++)if(!b[d].apply(this,arguments))return!1;return!0}};goog.functions.or=function(a){const b=arguments,c=b.length;return function(){for(let d=0;d<c;d++)if(b[d].apply(this,arguments))return!0;return!1}};\\ngoog.functions.not=function(a){return function(){return!a.apply(this,arguments)}};goog.functions.create=function(a,b){var c=function(){};c.prototype=a.prototype;c=new c;a.apply(c,Array.prototype.slice.call(arguments,1));return c};goog.functions.CACHE_RETURN_VALUE=!0;goog.functions.cacheReturnValue=function(a){let b=!1,c;return function(){if(!goog.functions.CACHE_RETURN_VALUE)return a();b||(c=a(),b=!0);return c}};goog.functions.once=function(a){let b=a;return function(){if(b){const c=b;b=null;c()}}};\\ngoog.functions.debounce=function(a,b,c){let d=0;return function(e){goog.global.clearTimeout(d);const f=arguments;d=goog.global.setTimeout(function(){a.apply(c,f)},b)}};goog.functions.throttle=function(a,b,c){let d=0,e=!1,f=[];const g=function(){d=0;e&&(e=!1,h())},h=function(){d=goog.global.setTimeout(g,b);let k=f;f=[];a.apply(c,k)};return function(k){f=arguments;d?e=!0:h()}};\\ngoog.functions.rateLimit=function(a,b,c){let d=0;const e=function(){d=0};return function(f){d||(d=goog.global.setTimeout(e,b),a.apply(c,arguments))}};goog.functions.isFunction=a=>\"function\"===typeof a;goog.string={};goog.string.TypedString=function(){};goog.string.Const=function(a,b){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_=a===goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_&&b||\"\";this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_};goog.string.Const.prototype.implementsGoogStringTypedString=!0;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};\\ngoog.DEBUG&&(goog.string.Const.prototype.toString=function(){return\"Const{\"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+\"}\"});goog.string.Const.unwrap=function(a){if(a instanceof goog.string.Const&&a.constructor===goog.string.Const&&a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_)return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;goog.asserts.fail(\"expected object of type Const, got \\'\"+a+\"\\'\");return\"type_error:Const\"};\\ngoog.string.Const.from=function(a){return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_,a)};goog.string.Const.TYPE_MARKER_={};goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_={};goog.string.Const.EMPTY=goog.string.Const.from(\"\");goog.html={};goog.html.trustedtypes={};goog.html.trustedtypes.POLICY_NAME=goog.TRUSTED_TYPES_POLICY_NAME?goog.TRUSTED_TYPES_POLICY_NAME+\"#html\":\"\";goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse=function(){if(!goog.html.trustedtypes.POLICY_NAME)return null;void 0===goog.html.trustedtypes.cachedPolicy_&&(goog.html.trustedtypes.cachedPolicy_=goog.createTrustedTypesPolicy(goog.html.trustedtypes.POLICY_NAME));return goog.html.trustedtypes.cachedPolicy_};const module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE={};\\nclass module$contents$goog$html$SafeScript_SafeScript{constructor(a,b){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=b===module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE?a:\"\";this.implementsGoogStringTypedString=!0}toString(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static fromConstant(a){a=goog.string.Const.unwrap(a);return 0===a.length?module$contents$goog$html$SafeScript_SafeScript.EMPTY:module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a)}static fromJson(a){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(module$contents$goog$html$SafeScript_SafeScript.stringify_(a))}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static unwrap(a){return module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(a).toString()}static unwrapTrustedScript(a){if(a instanceof\\nmodule$contents$goog$html$SafeScript_SafeScript&&a.constructor===module$contents$goog$html$SafeScript_SafeScript)return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;(0,goog.asserts.fail)(\"expected object of type SafeScript, got \\'\"+a+\"\\' of type \"+goog.typeOf(a));return\"type_error:SafeScript\"}static stringify_(a){return JSON.stringify(a).replace(/</g,\"\\\\\\\\x3c\")}static createSafeScriptSecurityPrivateDoNotAccessOrElse(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createScript(a):\\na;return new module$contents$goog$html$SafeScript_SafeScript(a,module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE)}}module$contents$goog$html$SafeScript_SafeScript.EMPTY=function(){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(\"\")}();goog.html.SafeScript=module$contents$goog$html$SafeScript_SafeScript;goog.fs={};goog.fs.url={};goog.fs.url.createObjectUrl=function(a){return goog.fs.url.getUrlObject_().createObjectURL(a)};goog.fs.url.revokeObjectUrl=function(a){goog.fs.url.getUrlObject_().revokeObjectURL(a)};goog.fs.url.UrlObject_=function(){};goog.fs.url.UrlObject_.prototype.createObjectURL=function(a){};goog.fs.url.UrlObject_.prototype.revokeObjectURL=function(a){};\\ngoog.fs.url.getUrlObject_=function(){const a=goog.fs.url.findUrlObject_();if(null!=a)return a;throw Error(\"This browser doesn\\'t seem to support blob URLs\");};goog.fs.url.findUrlObject_=function(){return void 0!==goog.global.URL&&void 0!==goog.global.URL.createObjectURL?goog.global.URL:void 0!==goog.global.createObjectURL?goog.global:null};goog.fs.url.browserSupportsObjectUrls=function(){return null!=goog.fs.url.findUrlObject_()};goog.fs.blob={};goog.fs.blob.getBlob=function(a){var b=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(void 0!==b){b=new b;for(let c=0;c<arguments.length;c++)b.append(arguments[c]);return b.getBlob()}return goog.fs.blob.getBlobWithProperties(Array.prototype.slice.call(arguments))};\\ngoog.fs.blob.getBlobWithProperties=function(a,b,c){var d=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(void 0!==d){d=new d;for(let e=0;e<a.length;e++)d.append(a[e],c);return d.getBlob(b)}if(void 0!==goog.global.Blob)return d={},b&&(d.type=b),c&&(d.endings=c),new Blob(a,d);throw Error(\"This browser doesn\\'t seem to support creating Blobs\");};goog.html.TrustedResourceUrl=class{constructor(a,b){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=b===goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_?a:\"\"}toString(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+\"\"}};goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString()};\\ngoog.html.TrustedResourceUrl.prototype.cloneWithParams=function(a,b){var c=goog.html.TrustedResourceUrl.unwrap(this);c=goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c);var d=c[3]||\"\";return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1]+goog.html.TrustedResourceUrl.stringifyParams_(\"?\",c[2]||\"\",a)+goog.html.TrustedResourceUrl.stringifyParams_(\"#\",d,b))};goog.html.TrustedResourceUrl.unwrap=function(a){return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a).toString()};\\ngoog.html.TrustedResourceUrl.unwrapTrustedScriptURL=function(a){if(a instanceof goog.html.TrustedResourceUrl&&a.constructor===goog.html.TrustedResourceUrl)return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;goog.asserts.fail(\"expected object of type TrustedResourceUrl, got \\'\"+a+\"\\' of type \"+goog.typeOf(a));return\"type_error:TrustedResourceUrl\"};\\ngoog.html.TrustedResourceUrl.format=function(a,b){var c=goog.string.Const.unwrap(a);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(c))throw Error(\"Invalid TrustedResourceUrl format: \"+c);a=c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(d,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error(\\'Found marker, \"\\'+e+\\'\", in format string, \"\\'+c+\\'\", but no valid label mapping found in args: \\'+JSON.stringify(b));d=b[e];return d instanceof goog.string.Const?goog.string.Const.unwrap(d):\\nencodeURIComponent(String(d))});return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\\\\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=RegExp(\"^((https:)?//[0-9a-z.:[\\\\\\\\]-]+/|/[^/\\\\\\\\\\\\\\\\]|[^:/\\\\\\\\\\\\\\\\%]+/|[^:/\\\\\\\\\\\\\\\\%]*[?#]|about:blank#)\",\"i\");goog.html.TrustedResourceUrl.URL_PARAM_PARSER_=/^([^?#]*)(\\\\?[^#]*)?(#[\\\\s\\\\S]*)?/;\\ngoog.html.TrustedResourceUrl.formatWithParams=function(a,b,c,d){return goog.html.TrustedResourceUrl.format(a,b).cloneWithParams(c,d)};goog.html.TrustedResourceUrl.fromConstant=function(a){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};goog.html.TrustedResourceUrl.fromConstants=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=goog.string.Const.unwrap(a[c]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};\\ngoog.html.TrustedResourceUrl.fromSafeScript=function(a){a=goog.fs.blob.getBlobWithProperties([module$contents$goog$html$SafeScript_SafeScript.unwrap(a)],\"text/javascript\");a=goog.fs.url.createObjectUrl(a);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};\\ngoog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createScriptURL(a):a;return new goog.html.TrustedResourceUrl(a,goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};\\ngoog.html.TrustedResourceUrl.stringifyParams_=function(a,b,c){if(null==c)return b;if(\"string\"===typeof c)return c?a+encodeURIComponent(c):\"\";for(var d in c)if(Object.prototype.hasOwnProperty.call(c,d)){var e=c[d];e=Array.isArray(e)?e:[e];for(var f=0;f<e.length;f++){var g=e[f];null!=g&&(b||(b=a),b+=(b.length>a.length?\"&\":\"\")+encodeURIComponent(d)+\"=\"+encodeURIComponent(String(g)))}}return b};goog.string.internal={};goog.string.internal.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.internal.endsWith=function(a,b){const c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.internal.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.slice(0,b.length))};goog.string.internal.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.slice(a.length-b.length))};\\ngoog.string.internal.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.internal.isEmptyOrWhitespace=function(a){return/^[\\\\s\\\\xa0]*$/.test(a)};goog.string.internal.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\\\\s\\\\xa0]*([\\\\s\\\\S]*?)[\\\\s\\\\xa0]*$/.exec(a)[1]};goog.string.internal.caseInsensitiveCompare=function(a,b){a=String(a).toLowerCase();b=String(b).toLowerCase();return a<b?-1:a==b?0:1};\\ngoog.string.internal.newLineToBr=function(a,b){return a.replace(/(\\\\r\\\\n|\\\\r|\\\\n)/g,b?\"<br />\":\"<br>\")};\\ngoog.string.internal.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.internal.AMP_RE_,\"&amp;\").replace(goog.string.internal.LT_RE_,\"&lt;\").replace(goog.string.internal.GT_RE_,\"&gt;\").replace(goog.string.internal.QUOT_RE_,\"&quot;\").replace(goog.string.internal.SINGLE_QUOTE_RE_,\"&#39;\").replace(goog.string.internal.NULL_RE_,\"&#0;\");else{if(!goog.string.internal.ALL_RE_.test(a))return a;-1!=a.indexOf(\"&\")&&(a=a.replace(goog.string.internal.AMP_RE_,\"&amp;\"));-1!=a.indexOf(\"<\")&&(a=a.replace(goog.string.internal.LT_RE_,\\n\"&lt;\"));-1!=a.indexOf(\">\")&&(a=a.replace(goog.string.internal.GT_RE_,\"&gt;\"));-1!=a.indexOf(\\'\"\\')&&(a=a.replace(goog.string.internal.QUOT_RE_,\"&quot;\"));-1!=a.indexOf(\"\\'\")&&(a=a.replace(goog.string.internal.SINGLE_QUOTE_RE_,\"&#39;\"));-1!=a.indexOf(\"\\\\x00\")&&(a=a.replace(goog.string.internal.NULL_RE_,\"&#0;\"))}return a};goog.string.internal.AMP_RE_=/&/g;goog.string.internal.LT_RE_=/</g;goog.string.internal.GT_RE_=/>/g;goog.string.internal.QUOT_RE_=/\"/g;goog.string.internal.SINGLE_QUOTE_RE_=/\\'/g;\\ngoog.string.internal.NULL_RE_=/\\\\x00/g;goog.string.internal.ALL_RE_=/[\\\\x00&<>\"\\']/;goog.string.internal.whitespaceEscape=function(a,b){return goog.string.internal.newLineToBr(a.replace(/  /g,\" &#160;\"),b)};goog.string.internal.contains=function(a,b){return-1!=a.indexOf(b)};goog.string.internal.caseInsensitiveContains=function(a,b){return goog.string.internal.contains(a.toLowerCase(),b.toLowerCase())};\\ngoog.string.internal.compareVersions=function(a,b){var c=0;a=goog.string.internal.trim(String(a)).split(\".\");b=goog.string.internal.trim(String(b)).split(\".\");const d=Math.max(a.length,b.length);for(let g=0;0==c&&g<d;g++){var e=a[g]||\"\",f=b[g]||\"\";do{e=/(\\\\d*)(\\\\D*)(.*)/.exec(e)||[\"\",\"\",\"\",\"\"];f=/(\\\\d*)(\\\\D*)(.*)/.exec(f)||[\"\",\"\",\"\",\"\"];if(0==e[0].length&&0==f[0].length)break;c=0==e[1].length?0:parseInt(e[1],10);const h=0==f[1].length?0:parseInt(f[1],10);c=goog.string.internal.compareElements_(c,h)||\\ngoog.string.internal.compareElements_(0==e[2].length,0==f[2].length)||goog.string.internal.compareElements_(e[2],f[2]);e=e[3];f=f[3]}while(0==c)}return c};goog.string.internal.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.html.SafeUrl=class{constructor(a,b){this.privateDoNotAccessOrElseSafeUrlWrappedValue_=b===goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_?a:\"\"}toString(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()}};goog.html.SafeUrl.INNOCUOUS_STRING=\"about:invalid#zClosurez\";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()};\\ngoog.html.SafeUrl.unwrap=function(a){if(a instanceof goog.html.SafeUrl&&a.constructor===goog.html.SafeUrl)return a.privateDoNotAccessOrElseSafeUrlWrappedValue_;goog.asserts.fail(\"expected object of type SafeUrl, got \\'\"+a+\"\\' of type \"+goog.typeOf(a));return\"type_error:SafeUrl\"};goog.html.SafeUrl.fromConstant=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};\\ngoog.html.SAFE_MIME_TYPE_PATTERN_=RegExp(\\'^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font/\\\\\\\\w+|image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon|heic|heif)|video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\\\\\\\\w+=(?:\\\\\\\\w+|\"[\\\\\\\\w;,= ]+\"))*$\\',\"i\");goog.html.SafeUrl.isSafeMimeType=function(a){return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a)};\\ngoog.html.SafeUrl.fromBlob=function(a){a=goog.html.SafeUrl.isSafeMimeType(a.type)?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.revokeObjectUrl=function(a){a=a.getTypedStringValue();a!==goog.html.SafeUrl.INNOCUOUS_STRING&&goog.fs.url.revokeObjectUrl(a)};\\ngoog.html.SafeUrl.fromMediaSource=function(a){goog.asserts.assert(\"MediaSource\"in goog.global,\"No support for MediaSource\");a=a instanceof MediaSource?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.DATA_URL_PATTERN_=/^data:(.*);base64,[a-z0-9+\\\\/]+=*$/i;\\ngoog.html.SafeUrl.tryFromDataUrl=function(a){a=String(a);a=a.replace(/(%0A|%0D)/g,\"\");return a.match(goog.html.DATA_URL_PATTERN_)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a):null};goog.html.SafeUrl.fromDataUrl=function(a){return goog.html.SafeUrl.tryFromDataUrl(a)||goog.html.SafeUrl.INNOCUOUS_URL};goog.html.SafeUrl.fromTelUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"tel:\")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\\ngoog.html.SIP_URL_PATTERN_=RegExp(\"^sip[s]?:[+a-z0-9_.!$%&\\'*\\\\\\\\/=^`{|}~-]+@([a-z0-9-]+\\\\\\\\.)+[a-z0-9]{2,63}$\",\"i\");goog.html.SafeUrl.fromSipUrl=function(a){goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a))||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromFacebookMessengerUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"fb-messenger://share\")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\\ngoog.html.SafeUrl.fromWhatsAppUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"whatsapp://send\")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromSmsUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"sms:\")&&goog.html.SafeUrl.isSmsUrlBodyValid_(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\\ngoog.html.SafeUrl.isSmsUrlBodyValid_=function(a){var b=a.indexOf(\"#\");0<b&&(a=a.substring(0,b));b=a.match(/[?&]body=/gi);if(!b)return!0;if(1<b.length)return!1;a=a.match(/[?&]body=([^&]*)/)[1];if(!a)return!0;try{decodeURIComponent(a)}catch(c){return!1}return/^(?:[a-z0-9\\\\-_.~]|%[0-9a-f]{2})+$/i.test(a)};goog.html.SafeUrl.fromSshUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"ssh://\")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\\ngoog.html.SafeUrl.sanitizeChromeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\\\\/\\\\/([^\\\\/]+)\\\\//,a,b)};goog.html.SafeUrl.sanitizeFirefoxExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\\\\/\\\\/([^\\\\/]+)\\\\//,a,b)};goog.html.SafeUrl.sanitizeEdgeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\\\\/\\\\/([^\\\\/]+)\\\\//,a,b)};\\ngoog.html.SafeUrl.sanitizeExtensionUrl_=function(a,b,c){(a=a.exec(b))?(a=a[1],-1==(c instanceof goog.string.Const?[goog.string.Const.unwrap(c)]:c.map(function(d){return goog.string.Const.unwrap(d)})).indexOf(a)&&(b=goog.html.SafeUrl.INNOCUOUS_STRING)):b=goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};goog.html.SafeUrl.fromTrustedResourceUrl=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a))};\\ngoog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;goog.html.SafeUrl.SAFE_URL_PATTERN=goog.html.SAFE_URL_PATTERN_;goog.html.SafeUrl.trySanitize=function(a){if(a instanceof goog.html.SafeUrl)return a;a=\"object\"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return goog.html.SAFE_URL_PATTERN_.test(a)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a):goog.html.SafeUrl.tryFromDataUrl(a)};\\ngoog.html.SafeUrl.sanitize=function(a){return goog.html.SafeUrl.trySanitize(a)||goog.html.SafeUrl.INNOCUOUS_URL};\\ngoog.html.SafeUrl.sanitizeAssertUnchanged=function(a,b){if(a instanceof goog.html.SafeUrl)return a;a=\"object\"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);if(b&&/^data:/i.test(a)&&(b=goog.html.SafeUrl.fromDataUrl(a),b.getTypedStringValue()==a))return b;goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a),\"%s does not match the safe URL pattern\",a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\\ngoog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(a){return new goog.html.SafeUrl(a,goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};goog.html.SafeUrl.INNOCUOUS_URL=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\"about:blank\");const module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE={};\\nclass module$contents$goog$html$SafeStyle_SafeStyle{constructor(a,b){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=b===module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE?a:\"\";this.implementsGoogStringTypedString=!0}static fromConstant(a){a=goog.string.Const.unwrap(a);if(0===a.length)return module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;(0,goog.asserts.assert)((0,goog.string.internal.endsWith)(a,\";\"),`Last character of style string is not \\';\\': ${a}`);(0,goog.asserts.assert)((0,goog.string.internal.contains)(a,\\n\":\"),\"Style string must contain at least one \\':\\', to specify a \\\\\"name: value\\\\\" pair: \"+a);return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a)}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_}toString(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString()}static unwrap(a){if(a instanceof module$contents$goog$html$SafeStyle_SafeStyle&&a.constructor===module$contents$goog$html$SafeStyle_SafeStyle)return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;\\n(0,goog.asserts.fail)(`expected object of type SafeStyle, got \\'${a}`+\"\\' of type \"+goog.typeOf(a));return\"type_error:SafeStyle\"}static createSafeStyleSecurityPrivateDoNotAccessOrElse(a){return new module$contents$goog$html$SafeStyle_SafeStyle(a,module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE)}static create(a){let b=\"\";for(let c in a)if(Object.prototype.hasOwnProperty.call(a,c)){if(!/^[-_a-zA-Z0-9]+$/.test(c))throw Error(`Name allows only [-_a-zA-Z0-9], got: ${c}`);let d=a[c];null!=d&&\\n(d=Array.isArray(d)?d.map(module$contents$goog$html$SafeStyle_sanitizePropertyValue).join(\" \"):module$contents$goog$html$SafeStyle_sanitizePropertyValue(d),b+=`${c}:${d};`)}return b?module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):module$contents$goog$html$SafeStyle_SafeStyle.EMPTY}static concat(a){let b=\"\";const c=d=>{Array.isArray(d)?d.forEach(c):b+=module$contents$goog$html$SafeStyle_SafeStyle.unwrap(d)};Array.prototype.forEach.call(arguments,c);\\nreturn b?module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):module$contents$goog$html$SafeStyle_SafeStyle.EMPTY}}module$contents$goog$html$SafeStyle_SafeStyle.EMPTY=module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(\"\");module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING=\"zClosurez\";\\nfunction module$contents$goog$html$SafeStyle_sanitizePropertyValue(a){if(a instanceof goog.html.SafeUrl)return\\'url(\"\\'+goog.html.SafeUrl.unwrap(a).replace(/</g,\"%3c\").replace(/[\\\\\\\\\"]/g,\"\\\\\\\\$&\")+\\'\")\\';a=a instanceof goog.string.Const?goog.string.Const.unwrap(a):module$contents$goog$html$SafeStyle_sanitizePropertyValueString(String(a));if(/[{;}]/.test(a))throw new module$contents$goog$asserts_AssertionError(\"Value does not allow [{;}], got: %s.\",[a]);return a}\\nfunction module$contents$goog$html$SafeStyle_sanitizePropertyValueString(a){const b=a.replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE,\"$1\").replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE,\"$1\").replace(module$contents$goog$html$SafeStyle_URL_RE,\"url\");if(module$contents$goog$html$SafeStyle_VALUE_RE.test(b)){if(module$contents$goog$html$SafeStyle_COMMENT_RE.test(a))return(0,goog.asserts.fail)(`String value disallows comments, got: ${a}`),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;\\nif(!module$contents$goog$html$SafeStyle_hasBalancedQuotes(a))return(0,goog.asserts.fail)(`String value requires balanced quotes, got: ${a}`),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;if(!module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a))return(0,goog.asserts.fail)(\"String value requires balanced square brackets and one identifier per pair of brackets, got: \"+a),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING}else return(0,goog.asserts.fail)(`String value allows only ${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}`+\\n\" and simple functions, got: \"+a),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;return module$contents$goog$html$SafeStyle_sanitizeUrl(a)}function module$contents$goog$html$SafeStyle_hasBalancedQuotes(a){let b=!0,c=!0;for(let d=0;d<a.length;d++){const e=a.charAt(d);\"\\'\"==e&&c?b=!b:\\'\"\\'==e&&b&&(c=!c)}return b&&c}\\nfunction module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a){let b=!0;const c=/^[-_a-zA-Z0-9]$/;for(let d=0;d<a.length;d++){const e=a.charAt(d);if(\"]\"==e){if(b)return!1;b=!0}else if(\"[\"==e){if(!b)return!1;b=!1}else if(!b&&!c.test(e))return!1}return b}\\nconst module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS=\"[-,.\\\\\"\\'%_!#/ a-zA-Z0-9\\\\\\\\[\\\\\\\\]]\",module$contents$goog$html$SafeStyle_VALUE_RE=new RegExp(`^${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}+\\\\$`),module$contents$goog$html$SafeStyle_URL_RE=RegExp(\"\\\\\\\\b(url\\\\\\\\([ \\\\t\\\\n]*)(\\'[ -&(-\\\\\\\\[\\\\\\\\]-~]*\\'|\\\\\"[ !#-\\\\\\\\[\\\\\\\\]-~]*\\\\\"|[!#-&*-\\\\\\\\[\\\\\\\\]-~]*)([ \\\\t\\\\n]*\\\\\\\\))\",\"g\"),module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS=\"calc cubic-bezier fit-content hsl hsla linear-gradient matrix minmax radial-gradient repeat rgb rgba (rotate|scale|translate)(X|Y|Z|3d)? steps var\".split(\" \"),\\nmodule$contents$goog$html$SafeStyle_FUNCTIONS_RE=new RegExp(\"\\\\\\\\b(\"+module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS.join(\"|\")+\")\\\\\\\\([-+*/0-9a-zA-Z.%#\\\\\\\\[\\\\\\\\], ]+\\\\\\\\)\",\"g\"),module$contents$goog$html$SafeStyle_COMMENT_RE=/\\\\/\\\\*/;function module$contents$goog$html$SafeStyle_sanitizeUrl(a){return a.replace(module$contents$goog$html$SafeStyle_URL_RE,(b,c,d,e)=>{let f=\"\";d=d.replace(/^([\\'\"])(.*)\\\\1$/,(g,h,k)=>{f=h;return k});b=goog.html.SafeUrl.sanitize(d).getTypedStringValue();return c+f+b+f+e})}\\ngoog.html.SafeStyle=module$contents$goog$html$SafeStyle_SafeStyle;goog.object={};function module$contents$goog$object_forEach(a,b,c){for(const d in a)b.call(c,a[d],d,a)}function module$contents$goog$object_filter(a,b,c){const d={};for(const e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d}function module$contents$goog$object_map(a,b,c){const d={};for(const e in a)d[e]=b.call(c,a[e],e,a);return d}function module$contents$goog$object_some(a,b,c){for(const d in a)if(b.call(c,a[d],d,a))return!0;return!1}\\nfunction module$contents$goog$object_every(a,b,c){for(const d in a)if(!b.call(c,a[d],d,a))return!1;return!0}function module$contents$goog$object_getCount(a){let b=0;for(const c in a)b++;return b}function module$contents$goog$object_getAnyKey(a){for(const b in a)return b}function module$contents$goog$object_getAnyValue(a){for(const b in a)return a[b]}function module$contents$goog$object_contains(a,b){return module$contents$goog$object_containsValue(a,b)}\\nfunction module$contents$goog$object_getValues(a){const b=[];let c=0;for(const d in a)b[c++]=a[d];return b}function module$contents$goog$object_getKeys(a){const b=[];let c=0;for(const d in a)b[c++]=d;return b}function module$contents$goog$object_getValueByKeys(a,b){var c=goog.isArrayLike(b);const d=c?b:arguments;for(c=c?0:1;c<d.length;c++){if(null==a)return;a=a[d[c]]}return a}function module$contents$goog$object_containsKey(a,b){return null!==a&&b in a}\\nfunction module$contents$goog$object_containsValue(a,b){for(const c in a)if(a[c]==b)return!0;return!1}function module$contents$goog$object_findKey(a,b,c){for(const d in a)if(b.call(c,a[d],d,a))return d}function module$contents$goog$object_findValue(a,b,c){return(b=module$contents$goog$object_findKey(a,b,c))&&a[b]}function module$contents$goog$object_isEmpty(a){for(const b in a)return!1;return!0}function module$contents$goog$object_clear(a){for(const b in a)delete a[b]}\\nfunction module$contents$goog$object_remove(a,b){let c;(c=b in a)&&delete a[b];return c}function module$contents$goog$object_add(a,b,c){if(null!==a&&b in a)throw Error(`The object already contains the key \"${b}\"`);module$contents$goog$object_set(a,b,c)}function module$contents$goog$object_get(a,b,c){return null!==a&&b in a?a[b]:c}function module$contents$goog$object_set(a,b,c){a[b]=c}function module$contents$goog$object_setIfUndefined(a,b,c){return b in a?a[b]:a[b]=c}\\nfunction module$contents$goog$object_setWithReturnValueIfNotSet(a,b,c){if(b in a)return a[b];c=c();return a[b]=c}function module$contents$goog$object_equals(a,b){for(const c in a)if(!(c in b)||a[c]!==b[c])return!1;for(const c in b)if(!(c in a))return!1;return!0}function module$contents$goog$object_clone(a){const b={};for(const c in a)b[c]=a[c];return b}\\nfunction module$contents$goog$object_unsafeClone(a){if(!a||\"object\"!==typeof a)return a;if(\"function\"===typeof a.clone)return a.clone();if(\"undefined\"!==typeof Map&&a instanceof Map)return new Map(a);if(\"undefined\"!==typeof Set&&a instanceof Set)return new Set(a);if(a instanceof Date)return new Date(a.getTime());const b=Array.isArray(a)?[]:\"function\"!==typeof ArrayBuffer||\"function\"!==typeof ArrayBuffer.isView||!ArrayBuffer.isView(a)||a instanceof DataView?{}:new a.constructor(a.length);for(const c in a)b[c]=\\nmodule$contents$goog$object_unsafeClone(a[c]);return b}function module$contents$goog$object_transpose(a){const b={};for(const c in a)b[a[c]]=c;return b}const module$contents$goog$object_PROTOTYPE_FIELDS=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\\nfunction module$contents$goog$object_extend(a,b){let c,d;for(let e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(let f=0;f<module$contents$goog$object_PROTOTYPE_FIELDS.length;f++)c=module$contents$goog$object_PROTOTYPE_FIELDS[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}}\\nfunction module$contents$goog$object_create(a){const b=arguments.length;if(1==b&&Array.isArray(arguments[0]))return module$contents$goog$object_create.apply(null,arguments[0]);if(b%2)throw Error(\"Uneven number of arguments\");const c={};for(let d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c}\\nfunction module$contents$goog$object_createSet(a){const b=arguments.length;if(1==b&&Array.isArray(arguments[0]))return module$contents$goog$object_createSet.apply(null,arguments[0]);const c={};for(let d=0;d<b;d++)c[arguments[d]]=!0;return c}function module$contents$goog$object_createImmutableView(a){let b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b}function module$contents$goog$object_isImmutableView(a){return!!Object.isFrozen&&Object.isFrozen(a)}\\nfunction module$contents$goog$object_getAllPropertyNames(a,b,c){if(!a)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return module$contents$goog$object_getKeys(a);const d={};for(;a&&(a!==Object.prototype||b)&&(a!==Function.prototype||c);){const e=Object.getOwnPropertyNames(a);for(let f=0;f<e.length;f++)d[e[f]]=!0;a=Object.getPrototypeOf(a)}return module$contents$goog$object_getKeys(d)}\\nfunction module$contents$goog$object_getSuperClass(a){return(a=Object.getPrototypeOf(a.prototype))&&a.constructor}goog.object.add=module$contents$goog$object_add;goog.object.clear=module$contents$goog$object_clear;goog.object.clone=module$contents$goog$object_clone;goog.object.contains=module$contents$goog$object_contains;goog.object.containsKey=module$contents$goog$object_containsKey;goog.object.containsValue=module$contents$goog$object_containsValue;goog.object.create=module$contents$goog$object_create;\\ngoog.object.createImmutableView=module$contents$goog$object_createImmutableView;goog.object.createSet=module$contents$goog$object_createSet;goog.object.equals=module$contents$goog$object_equals;goog.object.every=module$contents$goog$object_every;goog.object.extend=module$contents$goog$object_extend;goog.object.filter=module$contents$goog$object_filter;goog.object.findKey=module$contents$goog$object_findKey;goog.object.findValue=module$contents$goog$object_findValue;goog.object.forEach=module$contents$goog$object_forEach;\\ngoog.object.get=module$contents$goog$object_get;goog.object.getAllPropertyNames=module$contents$goog$object_getAllPropertyNames;goog.object.getAnyKey=module$contents$goog$object_getAnyKey;goog.object.getAnyValue=module$contents$goog$object_getAnyValue;goog.object.getCount=module$contents$goog$object_getCount;goog.object.getKeys=module$contents$goog$object_getKeys;goog.object.getSuperClass=module$contents$goog$object_getSuperClass;goog.object.getValueByKeys=module$contents$goog$object_getValueByKeys;\\ngoog.object.getValues=module$contents$goog$object_getValues;goog.object.isEmpty=module$contents$goog$object_isEmpty;goog.object.isImmutableView=module$contents$goog$object_isImmutableView;goog.object.map=module$contents$goog$object_map;goog.object.remove=module$contents$goog$object_remove;goog.object.set=module$contents$goog$object_set;goog.object.setIfUndefined=module$contents$goog$object_setIfUndefined;goog.object.setWithReturnValueIfNotSet=module$contents$goog$object_setWithReturnValueIfNotSet;\\ngoog.object.some=module$contents$goog$object_some;goog.object.transpose=module$contents$goog$object_transpose;goog.object.unsafeClone=module$contents$goog$object_unsafeClone;const module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE={};\\nclass module$contents$goog$html$SafeStyleSheet_SafeStyleSheet{constructor(a,b){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=b===module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE?a:\"\";this.implementsGoogStringTypedString=!0}toString(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString()}static createRule(a,b){if((0,goog.string.internal.contains)(a,\"<\"))throw Error(`Selector does not allow \\'<\\', got: ${a}`);const c=a.replace(/(\\'|\")((?!\\\\1)[^\\\\r\\\\n\\\\f\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*\\\\1/g,\\n\"\");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\\\\]()=^$|]+$/.test(c))throw Error(\"Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\\\\\\\]()=^$|] and strings, got: \"+a);if(!module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.hasBalancedBrackets_(c))throw Error(\"() and [] in selector must be balanced, got: \"+a);b instanceof module$contents$goog$html$SafeStyle_SafeStyle||(b=module$contents$goog$html$SafeStyle_SafeStyle.create(b));a=`${a}{`+module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b).replace(/</g,\"\\\\\\\\3C \")+\"}\";\\nreturn module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)}static hasBalancedBrackets_(a){const b={\"(\":\")\",\"[\":\"]\"},c=[];for(let d=0;d<a.length;d++){const e=a[d];if(b[e])c.push(b[e]);else if(module$contents$goog$object_contains(b,e)&&c.pop()!=e)return!1}return 0==c.length}static concat(a){let b=\"\";const c=d=>{Array.isArray(d)?d.forEach(c):b+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(d)};Array.prototype.forEach.call(arguments,\\nc);return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)}static fromConstant(a){a=goog.string.Const.unwrap(a);if(0===a.length)return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY;(0,goog.asserts.assert)(!(0,goog.string.internal.contains)(a,\"<\"),`Forbidden \\'<\\' character in style sheet string: ${a}`);return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_}static unwrap(a){if(a instanceof\\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet&&a.constructor===module$contents$goog$html$SafeStyleSheet_SafeStyleSheet)return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;(0,goog.asserts.fail)(\"expected object of type SafeStyleSheet, got \\'\"+a+\"\\' of type \"+goog.typeOf(a));return\"type_error:SafeStyleSheet\"}static createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a){return new module$contents$goog$html$SafeStyleSheet_SafeStyleSheet(a,module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE)}}\\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(\"\");goog.html.SafeStyleSheet=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet;goog.dom.HtmlElement=function(){};goog.dom.TagName=class{static cast(a,b){return a}constructor(){}toString(){}};goog.dom.TagName.A=\"A\";goog.dom.TagName.ABBR=\"ABBR\";goog.dom.TagName.ACRONYM=\"ACRONYM\";goog.dom.TagName.ADDRESS=\"ADDRESS\";goog.dom.TagName.APPLET=\"APPLET\";goog.dom.TagName.AREA=\"AREA\";goog.dom.TagName.ARTICLE=\"ARTICLE\";goog.dom.TagName.ASIDE=\"ASIDE\";goog.dom.TagName.AUDIO=\"AUDIO\";goog.dom.TagName.B=\"B\";goog.dom.TagName.BASE=\"BASE\";goog.dom.TagName.BASEFONT=\"BASEFONT\";goog.dom.TagName.BDI=\"BDI\";goog.dom.TagName.BDO=\"BDO\";\\ngoog.dom.TagName.BIG=\"BIG\";goog.dom.TagName.BLOCKQUOTE=\"BLOCKQUOTE\";goog.dom.TagName.BODY=\"BODY\";goog.dom.TagName.BR=\"BR\";goog.dom.TagName.BUTTON=\"BUTTON\";goog.dom.TagName.CANVAS=\"CANVAS\";goog.dom.TagName.CAPTION=\"CAPTION\";goog.dom.TagName.CENTER=\"CENTER\";goog.dom.TagName.CITE=\"CITE\";goog.dom.TagName.CODE=\"CODE\";goog.dom.TagName.COL=\"COL\";goog.dom.TagName.COLGROUP=\"COLGROUP\";goog.dom.TagName.COMMAND=\"COMMAND\";goog.dom.TagName.DATA=\"DATA\";goog.dom.TagName.DATALIST=\"DATALIST\";goog.dom.TagName.DD=\"DD\";\\ngoog.dom.TagName.DEL=\"DEL\";goog.dom.TagName.DETAILS=\"DETAILS\";goog.dom.TagName.DFN=\"DFN\";goog.dom.TagName.DIALOG=\"DIALOG\";goog.dom.TagName.DIR=\"DIR\";goog.dom.TagName.DIV=\"DIV\";goog.dom.TagName.DL=\"DL\";goog.dom.TagName.DT=\"DT\";goog.dom.TagName.EM=\"EM\";goog.dom.TagName.EMBED=\"EMBED\";goog.dom.TagName.FIELDSET=\"FIELDSET\";goog.dom.TagName.FIGCAPTION=\"FIGCAPTION\";goog.dom.TagName.FIGURE=\"FIGURE\";goog.dom.TagName.FONT=\"FONT\";goog.dom.TagName.FOOTER=\"FOOTER\";goog.dom.TagName.FORM=\"FORM\";\\ngoog.dom.TagName.FRAME=\"FRAME\";goog.dom.TagName.FRAMESET=\"FRAMESET\";goog.dom.TagName.H1=\"H1\";goog.dom.TagName.H2=\"H2\";goog.dom.TagName.H3=\"H3\";goog.dom.TagName.H4=\"H4\";goog.dom.TagName.H5=\"H5\";goog.dom.TagName.H6=\"H6\";goog.dom.TagName.HEAD=\"HEAD\";goog.dom.TagName.HEADER=\"HEADER\";goog.dom.TagName.HGROUP=\"HGROUP\";goog.dom.TagName.HR=\"HR\";goog.dom.TagName.HTML=\"HTML\";goog.dom.TagName.I=\"I\";goog.dom.TagName.IFRAME=\"IFRAME\";goog.dom.TagName.IMG=\"IMG\";goog.dom.TagName.INPUT=\"INPUT\";\\ngoog.dom.TagName.INS=\"INS\";goog.dom.TagName.ISINDEX=\"ISINDEX\";goog.dom.TagName.KBD=\"KBD\";goog.dom.TagName.KEYGEN=\"KEYGEN\";goog.dom.TagName.LABEL=\"LABEL\";goog.dom.TagName.LEGEND=\"LEGEND\";goog.dom.TagName.LI=\"LI\";goog.dom.TagName.LINK=\"LINK\";goog.dom.TagName.MAIN=\"MAIN\";goog.dom.TagName.MAP=\"MAP\";goog.dom.TagName.MARK=\"MARK\";goog.dom.TagName.MATH=\"MATH\";goog.dom.TagName.MENU=\"MENU\";goog.dom.TagName.MENUITEM=\"MENUITEM\";goog.dom.TagName.META=\"META\";goog.dom.TagName.METER=\"METER\";\\ngoog.dom.TagName.NAV=\"NAV\";goog.dom.TagName.NOFRAMES=\"NOFRAMES\";goog.dom.TagName.NOSCRIPT=\"NOSCRIPT\";goog.dom.TagName.OBJECT=\"OBJECT\";goog.dom.TagName.OL=\"OL\";goog.dom.TagName.OPTGROUP=\"OPTGROUP\";goog.dom.TagName.OPTION=\"OPTION\";goog.dom.TagName.OUTPUT=\"OUTPUT\";goog.dom.TagName.P=\"P\";goog.dom.TagName.PARAM=\"PARAM\";goog.dom.TagName.PICTURE=\"PICTURE\";goog.dom.TagName.PRE=\"PRE\";goog.dom.TagName.PROGRESS=\"PROGRESS\";goog.dom.TagName.Q=\"Q\";goog.dom.TagName.RP=\"RP\";goog.dom.TagName.RT=\"RT\";\\ngoog.dom.TagName.RTC=\"RTC\";goog.dom.TagName.RUBY=\"RUBY\";goog.dom.TagName.S=\"S\";goog.dom.TagName.SAMP=\"SAMP\";goog.dom.TagName.SCRIPT=\"SCRIPT\";goog.dom.TagName.SECTION=\"SECTION\";goog.dom.TagName.SELECT=\"SELECT\";goog.dom.TagName.SMALL=\"SMALL\";goog.dom.TagName.SOURCE=\"SOURCE\";goog.dom.TagName.SPAN=\"SPAN\";goog.dom.TagName.STRIKE=\"STRIKE\";goog.dom.TagName.STRONG=\"STRONG\";goog.dom.TagName.STYLE=\"STYLE\";goog.dom.TagName.SUB=\"SUB\";goog.dom.TagName.SUMMARY=\"SUMMARY\";goog.dom.TagName.SUP=\"SUP\";\\ngoog.dom.TagName.SVG=\"SVG\";goog.dom.TagName.TABLE=\"TABLE\";goog.dom.TagName.TBODY=\"TBODY\";goog.dom.TagName.TD=\"TD\";goog.dom.TagName.TEMPLATE=\"TEMPLATE\";goog.dom.TagName.TEXTAREA=\"TEXTAREA\";goog.dom.TagName.TFOOT=\"TFOOT\";goog.dom.TagName.TH=\"TH\";goog.dom.TagName.THEAD=\"THEAD\";goog.dom.TagName.TIME=\"TIME\";goog.dom.TagName.TITLE=\"TITLE\";goog.dom.TagName.TR=\"TR\";goog.dom.TagName.TRACK=\"TRACK\";goog.dom.TagName.TT=\"TT\";goog.dom.TagName.U=\"U\";goog.dom.TagName.UL=\"UL\";goog.dom.TagName.VAR=\"VAR\";\\ngoog.dom.TagName.VIDEO=\"VIDEO\";goog.dom.TagName.WBR=\"WBR\";goog.labs={};goog.labs.userAgent={};const module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE=\"\",module$contents$goog$labs$userAgent_USE_CLIENT_HINTS=!1;let module$contents$goog$labs$userAgent_forceClientHintsInTests=!1;goog.labs.userAgent.setUseClientHintsForTesting=a=>{module$contents$goog$labs$userAgent_forceClientHintsInTests=a};\\nconst module$contents$goog$labs$userAgent_useClientHintsRuntimeOverride=module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE?!!goog.getObjectByName(module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE):!1;goog.labs.userAgent.useClientHints=()=>module$contents$goog$labs$userAgent_USE_CLIENT_HINTS||module$contents$goog$labs$userAgent_useClientHintsRuntimeOverride||module$contents$goog$labs$userAgent_forceClientHintsInTests;goog.labs.userAgent.util={};const module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT=!1;function module$contents$goog$labs$userAgent$util_getNativeUserAgentString(){var a=module$contents$goog$labs$userAgent$util_getNavigator();return a&&(a=a.userAgent)?a:\"\"}function module$contents$goog$labs$userAgent$util_getNativeUserAgentData(){const a=module$contents$goog$labs$userAgent$util_getNavigator();return a?a.userAgentData||null:null}\\nfunction module$contents$goog$labs$userAgent$util_getNavigator(){return goog.global.navigator}let module$contents$goog$labs$userAgent$util_userAgentInternal=null,module$contents$goog$labs$userAgent$util_userAgentDataInternal=module$contents$goog$labs$userAgent$util_getNativeUserAgentData();\\nfunction module$contents$goog$labs$userAgent$util_setUserAgent(a){module$contents$goog$labs$userAgent$util_userAgentInternal=\"string\"===typeof a?a:module$contents$goog$labs$userAgent$util_getNativeUserAgentString()}function module$contents$goog$labs$userAgent$util_getUserAgent(){return null==module$contents$goog$labs$userAgent$util_userAgentInternal?module$contents$goog$labs$userAgent$util_getNativeUserAgentString():module$contents$goog$labs$userAgent$util_userAgentInternal}\\nfunction module$contents$goog$labs$userAgent$util_setUserAgentData(a){module$contents$goog$labs$userAgent$util_userAgentDataInternal=a}function module$contents$goog$labs$userAgent$util_resetUserAgentData(){module$contents$goog$labs$userAgent$util_userAgentDataInternal=module$contents$goog$labs$userAgent$util_getNativeUserAgentData()}function module$contents$goog$labs$userAgent$util_getUserAgentData(){return module$contents$goog$labs$userAgent$util_userAgentDataInternal}\\nfunction module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(a){if(!(0,goog.labs.userAgent.useClientHints)())return!1;const b=module$contents$goog$labs$userAgent$util_getUserAgentData();return b?b.brands.some(({brand:c})=>c&&(0,goog.string.internal.contains)(c,a)):!1}function module$contents$goog$labs$userAgent$util_matchUserAgent(a){const b=module$contents$goog$labs$userAgent$util_getUserAgent();return(0,goog.string.internal.contains)(b,a)}\\nfunction module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase(a){const b=module$contents$goog$labs$userAgent$util_getUserAgent();return(0,goog.string.internal.caseInsensitiveContains)(b,a)}function module$contents$goog$labs$userAgent$util_extractVersionTuples(a){const b=RegExp(\"([A-Z][\\\\\\\\w ]+)/([^\\\\\\\\s]+)\\\\\\\\s*(?:\\\\\\\\((.*?)\\\\\\\\))?\",\"g\"),c=[];let d;for(;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c}goog.labs.userAgent.util.ASSUME_CLIENT_HINTS_SUPPORT=module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT;\\ngoog.labs.userAgent.util.extractVersionTuples=module$contents$goog$labs$userAgent$util_extractVersionTuples;goog.labs.userAgent.util.getNativeUserAgentString=module$contents$goog$labs$userAgent$util_getNativeUserAgentString;goog.labs.userAgent.util.getUserAgent=module$contents$goog$labs$userAgent$util_getUserAgent;goog.labs.userAgent.util.getUserAgentData=module$contents$goog$labs$userAgent$util_getUserAgentData;goog.labs.userAgent.util.matchUserAgent=module$contents$goog$labs$userAgent$util_matchUserAgent;\\ngoog.labs.userAgent.util.matchUserAgentDataBrand=module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand;goog.labs.userAgent.util.matchUserAgentIgnoreCase=module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase;goog.labs.userAgent.util.resetUserAgentData=module$contents$goog$labs$userAgent$util_resetUserAgentData;goog.labs.userAgent.util.setUserAgent=module$contents$goog$labs$userAgent$util_setUserAgent;goog.labs.userAgent.util.setUserAgentData=module$contents$goog$labs$userAgent$util_setUserAgentData;var module$exports$goog$labs$userAgent$highEntropy$highEntropyValue={AsyncValue:class{getIfLoaded(){}load(){}},HighEntropyValue:class{constructor(a){this.key_=a;this.promise_=this.value_=void 0;this.pending_=!1}getIfLoaded(){if(module$contents$goog$labs$userAgent$util_getUserAgentData())return this.value_}async load(){const a=module$contents$goog$labs$userAgent$util_getUserAgentData();if(a)return this.promise_||(this.pending_=!0,this.promise_=(async()=>{try{return this.value_=(await a.getHighEntropyValues([this.key_]))[this.key_]}finally{this.pending_=\\n!1}})()),await this.promise_}resetForTesting(){if(this.pending_)throw Error(\"Unsafe call to resetForTesting\");this.value_=this.promise_=void 0;this.pending_=!1}},Version:class{constructor(a){this.versionString_=a}toVersionStringForLogging(){return this.versionString_}isAtLeast(a){return 0<=(0,goog.string.internal.compareVersions)(this.versionString_,a)}}};var module$exports$goog$labs$userAgent$highEntropy$highEntropyData={};module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue(\"fullVersionList\");module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue(\"platformVersion\");goog.labs.userAgent.browser={};const module$contents$goog$labs$userAgent$browser_Brand={ANDROID_BROWSER:\"Android Browser\",CHROMIUM:\"Chromium\",EDGE:\"Microsoft Edge\",FIREFOX:\"Firefox\",IE:\"Internet Explorer\",OPERA:\"Opera\",SAFARI:\"Safari\",SILK:\"Silk\"};goog.labs.userAgent.browser.Brand=module$contents$goog$labs$userAgent$browser_Brand;\\nfunction module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(a=!1){if(module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT)return!0;if(!a&&!(0,goog.labs.userAgent.useClientHints)())return!1;a=module$contents$goog$labs$userAgent$util_getUserAgentData();return!!a&&0<a.brands.length}\\nfunction module$contents$goog$labs$userAgent$browser_hasFullVersionList(){return module$contents$goog$labs$userAgent$browser_isAtLeast(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM,98)}function module$contents$goog$labs$userAgent$browser_matchOpera(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent(\"Opera\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchIE(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent(\"Trident\")||module$contents$goog$labs$userAgent$util_matchUserAgent(\"MSIE\")}function module$contents$goog$labs$userAgent$browser_matchEdgeHtml(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent(\"Edge\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchEdgeChromium(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.EDGE):module$contents$goog$labs$userAgent$util_matchUserAgent(\"Edg/\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchOperaChromium(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.OPERA):module$contents$goog$labs$userAgent$util_matchUserAgent(\"OPR\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchFirefox(){return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Firefox\")||module$contents$goog$labs$userAgent$util_matchUserAgent(\"FxiOS\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchSafari(){return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Safari\")&&!(module$contents$goog$labs$userAgent$browser_matchChrome()||module$contents$goog$labs$userAgent$browser_matchCoast()||module$contents$goog$labs$userAgent$browser_matchOpera()||module$contents$goog$labs$userAgent$browser_matchEdgeHtml()||module$contents$goog$labs$userAgent$browser_matchEdgeChromium()||module$contents$goog$labs$userAgent$browser_matchOperaChromium()||\\nmodule$contents$goog$labs$userAgent$browser_matchFirefox()||module$contents$goog$labs$userAgent$browser_isSilk()||module$contents$goog$labs$userAgent$util_matchUserAgent(\"Android\"))}function module$contents$goog$labs$userAgent$browser_matchCoast(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent(\"Coast\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchIosWebview(){return(module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPad\")||module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPhone\"))&&!module$contents$goog$labs$userAgent$browser_matchSafari()&&!module$contents$goog$labs$userAgent$browser_matchChrome()&&!module$contents$goog$labs$userAgent$browser_matchCoast()&&!module$contents$goog$labs$userAgent$browser_matchFirefox()&&module$contents$goog$labs$userAgent$util_matchUserAgent(\"AppleWebKit\")}\\nfunction module$contents$goog$labs$userAgent$browser_matchChrome(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM):(module$contents$goog$labs$userAgent$util_matchUserAgent(\"Chrome\")||module$contents$goog$labs$userAgent$util_matchUserAgent(\"CriOS\"))&&!module$contents$goog$labs$userAgent$browser_matchEdgeHtml()||module$contents$goog$labs$userAgent$browser_isSilk()}\\nfunction module$contents$goog$labs$userAgent$browser_matchAndroidBrowser(){return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Android\")&&!(module$contents$goog$labs$userAgent$browser_matchChrome()||module$contents$goog$labs$userAgent$browser_matchFirefox()||module$contents$goog$labs$userAgent$browser_matchOpera()||module$contents$goog$labs$userAgent$browser_isSilk())}const module$contents$goog$labs$userAgent$browser_isOpera=module$contents$goog$labs$userAgent$browser_matchOpera;\\ngoog.labs.userAgent.browser.isOpera=module$contents$goog$labs$userAgent$browser_matchOpera;const module$contents$goog$labs$userAgent$browser_isIE=module$contents$goog$labs$userAgent$browser_matchIE;goog.labs.userAgent.browser.isIE=module$contents$goog$labs$userAgent$browser_matchIE;const module$contents$goog$labs$userAgent$browser_isEdge=module$contents$goog$labs$userAgent$browser_matchEdgeHtml;goog.labs.userAgent.browser.isEdge=module$contents$goog$labs$userAgent$browser_matchEdgeHtml;\\nconst module$contents$goog$labs$userAgent$browser_isEdgeChromium=module$contents$goog$labs$userAgent$browser_matchEdgeChromium;goog.labs.userAgent.browser.isEdgeChromium=module$contents$goog$labs$userAgent$browser_matchEdgeChromium;const module$contents$goog$labs$userAgent$browser_isOperaChromium=module$contents$goog$labs$userAgent$browser_matchOperaChromium;goog.labs.userAgent.browser.isOperaChromium=module$contents$goog$labs$userAgent$browser_matchOperaChromium;\\nconst module$contents$goog$labs$userAgent$browser_isFirefox=module$contents$goog$labs$userAgent$browser_matchFirefox;goog.labs.userAgent.browser.isFirefox=module$contents$goog$labs$userAgent$browser_matchFirefox;const module$contents$goog$labs$userAgent$browser_isSafari=module$contents$goog$labs$userAgent$browser_matchSafari;goog.labs.userAgent.browser.isSafari=module$contents$goog$labs$userAgent$browser_matchSafari;const module$contents$goog$labs$userAgent$browser_isCoast=module$contents$goog$labs$userAgent$browser_matchCoast;\\ngoog.labs.userAgent.browser.isCoast=module$contents$goog$labs$userAgent$browser_matchCoast;const module$contents$goog$labs$userAgent$browser_isIosWebview=module$contents$goog$labs$userAgent$browser_matchIosWebview;goog.labs.userAgent.browser.isIosWebview=module$contents$goog$labs$userAgent$browser_matchIosWebview;const module$contents$goog$labs$userAgent$browser_isChrome=module$contents$goog$labs$userAgent$browser_matchChrome;goog.labs.userAgent.browser.isChrome=module$contents$goog$labs$userAgent$browser_matchChrome;\\nconst module$contents$goog$labs$userAgent$browser_isAndroidBrowser=module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;goog.labs.userAgent.browser.isAndroidBrowser=module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;function module$contents$goog$labs$userAgent$browser_isSilk(){return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Silk\")}goog.labs.userAgent.browser.isSilk=module$contents$goog$labs$userAgent$browser_isSilk;\\nfunction module$contents$goog$labs$userAgent$browser_createVersionMap(a){const b={};a.forEach(c=>{b[c[0]]=c[1]});return c=>b[c.find(d=>d in b)]||\"\"}\\nfunction module$contents$goog$labs$userAgent$browser_getVersion(){var a=module$contents$goog$labs$userAgent$util_getUserAgent();if(module$contents$goog$labs$userAgent$browser_matchIE())return module$contents$goog$labs$userAgent$browser_getIEVersion(a);a=module$contents$goog$labs$userAgent$util_extractVersionTuples(a);const b=module$contents$goog$labs$userAgent$browser_createVersionMap(a);return module$contents$goog$labs$userAgent$browser_matchOpera()?b([\"Version\",\"Opera\"]):module$contents$goog$labs$userAgent$browser_matchEdgeHtml()?\\nb([\"Edge\"]):module$contents$goog$labs$userAgent$browser_matchEdgeChromium()?b([\"Edg\"]):module$contents$goog$labs$userAgent$browser_isSilk()?b([\"Silk\"]):module$contents$goog$labs$userAgent$browser_matchChrome()?b([\"Chrome\",\"CriOS\",\"HeadlessChrome\"]):(a=a[2])&&a[1]||\"\"}goog.labs.userAgent.browser.getVersion=module$contents$goog$labs$userAgent$browser_getVersion;\\nfunction module$contents$goog$labs$userAgent$browser_isVersionOrHigher(a){return 0<=(0,goog.string.internal.compareVersions)(module$contents$goog$labs$userAgent$browser_getVersion(),a)}goog.labs.userAgent.browser.isVersionOrHigher=module$contents$goog$labs$userAgent$browser_isVersionOrHigher;\\nfunction module$contents$goog$labs$userAgent$browser_getIEVersion(a){var b=/rv: *([\\\\d\\\\.]*)/.exec(a);if(b&&b[1])return b[1];b=\"\";const c=/MSIE +([\\\\d\\\\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\\\\/(\\\\d.\\\\d)/.exec(a),\"7.0\"==c[1])if(a&&a[1])switch(a[1]){case \"4.0\":b=\"8.0\";break;case \"5.0\":b=\"9.0\";break;case \"6.0\":b=\"10.0\";break;case \"7.0\":b=\"11.0\"}else b=\"7.0\";else b=c[1];return b}\\nfunction module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a){var b=module$contents$goog$labs$userAgent$util_getUserAgent();if(a===module$contents$goog$labs$userAgent$browser_Brand.IE)return module$contents$goog$labs$userAgent$browser_matchIE()?module$contents$goog$labs$userAgent$browser_getIEVersion(b):\"\";b=module$contents$goog$labs$userAgent$util_extractVersionTuples(b);const c=module$contents$goog$labs$userAgent$browser_createVersionMap(b);switch(a){case module$contents$goog$labs$userAgent$browser_Brand.OPERA:if(module$contents$goog$labs$userAgent$browser_matchOpera())return c([\"Version\",\\n\"Opera\"]);if(module$contents$goog$labs$userAgent$browser_matchOperaChromium())return c([\"OPR\"]);break;case module$contents$goog$labs$userAgent$browser_Brand.EDGE:if(module$contents$goog$labs$userAgent$browser_matchEdgeHtml())return c([\"Edge\"]);if(module$contents$goog$labs$userAgent$browser_matchEdgeChromium())return c([\"Edg\"]);break;case module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM:if(module$contents$goog$labs$userAgent$browser_matchChrome())return c([\"Chrome\",\"CriOS\",\"HeadlessChrome\"])}return a===\\nmodule$contents$goog$labs$userAgent$browser_Brand.FIREFOX&&module$contents$goog$labs$userAgent$browser_matchFirefox()||a===module$contents$goog$labs$userAgent$browser_Brand.SAFARI&&module$contents$goog$labs$userAgent$browser_matchSafari()||a===module$contents$goog$labs$userAgent$browser_Brand.ANDROID_BROWSER&&module$contents$goog$labs$userAgent$browser_matchAndroidBrowser()||a===module$contents$goog$labs$userAgent$browser_Brand.SILK&&module$contents$goog$labs$userAgent$browser_isSilk()?(a=b[2])&&\\na[1]||\"\":\"\"}\\nfunction module$contents$goog$labs$userAgent$browser_versionOf_(a){if(module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()&&a!==module$contents$goog$labs$userAgent$browser_Brand.SILK){var b=module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:c})=>c===a);if(!b||!b.version)return NaN;b=b.version.split(\".\")}else{b=module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a);if(\"\"===b)return NaN;b=b.split(\".\")}return 0===b.length?NaN:Number(b[0])}\\nfunction module$contents$goog$labs$userAgent$browser_isAtLeast(a,b){(0,goog.asserts.assert)(Math.floor(b)===b,\"Major version must be an integer\");return module$contents$goog$labs$userAgent$browser_versionOf_(a)>=b}goog.labs.userAgent.browser.isAtLeast=module$contents$goog$labs$userAgent$browser_isAtLeast;\\nfunction module$contents$goog$labs$userAgent$browser_isAtMost(a,b){(0,goog.asserts.assert)(Math.floor(b)===b,\"Major version must be an integer\");return module$contents$goog$labs$userAgent$browser_versionOf_(a)<=b}goog.labs.userAgent.browser.isAtMost=module$contents$goog$labs$userAgent$browser_isAtMost;\\nclass module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion{constructor(a,b,c){this.brand_=a;this.version_=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(c);this.useUach_=b}getIfLoaded(){if(this.useUach_){var a=module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.getIfLoaded();if(void 0!==a)return a=a.find(({brand:b})=>this.brand_===b),(0,goog.asserts.assertExists)(a),new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(a.version)}if(module$contents$goog$labs$userAgent$browser_preUachHasLoaded)return this.version_}async load(){if(this.useUach_){var a=\\nawait module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load();if(void 0!==a)return a=a.find(({brand:b})=>this.brand_===b),(0,goog.asserts.assertExists)(a),new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(a.version)}else await 0;module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!0;return this.version_}}let module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!1;\\nasync function module$contents$goog$labs$userAgent$browser_loadFullVersions(){module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0)&&await module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load();module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!0}goog.labs.userAgent.browser.loadFullVersions=module$contents$goog$labs$userAgent$browser_loadFullVersions;\\ngoog.labs.userAgent.browser.resetForTesting=()=>{module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!1;module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.resetForTesting()};\\nfunction module$contents$goog$labs$userAgent$browser_fullVersionOf(a){let b=\"\";module$contents$goog$labs$userAgent$browser_hasFullVersionList()||(b=module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a));const c=a!==module$contents$goog$labs$userAgent$browser_Brand.SILK&&module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0);if(c){if(!module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:d})=>d===a))return}else if(\"\"===b)return;return new module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion(a,\\nc,b)}goog.labs.userAgent.browser.fullVersionOf=module$contents$goog$labs$userAgent$browser_fullVersionOf;\\nfunction module$contents$goog$labs$userAgent$browser_getVersionStringForLogging(a){if(module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0)){var b=module$contents$goog$labs$userAgent$browser_fullVersionOf(a);if(b){if(b=b.getIfLoaded())return b.toVersionStringForLogging();b=module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:c})=>c===a);(0,goog.asserts.assertExists)(b);return b.version}return\"\"}return module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a)}\\ngoog.labs.userAgent.browser.getVersionStringForLogging=module$contents$goog$labs$userAgent$browser_getVersionStringForLogging;goog.dom.tags={};goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};goog.dom.tags.isVoidTag=function(a){return!0===goog.dom.tags.VOID_TAGS_[a]};const module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE={};\\nclass module$contents$goog$html$SafeHtml_SafeHtml{constructor(a,b){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=b===module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE?a:\"\";this.implementsGoogStringTypedString=!0}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()}toString(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()}static unwrap(a){return module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(a).toString()}static unwrapTrustedHTML(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml&&\\na.constructor===module$contents$goog$html$SafeHtml_SafeHtml)return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;goog.asserts.fail(`expected object of type SafeHtml, got \\'${a}\\' of type `+goog.typeOf(a));return\"type_error:SafeHtml\"}static htmlEscape(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml)return a;a=\"object\"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a))}static htmlEscapePreservingNewlines(a){if(a instanceof\\nmodule$contents$goog$html$SafeHtml_SafeHtml)return a;a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static htmlEscapePreservingNewlinesAndSpaces(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml)return a;a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static comment(a){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"\\\\x3c!--\"+\\ngoog.string.internal.htmlEscape(a)+\"--\\\\x3e\")}static create(a,b,c){module$contents$goog$html$SafeHtml_SafeHtml.verifyTagName(String(a));return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a),b,c)}static verifyTagName(a){if(!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(a))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Invalid tag name <${a}>.`:\"\");if(a.toUpperCase()in module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\\n`Tag name <${a}> is not allowed for SafeHtml.`:\"\");}static createIframe(a,b,c,d){a&&goog.html.TrustedResourceUrl.unwrap(a);const e={};e.src=a||null;e.srcdoc=b&&module$contents$goog$html$SafeHtml_SafeHtml.unwrap(b);a=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e,{sandbox:\"\"},c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"iframe\",a,d)}static createSandboxIframe(a,b,c,d){if(!module$contents$goog$html$SafeHtml_SafeHtml.canUseSandboxIframe())throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\\n\"The browser does not support sandboxed iframes.\":\"\");const e={};e.src=a?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)):null;e.srcdoc=b||null;e.sandbox=\"\";a=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e,{},c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"iframe\",a,d)}static canUseSandboxIframe(){return goog.global.HTMLIFrameElement&&\"sandbox\"in goog.global.HTMLIFrameElement.prototype}static createScriptSrc(a,b){goog.html.TrustedResourceUrl.unwrap(a);\\na=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({src:a},{},b);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"script\",a)}static createScript(a,b){for(var c in b)if(Object.prototype.hasOwnProperty.call(b,c)){var d=c.toLowerCase();if(\"language\"==d||\"src\"==d||\"text\"==d)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Cannot set \"${d}\" attribute`:\"\");}c=\"\";a=module$contents$goog$array_concat(a);for(d=0;d<\\na.length;d++)c+=module$contents$goog$html$SafeScript_SafeScript.unwrap(a[d]);a=module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"script\",b,a)}static createStyle(a,b){b=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({type:\"text/css\"},{},b);let c=\"\";a=module$contents$goog$array_concat(a);for(let d=0;d<a.length;d++)c+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(a[d]);\\na=module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"style\",b,a)}static createMetaRefresh(a,b){a=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a));(module$contents$goog$labs$userAgent$browser_matchIE()||module$contents$goog$labs$userAgent$browser_matchEdgeHtml())&&goog.string.internal.contains(a,\";\")&&(a=\"\\'\"+a.replace(/\\'/g,\"%27\")+\"\\'\");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"meta\",\\n{\"http-equiv\":\"refresh\",content:(b||0)+\"; url=\"+a})}static join(a,b){a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);const c=[],d=e=>{Array.isArray(e)?e.forEach(d):(e=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(e),c.push(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(e)))};b.forEach(d);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c.join(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static concat(a){return module$contents$goog$html$SafeHtml_SafeHtml.join(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY,\\nArray.prototype.slice.call(arguments))}static createSafeHtmlSecurityPrivateDoNotAccessOrElse(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createHTML(a):a;return new module$contents$goog$html$SafeHtml_SafeHtml(a,module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE)}static createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(a,b,c){b=`<${a}`+module$contents$goog$html$SafeHtml_SafeHtml.stringifyAttributes(a,b);null==c?c=[]:Array.isArray(c)||(c=[c]);goog.dom.tags.isVoidTag(a.toLowerCase())?\\n(goog.asserts.assert(!c.length,`Void tag <${a}> does not allow content.`),b+=\">\"):(c=module$contents$goog$html$SafeHtml_SafeHtml.concat(c),b+=\">\"+module$contents$goog$html$SafeHtml_SafeHtml.unwrap(c)+\"</\"+a+\">\");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b)}static stringifyAttributes(a,b){let c=\"\";if(b)for(let d in b)if(Object.prototype.hasOwnProperty.call(b,d)){if(!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(d))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\\n`Invalid attribute name \"${d}\".`:\"\");const e=b[d];null!=e&&(c+=\" \"+module$contents$goog$html$SafeHtml_getAttrNameAndValue(a,d,e))}return c}static combineAttributes(a,b,c){const d={};for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&(goog.asserts.assert(e.toLowerCase()==e,\"Must be lower case\"),d[e]=a[e]);for(const f in b)Object.prototype.hasOwnProperty.call(b,f)&&(goog.asserts.assert(f.toLowerCase()==f,\"Must be lower case\"),d[f]=b[f]);if(c)for(const f in c)if(Object.prototype.hasOwnProperty.call(c,\\nf)){e=f.toLowerCase();if(e in a)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Cannot override \"${e}\" attribute, got \"`+f+\\'\" with value \"\\'+c[f]+\\'\"\\':\"\");e in b&&delete d[e];d[f]=c[f]}return d}}module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES=goog.DEBUG;module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE=!0;module$contents$goog$html$SafeHtml_SafeHtml.from=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape;\\nconst module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG=/^[a-zA-Z0-9-]+$/,module$contents$goog$html$SafeHtml_URL_ATTRIBUTES={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0},module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES={[goog.dom.TagName.APPLET]:!0,[goog.dom.TagName.BASE]:!0,[goog.dom.TagName.EMBED]:!0,[goog.dom.TagName.IFRAME]:!0,[goog.dom.TagName.LINK]:!0,[goog.dom.TagName.MATH]:!0,[goog.dom.TagName.META]:!0,[goog.dom.TagName.OBJECT]:!0,[goog.dom.TagName.SCRIPT]:!0,\\n[goog.dom.TagName.STYLE]:!0,[goog.dom.TagName.SVG]:!0,[goog.dom.TagName.TEMPLATE]:!0};\\nfunction module$contents$goog$html$SafeHtml_getAttrNameAndValue(a,b,c){if(c instanceof goog.string.Const)c=goog.string.Const.unwrap(c);else if(\"style\"==b.toLowerCase())if(module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE)c=module$contents$goog$html$SafeHtml_getStyleValue(c);else throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\\'Attribute \"style\" not supported.\\':\"\");else{if(/^on/i.test(b))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\\n`Attribute \"${b}`+\\'\" requires goog.string.Const value, \"\\'+c+\\'\" given.\\':\"\");if(b.toLowerCase()in module$contents$goog$html$SafeHtml_URL_ATTRIBUTES)if(c instanceof goog.html.TrustedResourceUrl)c=goog.html.TrustedResourceUrl.unwrap(c);else if(c instanceof goog.html.SafeUrl)c=goog.html.SafeUrl.unwrap(c);else if(\"string\"===typeof c)c=goog.html.SafeUrl.sanitize(c).getTypedStringValue();else throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Attribute \"${b}\" on tag \"${a}`+\\'\" requires goog.html.SafeUrl, goog.string.Const, or string, value \"\\'+\\nc+\\'\" given.\\':\"\");}c.implementsGoogStringTypedString&&(c=c.getTypedStringValue());goog.asserts.assert(\"string\"===typeof c||\"number\"===typeof c,\"String or number value expected, got \"+typeof c+\" with value: \"+c);return`${b}=\"`+goog.string.internal.htmlEscape(String(c))+\\'\"\\'}\\nfunction module$contents$goog$html$SafeHtml_getStyleValue(a){if(!goog.isObject(a))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\\'The \"style\" attribute requires goog.html.SafeStyle or map of style properties, \\'+typeof a+\" given: \"+a:\"\");a instanceof module$contents$goog$html$SafeStyle_SafeStyle||(a=module$contents$goog$html$SafeStyle_SafeStyle.create(a));return module$contents$goog$html$SafeStyle_SafeStyle.unwrap(a)}\\nmodule$contents$goog$html$SafeHtml_SafeHtml.DOCTYPE_HTML=function(){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"<!DOCTYPE html>\")}();module$contents$goog$html$SafeHtml_SafeHtml.EMPTY=new module$contents$goog$html$SafeHtml_SafeHtml(goog.global.trustedTypes&&goog.global.trustedTypes.emptyHTML||\"\",module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE);module$contents$goog$html$SafeHtml_SafeHtml.BR=function(){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"<br>\")}();\\ngoog.html.SafeHtml=module$contents$goog$html$SafeHtml_SafeHtml;goog.html.uncheckedconversions={};goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b)};\\ngoog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b)};\\ngoog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b)};\\ngoog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};\\ngoog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};\\ngoog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};goog.dom.safe={};goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:\"afterbegin\",AFTEREND:\"afterend\",BEFOREBEGIN:\"beforebegin\",BEFOREEND:\"beforeend\"};goog.dom.safe.insertAdjacentHtml=function(a,b,c){a.insertAdjacentHTML(b,module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(c))};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};\\ngoog.dom.safe.isInnerHtmlCleanupRecursive_=goog.functions.cacheReturnValue(function(){if(goog.DEBUG&&\"undefined\"===typeof document)return!1;var a=document.createElement(\"div\"),b=document.createElement(\"div\");b.appendChild(document.createElement(\"div\"));a.appendChild(b);if(goog.DEBUG&&!a.firstChild)return!1;b=a.firstChild.firstChild;a.innerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY);return!b.parentElement});\\ngoog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(a,b){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;a.lastChild;)a.removeChild(a.lastChild);a.innerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};\\ngoog.dom.safe.setInnerHtml=function(a,b){if(goog.asserts.ENABLE_ASSERTS&&a.tagName){var c=a.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c])throw Error(\"goog.dom.safe.setInnerHtml cannot be used to set content of \"+a.tagName+\".\");}goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a,b)};\\ngoog.dom.safe.setInnerHtmlFromConstant=function(a,b){goog.dom.safe.setInnerHtml(a,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\"Constant HTML to be immediatelly used.\"),goog.string.Const.unwrap(b)))};goog.dom.safe.setOuterHtml=function(a,b){a.outerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};\\ngoog.dom.safe.setFormElementAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLFormElement(a).action=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setButtonFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLButtonElement(a).formAction=goog.html.SafeUrl.unwrap(b)};\\ngoog.dom.safe.setInputFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLInputElement(a).formAction=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setStyle=function(a,b){a.style.cssText=module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b)};goog.dom.safe.documentWrite=function(a,b){a.write(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b))};\\ngoog.dom.safe.setAnchorHref=function(a,b){goog.dom.asserts.assertIsHTMLAnchorElement(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setAudioSrc=function(a,b){goog.dom.asserts.assertIsHTMLAudioElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:audio\\\\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};\\ngoog.dom.safe.setVideoSrc=function(a,b){goog.dom.asserts.assertIsHTMLVideoElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:video\\\\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setEmbedSrc=function(a,b){goog.dom.asserts.assertIsHTMLEmbedElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setFrameSrc=function(a,b){goog.dom.asserts.assertIsHTMLFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};\\ngoog.dom.safe.setIframeSrc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};goog.dom.safe.setIframeSrcdoc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.srcdoc=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};\\ngoog.dom.safe.setLinkHrefAndRel=function(a,b,c){goog.dom.asserts.assertIsHTMLLinkElement(a);a.rel=c;goog.string.internal.caseInsensitiveContains(c,\"stylesheet\")?(goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl,\\'URL must be TrustedResourceUrl because \"rel\" contains \"stylesheet\"\\'),a.href=goog.html.TrustedResourceUrl.unwrap(b),(b=goog.dom.safe.getStyleNonce(a.ownerDocument&&a.ownerDocument.defaultView))&&a.setAttribute(\"nonce\",b)):a.href=b instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrap(b):\\nb instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrap(b):goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(b))};goog.dom.safe.setObjectData=function(a,b){goog.dom.asserts.assertIsHTMLObjectElement(a);a.data=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setScriptSrc=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);goog.dom.safe.setNonceForScriptElement_(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};\\ngoog.dom.safe.setScriptContent=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);goog.dom.safe.setNonceForScriptElement_(a);a.textContent=module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(b)};goog.dom.safe.setNonceForScriptElement_=function(a){const b=goog.dom.safe.getScriptNonce(a.ownerDocument&&a.ownerDocument.defaultView);b&&a.setAttribute(\"nonce\",b)};\\ngoog.dom.safe.setLocationHref=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.assignLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.assign(goog.html.SafeUrl.unwrap(b))};\\ngoog.dom.safe.replaceLocation=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.replace(goog.html.SafeUrl.unwrap(b))};goog.dom.safe.openInWindow=function(a,b,c,d){a=a instanceof goog.html.SafeUrl?a:goog.html.SafeUrl.sanitizeAssertUnchanged(a);b=b||goog.global;c=c instanceof goog.string.Const?goog.string.Const.unwrap(c):c||\"\";return void 0!==d?b.open(goog.html.SafeUrl.unwrap(a),c,d):b.open(goog.html.SafeUrl.unwrap(a),c)};\\ngoog.dom.safe.parseFromStringHtml=function(a,b){return goog.dom.safe.parseFromString(a,b,\"text/html\")};goog.dom.safe.parseFromString=function(a,b,c){return a.parseFromString(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b),c)};\\ngoog.dom.safe.createImageFromBlob=function(a){if(!/^image\\\\/.*/g.test(a.type))throw Error(\"goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.\");var b=goog.global.URL.createObjectURL(a);a=new goog.global.Image;a.onload=function(){goog.global.URL.revokeObjectURL(b)};a.src=b;return a};goog.dom.safe.createContextualFragment=function(a,b){return a.createContextualFragment(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b))};\\ngoog.dom.safe.getScriptNonce=function(a){return goog.dom.safe.getNonce_(\"script[nonce]\",a)};goog.dom.safe.getStyleNonce=function(a){return goog.dom.safe.getNonce_(\\'style[nonce],link[rel=\"stylesheet\"][nonce]\\',a)};goog.dom.safe.NONCE_PATTERN_=/^[\\\\w+/_-]+[=]{0,2}$/;goog.dom.safe.getNonce_=function(a,b){b=(b||goog.global).document;return b.querySelector?(a=b.querySelector(a))&&(a=a.nonce||a.getAttribute(\"nonce\"))&&goog.dom.safe.NONCE_PATTERN_.test(a)?a:\"\":\"\"};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:\"\\\\u00a0\",ZERO_WIDTH_SPACE:\"\\\\u200b\"};goog.string.startsWith=goog.string.internal.startsWith;goog.string.endsWith=goog.string.internal.endsWith;goog.string.caseInsensitiveStartsWith=goog.string.internal.caseInsensitiveStartsWith;goog.string.caseInsensitiveEndsWith=goog.string.internal.caseInsensitiveEndsWith;goog.string.caseInsensitiveEquals=goog.string.internal.caseInsensitiveEquals;\\ngoog.string.subs=function(a,b){const c=a.split(\"%s\");let d=\"\";const e=Array.prototype.slice.call(arguments,1);for(;e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")};goog.string.collapseWhitespace=function(a){return a.replace(/[\\\\s\\\\xa0]+/g,\" \").replace(/^\\\\s+|\\\\s+$/g,\"\")};goog.string.isEmptyOrWhitespace=goog.string.internal.isEmptyOrWhitespace;goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;\\ngoog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return!/[^\\\\t\\\\n\\\\r ]/.test(a)};goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)};goog.string.isNumeric=function(a){return!/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return\" \"==a};\\ngoog.string.isUnicodeChar=function(a){return 1==a.length&&\" \"<=a&&\"~\">=a||\"\\\\u0080\"<=a&&\"\\\\ufffd\">=a};goog.string.stripNewlines=function(a){return a.replace(/(\\\\r\\\\n|\\\\r|\\\\n)+/g,\" \")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\\\\r\\\\n|\\\\r|\\\\n)/g,\"\\\\n\")};goog.string.normalizeWhitespace=function(a){return a.replace(/\\\\xa0|\\\\s/g,\" \")};goog.string.normalizeSpaces=function(a){return a.replace(/\\\\xa0|[ \\\\t]+/g,\" \")};\\ngoog.string.collapseBreakingSpaces=function(a){return a.replace(/[\\\\t\\\\r\\\\n ]+/g,\" \").replace(/^[\\\\t\\\\r\\\\n ]+|[\\\\t\\\\r\\\\n ]+$/g,\"\")};goog.string.trim=goog.string.internal.trim;goog.string.trimLeft=function(a){return a.replace(/^[\\\\s\\\\xa0]+/,\"\")};goog.string.trimRight=function(a){return a.replace(/[\\\\s\\\\xa0]+$/,\"\")};goog.string.caseInsensitiveCompare=goog.string.internal.caseInsensitiveCompare;\\ngoog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;const d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length);for(let g=0;g<f;g++){c=d[g];const h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\\\d+|\\\\D+/g)};\\ngoog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\\\d+|\\\\.\\\\d+|\\\\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\\\\+/g,\" \"))};goog.string.newLineToBr=goog.string.internal.newLineToBr;\\ngoog.string.htmlEscape=function(a,b){a=goog.string.internal.htmlEscape(a,b);goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,\"&#101;\"));return a};goog.string.E_RE_=/e/g;goog.string.unescapeEntities=function(a){return goog.string.contains(a,\"&\")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&\"document\"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};\\ngoog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,\"&\")?goog.string.unescapeEntitiesUsingDom_(a,b):a};\\ngoog.string.unescapeEntitiesUsingDom_=function(a,b){const c={\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":\\'\"\\'};let d;d=b?b.createElement(\"div\"):goog.global.document.createElement(\"div\");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(e,f){let g=c[e];if(g)return g;\"#\"==f.charAt(0)&&(f=Number(\"0\"+f.slice(1)),isNaN(f)||(g=String.fromCharCode(f)));g||(goog.dom.safe.setInnerHtml(d,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\"Single HTML entity.\"),\\ne+\" \")),g=d.firstChild.nodeValue.slice(0,-1));return c[e]=g})};goog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(b,c){switch(c){case \"amp\":return\"&\";case \"lt\":return\"<\";case \"gt\":return\">\";case \"quot\":return\\'\"\\';default:return\"#\"!=c.charAt(0)||(c=Number(\"0\"+c.slice(1)),isNaN(c))?b:String.fromCharCode(c)}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\\\\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g,\" &#160;\"),b)};\\ngoog.string.preserveSpaces=function(a){return a.replace(/(^|[\\\\n ]) /g,\"$1\"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){const c=b.length;for(let d=0;d<c;d++){const e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+\"...\");c&&(a=goog.string.htmlEscape(a));return a};\\ngoog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+\"...\"+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+\"...\"+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={\"\\\\x00\":\"\\\\\\\\0\",\"\\\\b\":\"\\\\\\\\b\",\"\\\\f\":\"\\\\\\\\f\",\"\\\\n\":\"\\\\\\\\n\",\"\\\\r\":\"\\\\\\\\r\",\"\\\\t\":\"\\\\\\\\t\",\"\\\\v\":\"\\\\\\\\x0B\",\\'\"\\':\\'\\\\\\\\\"\\',\"\\\\\\\\\":\"\\\\\\\\\\\\\\\\\",\"<\":\"\\\\\\\\u003C\"};goog.string.jsEscapeCache_={\"\\'\":\"\\\\\\\\\\'\"};\\ngoog.string.quote=function(a){a=String(a);const b=[\\'\"\\'];for(let c=0;c<a.length;c++){const d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}b.push(\\'\"\\');return b.join(\"\")};goog.string.escapeString=function(a){const b=[];for(let c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join(\"\")};\\ngoog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];let b;const c=a.charCodeAt(0);if(31<c&&127>c)b=a;else{if(256>c){if(b=\"\\\\\\\\x\",16>c||256<c)b+=\"0\"}else b=\"\\\\\\\\u\",4096>c&&(b+=\"0\");b+=c.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[a]=b};goog.string.contains=goog.string.internal.contains;\\ngoog.string.caseInsensitiveContains=goog.string.internal.caseInsensitiveContains;goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){let d=a;0<=b&&b<a.length&&0<c&&(d=a.slice(0,b)+a.slice(b+c));return d};goog.string.remove=function(a,b){return a.replace(b,\"\")};goog.string.removeAll=function(a,b){b=new RegExp(goog.string.regExpEscape(b),\"g\");return a.replace(b,\"\")};\\ngoog.string.replaceAll=function(a,b,c){b=new RegExp(goog.string.regExpEscape(b),\"g\");return a.replace(b,c.replace(/\\\\$/g,\"$$$$\"))};goog.string.regExpEscape=function(a){return String(a).replace(/([-()\\\\[\\\\]{}+?*.$\\\\^|,:#<!\\\\\\\\])/g,\"\\\\\\\\$1\").replace(/\\\\x08/g,\"\\\\\\\\x08\")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};\\ngoog.string.padNumber=function(a,b,c){if(!Number.isFinite(a))return String(a);a=void 0!==c?a.toFixed(c):String(a);c=a.indexOf(\".\");-1===c&&(c=a.length);const d=\"-\"===a[0]?\"-\":\"\";d&&(a=a.substring(1));return d+goog.string.repeat(\"0\",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?\"\":String(a)};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};\\ngoog.string.compareVersions=goog.string.internal.compareVersions;goog.string.hashCode=function(a){let b=0;for(let c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;goog.string.createUniqueString=function(){return\"goog_\"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(a){const b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)};\\ngoog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\\\\-([a-z])/g,function(b,c){return c.toUpperCase()})};goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,\"-$1\").toLowerCase()};goog.string.toTitleCase=function(a,b){b=\"string\"===typeof b?goog.string.regExpEscape(b):\"\\\\\\\\s\";return a.replace(new RegExp(\"(^\"+(b?\"|[\"+b+\"]+\":\"\")+\")([a-z])\",\"g\"),function(c,d,e){return d+e.toUpperCase()})};\\ngoog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.slice(1)).toLowerCase()};goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return\"string\"===typeof a?/^\\\\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};goog.string.splitLimit=function(a,b,c){a=a.split(b);const d=[];for(;0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};\\ngoog.string.lastComponent=function(a,b){if(b)\"string\"==typeof b&&(b=[b]);else return a;let c=-1;for(let d=0;d<b.length;d++){if(\"\"==b[d])continue;const e=a.lastIndexOf(b[d]);e>c&&(c=e)}return-1==c?a:a.slice(c+1)};\\ngoog.string.editDistance=function(a,b){const c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]};goog.string.path={};goog.string.path.baseName=function(a){const b=a.lastIndexOf(\"/\")+1;return a.slice(b)};goog.string.path.basename=goog.string.path.baseName;goog.string.path.dirname=function(a){const b=a.lastIndexOf(\"/\")+1;a=a.slice(0,b);/^\\\\/+$/.test(a)||(a=a.replace(/\\\\/+$/,\"\"));return a};goog.string.path.extension=function(a){a=goog.string.path.baseName(a).replace(/\\\\.+/g,\".\");const b=a.lastIndexOf(\".\");return 0>=b?\"\":a.slice(b+1)};\\ngoog.string.path.join=function(a){let b=arguments[0];for(let c=1;c<arguments.length;c++){const d=arguments[c];b=goog.string.startsWith(d,\"/\")?d:\"\"==b||goog.string.endsWith(b,\"/\")?b+d:b+(\"/\"+d)}return b};\\ngoog.string.path.normalizePath=function(a){if(\"\"==a)return\".\";let b=\"\";goog.string.startsWith(a,\"/\")&&(b=\"/\",goog.string.startsWith(a,\"//\")&&!goog.string.startsWith(a,\"///\")&&(b=\"//\"));a=a.split(\"/\");const c=[];for(let d=0;d<a.length;d++){const e=a[d];\"\"!=e&&\".\"!=e&&(\"..\"!=e||!b&&!c.length||\"..\"==module$contents$goog$array_peek(c)?c.push(e):c.pop())}return b+c.join(\"/\")||\".\"};goog.string.path.split=function(a){const b=goog.string.path.dirname(a);a=goog.string.path.baseName(a);return[b,a]};const DEBUG_WASI$$module$src$filesystem$wasi=!1;function assertLeadingSlash$$module$src$filesystem$wasi(a){return/^\\\\//g.test(a)?a:`/${a}`}function removeLeadingSlash$$module$src$filesystem$wasi(a){return a.replace(/^\\\\//g,\"\")}function shouldOpenReader$$module$src$filesystem$wasi(a){return(a&(WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants))!==goog.global.BigInt(0)}\\nfunction performanceNowPoly$$module$src$filesystem$wasi(){if(\"undefined\"===typeof performance||\"undefined\"===typeof performance.now){const a=Date.now();return Date.now()-a}return performance.now()}function concatUint8Arrays$$module$src$filesystem$wasi(a){var b=a.reduce((d,e)=>d+e.length,0);if(0!==a.length){b=new Uint8Array(b);var c=0;for(const d of a)b.set(d,c),c+=d.length;return b}}\\nconst WASI$$module$src$filesystem$wasi=function({}){this.fd=Array.from({length:4});this.fd[0]={fd:0,path:\"/dev/stdin\",seekPos:goog.global.BigInt(0),buffers:[]};this.fd[1]={fd:1,path:\"/dev/stdout\",seekPos:goog.global.BigInt(0),buffers:[]};this.fd[2]={fd:2,path:\"/dev/stderr\",seekPos:goog.global.BigInt(0),buffers:[]};this.fd[3]={fd:3,path:\"/\",seekPos:goog.global.BigInt(0),buffers:[]};this.getMemory=this.getMemory.bind(this);this.CPUTIME_START=0};\\nWASI$$module$src$filesystem$wasi.prototype.start=function(a){this.CPUTIME_START=performanceNowPoly$$module$src$filesystem$wasi();a.exports._start()};WASI$$module$src$filesystem$wasi.prototype.getImports=function(a){const b={};a=WebAssembly.Module.imports(a);for(const c of a)\"function\"===c.kind&&c.module.startsWith(\"wasi_\")&&(\"object\"!==typeof b[c.module]&&(b[c.module]={}),b[c.module][c.name]=this[c.name].bind(this));return b};\\nWASI$$module$src$filesystem$wasi.prototype.setMemory=function(a){this.memory=a};WASI$$module$src$filesystem$wasi.prototype.getMemory=function(){this.view&&this.view.buffer&&this.view.buffer.byteLength||(this.view=new DataView(this.memory.buffer));return this.view};WASI$$module$src$filesystem$wasi.prototype.msToNs=function(a){const b=Math.trunc(a);a=goog.global.BigInt(Math.round(1E6*(a-b)));return goog.global.BigInt(b)*goog.global.BigInt(1E6)+a};\\nWASI$$module$src$filesystem$wasi.prototype.now=function(a){switch(a){case WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants:return Math.floor(performanceNowPoly$$module$src$filesystem$wasi());case WASI_CLOCK_REALTIME$$module$src$filesystem$constants:return this.msToNs(Date.now());case WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants:case WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants:return Math.floor(performanceNowPoly$$module$src$filesystem$wasi()-this.CPUTIME_START);\\ndefault:return 0}};WASI$$module$src$filesystem$wasi.prototype.args_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"args_get\",a,b,module$src$filesystem$constants);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.args_sizes_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"args_sizes_get\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.clock_res_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"args_get\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.clock_time_get=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"clock_time_get\",a,b,c,arguments);const d=this.getMemory(),e=this.now(a);d.setBigUint64(c,goog.global.BigInt(e),!0);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.environ_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"environ_get\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.environ_sizes_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"environ_sizes_get\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_advise=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_advise\",a,b,c,d,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_allocate=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_allocate\",a,b,c,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_close=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_close\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_datasync=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_datasync\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_fdstat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_fdstat_get\",a,b,arguments);const c=this.getMemory();c.setUint8(b+4,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants);c.setUint16(b+2,0,!0);c.setUint16(b+4,0,!0);c.setBigUint64(b+8,goog.global.BigInt(RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants),!0);c.setBigUint64(b+8+8,goog.global.BigInt(RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants),\\n!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_set_flags=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_fdstat_set_flags\",a,b,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_set_rights=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_fdstat_set_rights\",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_filestat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_filestat_get\",a,b,arguments);let c=0;this.fd[a]&&(c=this.fd[a].buffers.reduce(function(e,f){return e+(null==f?void 0:f.byteLength)?null==f?void 0:f.byteLength:0},0));const d=this.getMemory();d.setBigUint64(b,goog.global.BigInt(a),!0);b+=8;d.setBigUint64(b,goog.global.BigInt(a),!0);b+=8;d.setUint8(b,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants);b+=8;d.setBigUint64(b,\\ngoog.global.BigInt(1),!0);b+=8;d.setBigUint64(b,goog.global.BigInt(c),!0);b+=8;d.setBigUint64(b,this.msToNs(this.CPUTIME_START),!0);b+=8;d.setBigUint64(b,this.msToNs(this.CPUTIME_START),!0);d.setBigUint64(b+8,this.msToNs(this.CPUTIME_START),!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_filestat_set_size=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_filestat_set_size\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_filestat_set_times=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_filestat_set_times\",a,b,c,d,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_pread=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_pread\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_prestat_dir_name=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_prestat_dir_name\",a,b,c,this.fd[a]);if(!this.fd[a]&&!this.fd[a-1])return WASI_EBADF$$module$src$filesystem$constants;({path:c}=this.fd[a]);a=this.getMemory();c=encoder$$module$src$utils$text_encoders.encode(c);(new Uint8Array(a.buffer)).set(c,b);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_prestat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_prestat_get\",a,b,this.fd[a]);if(!this.fd[a])return WASI_EBADF$$module$src$filesystem$constants;var {path:c}=this.fd[a];a=this.getMemory();c=encoder$$module$src$utils$text_encoders.encode(c);a.setUint8(b,WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants);a.setUint32(b+4,c.byteLength,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_pwrite=function(a,b,c,d,e){console.log(\"fd_pwrite\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_read=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_read\",a,b,c,d,arguments);const e=this.fd[a]&&this.fd[a].buffers;var f=e.reduce((m,p)=>m+p.length,0);const g=this.getMemory();if(e&&0!==e.length){var h=Number(this.fd[a].seekPos),k=0,l=!1;if(h>=f)return-1;for(f=0;f<c;f++){var n=b+8*f;const m=g.getUint32(n,!0);n=g.getUint32(n+4,!0);l||(k+=n,Array.from({length:n},(p,q)=>q).reduce((p,q)=>{if(l)return p;const [B,r]=p;let v=p=0,D=\\n!1,y=0,u;if(0===q)for(;!D;)u=e[p]?e[p].byteLength:0,y<=h&&u+y>h?(D=!0,v=h-y):(y+=u,p+=1);else p=B,v=r;e[p]?(g.setUint8(m+q,e[p][v]),v+1>=e[p].byteLength?(p=B+1,v=0):v+=1):(g.setUint8(m+q,\"\\\\x00\"),h+=q,l=!0);return[p,v]},[0,0]),l||(h+=n))}this.fd[a].seekPos=goog.global.BigInt(h);g.setUint32(d,k,!0);return WASI_ESUCCESS$$module$src$filesystem$constants}console.error(\"Reading non existent file\",a,this.fd[a])};\\nWASI$$module$src$filesystem$wasi.prototype.fd_readdir=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_readdir\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_renumber=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_renumber\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_seek=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_seek\",a,b,c,d,arguments);const e=this.getMemory();switch(c){case WASI_WHENCE_CUR$$module$src$filesystem$constants:var f;this.fd[a].seekPos=(null!=(f=this.fd[a].seekPos)?f:goog.global.BigInt(0))+goog.global.BigInt(b);break;case WASI_WHENCE_END$$module$src$filesystem$constants:f=(this.fd[a].buffers||[]).reduce((g,h)=>g+h.length,0);this.fd[a].seekPos=BigInt(f)+BigInt(b);break;\\ncase WASI_WHENCE_SET$$module$src$filesystem$constants:this.fd[a].seekPos=BigInt(b)}e.setBigUint64(d,this.fd[a].seekPos,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_sync=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_sync\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_tell=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_tell\",a,b,arguments);const c=this.getMemory();this.fd[a].seekPos||(this.fd[a].seekPos=goog.global.BigInt(0));c.setBigUint64(b,this.fd[a].seekPos,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.fd_write=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_write\",{fd:a,iovs:b,iovsLength:c,nwritten:d});let e=!1;const f=this.getMemory();this.fd[a].buffers=this.fd[a].buffers||[];this.fd[a].seekPos===goog.global.BigInt(0)&&0<this.fd[a].buffers.length&&(e=!0);let g=0;for(let l=0;l<c;l++){var h=b+8*l,k=f.getUint32(h,!0);h=f.getUint32(h+4,!0);g+=h;k=new Uint8Array(f.buffer,k,h);e?this.fd[a].buffers.unshift(k.slice(0,h)):this.fd[a].buffers.push(k.slice(0,\\nh))}this.fd[a].seekPos+=goog.global.BigInt(g);f.setUint32(d,g,!0);[1,2].includes(a)&&console.log(decoder$$module$src$utils$text_encoders.decode(concatUint8Arrays$$module$src$filesystem$wasi(this.fd[a].buffers)));return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_create_directory=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_create_directory\",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.path_filestat_get=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_filestat_get\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_filestat_set_times=function(a,b,c,d,e,f,g){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_filestat_set_times\",a,b,c,d,e,f,g,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.path_link=function(a,b,c,d,e,f,g){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_link\",a,b,c,d,e,f,g,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.path_open=function(a,b,c,d,e,f,g,h,k){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_open\",a,b,c,d,e,f,g,h,k,arguments);const l=this.getMemory();var n=(this.fd[a]||{path:\"/\"}).path,m=new Uint8Array(l.buffer,c,d);m=decoder$$module$src$utils$text_encoders.decode(m);const p=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(goog.string.path.join(3===a?\"\":n,m)));DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\";; opening path\",\\np,\"withREader\",shouldOpenReader$$module$src$filesystem$wasi(f));if(p.startsWith(\"/..\")||\"/._\"===p||\"/.AppleDouble\"===p)return WASI_EBADF$$module$src$filesystem$constants;(n=Object.values(this.fd).find(q=>q.path===p&&Array.isArray(q.buffers)))?m=n.fd:(m=this.fd.length,this.fd[m]={fd:m});this.fd[m]={...this.fd[m],path:p,type:\"file\",seekPos:goog.global.BigInt(0),buffers:n?this.fd[m].buffers:[]};shouldOpenReader$$module$src$filesystem$wasi(f)&&DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"should open a read handle for\",\\np);l.setUint32(k,m,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_readlink=function(a,b,c,d,e,f){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_readlink\",a,b,c,d,e,f,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_remove_directory=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_remove_directory\",a,b,c);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.path_rename=function(a,b,c,d,e,f){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_rename\",a,b,c,d,e,f,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_symlink=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_symlink\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.path_unlink_file=function(a,b,c){3<a&&DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_unlink_file\",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.poll_oneoff=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"poll_oneoff\",a,b,c,d,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.proc_exit=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"proc_exit\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.proc_raise=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"proc_raise\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.random_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"random_get\",a,b);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sched_yield=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"sched_yield\",arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.sock_recv=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"sock_recv\",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sock_send=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"sock_send\",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};\\nWASI$$module$src$filesystem$wasi.prototype.sock_shutdown=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"sock_shutdown\",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.findBuffers=function(a){const b=Object.values(this.fd).find(({path:c})=>c===a);return b&&b.buffers};\\nWASI$$module$src$filesystem$wasi.prototype.readdir=function(a){const b=(assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a))+\"/\").replace(\"//\",\"/\"),c=[];Object.values(this.fd).forEach(({path:d})=>!/\\\\//g.test(d.replace(b,\"\"))&&c.push(d));return c.map(d=>removeLeadingSlash$$module$src$filesystem$wasi(d.replace(b,\"\"))).filter(d=>!!d)};\\nWASI$$module$src$filesystem$wasi.prototype.writeFile=function(a,b){const c=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));a=Object.keys(this.fd).length;const d=Object.values(this.fd).find(({path:e})=>e===c);this.fd[a]={fd:a,path:c,seekPos:goog.global.BigInt(0),buffers:[b]};d&&delete this.fd[d]};\\nWASI$$module$src$filesystem$wasi.prototype.appendFile=function(a,b){var c=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));(c=this.findBuffers(c))?c.push(b):console.error(`Can\\'t append to non-existing file ${a}`)};WASI$$module$src$filesystem$wasi.prototype.readFile=function(a){a=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));if(a=this.findBuffers(a))return concatUint8Arrays$$module$src$filesystem$wasi(a)};\\nWASI$$module$src$filesystem$wasi.prototype.readStdOut=function(){const a=Object.values(this.fd[0]);return concatUint8Arrays$$module$src$filesystem$wasi(a&&a.buffers||[])};WASI$$module$src$filesystem$wasi.prototype.unlink=function(a){const b=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));(a=Object.values(this.fd).find(({path:c})=>c===b))?delete this.fd[a]:console.error(`While trying to unlink ${b}, path not found`)};\\nWASI$$module$src$filesystem$wasi.prototype.mkdir=function(a){const b=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a)),c=[];Object.values(this.fd).forEach(({path:d})=>d.startsWith(b)&&c.push(d));0<c.length?console.warn(`mkdir: path ${a} already exists`):(a=Object.keys(this.fd).length,this.fd[a]={fd:a,path:b})};var module$src$filesystem$wasi={};module$src$filesystem$wasi.WASI=WASI$$module$src$filesystem$wasi;function clearArray$$module$src$utils$clear_array(a){for(;0<a.length;)a.pop()}var module$src$utils$clear_array={};module$src$utils$clear_array.clearArray=clearArray$$module$src$utils$clear_array;var module$node_modules$lines_logger$lib$index={default:{}};module$node_modules$lines_logger$lib$index.default.__esModule=!0;module$node_modules$lines_logger$lib$index.default.LoggerFactory=module$node_modules$lines_logger$lib$index.default.logLevels=void 0;module$node_modules$lines_logger$lib$index.default.logLevels={log_raise_error:1,log_with_warnings:2,trace:3,debug:4,info:5,warn:6,error:7,disable:8};\\nvar LoggerFactory$$module$node_modules$lines_logger$lib$index=function(){function a(b,c){if(void 0===b&&(b=\"log_with_warnings\"),void 0===c&&(c=null),this.logLevel=b,!module$node_modules$lines_logger$lib$index.default.logLevels[b])throw Error(\"Invalid log level \"+b+\" allowed: \"+JSON.stringify(module$node_modules$lines_logger$lib$index.default.logLevels));this.mockConsole=c||console}return a.prototype.dummy=function(){},a.prototype.setLogWarnings=function(b){this.logLevel=b},a.prototype.getLogWarnings=\\nfunction(){return this.logLevel},a.prototype.getSingleLoggerColor=function(b,c,d){return this.getSingleLoggerStyle(b,this.getColorStyle(c),d)},a.prototype.getSingleLogger=function(b,c){var d=this.getRandomColor(b);return this.getSingleLoggerStyle(b,this.getColorStyle(d),c)},a.prototype.getSingleLoggerStyle=function(b,c,d,e){var f=this;return void 0===e&&(e=\"log_with_warnings\"),function(){for(var g=[],h=0;h<arguments.length;h++)g[h]=arguments[h];if(module$node_modules$lines_logger$lib$index.default.logLevels[f.logLevel]>\\nmodule$node_modules$lines_logger$lib$index.default.logLevels[e])return f.dummy;g=Array.prototype.slice.call(g);h=g.shift().split(\"{}\");for(var k=[f.mockConsole,\"%c\"+b,c],l=0;l<h.length;l++)k.push(h[l]),void 0!==g[l]&&k.push(g[l]);if(h.length-1!==g.length)if(\"log_with_warnings\"===f.logLevel)f.mockConsole.error(\"MissMatch amount of arguments\");else if(\"log_raise_error\"===f.logLevel)throw Error(\"MissMatch amount of arguments\");return Function.prototype.bind.apply(d,k)}},a.prototype.getLoggerColor=function(b,\\nc){return this.getLoggerStyle(b,this.getColorStyle(c))},a.prototype.getColorStyle=function(b){return\"color: white; background-color: \"+b+\"; padding: 2px 6px; border-radius: 2px; font-size: 10px\"},a.getHash=function(b,c){void 0===c&&(c=0);var d=3735928559^c;c^=1103547991;for(var e=0,f;e<b.length;e++)f=b.charCodeAt(e),d=Math.imul(d^f,2654435761),c=Math.imul(c^f,1597334677);return d=Math.imul(d^d>>>16,2246822507)^Math.imul(c^c>>>13,3266489909),4294967296*(2097151&(Math.imul(c^c>>>16,2246822507)^Math.imul(d^\\nd>>>13,3266489909)))+(d>>>0)},a.prototype.getRandomColor=function(b){void 0===b&&(b=\"\");b=a.getHash(b);for(var c=\"#\",d=0;3>d;d++)c+=(\"00\"+(8+(b>>7*d&127)).toString(16)).substr(-2);return c},a.prototype.getLogger=function(b){return this.getLoggerColor(b,this.getRandomColor(b))},a.prototype.getLoggerStyle=function(b,c){return{trace:this.getSingleLoggerStyle(b,c,this.mockConsole.trace,\"trace\"),debug:this.getSingleLoggerStyle(b,c,this.mockConsole.debug,\"debug\"),log:this.getSingleLoggerStyle(b,c,this.mockConsole.log,\\n\"info\"),warn:this.getSingleLoggerStyle(b,c,this.mockConsole.warn,\"warn\"),error:this.getSingleLoggerStyle(b,c,this.mockConsole.error,\"error\")}},a}();module$node_modules$lines_logger$lib$index.default.LoggerFactory=LoggerFactory$$module$node_modules$lines_logger$lib$index;let logWorkletMain$$module$src$logger,logWorkletWorker$$module$src$logger,logSABMain$$module$src$logger,logSABWorker$$module$src$logger,logVANMain$$module$src$logger,logVANWorker$$module$src$logger,logOldSpnMain$$module$src$logger,logOldSpnWorker$$module$src$logger,logIndex$$module$src$logger,logSPNMainSingle$$module$src$logger,logSinglethreadWorkletMain$$module$src$logger,logSinglethreadWorkletWorker$$module$src$logger,logCommonUtils$$module$src$logger,logWasmModule$$module$src$logger,logMidiRequest$$module$src$logger;\\nconst isProd$$module$src$logger=1;logWorkletMain$$module$src$logger=a=>b=>{};logWorkletWorker$$module$src$logger=a=>b=>{};logSABMain$$module$src$logger=a=>b=>{};logSABWorker$$module$src$logger=a=>b=>{};logVANMain$$module$src$logger=a=>b=>{};logVANWorker$$module$src$logger=a=>b=>{};logOldSpnMain$$module$src$logger=a=>b=>{};logOldSpnWorker$$module$src$logger=a=>b=>{};logIndex$$module$src$logger=a=>b=>{};logSPNMainSingle$$module$src$logger=a=>b=>{};\\nlogSinglethreadWorkletMain$$module$src$logger=a=>b=>{};logSinglethreadWorkletWorker$$module$src$logger=a=>b=>{};logCommonUtils$$module$src$logger=a=>b=>{};logWasmModule$$module$src$logger=a=>b=>{};logMidiRequest$$module$src$logger=a=>b=>{};var $jscompDefaultExport$$module$src$logger=a=>b=>{},module$src$logger={};module$src$logger.default=$jscompDefaultExport$$module$src$logger;module$src$logger.logCommonUtils=logCommonUtils$$module$src$logger;module$src$logger.logIndex=logIndex$$module$src$logger;\\nmodule$src$logger.logMidiRequest=logMidiRequest$$module$src$logger;module$src$logger.logOldSpnMain=logOldSpnMain$$module$src$logger;module$src$logger.logOldSpnWorker=logOldSpnWorker$$module$src$logger;module$src$logger.logSABMain=logSABMain$$module$src$logger;module$src$logger.logSABWorker=logSABWorker$$module$src$logger;module$src$logger.logSPNMainSingle=logSPNMainSingle$$module$src$logger;module$src$logger.logSinglethreadWorkletMain=logSinglethreadWorkletMain$$module$src$logger;\\nmodule$src$logger.logSinglethreadWorkletWorker=logSinglethreadWorkletWorker$$module$src$logger;module$src$logger.logVANMain=logVANMain$$module$src$logger;module$src$logger.logVANWorker=logVANWorker$$module$src$logger;module$src$logger.logWasmModule=logWasmModule$$module$src$logger;module$src$logger.logWorkletMain=logWorkletMain$$module$src$logger;module$src$logger.logWorkletWorker=logWorkletWorker$$module$src$logger;const CompressionMethod$$module$src$zlib$zlib={DEFLATE:8,RESERVED:15};var module$src$zlib$zlib={};module$src$zlib$zlib.CompressionMethod=CompressionMethod$$module$src$zlib$zlib;/*\\n zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */\\nfunction Huffman$$module$src$zlib$huffman(a){const b=a.length;let c=0,d=Number.POSITIVE_INFINITY,e,f,g,h;let k,l;for(k=0;k<b;++k)a[k]>c&&(c=a[k]),a[k]<d&&(d=a[k]);const n=1<<c,m=new Uint32Array(n);e=1;f=0;for(g=2;e<=c;){for(k=0;k<b;++k)if(a[k]===e){h=0;var p=f;for(l=0;l<e;++l)h=h<<1|p&1,p>>=1;p=e<<16|k;for(l=h;l<n;l+=g)m[l]=p;++f}++e;f<<=1;g<<=1}return[m,c,d]}var module$src$zlib$huffman={};module$src$zlib$huffman.Huffman=Huffman$$module$src$zlib$huffman;const ZLIB_RAW_INFLATE_BUFFER_SIZE$$module$src$zlib$rawinflate=32768;\\nfunction RawInflate$$module$src$zlib$rawinflate(a,b){this.blocks=[];this.bufferSize=ZLIB_RAW_INFLATE_BUFFER_SIZE$$module$src$zlib$rawinflate;this.bitsbuflen=this.bitsbuf=this.ip=this.totalpos=0;this.input=new Uint8Array(a);this.bfinal=!1;this.bufferType=RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE;this.resize=!1;if(b||!(b={}))b.index&&(this.ip=b.index),b.bufferSize&&(this.bufferSize=b.bufferSize),b.bufferType&&(this.bufferType=b.bufferType),b.resize&&(this.resize=b.resize);switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.op=\\nRawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;this.output=new Uint8Array(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength+this.bufferSize+RawInflate$$module$src$zlib$rawinflate.MaxCopyLength);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.op=0;this.output=new Uint8Array(this.bufferSize);break;default:throw Error(\"invalid inflate mode\");}}RawInflate$$module$src$zlib$rawinflate.BufferType={BLOCK:0,ADAPTIVE:1};\\nRawInflate$$module$src$zlib$rawinflate.prototype.decompress=function(){for(;!this.bfinal;)this.parseBlock();switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:return this.concatBufferBlock();case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:return this.concatBufferDynamic();default:throw Error(\"invalid inflate mode\");}};RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength=32768;RawInflate$$module$src$zlib$rawinflate.MaxCopyLength=258;\\nRawInflate$$module$src$zlib$rawinflate.Order=function(a){return new Uint16Array(a)}([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);RawInflate$$module$src$zlib$rawinflate.LengthCodeTable=function(a){return new Uint16Array(a)}([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]);RawInflate$$module$src$zlib$rawinflate.LengthExtraTable=function(a){return new Uint8Array(a)}([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]);\\nRawInflate$$module$src$zlib$rawinflate.DistCodeTable=function(a){return new Uint16Array(a)}([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]);RawInflate$$module$src$zlib$rawinflate.DistExtraTable=function(a){return new Uint8Array(a)}([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\\nRawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable=function(a){return a}(function(){const a=new Uint8Array(288);let b,c;b=0;for(c=a.length;b<c;++b)a[b]=143>=b?8:255>=b?9:279>=b?7:8;return Huffman$$module$src$zlib$huffman(a)}());RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable=function(a){return a}(function(){const a=new Uint8Array(30);let b,c;b=0;for(c=a.length;b<c;++b)a[b]=5;return Huffman$$module$src$zlib$huffman(a)}());\\nRawInflate$$module$src$zlib$rawinflate.prototype.parseBlock=function(){let a=this.readBits(3);a&1&&(this.bfinal=!0);a>>>=1;switch(a){case 0:this.parseUncompressedBlock();break;case 1:this.parseFixedHuffmanBlock();break;case 2:this.parseDynamicHuffmanBlock();break;default:throw Error(\"unknown BTYPE: \"+a);}};\\nRawInflate$$module$src$zlib$rawinflate.prototype.readBits=function(a){let b=this.bitsbuf,c=this.bitsbuflen;const d=this.input;let e=this.ip;if(e+(a-c+7>>3)>=d.length)throw Error(\"input buffer is broken\");for(;c<a;)b|=d[e++]<<c,c+=8;this.bitsbuf=b>>>a;this.bitsbuflen=c-a;this.ip=e;return b&(1<<a)-1};\\nRawInflate$$module$src$zlib$rawinflate.prototype.readCodeByTable=function(a){let b=this.bitsbuf,c=this.bitsbuflen;var d=this.input;let e=this.ip;var f=d.length;const g=a[0];for(a=a[1];c<a&&!(e>=f);)b|=d[e++]<<c,c+=8;d=g[b&(1<<a)-1];f=d>>>16;if(f>c)throw Error(\"invalid code length: \"+f);this.bitsbuf=b>>f;this.bitsbuflen=c-f;this.ip=e;return d&65535};\\nRawInflate$$module$src$zlib$rawinflate.prototype.parseUncompressedBlock=function(){const a=this.input;let b=this.ip,c=this.output,d=this.op;var e=a.length;let f;const g=c.length;this.bitsbuflen=this.bitsbuf=0;if(b+1>=e)throw Error(\"invalid uncompressed block header: LEN\");f=a[b++]|a[b++]<<8;if(b+1>=e)throw Error(\"invalid uncompressed block header: NLEN\");e=a[b++]|a[b++]<<8;if(f===~e)throw Error(\"invalid uncompressed block header: length verify\");if(b+f>a.length)throw Error(\"input buffer is broken\");\\nswitch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:for(;d+f>c.length;)e=g-d,f-=e,c.set(a.subarray(b,b+e),d),d+=e,b+=e,this.op=d,c=this.expandBufferBlock(),d=this.op;break;case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:for(;d+f>c.length;)c=this.expandBufferAdaptive({fixRatio:2});break;default:throw Error(\"invalid inflate mode\");}c.set(a.subarray(b,b+f),d);this.ip=b+f;this.op=d+f;this.output=c};\\nRawInflate$$module$src$zlib$rawinflate.prototype.parseFixedHuffmanBlock=function(){switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.decodeHuffmanAdaptive(RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable,RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.decodeHuffmanBlock(RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable,RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable);\\nbreak;default:throw Error(\"invalid inflate mode\");}};\\nRawInflate$$module$src$zlib$rawinflate.prototype.parseDynamicHuffmanBlock=function(){var a=this.readBits(5)+257,b=this.readBits(5)+1,c=this.readBits(4)+4,d=new Uint8Array(RawInflate$$module$src$zlib$rawinflate.Order.length);let e;for(e=0;e<c;++e)d[RawInflate$$module$src$zlib$rawinflate.Order[e]]=this.readBits(3);d=Huffman$$module$src$zlib$huffman(d);c=new Uint8Array(a+b);e=0;for(b=a+b;e<b;){var f=this.readCodeByTable(d);switch(f){case 16:for(f=3+this.readBits(2);f--;)c[e++]=g;break;case 17:for(f=\\n3+this.readBits(3);f--;)c[e++]=0;var g=0;break;case 18:for(f=11+this.readBits(7);f--;)c[e++]=0;g=0;break;default:g=c[e++]=f}}g=Huffman$$module$src$zlib$huffman(c.subarray(0,a));a=Huffman$$module$src$zlib$huffman(c.subarray(a));switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.decodeHuffmanAdaptive(g,a);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.decodeHuffmanBlock(g,a);break;default:throw Error(\"invalid inflate mode\");}};\\nRawInflate$$module$src$zlib$rawinflate.prototype.decodeHuffmanBlock=function(a,b){let c=this.output,d=this.op;this.currentLitlenTable=a;const e=c.length-RawInflate$$module$src$zlib$rawinflate.MaxCopyLength;var f;let g,h;const k=RawInflate$$module$src$zlib$rawinflate.LengthCodeTable,l=RawInflate$$module$src$zlib$rawinflate.LengthExtraTable,n=RawInflate$$module$src$zlib$rawinflate.DistCodeTable,m=RawInflate$$module$src$zlib$rawinflate.DistExtraTable;for(;256!==(f=this.readCodeByTable(a));)if(256>f)d>=\\ne&&(this.op=d,c=this.expandBufferBlock(),d=this.op),c[d++]=f;else for(f-=257,h=k[f],0<l[f]&&(h+=this.readBits(l[f])),f=this.readCodeByTable(b),g=n[f],0<m[f]&&(g+=this.readBits(m[f])),d>=e&&(this.op=d,c=this.expandBufferBlock(),d=this.op);h--;)c[d]=c[d++-g];for(;8<=this.bitsbuflen;)this.bitsbuflen-=8,this.ip--;this.op=d};\\nRawInflate$$module$src$zlib$rawinflate.prototype.decodeHuffmanAdaptive=function(a,b){let c=this.output,d=this.op;this.currentLitlenTable=a;let e=c.length;var f;let g,h;const k=RawInflate$$module$src$zlib$rawinflate.LengthCodeTable,l=RawInflate$$module$src$zlib$rawinflate.LengthExtraTable,n=RawInflate$$module$src$zlib$rawinflate.DistCodeTable,m=RawInflate$$module$src$zlib$rawinflate.DistExtraTable;for(;256!==(f=this.readCodeByTable(a));)if(256>f)d>=e&&(c=this.expandBufferAdaptive(),e=c.length),c[d++]=\\nf;else for(f-=257,h=k[f],0<l[f]&&(h+=this.readBits(l[f])),f=this.readCodeByTable(b),g=n[f],0<m[f]&&(g+=this.readBits(m[f])),d+h>e&&(c=this.expandBufferAdaptive(),e=c.length);h--;)c[d]=c[d++-g];for(;8<=this.bitsbuflen;)this.bitsbuflen-=8,this.ip--;this.op=d};\\nRawInflate$$module$src$zlib$rawinflate.prototype.expandBufferBlock=function(a){a=new Uint8Array(this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength);const b=this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,c=this.output;a.set(c.subarray(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,a.length));this.blocks.push(a);this.totalpos+=a.length;c.set(c.subarray(b,b+RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength));this.op=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;\\nreturn c};RawInflate$$module$src$zlib$rawinflate.prototype.expandBufferAdaptive=function(a){let b=Math.trunc(this.input.length/this.ip+1);const c=this.input,d=this.output;a&&(\"number\"===typeof a.fixRatio&&(b=a.fixRatio),\"number\"===typeof a.addRatio&&(b+=a.addRatio));2>b?(a=(c.length-this.ip)/this.currentLitlenTable[2],a=Math.trunc(a/2*258),a=a<d.length?d.length+a:d.length<<1):a=d.length*b;a=new Uint8Array(a);a.set(d);return this.output=a};\\nRawInflate$$module$src$zlib$rawinflate.prototype.concatBufferBlock=function(){let a=0;const b=this.output,c=this.blocks;let d;const e=new Uint8Array(this.totalpos+(this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength));let f,g,h,k;if(0===c.length)return this.output.subarray(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,this.op);f=0;for(g=c.length;f<g;++f)for(d=c[f],h=0,k=d.length;h<k;++h)e[a++]=d[h];f=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;for(g=this.op;f<\\ng;++f)e[a++]=b[f];this.blocks=[];return this.buffer=e};RawInflate$$module$src$zlib$rawinflate.prototype.concatBufferDynamic=function(){let a;const b=this.op;this.resize?(a=new Uint8Array(b),a.set(this.output.subarray(0,b))):a=this.output.subarray(0,b);return this.buffer=a};var module$src$zlib$rawinflate={};module$src$zlib$rawinflate.RawInflate=RawInflate$$module$src$zlib$rawinflate;function Util$$module$src$zlib$util(){}Util$$module$src$zlib$util.stringToByteArray=function(a){a=[...a];let b,c;b=0;for(c=a.length;b<c;b++)a[b]=(a[b].charPointAt(0)&255)>>>0;return new Uint8Array([a])};var module$src$zlib$util={};module$src$zlib$util.Util=Util$$module$src$zlib$util;function Adler32$$module$src$zlib$adler32(a){\"string\"===typeof a&&(a=Util$$module$src$zlib$util.stringToByteArray(a));return Adler32$$module$src$zlib$adler32.update(1,a)}Adler32$$module$src$zlib$adler32.update=function(a,b){let c=a&65535;a=a>>>16&65535;let d=b.length,e,f=0;for(;0<d;){e=d>Adler32$$module$src$zlib$adler32.OptimizationParameter?Adler32$$module$src$zlib$adler32.OptimizationParameter:d;d-=e;do c+=b[f++],a+=c;while(--e);c%=65521;a%=65521}return(a<<16|c)>>>0};\\nAdler32$$module$src$zlib$adler32.OptimizationParameter=1024;var module$src$zlib$adler32={};module$src$zlib$adler32.Adler32=Adler32$$module$src$zlib$adler32;function Inflate$$module$src$zlib$inflate(a,b){this.input=a;this.ip=0;if(b||!(b={}))b.index&&(this.ip=b.index),b.verify&&(this.verify=b.verify);const c=a[this.ip++],d=a[this.ip++];switch(c&15){case CompressionMethod$$module$src$zlib$zlib.DEFLATE:this.method=CompressionMethod$$module$src$zlib$zlib.DEFLATE;break;default:throw Error(\"unsupported compression method\");}if(0!==((c<<8)+d)%31)throw Error(\"invalid fcheck flag:\"+((c<<8)+d)%31);if(d&32)throw Error(\"fdict flag is not supported\");this.rawinflate=\\nnew RawInflate$$module$src$zlib$rawinflate(a,{index:this.ip,bufferSize:b.bufferSize,bufferType:b.bufferType,resize:b.resize})}Inflate$$module$src$zlib$inflate.BufferType=RawInflate$$module$src$zlib$rawinflate.BufferType;\\nInflate$$module$src$zlib$inflate.prototype.decompress=function(){var a=this.input;const b=this.rawinflate.decompress();this.ip=this.rawinflate.ip;if(this.verify&&(a=(a[this.ip++]<<24|a[this.ip++]<<16|a[this.ip++]<<8|a[this.ip++])>>>0,a!==Adler32$$module$src$zlib$adler32(b)))throw Error(\"invalid adler-32 checksum\");return b};var module$src$zlib$inflate={};module$src$zlib$inflate.Inflate=Inflate$$module$src$zlib$inflate;const PAGE_SIZE$$module$src$module=65536,PAGES_PER_MB$$module$src$module=16,csoundWasiJsMessageCallback$$module$src$module=({memory:a,messagePort:b,streamBuffer:c})=>function(d,e,f,g){if(a){d=new Uint8Array(a.buffer,g,f);d=uint2String$$module$src$utils$text_encoders(d);var h=/\\\\n$/g.test(d);e=/^\\\\n/g.test(d);var k=d.split(\"\\\\n\").filter(n=>0<n.length),l=[];if(0===k.length&&h||e)l.push(c.join(\"\")),clearArray$$module$src$utils$clear_array(c);k.forEach((n,m)=>{m+1===k.length?h?0===m?(l.push(c.join(\"\")+n),\\nclearArray$$module$src$utils$clear_array(c)):l.push(n):c.push(n):0===m?(l.push(c.join(\"\")+n),clearArray$$module$src$utils$clear_array(c)):l.push(n)});l.forEach(n=>{n.replace(/(\\\\r\\\\n|\\\\n|\\\\r)/gm,\"\")&&b.post({log:n})})}},assertPluginExports$$module$src$module=a=>{if(a&&\"object\"===typeof a&&\"object\"===typeof a.exports){if(a.exports.__wasm_call_ctors){if(a.exports.csoundModuleCreate||a.exports.csound_opcode_init||a.exports.csound_fgen_init)return!0;console.error(a.exports,\"A csound plugin turns out to be neither a plugin, opcode or module.\\\\nPerhaps csdl.h or module.h wasn\\'t imported correctly?\");\\nreturn!1}console.error(\"A csound plugin didn\\'t export __wasm_call_ctors.\\\\nPlease re-run wasm-ld with either --export-all or include --export=__wasm_call_ctors\");return!1}console.error(\"Error instantiating a csound plugin, instance and/or export is missing!\");return!1},getBinaryHeaderData$$module$src$module=a=>{function b(){let l=0,n=1;for(;;){const m=a[c++];l+=(m&127)*n;n*=128;if(!(m&128))break}return l}1836278016!==(new Uint32Array((new Uint8Array(a.subarray(0,24))).buffer))[0]&&console.error(\"Wasm magic number is missing!\");\\nif(0!==a[8])return logWasmModule$$module$src$logger(\"Dylink section wasn\\'t found in wasm binary, assuming static wasm.\"),\"static\";let c=9;const d=b();c++;(0,goog.asserts.assert)(a[c]===\"d\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"y\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"l\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"i\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"n\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"k\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\\n\".\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"0\".codePointAt(0));c+=3;const e=b(),f=b(),g=b(),h=b(),k=b();return{sectionSize:d,memorySize:e,memoryAlign:f,neededDynlibsCount:k,tableSize:g,tableAlign:h}},loadStaticWasm$$module$src$module=async({wasmBytes:a,wasi:b,messagePort:c})=>{const d=await WebAssembly.compile(a);a=new WebAssembly.Memory({initial:16384});const e=b.getImports(d);e.env=e.env||{};e.env.csoundLoadModules=()=>0;e.env.memory=a;e.env.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module({memory:e.env.memory,\\nstreamBuffer:[],messagePort:c});c=await WebAssembly.instantiate(d,e);b.setMemory(a);b.start(c);c.exports.__wasi_js_csoundSetMessageStringCallback();return[c,b]};\\nvar $jscompDefaultExport$$module$src$module=async function({wasmDataURI:a,withPlugins:b=[],messagePort:c}){var d={};const e=new WASI$$module$src$filesystem$wasi({preopens:{\"/\":\"/\"}});a=new Uint8Array(a);a=(new Inflate$$module$src$zlib$inflate(a)).decompress();var f=getBinaryHeaderData$$module$src$module(a);if(\"static\"===f)return await loadStaticWasm$$module$src$module({messagePort:c,wasmBytes:a,wasmFs:d,wasi:e});const {memorySize:g,memoryAlign:h,tableSize:k}=f;b=await b.reduce(async(u,z)=>{u=await u;\\nlet C,A;try{C=new Uint8Array(z),A=getBinaryHeaderData$$module$src$module(C)}catch(G){console.error(\"Error in plugin\",G)}A&&u.push({headerData:A,wasmPluginBytes:C});return u},[]);var l=128*PAGES_PER_MB$$module$src$module;d=Math.ceil((g+h)/PAGE_SIZE$$module$src$module);f=Math.ceil(b.reduce((u,{headerData:z})=>\"static\"===z?0:u+(z.memorySize+h),0)/PAGE_SIZE$$module$src$module);f=d+f+l;const n=new WebAssembly.Memory({initial:f,maximum:1024*PAGES_PER_MB$$module$src$module}),m=new WebAssembly.Table({initial:k+\\n1,element:\"anyfunc\"});e.setMemory(n);const p=new WebAssembly.Global({value:\"i32\",mutable:!0},f*PAGE_SIZE$$module$src$module);f=new WebAssembly.Global({value:\"i32\",mutable:!0},f*PAGE_SIZE$$module$src$module);l=new WebAssembly.Global({value:\"i32\",mutable:!1},l);const q=new WebAssembly.Global({value:\"i32\",mutable:!1},1),B=new WebAssembly.Global({value:\"i32\",mutable:!0},0);a=await WebAssembly.compile(a);const r=e.getImports(a);let v=[],D=d;r.env=r.env||{};r.env.memory=n;r.env.__indirect_function_table=\\nm;r.env.__stack_pointer=p;r.env.__memory_base=l;r.env.__table_base=q;r.env.csoundLoadModules=u=>{v.forEach(z=>{void 0===y?console.error(\"csound-wasm internal: timing problem detected!\"):dlinit$$module$src$dlinit(y,z,m,u)});return 0};r.env._ZTH5errno=function(){};r.env.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module({memory:n,messagePort:c,streamBuffer:[]});r.env.printDebugCallback=(u,z)=>{u=new Uint8Array(n.buffer,u,z);u=uint2String$$module$src$utils$text_encoders(u);console.log(u)};\\nr[\"GOT.mem\"]=r[\"GOT.mem\"]||{};r[\"GOT.mem\"].__heap_base=f;r[\"GOT.func\"]=r[\"GOT.func\"]||{};const y=await WebAssembly.instantiate(a,r);c=Object.assign({},y.exports);a={};a.exports=Object.assign(c,{memory:n});v=await b.reduce(async(u,{headerData:z,wasmPluginBytes:C})=>{u=await u;try{const {memorySize:A,memoryAlign:G,tableSize:F}=z,I=await WebAssembly.compile(C),t=e.getImports(I),E=new WebAssembly.Global({value:\"i32\",mutable:!1},D*PAGE_SIZE$$module$src$module);m.grow(F);t.env=Object.assign({},t.env);t.env.memory=\\nn;t.env.__indirect_function_table=m;t.env.__memory_base=E;t.env.__stack_pointer=p;t.env.__table_base=q;t.env.csoundLoadModules=B;delete t.env.csoundWasiJsMessageCallback;D+=Math.ceil((A+G)/PAGE_SIZE$$module$src$module);const x=await WebAssembly.instantiate(I,t);assertPluginExports$$module$src$module(x)&&(x.exports.__wasm_call_ctors(),u.push(x))}catch(A){console.error(\"Error while compiling csound-plugin\",A)}return u},[]);e.start(a);a.exports.__wasi_js_csoundSetMessageStringCallback();return[a,e]},\\nmodule$src$module={};module$src$module.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module;module$src$module.default=$jscompDefaultExport$$module$src$module;const handleCsoundStart$$module$src$workers$common_utils=(a,b,c,d,e)=>f=>{const {csound:g}=f,h=1===b.csoundShouldDaemonize(g);h&&(b.csoundSetOption(g,\"--daemon\"),b.csoundSetOption(g,\"-odac\"));const k=b.csoundStart(g),l=b.csoundGetOutputName(g)||\"test.wav\";logCommonUtils$$module$src$logger(`handleCsoundStart: actual csoundStart result ${k}, outputName: ${l}`)();0!==k&&a.post(`error: csoundStart failed while trying to render ${l},`+\" look out for errors in options and syntax\");setTimeout(()=>{const n=\\nb._isRequestingRtMidiInput(g);if(h||n||l.includes(\"dac\"))d(f);else if(a.broadcastPlayState(\"renderStarted\"),e)e(f);else for(;0===b.csoundPerformKsmps(g););},0);return k},instantiateAudioPacket$$module$src$workers$common_utils=(a,b)=>{const c=[];for(let d=0;d<a;d++)c.push(new Float64Array(b));return c},renderFunction$$module$src$workers$common_utils=({libraryCsound:a,workerMessagePort:b})=>async({csound:c})=>{const d=a.csoundGetKr(c);let e=0,f=0;for(;(\"renderStarted\"===b.vanillaWorkerState||\"renderStarted\"===\\nb.workerState)&&0===e;)e=a.csoundPerformKsmps(c),f+=1,\"function\"===typeof setTimeout&&0===e&&0===f%(2*d)&&await new Promise(g=>setTimeout(g,0));b.broadcastPlayState(\"renderEnded\")};var module$src$workers$common_utils={};module$src$workers$common_utils.handleCsoundStart=handleCsoundStart$$module$src$workers$common_utils;module$src$workers$common_utils.instantiateAudioPacket=instantiateAudioPacket$$module$src$workers$common_utils;module$src$workers$common_utils.renderFunction=renderFunction$$module$src$workers$common_utils;const DEFAULT_BUFFER_LEN$$module$src$constants=128,MAX_CHANNELS$$module$src$constants=32,RING_BUFFER_SIZE$$module$src$constants=16384,MIDI_BUFFER_SIZE$$module$src$constants=1024,MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants=3,CALLBACK_DATA_BUFFER_SIZE$$module$src$constants=16384,initialSharedState$$module$src$constants=[0,4096,0,0,0,0,-1,-1,-1,-1,0,DEFAULT_BUFFER_LEN$$module$src$constants,0,0,0,0,0,0,0,0],AUDIO_STATE$$module$src$constants={CSOUND_LOCK:0,FRAMES_REQUESTED:1,IS_PERFORMING:2,IS_RENDERING:3,\\nIS_PAUSED:4,STOP:5,SAMPLE_RATE:6,KSMPS:7,NCHNLS:8,NCHNLS_I:9,IS_REQUESTING_MIC:10,BUFFER_LEN:11,OUTPUT_READ_INDEX:12,OUTPUT_WRITE_INDEX:13,AVAIL_IN_BUFS:14,AVAIL_OUT_BUFS:15,IS_REQUESTING_RTMIDI:16,RTMIDI_INDEX:17,AVAIL_RTMIDI_EVENTS:18,HAS_PENDING_CALLBACKS:19},DATA_TYPE$$module$src$constants={NUMBER:0,STRING:1,FLOAT_32:2,FLOAT_64:3};var module$src$constants={};module$src$constants.AUDIO_STATE=AUDIO_STATE$$module$src$constants;module$src$constants.CALLBACK_DATA_BUFFER_SIZE=CALLBACK_DATA_BUFFER_SIZE$$module$src$constants;\\nmodule$src$constants.DATA_TYPE=DATA_TYPE$$module$src$constants;module$src$constants.DEFAULT_BUFFER_LEN=DEFAULT_BUFFER_LEN$$module$src$constants;module$src$constants.MAX_CHANNELS=MAX_CHANNELS$$module$src$constants;module$src$constants.MIDI_BUFFER_PAYLOAD_SIZE=MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants;module$src$constants.MIDI_BUFFER_SIZE=MIDI_BUFFER_SIZE$$module$src$constants;module$src$constants.RING_BUFFER_SIZE=RING_BUFFER_SIZE$$module$src$constants;module$src$constants.initialSharedState=initialSharedState$$module$src$constants;let combined$$module$src$workers$sab_worker,pollPromise$$module$src$workers$sab_worker,unlockPromise$$module$src$workers$sab_worker;\\nconst callUncloned$$module$src$workers$sab_worker=async(a,b)=>(a=combined$$module$src$workers$sab_worker.get(a))&&a.apply({},b||[]),sabCreateRealtimeAudioThread$$module$src$workers$sab_worker=({libraryCsound:a,callbacksRequest:b,releaseStop:c,releasePause:d,releaseResumed:e,wasm:f,workerMessagePort:g})=>async({audioStateBuffer:h,audioStreamIn:k,audioStreamOut:l,midiBuffer:n,csound:m})=>{const p=new Int32Array(h);initialSharedState$$module$src$constants.forEach((H,K)=>{Atomics.store(p,K,H)});h=a._isRequestingRtMidiInput(m);\\nvar q=0===Atomics.load(p,AUDIO_STATE$$module$src$constants.NCHNLS_I)&&a.csoundGetInputName(m).includes(\"adc\"),B=Atomics.load(p,AUDIO_STATE$$module$src$constants.NCHNLS),r=Atomics.load(p,AUDIO_STATE$$module$src$constants.NCHNLS_I),v=Atomics.load(p,AUDIO_STATE$$module$src$constants.SAMPLE_RATE);-1<B&&a.csoundSetOption(m,`--nchnls=${B}`);-1<r&&a.csoundSetOption(m,`--nchnls_i=${r}`);-1<v&&a.csoundSetOption(m,`--sr=${v}`);const D=a.csoundGetNchnls(m),y=r||q?a.csoundGetNchnlsInput(m):0,u=Atomics.load(p,\\nAUDIO_STATE$$module$src$constants.SAMPLE_RATE)||a.csoundGetSr(m);Atomics.store(p,AUDIO_STATE$$module$src$constants.NCHNLS,D);Atomics.store(p,AUDIO_STATE$$module$src$constants.NCHNLS_I,y);Atomics.store(p,AUDIO_STATE$$module$src$constants.IS_REQUESTING_MIC,q?1:0);Atomics.store(p,AUDIO_STATE$$module$src$constants.SAMPLE_RATE,a.csoundGetSr(m));Atomics.store(p,AUDIO_STATE$$module$src$constants.IS_REQUESTING_RTMIDI,h);q=a.csoundGetKsmps(m);Atomics.store(p,AUDIO_STATE$$module$src$constants.KSMPS,q);const z=\\na.csoundGet0dBFS(m);B=[];r=[];for(v=0;v<D;++v)B.push(new Float64Array(l,RING_BUFFER_SIZE$$module$src$constants*v,RING_BUFFER_SIZE$$module$src$constants));for(l=0;l<y;++l)r.push(new Float64Array(k,RING_BUFFER_SIZE$$module$src$constants*l,RING_BUFFER_SIZE$$module$src$constants));g.broadcastPlayState(\"realtimePerformanceStarted\");Atomics.store(p,AUDIO_STATE$$module$src$constants.IS_PERFORMING,1);logSABWorker$$module$src$logger(\"Atomic.wait started (thread is now locked)\\\\n\")();k=!0;let C=0,A=0,G=0,F=\\n0,I;l=(H=!1)=>1===Atomics.load(p,AUDIO_STATE$$module$src$constants.STOP)||1!==Atomics.load(p,AUDIO_STATE$$module$src$constants.IS_PERFORMING)||0!==C||H?(0===C&&(logSABWorker$$module$src$logger(\"calling csoundStop and one performKsmps to trigger endof logs\")(),a.csoundStop(m),a.csoundPerformKsmps(m)),logSABWorker$$module$src$logger(\"triggering realtimePerformanceEnded event\")(),g.broadcastPlayState(\"realtimePerformanceEnded\"),logSABWorker$$module$src$logger(\"End of realtimePerformance loop!\")(),c(),\\n!0):!1;for(v=!0;!v||(I=Atomics.wait(p,AUDIO_STATE$$module$src$constants.CSOUND_LOCK,1,1E4));){if(\"timed-out\"===I){l(!0);break}k&&(k=!1,await new Promise(w=>{unlockPromise$$module$src$workers$sab_worker=w;g.broadcastSabUnlocked()}),logSABWorker$$module$src$logger(\"Atomic.wait unlocked, performance started\")());1===Atomics.load(p,AUDIO_STATE$$module$src$constants.IS_PAUSED)&&(await new Promise(w=>setTimeout(w,0)),d(),await new Promise(w=>setTimeout(w,0)),Atomics.wait(p,AUDIO_STATE$$module$src$constants.IS_PAUSED,\\n0),await new Promise(w=>setTimeout(w,0)),e(),await new Promise(w=>setTimeout(w,0)));if(l())break;if(h){var t=Atomics.load(p,AUDIO_STATE$$module$src$constants.AVAIL_RTMIDI_EVENTS);if(0<t){var E=Atomics.load(p,AUDIO_STATE$$module$src$constants.RTMIDI_INDEX),x=E;for(let w=0;w<t;w++){x=(E+MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants*w)%MIDI_BUFFER_SIZE$$module$src$constants;const J=Atomics.load(n,x),L=Atomics.load(n,x+1),M=Atomics.load(n,x+2);a.csoundPushMidiMessage(m,J,L,M)}Atomics.store(p,AUDIO_STATE$$module$src$constants.RTMIDI_INDEX,\\n(x+1)%MIDI_BUFFER_SIZE$$module$src$constants);Atomics.sub(p,AUDIO_STATE$$module$src$constants.AVAIL_RTMIDI_EVENTS,t)}}const H=Atomics.load(p,AUDIO_STATE$$module$src$constants.BUFFER_LEN);t=Atomics.load(p,AUDIO_STATE$$module$src$constants.AVAIL_IN_BUFS)>=H;E=a.csoundGetSpin(m);x=a.csoundGetSpout(m);const K=t&&new Float64Array(f.wasi.memory.buffer,E,q*y),N=new Float64Array(f.wasi.memory.buffer,x,q*D);E=Atomics.load(p,AUDIO_STATE$$module$src$constants.FRAMES_REQUESTED);for(x=0;x<E;x++){if(0===A)if(0===\\nC)C=a.csoundPerformKsmps(m),!v&&Atomics.add(p,AUDIO_STATE$$module$src$constants.AVAIL_OUT_BUFS,q),v=!1;else if(0!==C){Atomics.store(p,AUDIO_STATE$$module$src$constants.IS_PERFORMING,0);l(!0);return}B.forEach((w,J)=>{w[F]=(N[A*D+J]||0)/z});t&&(r.forEach((w,J)=>{K[A*y+J]=(w[G]||0)*z}),G=t&&(G+1)%RING_BUFFER_SIZE$$module$src$constants);F=(F+1)%RING_BUFFER_SIZE$$module$src$constants;A=(A+1)%q}t&&Atomics.sub(p,AUDIO_STATE$$module$src$constants.AVAIL_IN_BUFS,E);1===Atomics.compareExchange(p,AUDIO_STATE$$module$src$constants.HAS_PENDING_CALLBACKS,\\n1,0)&&await new Promise(w=>{pollPromise$$module$src$workers$sab_worker=w;b()});if(l())break;t=Atomics.load(p,AUDIO_STATE$$module$src$constants.OUTPUT_READ_INDEX);t=Math.max(2048-(F<t?F+RING_BUFFER_SIZE$$module$src$constants-t:F-t),0);Atomics.store(p,AUDIO_STATE$$module$src$constants.FRAMES_REQUESTED,t);0===t&&await new Promise(w=>setTimeout(w,H/u*1E3))}},initMessagePort$$module$src$workers$sab_worker=({port:a})=>{const b=new $jscompDefaultExport$$module$src$utils$message_port_state;b.post=c=>a.postMessage({log:c});\\nb.broadcastPlayState=c=>a.postMessage({playStateChange:c});b.broadcastSabUnlocked=()=>a.postMessage({sabWorker:\"unlocked\"});b.ready=!0;return b},initCallbackReplyPort$$module$src$workers$sab_worker=({port:a})=>{a.addEventListener(\"message\",b=>{if(b.data&&b.data.unlock)b=unlockPromise$$module$src$workers$sab_worker,unlockPromise$$module$src$workers$sab_worker=void 0,b&&b();else{b=b.data;var c=b.reduce((d,{id:e,argumentz:f,apiKey:g})=>{try{const h=combined$$module$src$workers$sab_worker.get(g),k=h&&\\nh.apply({},f||[]);d.push({id:e,answer:k})}catch(h){throw Error(h);}return d},[]);a.postMessage(c);c=pollPromise$$module$src$workers$sab_worker;pollPromise$$module$src$workers$sab_worker=void 0;c&&c(b)}});a.start()},renderFunction$$module$src$workers$sab_worker=({libraryCsound:a,callbacksRequest:b,releaseStop:c,releasePause:d,releaseResumed:e,workerMessagePort:f})=>async({audioStateBuffer:g,csound:h})=>{g=new Int32Array(g);Atomics.store(g,AUDIO_STATE$$module$src$constants.IS_RENDERING,1);for(f.broadcastSabUnlocked();1!==\\nAtomics.load(g,AUDIO_STATE$$module$src$constants.STOP)&&0===a.csoundPerformKsmps(h);)1===Atomics.load(g,AUDIO_STATE$$module$src$constants.IS_PAUSED)&&(d(),Atomics.wait(g,AUDIO_STATE$$module$src$constants.IS_PAUSED,0),e()),1===Atomics.compareExchange(g,AUDIO_STATE$$module$src$constants.HAS_PENDING_CALLBACKS,1,0)&&await new Promise(k=>{pollPromise$$module$src$workers$sab_worker=k;b()});Atomics.store(g,AUDIO_STATE$$module$src$constants.IS_RENDERING,0);f.broadcastPlayState(\"renderEnded\");c()},initialize$$module$src$workers$sab_worker=\\nasync({wasmDataURI:a,withPlugins:b=[],messagePort:c,callbackPort:d})=>{logSABWorker$$module$src$logger(\"initializing SABWorker and WASM\")();const e=initMessagePort$$module$src$workers$sab_worker({port:c}),f=()=>d.postMessage(\"poll\"),g=()=>d.postMessage(\"releaseStop\"),h=()=>d.postMessage(\"releasePause\"),k=()=>d.postMessage(\"releaseResumed\");initCallbackReplyPort$$module$src$workers$sab_worker({port:d});const [l,n]=await $jscompDefaultExport$$module$src$module({wasmDataURI:a,withPlugins:b,messagePort:e});\\nl.wasi=n;const m=$jscompDefaultExport$$module$src$libcsound(l);a=pipe$$module$node_modules$rambda$dist$rambda_mjs(assoc$$module$node_modules$rambda$dist$rambda_mjs(\"csoundStart\",(p,q)=>handleCsoundStart$$module$src$workers$common_utils(e,m,n,sabCreateRealtimeAudioThread$$module$src$workers$sab_worker({libraryCsound:m,callbacksRequest:f,wasm:l,workerMessagePort:e,releaseStop:g,releasePause:h,releaseResumed:k}),renderFunction$$module$src$workers$sab_worker({libraryCsound:m,callbacksRequest:f,workerMessagePort:e,\\nwasi:n,releaseStop:g,releasePause:h,releaseResumed:k}))(q)),assoc$$module$node_modules$rambda$dist$rambda_mjs(\"wasm\",l))(m);combined$$module$src$workers$sab_worker=new Map(Object.entries(a));m.csoundInitialize(0);return m.csoundCreate()},sabWorker$$module$src$workers$sab_worker={initialize:initialize$$module$src$workers$sab_worker,callUncloned:callUncloned$$module$src$workers$sab_worker};\\nexpose$$module$node_modules$comlink$dist$esm$comlink_mjs({initialize:sabWorker$$module$src$workers$sab_worker.initialize,callUncloned:sabWorker$$module$src$workers$sab_worker.callUncloned});var module$src$workers$sab_worker={};module$src$workers$sab_worker.sabWorker=sabWorker$$module$src$workers$sab_worker;}).call(this);\\n//# sourceMappingURL=__compiled.sab.worker.js.map\\n'])),\nmodule$dist$__compiled_sab_worker_inline={};module$dist$__compiled_sab_worker_inline.default=$jscompDefaultExport$$module$dist$__compiled_sab_worker_inline;class SharedArrayBufferMainThread$$module$src$mains$sab_main{constructor({audioContext:a,audioWorker:b,audioContextIsProvided:c,inputChannelCount:d,outputChannelCount:e}){this.hasSharedArrayBuffer=!0;this.ipcMessagePorts=new IPCMessagePorts$$module$src$mains$messages_main;this.eventPromises=new EventPromises$$module$src$utils$event_promises;this.publicEvents=new PublicEventAPI$$module$src$events(this);b.ipcMessagePorts=this.ipcMessagePorts;this.audioContextIsProvided=c;this.audioWorker=b;this.audioWorker.onPlayStateChange=\nthis.audioWorker.onPlayStateChange.bind(b);this.currentPlayState=this.csoundInstance=void 0;this.currentDerivedPlayState=\"stop\";this.exportApi={};this.callbackId=0;this.callbackBuffer={};this.audioStateBuffer=new SharedArrayBuffer(initialSharedState$$module$src$constants.length*Int32Array.BYTES_PER_ELEMENT);this.audioStatePointer=new Int32Array(this.audioStateBuffer);c&&Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.SAMPLE_RATE,a.sampleRate);d&&Atomics.store(this.audioStatePointer,\nAUDIO_STATE$$module$src$constants.NCHNLS_I,d);e&&Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.NCHNLS,e);this.audioStreamIn=new SharedArrayBuffer(MAX_CHANNELS$$module$src$constants*RING_BUFFER_SIZE$$module$src$constants*Float64Array.BYTES_PER_ELEMENT);this.audioStreamOut=new SharedArrayBuffer(MAX_CHANNELS$$module$src$constants*RING_BUFFER_SIZE$$module$src$constants*Float64Array.BYTES_PER_ELEMENT);this.midiBufferSAB=new SharedArrayBuffer(MIDI_BUFFER_SIZE$$module$src$constants*\nMIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants*Int32Array.BYTES_PER_ELEMENT);this.midiBuffer=new Int32Array(this.midiBufferSAB);this.onPlayStateChange=this.onPlayStateChange.bind(this);this.prepareRealtimePerformance=this.prepareRealtimePerformance.bind(this);logSABMain$$module$src$logger(\"SharedArrayBufferMainThread got constructed\")()}async terminateInstance(){this.csoundWorker&&(this.csoundWorker.terminate(),delete this.csoundWorker);this.audioWorker&&this.audioWorker.terminateInstance&&(await this.audioWorker.terminateInstance(),\ndelete this.audioWorker.terminateInstance);this.proxyPort&&(this.proxyPort[releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs](),delete this.proxyPort);this.publicEvents&&this.publicEvents.terminateInstance();Object.keys(this.exportApi).forEach(a=>delete this.exportApi[a]);Object.keys(this).forEach(a=>delete this[a])}get api(){return this.exportApi}handleMidiInput({data:[a,b,c]}){var d=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.AVAIL_RTMIDI_EVENTS);const e=Atomics.load(this.audioStatePointer,\nAUDIO_STATE$$module$src$constants.RTMIDI_INDEX);d=(d*MIDI_BUFFER_PAYLOAD_SIZE$$module$src$constants+e)%MIDI_BUFFER_SIZE$$module$src$constants;Atomics.store(this.midiBuffer,d,a);Atomics.store(this.midiBuffer,d+1,b);Atomics.store(this.midiBuffer,d+2,c);Atomics.add(this.audioStatePointer,AUDIO_STATE$$module$src$constants.AVAIL_RTMIDI_EVENTS,1)}async csoundPause(){if(this.eventPromises.isWaiting(\"pause\"))return-1;this.eventPromises.createPausePromise();Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PAUSED,\n1);await this.eventPromises.waitForPause();this.onPlayStateChange(\"realtimePerformancePaused\");return 0}async csoundResume(){1===Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PAUSED)&&1!==Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.STOP)&&1===Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PERFORMING)&&(Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PAUSED,0),Atomics.notify(this.audioStatePointer,\nAUDIO_STATE$$module$src$constants.IS_PAUSED),this.onPlayStateChange(\"realtimePerformanceResumed\"))}async onPlayStateChange(a){if(void 0===this)console.log(\"Failed to announce playstatechange\",a);else if(this.currentPlayState=a,this.publicEvents&&a){switch(a){case \"realtimePerformanceStarted\":logSABMain$$module$src$logger(\"event: realtimePerformanceStarted received, proceeding to call prepareRealtimePerformance\")();try{await this.prepareRealtimePerformance()}catch(b){console.error(b)}break;case \"realtimePerformanceEnded\":this.eventPromises.createStopPromise();\nObject.values(this.callbackBuffer).forEach(({argumentz:b,apiKey:c,resolveCallback:d})=>this.proxyPort.callUncloned(c,b).then(d));this.callbackBuffer={};logSABMain$$module$src$logger(\"event: realtimePerformanceEnded received, beginning cleanup\")();initialSharedState$$module$src$constants.forEach((b,c)=>{Atomics.store(this.audioStatePointer,c,b)});break;case \"renderStarted\":this.publicEvents.triggerRenderStarted(this);this.eventPromises.releaseStartPromise();break;case \"renderEnded\":logSABMain$$module$src$logger(\"event: renderEnded received, beginning cleanup\")(),\nthis.publicEvents.triggerRenderEnded(this),this.eventPromises&&this.eventPromises.releaseStopPromise()}try{await this.audioWorker.onPlayStateChange(a)}catch(b){console.error(b)}}}async prepareRealtimePerformance(){logSABMain$$module$src$logger(\"prepareRealtimePerformance\")();const a=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.NCHNLS),b=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.NCHNLS_I);this.audioWorker.isRequestingInput=Atomics.load(this.audioStatePointer,\nAUDIO_STATE$$module$src$constants.IS_REQUESTING_MIC);this.audioWorker.isRequestingMidi=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_REQUESTING_RTMIDI);const c=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.KSMPS),d=Atomics.load(this.audioStatePointer,AUDIO_STATE$$module$src$constants.SAMPLE_RATE);this.audioWorker.ksmps=c;this.audioWorker.sampleRate=d;this.audioWorker.inputCount=b;this.audioWorker.outputsCount=a}async initialize({wasmDataURI:a,withPlugins:b}){b&&\n!isEmpty$$module$node_modules$rambda$dist$rambda_mjs(b)&&(b=await fetchPlugins$$module$src$utils(b));logSABMain$$module$src$logger(\"initialization: instantiate the SABWorker Thread\")();const c=new Worker($jscompDefaultExport$$module$dist$__compiled_sab_worker_inline());this.csoundWorker=c;const d=this.audioStateBuffer,e=this.audioStatePointer,f=this.audioStreamIn,g=this.audioStreamOut,h=this.midiBuffer;logSABMain$$module$src$logger(\"providing the audioWorker a pointer to SABMain's instance\")();this.audioWorker.csoundWorkerMain=\nthis;logSABMain$$module$src$logger(\"adding message eventListeners for mainMessagePort and mainMessagePortAudio\")();this.ipcMessagePorts.mainMessagePort.addEventListener(\"message\",messageEventHandler$$module$src$mains$messages_main(this));this.ipcMessagePorts.mainMessagePort.start();this.ipcMessagePorts.mainMessagePortAudio.addEventListener(\"message\",messageEventHandler$$module$src$mains$messages_main(this));this.ipcMessagePorts.mainMessagePortAudio.start();logSABMain$$module$src$logger(\"(postMessage) making a message channel from SABMain to SABWorker via workerMessagePort\")();\nthis.ipcMessagePorts.sabMainCallbackReply.addEventListener(\"message\",n=>{switch(n.data){case \"poll\":this.ipcMessagePorts&&this.ipcMessagePorts.sabMainCallbackReply.postMessage(Object.keys(this.callbackBuffer).map(l=>({id:l,apiKey:this.callbackBuffer[l].apiKey,argumentz:this.callbackBuffer[l].argumentz})));break;case \"releaseStop\":this.onPlayStateChange(\"renderStarted\"===this.currentPlayState?\"renderEnded\":\"realtimePerformanceEnded\");this.publicEvents&&this.publicEvents.triggerRealtimePerformanceEnded(this);\nthis.eventPromises&&this.eventPromises.releaseStopPromise();break;case \"releasePause\":this.publicEvents.triggerRealtimePerformancePaused(this);this.eventPromises.releasePausePromise();break;case \"releaseResumed\":this.publicEvents.triggerRealtimePerformanceResumed(this);this.eventPromises.releaseResumePromise();break;default:n.data.forEach(({id:l,answer:p})=>{this.callbackBuffer[l].resolveCallback(p);delete this.callbackBuffer[l]})}});this.ipcMessagePorts.sabMainCallbackReply.start();const k=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(c);\na=a();this.proxyPort=k;const m=await k.initialize(transfer$$module$node_modules$comlink$dist$esm$comlink_mjs({wasmDataURI:a,wasmTransformerDataURI:this.wasmTransformerDataURI,messagePort:this.ipcMessagePorts.workerMessagePort,callbackPort:this.ipcMessagePorts.sabWorkerCallbackReply,withPlugins:b},[a,this.ipcMessagePorts.workerMessagePort,this.ipcMessagePorts.sabWorkerCallbackReply]));this.csoundInstance=m;this.ipcMessagePorts.mainMessagePort.start();this.ipcMessagePorts.mainMessagePortAudio.start();\nlogSABMain$$module$src$logger(\"A proxy port from SABMain to SABWorker established\")();this.exportApi.pause=this.csoundPause.bind(this);this.exportApi.resume=this.csoundResume.bind(this);this.exportApi.terminateInstance=this.terminateInstance.bind(this);this.exportApi.enableAudioInput=()=>console.warn(\"enableAudioInput was ignored: please use -iadc option before calling start with useWorker=true\");this.exportApi.getNode=async()=>{const n=this.audioWorker.audioWorkletNode;return n?n:await new Promise(l=>\n{this.exportApi.once(\"onAudioNodeCreated\",l)})};this.exportApi.getAudioContext=async()=>this.audioWorker.audioContext;this.exportApi=this.publicEvents.decorateAPI(this.exportApi);this.exportApi.addListener(\"message\",console.log);for(const n of Object.keys(api$$module$src$libcsound)){const l=makeProxyCallback$$module$src$utils(k,m,n,this.currentPlayState),p=api$$module$src$libcsound[n];switch(n){case \"csoundCreate\":break;case \"csoundStart\":b=async function(){if(!m||\"number\"!==typeof m)return console.error(\"starting csound failed because csound instance wasn't created\"),\n-1;if(this.eventPromises.isWaiting(\"start\"))return-1;this.eventPromises.createStartPromise();const q=await l({audioStateBuffer:d,audioStreamIn:f,audioStreamOut:g,midiBuffer:h,csound:m});await this.eventPromises.waitForStart();this.ipcMessagePorts&&this.ipcMessagePorts.sabMainCallbackReply.postMessage({unlock:!0});return q};b.toString=()=>p.toString();this.exportApi.start=b.bind(this);break;case \"csoundStop\":b=async()=>{logSABMain$$module$src$logger([\"Checking if it's safe to call stop:\",stopableStates$$module$src$utils.has(this.currentPlayState),\n\"currentPlayState is\",this.currentPlayState].join(\"\\n\"))();return this.eventPromises.isWaiting(\"stop\")?(logSABMain$$module$src$logger(\"already waiting to stop, doing nothing\")(),-1):stopableStates$$module$src$utils.has(this.currentPlayState)?(logSABMain$$module$src$logger(\"Marking SAB's state to STOP\")(),this.eventPromises.createStopPromise(),Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.STOP,1),logSABMain$$module$src$logger(\"Marking that performance is not running anymore (stops the audio too)\")(),\nAtomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PERFORMING,0),\"realtimePerformancePaused\"===this.currentPlayState&&(Atomics.store(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PAUSED,0),Atomics.notify(this.audioStatePointer,AUDIO_STATE$$module$src$constants.IS_PAUSED)),\"renderStarted\"!==this.currentPlayState&&!Atomics.compareExchange(this.audioStatePointer,AUDIO_STATE$$module$src$constants.CSOUND_LOCK,0,1)&&Atomics.notify(this.audioStatePointer,AUDIO_STATE$$module$src$constants.CSOUND_LOCK),\nawait this.eventPromises.waitForStop(),0):-1};this.exportApi.stop=b.bind(this);b.toString=()=>p.toString();break;case \"csoundReset\":b=async()=>{if(this.currentPlayState){if(this.eventPromises.isWaiting(\"reset\"))return-1;stopableStates$$module$src$utils.has(this.currentPlayState)&&await this.exportApi.stop();this.ipcMessagePorts.restartAudioWorkerPorts();this.audioContextIsProvided||(await this.audioWorker.terminateInstance(),delete this.audioWorker.audioContext);return await l([])}};this.exportApi.reset=\nb.bind(this);b.toString=()=>p.toString();break;case \"csoundPushMidiMessage\":b=async(q=0,u=0,t=0)=>{this.handleMidiInput({data:[q,u,t]})};this.exportApi.midiMessage=b.bind(this);b.toString=()=>p.toString();break;case \"fs\":this.exportApi.fs={};Object.keys(p).forEach(q=>{const u=makeProxyCallback$$module$src$utils(k,m,q,this.currentPlayState);u.toString=()=>p[q].toString();this.exportApi.fs[q]=u});break;default:b=async(...q)=>{if(\"realtimePerformanceStarted\"===this.currentPlayState||\"renderStarted\"===\nthis.currentPlayState||this.eventPromises.isWaitingToStart()){const u=this.callbackId;this.callbackId+=1;const t=new Promise((x,r)=>{const y=setTimeout(()=>r(Error(`Worker timed out so ${csoundApiRename$$module$src$utils(n)}() wasn't called!`)),1E4);this.callbackBuffer[u]={resolveCallback:v=>{clearTimeout(y);x(v)},apiKey:n,argumentz:[m,...q]}});Atomics.compareExchange(e,AUDIO_STATE$$module$src$constants.HAS_PENDING_CALLBACKS,0,1);return await t}return await l.apply(void 0,q)},b.toString=()=>p.toString(),\nthis.exportApi[csoundApiRename$$module$src$utils(n)]=b}}logSABMain$$module$src$logger(\"PUBLIC API Generated and stored\")()}}var $jscompDefaultExport$$module$src$mains$sab_main=SharedArrayBufferMainThread$$module$src$mains$sab_main,module$src$mains$sab_main={};module$src$mains$sab_main.default=$jscompDefaultExport$$module$src$mains$sab_main;async function requestMidi$$module$src$utils$request_midi({onMidiMessage:a}){logMidiRequest$$module$src$logger(\"requesting for web-midi connection\")();if(navigator&&navigator.requestMIDIAccess)try{const b=await navigator.requestMIDIAccess();if(b.inputs){const c=b.inputs.values();for(let d=c.next();d&&!d.done;d=c.next())logMidiRequest$$module$src$logger(`Connecting midi-input: ${d.value.name||\"unkown\"}`)(),d.value.onmidimessage=a}else logMidiRequest$$module$src$logger(\"no midi-device detected\")()}catch(b){logMidiRequest$$module$src$logger(\"error while connecting web-midi: \"+\nb)()}else logMidiRequest$$module$src$logger(\"no web-midi support found, midi-input will not work!\")()}var module$src$utils$request_midi={};module$src$utils$request_midi.requestMidi=requestMidi$$module$src$utils$request_midi;var $jscompDefaultExport$$module$dist$__compiled_worklet_worker_inline=()=>\"data:application/javascript;base64,\",\nmodule$dist$__compiled_worklet_worker_inline={};module$dist$__compiled_worklet_worker_inline.default=$jscompDefaultExport$$module$dist$__compiled_worklet_worker_inline;let UID$$module$src$mains$worklet_main=0;\nclass AudioWorkletMainThread$$module$src$mains$worklet_main{constructor({audioContext:a,audioContextIsProvided:b,autoConnect:c}){this.autoConnect=c;this.audioContextIsProvided=b;this.ipcMessagePorts=void 0;this.audioContext=a;this.softwareBufferSize=this.hardwareBufferSize=this.outputsCount=this.inputsCount=this.sampleRate=this.ksmps=this.workletProxy=this.csoundWorkerMain=this.currentPlayState=this.audioWorkletNode=void 0;this.initialize=this.initialize.bind(this);this.onPlayStateChange=this.onPlayStateChange.bind(this);\nthis.terminateInstance=this.terminateInstance.bind(this);this.createWorkletNode=this.createWorkletNode.bind(this);logWorkletMain$$module$src$logger(\"AudioWorkletMainThread was constructed\")()}async terminateInstance(){this.audioWorkletNode&&(this.audioWorkletNode.disconnect(),delete this.audioWorkletNode);if(this.audioContext){if(\"closed\"!==this.audioContext.state)try{await this.audioContext.close()}catch{}delete this.audioContext}this.workletProxy&&(this.workletProxy[releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs](),\ndelete this.workletProxy)}createWorkletNode(a,b,c){a=new AudioWorkletNode(a,\"csound-worklet-processor\",{inputChannelCount:b?[b]:0,outputChannelCount:[this.outputsCount||2],processorOptions:{contextUid:c,isRequestingInput:this.isRequestingInput,inputsCount:b,outputsCount:this.outputsCount,ksmps:this.ksmps,maybeSharedArrayBuffer:this.csoundWorkerMain.hasSharedArrayBuffer&&this.csoundWorkerMain.audioStatePointer,maybeSharedArrayBufferAudioIn:this.csoundWorkerMain.hasSharedArrayBuffer&&this.csoundWorkerMain.audioStreamIn,\nmaybeSharedArrayBufferAudioOut:this.csoundWorkerMain.hasSharedArrayBuffer&&this.csoundWorkerMain.audioStreamOut}});this.csoundWorkerMain.publicEvents.triggerOnAudioNodeCreated(a);return a}async onPlayStateChange(a){this.currentPlayState=a;switch(a){case \"realtimePerformanceStarted\":logWorkletMain$$module$src$logger(\"event received: realtimePerformanceStarted\")();await this.initialize();this.csoundWorkerMain&&this.csoundWorkerMain.eventPromises&&(this.csoundWorkerMain.publicEvents&&this.csoundWorkerMain.publicEvents.triggerRealtimePerformanceStarted(this),\nthis.csoundWorkerMain.eventPromises&&await this.csoundWorkerMain.eventPromises.releaseStartPromise());break;case \"realtimePerformanceEnded\":logWorkletMain$$module$src$logger(\"event received: realtimePerformanceEnded\"+!this.csoundWorkerMain.hasSharedArrayBuffer?\" cleaning up ports\":\"\")();if(!this.audioContextIsProvided&&this.autoConnect&&this.audioContext&&\"closed\"!==this.audioContext.state)try{await this.audioContext.close()}catch{}this.autoConnect&&this.audioWorkletNode&&(this.audioWorkletNode.disconnect(),\ndelete this.audioWorkletNode);this.workletProxy&&(this.workletProxy[releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs](),delete this.workletProxy);this.workletWorkerUrl&&(window.URL||window.webkitURL).revokeObjectURL(this.workletWorkerUrl);this.audioWorkletNode&&delete this.audioWorkletNode;this.softwareBufferSize=this.hardwareBufferSize=this.outputsCount=this.inputsCount=this.sampleRate=this.currentPlayState=void 0;break;case \"realtimePerformancePaused\":this.csoundWorkerMain&&this.csoundWorkerMain.eventPromises&&\n(this.csoundWorkerMain.publicEvents&&this.csoundWorkerMain.publicEvents.triggerRealtimePerformancePaused(this),await this.csoundWorkerMain.eventPromises.releasePausePromise());break;case \"realtimePerformanceResumed\":this.csoundWorkerMain&&this.csoundWorkerMain.eventPromises&&(this.csoundWorkerMain.publicEvents&&this.csoundWorkerMain.publicEvents.triggerRealtimePerformanceResumed(this),await this.csoundWorkerMain.eventPromises.releaseResumePromise())}}async initialize(){this.audioContext||(this.audioContextIsProvided&&\nconsole.error(\"fatal: the provided AudioContext was undefined\"),this.audioContext=new (WebkitAudioContext$$module$src$utils())({sampleRate:this.sampleRate}));\"closed\"===this.audioContext.state&&(this.audioContextIsProvided&&console.error(\"fatal: the provided AudioContext was closed, falling back new AudioContext\"),this.audioContext=new (WebkitAudioContext$$module$src$utils())({sampleRate:this.sampleRate}));this.sampleRate!==this.audioContext.sampleRate&&(this.audioContext=new (WebkitAudioContext$$module$src$utils())({sampleRate:this.sampleRate}),\nthis.audioContextIsProvided&&console.error(\"Internal error: sample rate was ignored from provided audioContext\"));this.workletWorkerUrl=$jscompDefaultExport$$module$dist$__compiled_worklet_worker_inline();try{await this.audioContext.audioWorklet.addModule(this.workletWorkerUrl)}catch(c){console.error(\"Error calling audioWorklet.addModule\",c)}logWorkletMain$$module$src$logger(\"WorkletWorker module added\")();if(this.csoundWorkerMain){var a=`audioWorklet${UID$$module$src$mains$worklet_main}`;UID$$module$src$mains$worklet_main+=\n1;this.isRequestingMidi&&(logWorkletMain$$module$src$logger(\"requesting for web-midi connection\"),requestMidi$$module$src$utils$request_midi({onMidiMessage:this.csoundWorkerMain.handleMidiInput.bind(this.csoundWorkerMain)}));if(this.isRequestingInput){let c;var b=new Promise(f=>{c=f});const d=void 0===navigator.mediaDevices?navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia:navigator.mediaDevices.getUserMedia,e=f=>{if(f){f=this.audioContext.createMediaStreamSource(f);\nthis.inputsCount=f.channelCount;const g=this.createWorkletNode(this.audioContext,f.channelCount,a);this.audioWorkletNode=g;this.autoConnect&&f.connect(g).connect(this.audioContext.destination)}else this.inputsCount=0,this.audioWorkletNode=this.createWorkletNode(this.audioContext,0,a),this.autoConnect&&this.audioWorkletNode.connect(this.audioContext.destination);c&&c()};logWorkletMain$$module$src$logger(\"requesting microphone access\")();void 0===navigator.mediaDevices?d.call(navigator,{audio:{optional:[{echoCancellation:!1,\nsampleSize:32}]}},e,console.error):d.call(navigator.mediaDevices,{audio:{echoCancellation:!1,sampleSize:32}}).then(e).catch(console.error)}else this.audioWorkletNode=this.createWorkletNode(this.audioContext,0,a),logWorkletMain$$module$src$logger(\"connecting Node to AudioContext destination\")(),this.autoConnect&&this.audioWorkletNode.connect(this.audioContext.destination);b&&await b;this.workletProxy=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(this.audioWorkletNode.port);this.ipcMessagePorts.mainMessagePortAudio.addEventListener(\"message\",\nmessageEventHandler$$module$src$mains$messages_main(this));this.ipcMessagePorts.mainMessagePortAudio.start();await this.workletProxy.initialize(transfer$$module$node_modules$comlink$dist$esm$comlink_mjs({contextUid:a,messagePort:this.ipcMessagePorts.workerMessagePortAudio,requestPort:this.ipcMessagePorts.audioWorkerFrameRequestPort,inputPort:this.ipcMessagePorts.audioWorkerAudioInputPort},[this.ipcMessagePorts.workerMessagePortAudio,this.ipcMessagePorts.audioWorkerFrameRequestPort,this.ipcMessagePorts.audioWorkerAudioInputPort]));\nlogWorkletMain$$module$src$logger(\"initialization finished in main\")()}else console.error(\"fatal: worker not reachable from worklet-main thread\")}}var $jscompDefaultExport$$module$src$mains$worklet_main=AudioWorkletMainThread$$module$src$mains$worklet_main,module$src$mains$worklet_main={};module$src$mains$worklet_main.default=$jscompDefaultExport$$module$src$mains$worklet_main;const requestMicrophoneNode$$module$src$mains$io_utils=a=>{const b=void 0===navigator.mediaDevices?navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia:navigator.mediaDevices.getUserMedia;console.log(\"requesting microphone access\");void 0===navigator.mediaDevices?b.call(navigator,{audio:{optional:[{echoCancellation:!1,sampleSize:32}]}},a,console.error):b.call(navigator.mediaDevices,{audio:{echoCancellation:!1,sampleSize:32}}).then(a).catch(console.error)};\nasync function enableAudioInput$$module$src$mains$io_utils(){console.log(\"enabling audio input\");requestMicrophoneNode$$module$src$mains$io_utils(async a=>{if(a){a=(await this.getAudioContext()).createMediaStreamSource(a);this.inputsCount=a.channelCount;const b=await this.getNode();a.connect(b)}})}var module$src$mains$io_utils={};module$src$mains$io_utils.enableAudioInput=enableAudioInput$$module$src$mains$io_utils;module$src$mains$io_utils.requestMicrophoneNode=requestMicrophoneNode$$module$src$mains$io_utils;var $jscompDefaultExport$$module$dist$__compiled_old_spn_worker_inline=()=>(window.URL||window.webkitURL).createObjectURL(new Blob(['(function(){/*\\n\\n Copyright The Closure Library Authors.\\n SPDX-License-Identifier: Apache-2.0\\n*/\\nvar $jscomp=$jscomp||{};$jscomp.scope={};var COMPILED=!0,goog=goog||{};goog.global=this||self;goog.exportPath_=function(a,b,c,d){a=a.split(\".\");d=d||goog.global;a[0]in d||\"undefined\"==typeof d.execScript||d.execScript(\"var \"+a[0]);for(var e;a.length&&(e=a.shift());)if(a.length||void 0===b)d=d[e]&&d[e]!==Object.prototype[e]?d[e]:d[e]={};else if(!c&&goog.isObject(b)&&goog.isObject(d[e]))for(var f in b)b.hasOwnProperty(f)&&(d[e][f]=b[f]);else d[e]=b};\\ngoog.define=function(a,b){if(!COMPILED){var c=goog.global.CLOSURE_UNCOMPILED_DEFINES,d=goog.global.CLOSURE_DEFINES;c&&void 0===c.nodeType&&Object.prototype.hasOwnProperty.call(c,a)?b=c[a]:d&&void 0===d.nodeType&&Object.prototype.hasOwnProperty.call(d,a)&&(b=d[a])}return b};goog.FEATURESET_YEAR=2020;goog.DEBUG=!0;goog.LOCALE=\"en\";goog.getLocale=function(){return goog.LOCALE};goog.TRUSTED_SITE=!0;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;\\ngoog.provide=function(a){if(goog.isInModuleLoader_())throw Error(\"goog.provide cannot be used within a module.\");if(!COMPILED&&goog.isProvided_(a))throw Error(\\'Namespace \"\\'+a+\\'\" already declared.\\');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b,c){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var d=a;(d=d.substring(0,d.lastIndexOf(\".\")))&&!goog.getObjectByName(d);)goog.implicitNamespaces_[d]=!0}goog.exportPath_(a,b,c)};goog.NONCE_PATTERN_=/^[\\\\w+/_-]+[=]{0,2}$/;\\ngoog.getScriptNonce_=function(a){a=(a||goog.global).document;return(a=a.querySelector&&a.querySelector(\"script[nonce]\"))&&(a=a.nonce||a.getAttribute(\"nonce\"))&&goog.NONCE_PATTERN_.test(a)?a:\"\"};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\\ngoog.module=function(a){if(\"string\"!==typeof a||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error(\"Invalid module identifier\");if(!goog.isInGoogModuleLoader_())throw Error(\"Module \"+a+\" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You\\'re likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.\");if(goog.moduleLoaderState_.moduleName)throw Error(\"goog.module may only be called once per module.\");\\ngoog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error(\\'Namespace \"\\'+a+\\'\" already declared.\\');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a].exports;if(!goog.implicitNamespaces_[a])return a=goog.getObjectByName(a),null!=a?a:null}return null};goog.ModuleType={ES6:\"es6\",GOOG:\"goog\"};goog.moduleLoaderState_=null;\\ngoog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var a=goog.global.$jscomp;return a?\"function\"!=typeof a.getCurrentModulePath?!1:!!a.getCurrentModulePath():!1};\\ngoog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");goog.moduleLoaderState_.declareLegacyNamespace=!0};\\ngoog.declareModuleId=function(a){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error(\"goog.declareModuleId may only be called from within an ES6 module\");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error(\"goog.declareModuleId may only be called once per module.\");if(a in goog.loadedModules_)throw Error(\\'Module with namespace \"\\'+a+\\'\" already exists.\\');}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=a;else{var b=goog.global.$jscomp;if(!b||\"function\"!=typeof b.getCurrentModulePath)throw Error(\\'Module with namespace \"\\'+\\na+\\'\" has been loaded incorrectly.\\');b=b.require(b.getCurrentModulePath());goog.loadedModules_[a]={exports:b,type:goog.ModuleType.ES6,moduleId:a}}};goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||\"\",Error(\"Importing test-only code into non-debug environment\"+(a?\": \"+a:\".\"));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&null!=goog.getObjectByName(a)},goog.implicitNamespaces_={\"goog.module\":!0});\\ngoog.getObjectByName=function(a,b){a=a.split(\".\");b=b||goog.global;for(var c=0;c<a.length;c++)if(b=b[a[c]],null==b)return null;return b};goog.addDependency=function(a,b,c,d){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(a,b,c,d)};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};\\ngoog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(a);if(goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(a)}finally{goog.moduleLoaderState_=b}}return null}};goog.requireType=function(a){return{}};goog.basePath=\"\";goog.abstractMethod=function(){throw Error(\"unimplemented abstract method\");};\\ngoog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.TRANSPILE=\"detect\";goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRUSTED_TYPES_POLICY_NAME=\"goog\";\\ngoog.hasBadLetScoping=null;\\ngoog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:\"\",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};var c={},d=c;if(\"function\"===typeof a)d=a.call(void 0,d);else if(\"string\"===typeof a)d=goog.loadModuleFromSource_.call(void 0,d,a);else throw Error(\"Invalid module definition\");var e=goog.moduleLoaderState_.moduleName;if(\"string\"===typeof e&&e)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(e,d,c!==d):goog.SEAL_MODULE_EXPORTS&&\\nObject.seal&&\"object\"==typeof d&&null!=d&&Object.seal(d),goog.loadedModules_[e]={exports:d,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error(\\'Invalid module name \"\\'+e+\\'\"\\');}finally{goog.moduleLoaderState_=b}};goog.loadModuleFromSource_=function(a,b){eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(b));return a};goog.normalizePath_=function(a){a=a.split(\"/\");for(var b=0;b<a.length;)\".\"==a[b]?a.splice(b,1):b&&\"..\"==a[b]&&a[b-1]&&\"..\"!=a[b-1]?a.splice(--b,2):b++;return a.join(\"/\")};\\ngoog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open(\"get\",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};goog.typeOf=function(a){var b=typeof a;return\"object\"!=b?b:a?Array.isArray(a)?\"array\":b:\"null\"};goog.isArrayLike=function(a){var b=goog.typeOf(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length};\\ngoog.isDateLike=function(a){return goog.isObject(a)&&\"function\"==typeof a.getFullYear};goog.isObject=function(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b};goog.getUid=function(a){return Object.prototype.hasOwnProperty.call(a,goog.UID_PROPERTY_)&&a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&\"removeAttribute\"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};\\ngoog.UID_PROPERTY_=\"closure_uid_\"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.cloneObject=function(a){var b=goog.typeOf(a);if(\"object\"==b||\"array\"==b){if(\"function\"===typeof a.clone)return a.clone();if(\"undefined\"!==typeof Map&&a instanceof Map)return new Map(a);if(\"undefined\"!==typeof Set&&a instanceof Set)return new Set(a);b=\"array\"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};\\ngoog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};\\ngoog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}};goog.now=function(){return Date.now()};goog.globalEval=function(a){(0,eval)(a)};\\ngoog.getCssName=function(a,b){if(\".\"==String(a).charAt(0))throw Error(\\'className passed in goog.getCssName must not start with \".\". You passed: \\'+a);var c=function(e){return goog.cssNameMapping_[e]||e},d=function(e){e=e.split(\"-\");for(var f=[],g=0;g<e.length;g++)f.push(c(e[g]));return f.join(\"-\")};d=goog.cssNameMapping_?\"BY_WHOLE\"==goog.cssNameMappingStyle_?c:d:function(e){return e};a=b?a+\"-\"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a};\\ngoog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.GetMsgOptions=function(){};\\ngoog.getMsg=function(a,b,c){c&&c.html&&(a=a.replace(/</g,\"&lt;\"));c&&c.unescapeHtmlEntities&&(a=a.replace(/&lt;/g,\"<\").replace(/&gt;/g,\">\").replace(/&apos;/g,\"\\'\").replace(/&quot;/g,\\'\"\\').replace(/&amp;/g,\"&\"));b&&(a=a.replace(/\\\\{\\\\$([^}]+)}/g,function(d,e){return null!=b&&e in b?b[e]:d}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,!0,c)};goog.exportProperty=function(a,b,c){a[b]=c};\\ngoog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(d,e,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[e].apply(d,g)}};goog.scope=function(a){if(goog.isInModuleLoader_())throw Error(\"goog.scope is not supported within a module.\");a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);\\ngoog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error(\"cannot instantiate an interface (no constructor defined).\");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;\\ngoog.defineClass.createSealingConstructor_=function(a,b){return goog.defineClass.SEAL_CLASS_INSTANCES?function(){var c=a.apply(this,arguments)||this;c[goog.UID_PROPERTY_]=c[goog.UID_PROPERTY_];return c}:a};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\\ngoog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};goog.identity_=function(a){return a};\\ngoog.createTrustedTypesPolicy=function(a){var b=null,c=goog.global.trustedTypes;if(!c||!c.createPolicy)return b;try{b=c.createPolicy(a,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_})}catch(d){goog.logToConsole_(d.message)}return b};\\n!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.isEdge_=function(){return!!(goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:\"\").match(/Edge\\\\/(\\\\d+)(\\\\.\\\\d)*/i)},goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&\"write\"in a},goog.isDocumentLoading_=function(){var a=goog.global.document;return a.attachEvent?\"complete\"!=a.readyState:\"loading\"==a.readyState},goog.findBasePath_=function(){if(void 0!=goog.global.CLOSURE_BASE_PATH&&\"string\"===typeof goog.global.CLOSURE_BASE_PATH)goog.basePath=\\ngoog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;a=b?[b]:a.getElementsByTagName(\"SCRIPT\");for(b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf(\"?\");d=-1==d?c.length:d;if(\"base.js\"==c.slice(d-7,d)){goog.basePath=c.slice(0,d-7);break}}}},goog.findBasePath_(),goog.protectScriptTag_=function(a){return a.replace(/<\\\\/(SCRIPT)/ig,\"\\\\\\\\x3c/$1\")},goog.DebugLoader_=function(){this.dependencies_={};this.idToPath_={};this.written_={};this.loadingDeps_=\\n[];this.depsToLoad_=[];this.paused_=!1;this.factory_=new goog.DependencyFactory;this.deferredCallbacks_={};this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(a,b){function c(){d&&(goog.global.setTimeout(d,0),d=null)}var d=b;if(a.length){b=[];for(var e=0;e<a.length;e++){var f=this.getPathFromDeps_(a[e]);if(!f)throw Error(\"Unregonized namespace: \"+a[e]);b.push(this.dependencies_[f])}f=goog.require;var g=0;for(e=0;e<a.length;e++)f(a[e]),b[e].onLoad(function(){++g==a.length&&c()})}else c()},\\ngoog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+\"deps.js\"),\"deps.js\",[],[],{}));this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(a,b){(a=this.getPathFromDeps_(a))&&(b||this.areDepsLoaded_(this.dependencies_[a].requires))&&(b=this.deferredCallbacks_[a])&&(delete this.deferredCallbacks_[a],b())},goog.DebugLoader_.prototype.setDependencyFactory=function(a){this.factory_=a},goog.DebugLoader_.prototype.load_=\\nfunction(a){if(this.getPathFromDeps_(a)){var b=this,c=[],d=function(e){var f=b.getPathFromDeps_(e);if(!f)throw Error(\"Bad dependency path or symbol: \"+e);if(!b.written_[f]){b.written_[f]=!0;e=b.dependencies_[f];for(f=0;f<e.requires.length;f++)goog.isProvided_(e.requires[f])||d(e.requires[f]);c.push(e)}};d(a);a=!!this.depsToLoad_.length;this.depsToLoad_=this.depsToLoad_.concat(c);this.paused_||a||this.loadDeps_()}else goog.logToConsole_(\"goog.require could not find: \"+a)},goog.DebugLoader_.prototype.loadDeps_=\\nfunction(){for(var a=this,b=this.paused_;this.depsToLoad_.length&&!b;)(function(){var c=!1,d=a.depsToLoad_.shift(),e=!1;a.loading_(d);var f={pause:function(){if(c)throw Error(\"Cannot call pause after the call to load.\");b=!0},resume:function(){c?a.resume_():b=!1},loaded:function(){if(e)throw Error(\"Double call to loaded.\");e=!0;a.loaded_(d)},pending:function(){for(var g=[],h=0;h<a.loadingDeps_.length;h++)g.push(a.loadingDeps_[h]);return g},setModuleState:function(g){goog.moduleLoaderState_={type:g,\\nmoduleName:\"\",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(g,h,k){k&&(goog.loadedModules_[k]={exports:h,type:goog.ModuleType.ES6,moduleId:k||\"\"})},registerGoogModuleExports:function(g,h){goog.loadedModules_[g]={exports:h,type:goog.ModuleType.GOOG,moduleId:g}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(g){if(c)throw Error(\"Cannot register with defer after the call to load.\");a.defer_(d,g)},areDepsLoaded:function(){return a.areDepsLoaded_(d.requires)}};\\ntry{d.load(f)}finally{c=!0}})();b&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(a){this.loadingDeps_.push(a)},goog.DebugLoader_.prototype.loaded_=function(a){for(var b=0;b<this.loadingDeps_.length;b++)if(this.loadingDeps_[b]==a){this.loadingDeps_.splice(b,1);break}for(b=0;b<this.deferredQueue_.length;b++)if(this.deferredQueue_[b]==\\na.path){this.deferredQueue_.splice(b,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);a.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(a){for(var b=0;b<a.length;b++){var c=this.getPathFromDeps_(a[b]);if(!c||!(c in this.deferredCallbacks_||goog.isProvided_(a[b])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=function(a){return a in this.idToPath_?\\nthis.idToPath_[a]:a in this.dependencies_?a:null},goog.DebugLoader_.prototype.defer_=function(a,b){this.deferredCallbacks_[a.path]=b;this.deferredQueue_.push(a.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(a,b,c){},goog.LoadController.prototype.setModuleState=\\nfunction(a){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(a){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(a,b,c,d,e){this.path=a;this.relativePath=b;this.provides=c;this.requires=d;this.loadFlags=e;this.loaded_=!1;this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var a=this.path,b=a.indexOf(\"://\");0<=b&&(a=a.substring(b+3),b=a.indexOf(\"/\"),0<=b&&(a=a.substring(b+1)));return a},\\ngoog.Dependency.prototype.onLoad=function(a){this.loaded_?a():this.loadCallbacks_.push(a)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var a=this.loadCallbacks_;this.loadCallbacks_=[];for(var b=0;b<a.length;b++)a[b]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(a){var b=Math.random().toString(32);goog.Dependency.callbackMap_[b]=a;return b},goog.Dependency.unregisterCallback_=function(a){delete goog.Dependency.callbackMap_[a]},\\ngoog.Dependency.callback_=function(a,b){if(a in goog.Dependency.callbackMap_){for(var c=goog.Dependency.callbackMap_[a],d=[],e=1;e<arguments.length;e++)d.push(arguments[e]);c.apply(void 0,d)}else throw Error(\"Callback key \"+a+\" does not exist (was base.js loaded more than once?).\");},goog.Dependency.prototype.load=function(a){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var b=goog.global.document;if(\"complete\"==\\nb.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\\\\bdeps.js$/.test(this.path)){a.loaded();return}throw Error(\\'Cannot write \"\\'+this.path+\\'\" after document load\\');}var c=goog.getScriptNonce_();if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var d=function(h){h.readyState&&\"complete\"!=h.readyState?h.onload=d:(goog.Dependency.unregisterCallback_(e),a.loaded())};var e=goog.Dependency.registerCallback_(d);c=c?\\' nonce=\"\\'+c+\\'\"\\':\"\";var f=\\'<script src=\"\\'+this.path+\\'\"\\'+\\nc+(goog.Dependency.defer_?\" defer\":\"\")+\\' id=\"script-\\'+e+\\'\">\\\\x3c/script>\\';f+=\"<script\"+c+\">\";f=goog.Dependency.defer_?f+(\"document.getElementById(\\'script-\"+e+\"\\').onload = function() {\\\\n  goog.Dependency.callback_(\\'\"+e+\"\\', this);\\\\n};\\\\n\"):f+(\"goog.Dependency.callback_(\\'\"+e+\"\\', document.getElementById(\\'script-\"+e+\"\\'));\");f+=\"\\\\x3c/script>\";b.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(f):f)}else{var g=b.createElement(\"script\");g.defer=goog.Dependency.defer_;g.async=!1;c&&(g.nonce=\\nc);g.onload=function(){g.onload=null;a.loaded()};g.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path;b.head.appendChild(g)}}else goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"),\"deps.js\"==this.relativePath?(goog.logToConsole_(\"Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true.\"),a.loaded()):a.pause()},goog.Es6ModuleDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,\\nb,c,d,e)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(a){function b(l,m){var n=\"\",p=goog.getScriptNonce_();p&&(n=\\' nonce=\"\\'+p+\\'\"\\');l=m?\\'<script type=\"module\" crossorigin\\'+n+\">\"+m+\"\\\\x3c/script>\":\\'<script type=\"module\" crossorigin src=\"\\'+l+\\'\"\\'+n+\">\\\\x3c/script>\";d.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(l):l)}function c(l,m){var n=d.createElement(\"script\");n.defer=!0;n.async=!1;n.type=\"module\";n.setAttribute(\"crossorigin\",\\n!0);var p=goog.getScriptNonce_();p&&(n.nonce=p);m?n.text=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(m):m:n.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(l):l;d.head.appendChild(n)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var d=goog.global.document,e=this;if(goog.isDocumentLoading_()){var f=b;goog.Dependency.defer_=!0}else f=c;var g=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(g);\\na.setModuleState(goog.ModuleType.ES6)});f(void 0,\\'goog.Dependency.callback_(\"\\'+g+\\'\")\\');f(this.path,void 0);var h=goog.Dependency.registerCallback_(function(l){goog.Dependency.unregisterCallback_(h);a.registerEs6ModuleExports(e.path,l,goog.moduleLoaderState_.moduleName)});f(void 0,\\'import * as m from \"\\'+this.path+\\'\"; goog.Dependency.callback_(\"\\'+h+\\'\", m)\\');var k=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(k);a.clearModuleState();a.loaded()});f(void 0,\\'goog.Dependency.callback_(\"\\'+\\nk+\\'\")\\')}else goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"),a.pause()},goog.TransformedDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e);this.contents_=null;this.lazyFetch_=!goog.inHtmlDocument_()||!(\"noModule\"in goog.global.document.createElement(\"script\"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(a){function b(){e.contents_=goog.loadFileSync_(e.path);e.contents_&&(e.contents_=\\ne.transform(e.contents_),e.contents_&&(e.contents_+=\"\\\\n//# sourceURL=\"+e.path))}function c(){e.lazyFetch_&&b();if(e.contents_){f&&a.setModuleState(goog.ModuleType.ES6);try{var l=e.contents_;e.contents_=null;goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(l));if(f)var m=goog.moduleLoaderState_.moduleName}finally{f&&a.clearModuleState()}f&&goog.global.$jscomp.require.ensure([e.getPathName()],function(){a.registerEs6ModuleExports(e.path,goog.global.$jscomp.require(e.getPathName()),m)});a.loaded()}}\\nfunction d(){var l=goog.global.document,m=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(m);c()}),n=goog.getScriptNonce_();n=\"<script\"+(n?\\' nonce=\"\\'+n+\\'\"\\':\"\")+\">\"+goog.protectScriptTag_(\\'goog.Dependency.callback_(\"\\'+m+\\'\");\\')+\"\\\\x3c/script>\";l.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(n):n)}var e=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)b(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT(\"\",this.contents_)?(this.contents_=null,a.loaded()):\\na.pause();else{var f=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||b();var g=1<a.pending().length;if(goog.Dependency.defer_&&(g||goog.isDocumentLoading_()))a.defer(function(){c()});else{var h=goog.global.document;g=goog.inHtmlDocument_()&&(\"ActiveXObject\"in goog.global||goog.isEdge_());if(f&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!g){goog.Dependency.defer_=!0;a.pause();var k=h.onreadystatechange;h.onreadystatechange=function(){\"interactive\"==h.readyState&&(h.onreadystatechange=\\nk,c(),a.resume());\"function\"===typeof k&&k.apply(void 0,arguments)}}else goog.inHtmlDocument_()&&goog.isDocumentLoading_()?d():c()}}},goog.TransformedDependency.prototype.transform=function(a){},goog.PreTranspiledEs6ModuleDependency=function(a,b,c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(a){return a},goog.GoogModuleDependency=function(a,b,\\nc,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(a){return goog.LOAD_MODULE_USING_EVAL&&void 0!==goog.global.JSON?\"goog.loadModule(\"+goog.global.JSON.stringify(a+\"\\\\n//# sourceURL=\"+this.path+\"\\\\n\")+\");\":\\'goog.loadModule(function(exports) {\"use strict\";\\'+a+\"\\\\n;return exports});\\\\n//# sourceURL=\"+this.path+\"\\\\n\"},goog.DebugLoader_.prototype.addDependency=function(a,b,c,d){b=\\nb||[];a=a.replace(/\\\\\\\\/g,\"/\");var e=goog.normalizePath_(goog.basePath+a);d&&\"boolean\"!==typeof d||(d=d?{module:goog.ModuleType.GOOG}:{});c=this.factory_.createDependency(e,a,b,c,d);this.dependencies_[e]=c;for(c=0;c<b.length;c++)this.idToPath_[b[c]]=e;this.idToPath_[a]=e},goog.DependencyFactory=function(){},goog.DependencyFactory.prototype.createDependency=function(a,b,c,d,e){return e.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(a,b,c,d,e):e.module==goog.ModuleType.ES6?goog.ASSUME_ES_MODULES_TRANSPILED?\\nnew goog.PreTranspiledEs6ModuleDependency(a,b,c,d,e):new goog.Es6ModuleDependency(a,b,c,d,e):new goog.Dependency(a,b,c,d,e)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(a){goog.debugLoader_.setDependencyFactory(a)},goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+\"#base\"):null,goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),\\ngoog.bootstrap=function(a,b){goog.debugLoader_.bootstrap(a,b)});if(!COMPILED){var isChrome87=!1;try{isChrome87=eval(goog.global.trustedTypes.emptyScript)!==goog.global.trustedTypes.emptyScript}catch(a){}goog.CLOSURE_EVAL_PREFILTER_=goog.global.trustedTypes&&isChrome87&&goog.createTrustedTypesPolicy(\"goog#base#devonly#eval\")||{createScript:goog.identity_}};const proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.proxy\"),createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.endpoint\"),releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.releaseProxy\"),throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs=Symbol(\"Comlink.thrown\"),isObject$$module$node_modules$comlink$dist$esm$comlink_mjs=a=>\"object\"===typeof a&&null!==a||\"function\"===typeof a,proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs=\\n{canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs],serialize(a){const {port1:b,port2:c}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b);return[c,[c]]},deserialize(a){a.start();return wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a)}},throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs={canHandle:a=>isObject$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&\\nthrowMarker$$module$node_modules$comlink$dist$esm$comlink_mjs in a,serialize({value:a}){return[a instanceof Error?{isError:!0,value:{message:a.message,name:a.name,stack:a.stack}}:{isError:!1,value:a},[]]},deserialize(a){if(a.isError)throw Object.assign(Error(a.value.message),a.value);throw a.value;}},transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs=new Map([[\"proxy\",proxyTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs],[\"throw\",throwTransferHandler$$module$node_modules$comlink$dist$esm$comlink_mjs]]);\\nfunction expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self){b.addEventListener(\"message\",function e(d){if(d&&d.data){var {id:f,type:g,path:h}=Object.assign({path:[]},d.data),k=(d.data.argumentList||[]).map(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);try{const m=h.slice(0,-1).reduce((p,q)=>p[q],a),n=h.reduce((p,q)=>p[q],a);switch(g){case \"GET\":var l=n;break;case \"SET\":m[h.slice(-1)[0]]=fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(d.data.value);\\nl=!0;break;case \"APPLY\":l=n.apply(m,k);break;case \"CONSTRUCT\":const p=new n(...k);l=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(p);break;case \"ENDPOINT\":const {port1:q,port2:r}=new MessageChannel;expose$$module$node_modules$comlink$dist$esm$comlink_mjs(a,r);l=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(q,[q]);break;case \"RELEASE\":l=void 0;break;default:return}}catch(m){l={value:m,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0}}Promise.resolve(l).catch(m=>\\n({value:m,[throwMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:0})).then(m=>{const [n,p]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(m);b.postMessage(Object.assign(Object.assign({},n),{id:f}),p);\"RELEASE\"===g&&(b.removeEventListener(\"message\",e),closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(b))})}});b.start&&b.start()}function isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return\"MessagePort\"===a.constructor.name}\\nfunction closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a){isMessagePort$$module$node_modules$comlink$dist$esm$comlink_mjs(a)&&a.close()}function wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[],b)}function throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(a){if(a)throw Error(\"Proxy has been released and is not useable\");}\\nfunction createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=[],c=function(){}){let d=!1;const e=new Proxy(c,{get(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);if(g===releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs)return()=>requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"RELEASE\",path:b.map(h=>h.toString())}).then(()=>{closeEndPoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a);d=!0});if(\"then\"===\\ng){if(0===b.length)return{then:()=>e};f=requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"GET\",path:b.map(h=>h.toString())}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return f.then.bind(f)}return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,[...b,g])},set(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [k,l]=toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,\\n{type:\"SET\",path:[...b,g].map(m=>m.toString()),value:k},l).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},apply(f,g,h){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);f=b[b.length-1];if(f===createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs)return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"ENDPOINT\"}).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);if(\"bind\"===f)return createProxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a,\\nb.slice(0,-1));const [k,l]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(h);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,{type:\"APPLY\",path:b.map(m=>m.toString()),argumentList:k},l).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)},construct(f,g){throwIfProxyReleased$$module$node_modules$comlink$dist$esm$comlink_mjs(d);const [h,k]=processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(g);return requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,\\n{type:\"CONSTRUCT\",path:b.map(l=>l.toString()),argumentList:h},k).then(fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs)}});return e}function myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Array.prototype.concat.apply([],a)}\\nfunction processArguments$$module$node_modules$comlink$dist$esm$comlink_mjs(a){a=a.map(toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs);return[a.map(b=>b[0]),myFlat$$module$node_modules$comlink$dist$esm$comlink_mjs(a.map(b=>b[1]))]}const transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs=new WeakMap;function transfer$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b){transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.set(a,b);return a}\\nfunction proxy$$module$node_modules$comlink$dist$esm$comlink_mjs(a){return Object.assign(a,{[proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs]:!0})}function windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b=self,c=\"*\"){return{postMessage:(d,e)=>a.postMessage(d,c,e),addEventListener:b.addEventListener.bind(b),removeEventListener:b.removeEventListener.bind(b)}}\\nfunction toWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){for(const [b,c]of transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs)if(c.canHandle(a)){const [d,e]=c.serialize(a);return[{type:\"HANDLER\",name:b,value:d},e]}return[{type:\"RAW\",value:a},transferCache$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a)||[]]}\\nfunction fromWireValue$$module$node_modules$comlink$dist$esm$comlink_mjs(a){switch(a.type){case \"HANDLER\":return transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs.get(a.name).deserialize(a.value);case \"RAW\":return a.value}}\\nfunction requestResponseMessage$$module$node_modules$comlink$dist$esm$comlink_mjs(a,b,c){return new Promise(d=>{const e=generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs();a.addEventListener(\"message\",function h(g){g.data&&g.data.id&&g.data.id===e&&(a.removeEventListener(\"message\",h),d(g.data))});a.start&&a.start();a.postMessage(Object.assign({id:e},b),c)})}\\nfunction generateUUID$$module$node_modules$comlink$dist$esm$comlink_mjs(){return Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join(\"-\")}var module$node_modules$comlink$dist$esm$comlink_mjs={};module$node_modules$comlink$dist$esm$comlink_mjs.createEndpoint=createEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.expose=expose$$module$node_modules$comlink$dist$esm$comlink_mjs;\\nmodule$node_modules$comlink$dist$esm$comlink_mjs.proxy=proxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.proxyMarker=proxyMarker$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.releaseProxy=releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.transfer=transfer$$module$node_modules$comlink$dist$esm$comlink_mjs;\\nmodule$node_modules$comlink$dist$esm$comlink_mjs.transferHandlers=transferHandlers$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.windowEndpoint=windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs;module$node_modules$comlink$dist$esm$comlink_mjs.wrap=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs;var module$node_modules$lines_logger$lib$index={default:{}};module$node_modules$lines_logger$lib$index.default.__esModule=!0;module$node_modules$lines_logger$lib$index.default.LoggerFactory=module$node_modules$lines_logger$lib$index.default.logLevels=void 0;module$node_modules$lines_logger$lib$index.default.logLevels={log_raise_error:1,log_with_warnings:2,trace:3,debug:4,info:5,warn:6,error:7,disable:8};\\nvar LoggerFactory$$module$node_modules$lines_logger$lib$index=function(){function a(b,c){if(void 0===b&&(b=\"log_with_warnings\"),void 0===c&&(c=null),this.logLevel=b,!module$node_modules$lines_logger$lib$index.default.logLevels[b])throw Error(\"Invalid log level \"+b+\" allowed: \"+JSON.stringify(module$node_modules$lines_logger$lib$index.default.logLevels));this.mockConsole=c||console}return a.prototype.dummy=function(){},a.prototype.setLogWarnings=function(b){this.logLevel=b},a.prototype.getLogWarnings=\\nfunction(){return this.logLevel},a.prototype.getSingleLoggerColor=function(b,c,d){return this.getSingleLoggerStyle(b,this.getColorStyle(c),d)},a.prototype.getSingleLogger=function(b,c){var d=this.getRandomColor(b);return this.getSingleLoggerStyle(b,this.getColorStyle(d),c)},a.prototype.getSingleLoggerStyle=function(b,c,d,e){var f=this;return void 0===e&&(e=\"log_with_warnings\"),function(){for(var g=[],h=0;h<arguments.length;h++)g[h]=arguments[h];if(module$node_modules$lines_logger$lib$index.default.logLevels[f.logLevel]>\\nmodule$node_modules$lines_logger$lib$index.default.logLevels[e])return f.dummy;g=Array.prototype.slice.call(g);h=g.shift().split(\"{}\");for(var k=[f.mockConsole,\"%c\"+b,c],l=0;l<h.length;l++)k.push(h[l]),void 0!==g[l]&&k.push(g[l]);if(h.length-1!==g.length)if(\"log_with_warnings\"===f.logLevel)f.mockConsole.error(\"MissMatch amount of arguments\");else if(\"log_raise_error\"===f.logLevel)throw Error(\"MissMatch amount of arguments\");return Function.prototype.bind.apply(d,k)}},a.prototype.getLoggerColor=function(b,\\nc){return this.getLoggerStyle(b,this.getColorStyle(c))},a.prototype.getColorStyle=function(b){return\"color: white; background-color: \"+b+\"; padding: 2px 6px; border-radius: 2px; font-size: 10px\"},a.getHash=function(b,c){void 0===c&&(c=0);var d=3735928559^c;c^=1103547991;for(var e=0,f;e<b.length;e++)f=b.charCodeAt(e),d=Math.imul(d^f,2654435761),c=Math.imul(c^f,1597334677);return d=Math.imul(d^d>>>16,2246822507)^Math.imul(c^c>>>13,3266489909),4294967296*(2097151&(Math.imul(c^c>>>16,2246822507)^Math.imul(d^\\nd>>>13,3266489909)))+(d>>>0)},a.prototype.getRandomColor=function(b){void 0===b&&(b=\"\");b=a.getHash(b);for(var c=\"#\",d=0;3>d;d++)c+=(\"00\"+(8+(b>>7*d&127)).toString(16)).substr(-2);return c},a.prototype.getLogger=function(b){return this.getLoggerColor(b,this.getRandomColor(b))},a.prototype.getLoggerStyle=function(b,c){return{trace:this.getSingleLoggerStyle(b,c,this.mockConsole.trace,\"trace\"),debug:this.getSingleLoggerStyle(b,c,this.mockConsole.debug,\"debug\"),log:this.getSingleLoggerStyle(b,c,this.mockConsole.log,\\n\"info\"),warn:this.getSingleLoggerStyle(b,c,this.mockConsole.warn,\"warn\"),error:this.getSingleLoggerStyle(b,c,this.mockConsole.error,\"error\")}},a}();module$node_modules$lines_logger$lib$index.default.LoggerFactory=LoggerFactory$$module$node_modules$lines_logger$lib$index;let logWorkletMain$$module$src$logger,logWorkletWorker$$module$src$logger,logSABMain$$module$src$logger,logSABWorker$$module$src$logger,logVANMain$$module$src$logger,logVANWorker$$module$src$logger,logOldSpnMain$$module$src$logger,logOldSpnWorker$$module$src$logger,logIndex$$module$src$logger,logSPNMainSingle$$module$src$logger,logSinglethreadWorkletMain$$module$src$logger,logSinglethreadWorkletWorker$$module$src$logger,logCommonUtils$$module$src$logger,logWasmModule$$module$src$logger,logMidiRequest$$module$src$logger;\\nconst isProd$$module$src$logger=1;logWorkletMain$$module$src$logger=a=>b=>{};logWorkletWorker$$module$src$logger=a=>b=>{};logSABMain$$module$src$logger=a=>b=>{};logSABWorker$$module$src$logger=a=>b=>{};logVANMain$$module$src$logger=a=>b=>{};logVANWorker$$module$src$logger=a=>b=>{};logOldSpnMain$$module$src$logger=a=>b=>{};logOldSpnWorker$$module$src$logger=a=>b=>{};logIndex$$module$src$logger=a=>b=>{};logSPNMainSingle$$module$src$logger=a=>b=>{};\\nlogSinglethreadWorkletMain$$module$src$logger=a=>b=>{};logSinglethreadWorkletWorker$$module$src$logger=a=>b=>{};logCommonUtils$$module$src$logger=a=>b=>{};logWasmModule$$module$src$logger=a=>b=>{};logMidiRequest$$module$src$logger=a=>b=>{};var $jscompDefaultExport$$module$src$logger=a=>b=>{},module$src$logger={};module$src$logger.default=$jscompDefaultExport$$module$src$logger;module$src$logger.logCommonUtils=logCommonUtils$$module$src$logger;module$src$logger.logIndex=logIndex$$module$src$logger;\\nmodule$src$logger.logMidiRequest=logMidiRequest$$module$src$logger;module$src$logger.logOldSpnMain=logOldSpnMain$$module$src$logger;module$src$logger.logOldSpnWorker=logOldSpnWorker$$module$src$logger;module$src$logger.logSABMain=logSABMain$$module$src$logger;module$src$logger.logSABWorker=logSABWorker$$module$src$logger;module$src$logger.logSPNMainSingle=logSPNMainSingle$$module$src$logger;module$src$logger.logSinglethreadWorkletMain=logSinglethreadWorkletMain$$module$src$logger;\\nmodule$src$logger.logSinglethreadWorkletWorker=logSinglethreadWorkletWorker$$module$src$logger;module$src$logger.logVANMain=logVANMain$$module$src$logger;module$src$logger.logVANWorker=logVANWorker$$module$src$logger;module$src$logger.logWasmModule=logWasmModule$$module$src$logger;module$src$logger.logWorkletMain=logWorkletMain$$module$src$logger;module$src$logger.logWorkletWorker=logWorkletWorker$$module$src$logger;const handleCsoundStart$$module$src$workers$common_utils=(a,b,c,d,e)=>f=>{const {csound:g}=f,h=1===b.csoundShouldDaemonize(g);h&&(b.csoundSetOption(g,\"--daemon\"),b.csoundSetOption(g,\"-odac\"));const k=b.csoundStart(g),l=b.csoundGetOutputName(g)||\"test.wav\";logCommonUtils$$module$src$logger(`handleCsoundStart: actual csoundStart result ${k}, outputName: ${l}`)();0!==k&&a.post(`error: csoundStart failed while trying to render ${l},`+\" look out for errors in options and syntax\");setTimeout(()=>{const m=\\nb._isRequestingRtMidiInput(g);if(h||m||l.includes(\"dac\"))d(f);else if(a.broadcastPlayState(\"renderStarted\"),e)e(f);else for(;0===b.csoundPerformKsmps(g););},0);return k},instantiateAudioPacket$$module$src$workers$common_utils=(a,b)=>{const c=[];for(let d=0;d<a;d++)c.push(new Float64Array(b));return c},renderFunction$$module$src$workers$common_utils=({libraryCsound:a,workerMessagePort:b})=>async({csound:c})=>{const d=a.csoundGetKr(c);let e=0,f=0;for(;(\"renderStarted\"===b.vanillaWorkerState||\"renderStarted\"===\\nb.workerState)&&0===e;)e=a.csoundPerformKsmps(c),f+=1,\"function\"===typeof setTimeout&&0===e&&0===f%(2*d)&&await new Promise(g=>setTimeout(g,0));b.broadcastPlayState(\"renderEnded\")};var module$src$workers$common_utils={};module$src$workers$common_utils.handleCsoundStart=handleCsoundStart$$module$src$workers$common_utils;module$src$workers$common_utils.instantiateAudioPacket=instantiateAudioPacket$$module$src$workers$common_utils;module$src$workers$common_utils.renderFunction=renderFunction$$module$src$workers$common_utils;function MessagePortState$$module$src$utils$message_port_state(){}MessagePortState$$module$src$utils$message_port_state.prototype.ready=!1;MessagePortState$$module$src$utils$message_port_state.prototype.port=void 0;MessagePortState$$module$src$utils$message_port_state.prototype.post=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.broadcastPlayState=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.workerState=void 0;\\nMessagePortState$$module$src$utils$message_port_state.prototype.vanillaWorkerState=void 0;var $jscompDefaultExport$$module$src$utils$message_port_state=MessagePortState$$module$src$utils$message_port_state,module$src$utils$message_port_state={};module$src$utils$message_port_state.MessagePortState=MessagePortState$$module$src$utils$message_port_state;module$src$utils$message_port_state.default=$jscompDefaultExport$$module$src$utils$message_port_state;const WebkitAudioContext$$module$src$utils$new_audio_context=()=>{if(void 0!==window.webkitAudioContext)return window.webkitAudioContext;if(void 0!==window.AudioContext)return window.AudioContext},newAudioContext$$module$src$utils$new_audio_context=()=>{const a=WebkitAudioContext$$module$src$utils$new_audio_context();if(a)return new a};var module$src$utils$new_audio_context={};module$src$utils$new_audio_context.WebkitAudioContext=WebkitAudioContext$$module$src$utils$new_audio_context;\\nmodule$src$utils$new_audio_context.newAudioContext=newAudioContext$$module$src$utils$new_audio_context;function add$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>add$$module$node_modules$rambda$dist$rambda_mjs(a,c):Number(a)+Number(b)}const cloneList$$module$node_modules$rambda$dist$rambda_mjs=a=>Array.prototype.slice.call(a);function curry$$module$node_modules$rambda$dist$rambda_mjs(a,b=[]){return(...c)=>{c=[...b,...c];return c.length>=a.length?a(...c):curry$$module$node_modules$rambda$dist$rambda_mjs(a,c)}}\\nfunction adjustFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d=0>a?c.length+a:a;if(a>=c.length||0>d)return c;a=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);a[d]=b(a[d]);return a}const adjust$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(adjustFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction all$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>all$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(!a(b[c]))return!1;return!0}function allPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(!a[c](...b))return!1;c++}return!0}}function always$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>a}\\nfunction and$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>and$$module$node_modules$rambda$dist$rambda_mjs(a,c):a&&b}function any$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>any$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=0;for(;c<b.length;){if(a(b[c],c))return!0;c++}return!1}\\nfunction anyPass$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{let c=0;for(;c<a.length;){if(a[c](...b))return!0;c++}return!1}}function append$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>append$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(\"string\"===typeof b)return b.split(\"\").concat(a);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);c.push(a);return c}\\nfunction apply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>apply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.apply(this,b)}const {isArray:isArray$$module$node_modules$rambda$dist$rambda_mjs}=Array;\\nfunction __findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a,b=0){for(const c in a)!1!==a.hasOwnProperty(c)&&\"constructor\"!==c&&(\"object\"===typeof a[c]&&(b=Math.max(b,__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a[c]))),\"function\"===typeof a[c]&&(b=Math.max(b,a[c].length)));return b}\\nfunction __filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(){const a=[];let b=0;const c=arguments.length;for(;b<c&&\"undefined\"!==typeof arguments[b];)a[b]=arguments[b],b++;return a}\\nfunction __applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){var d=b-c.length;if(1===d)return f=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f));if(2===d)return(f,g)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g));if(3===d)return(f,g,h)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,\\nb,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h));if(4===d)return(f,g,h,k)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,f,g,h,k));if(4<d)return(...f)=>__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,b,__filterUndefined$$module$node_modules$rambda$dist$rambda_mjs(...c,...f));if(isArray$$module$node_modules$rambda$dist$rambda_mjs(a)){var e=[];d=0;const f=a.length;\\nfor(;d<f;d++){if(\"object\"===typeof a[d]||isArray$$module$node_modules$rambda$dist$rambda_mjs(a[d]))e[d]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[d],b,c);\"function\"===typeof a[d]&&(e[d]=a[d](...c))}return e}d={};for(e in a)!1!==a.hasOwnProperty(e)&&\"constructor\"!==e&&(\"object\"===typeof a[e]?d[e]=__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a[e],b,c):\"function\"===typeof a[e]&&(d[e]=a[e](...c)));return d}\\nfunction applySpec$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs(a);return 0===c?()=>({}):__applySpecWithArity$$module$node_modules$rambda$dist$rambda_mjs(a,c,b)}function assocFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return Object.assign({},c,{[a]:b})}const assoc$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction _isInteger$$module$node_modules$rambda$dist$rambda_mjs(a){return a<<0===a}const isInteger$$module$node_modules$rambda$dist$rambda_mjs=Number.isInteger||_isInteger$$module$node_modules$rambda$dist$rambda_mjs;\\nfunction assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d=\"string\"===typeof a?a.split(\".\").map(e=>isInteger$$module$node_modules$rambda$dist$rambda_mjs(Number(e))?Number(e):e):a;if(0===d.length)return b;a=d[0];if(1<d.length){const e=\"object\"===typeof c&&null!==c&&c.hasOwnProperty(a)?c[a]:isInteger$$module$node_modules$rambda$dist$rambda_mjs(d[1])?[]:{};b=assocPathFn$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(d,1),b,e)}return isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)&&\\nisArray$$module$node_modules$rambda$dist$rambda_mjs(c)?(c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c),c[a]=b,c):assoc$$module$node_modules$rambda$dist$rambda_mjs(a,b,c)}const assocPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(assocPathFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction _curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return function(){var d=0;let e=0;const f=b.length,g=arguments.length,h=Array(f+g);for(;d<f;)h[d]=b[d],d++;for(;e<g;)h[f+e]=arguments[e],e++;d=a-h.length;return h.length>=a?c.apply(this,h):_arity$1$$module$node_modules$rambda$dist$rambda_mjs(d,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,h,c))}}\\nfunction _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};\\ncase 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,l){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,l,m){return b.apply(this,arguments)};default:return function(c,d,e,f,g,h,k,l,m,n){return b.apply(this,arguments)}}}\\nfunction curryN$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>curryN$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(10<a)throw Error(\"First argument to _arity must be a non-negative integer no greater than ten\");return _arity$1$$module$node_modules$rambda$dist$rambda_mjs(a,_curryN$$module$node_modules$rambda$dist$rambda_mjs(a,[],b))}\\nfunction bind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>bind$$module$node_modules$rambda$dist$rambda_mjs(a,c):curryN$$module$node_modules$rambda$dist$rambda_mjs(a.length,(...c)=>a.apply(b,c))}function both$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>both$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>a(...c)&&b(...c)}\\nfunction chain$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>chain$$module$node_modules$rambda$dist$rambda_mjs(a,c):[].concat(...b.map(a))}function clampFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(a>b)throw Error(\"min must not be greater than max in clamp(min, max, value)\");if(c>=a&&c<=b)return c;if(c>b)return b;if(c<a)return a}const clamp$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(clampFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction clone$$module$node_modules$rambda$dist$rambda_mjs(a){const b=isArray$$module$node_modules$rambda$dist$rambda_mjs(a)?Array(a.length):{};if(a&&a.getTime)return new Date(a.getTime());for(const c in a){const d=a[c];b[c]=\"object\"===typeof d&&null!==d?d.getTime?new Date(d.getTime()):clone$$module$node_modules$rambda$dist$rambda_mjs(d):d}return b}function complement$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>!a(...b)}\\nclass ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs{constructor(a){this.value=a}}function reduceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(c))throw new TypeError(\"reduce: list must be array or iterable\");let d=0;const e=c.length;for(;d<e;){b=a(b,c[d],d,c);if(b instanceof ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs)return b.value;d++}return b}\\nconst reduce$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(reduceFn$$module$node_modules$rambda$dist$rambda_mjs),reduceStopper$$module$node_modules$rambda$dist$rambda_mjs=a=>new ReduceStopper$$module$node_modules$rambda$dist$rambda_mjs(a);\\nfunction _arity$$module$node_modules$rambda$dist$rambda_mjs(a,b){switch(a){case 0:return function(){return b.apply(this,arguments)};case 1:return function(c){return b.apply(this,arguments)};case 2:return function(c,d){return b.apply(this,arguments)};case 3:return function(c,d,e){return b.apply(this,arguments)};case 4:return function(c,d,e,f){return b.apply(this,arguments)};case 5:return function(c,d,e,f,g){return b.apply(this,arguments)};case 6:return function(c,d,e,f,g,h){return b.apply(this,arguments)};\\ncase 7:return function(c,d,e,f,g,h,k){return b.apply(this,arguments)};case 8:return function(c,d,e,f,g,h,k,l){return b.apply(this,arguments)};case 9:return function(c,d,e,f,g,h,k,l,m){return b.apply(this,arguments)};case 10:return function(c,d,e,f,g,h,k,l,m,n){return b.apply(this,arguments)};default:throw Error(\"First argument to _arity must be a non-negative integer no greater than ten\");}}\\nfunction _pipe$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(){return b.call(this,a.apply(this,arguments))}}\\nfunction pipe$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error(\"pipe requires at least one argument\");return _arity$$module$node_modules$rambda$dist$rambda_mjs(arguments[0].length,reduceFn$$module$node_modules$rambda$dist$rambda_mjs(_pipe$$module$node_modules$rambda$dist$rambda_mjs,arguments[0],Array.prototype.slice.call(arguments,1,Infinity)))}\\nfunction compose$$module$node_modules$rambda$dist$rambda_mjs(){if(0===arguments.length)throw Error(\"compose requires at least one argument\");return pipe$$module$node_modules$rambda$dist$rambda_mjs.apply(this,Array.prototype.slice.call(arguments,0).reverse())}function concat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>concat$$module$node_modules$rambda$dist$rambda_mjs(a,c):\"string\"===typeof a?`${a}${b}`:[...a,...b]}\\nfunction cond$$module$node_modules$rambda$dist$rambda_mjs(a){return b=>{let c=!1,d;a.forEach(([e,f])=>{!c&&e(b)&&(c=!0,d=f(b))});return d}}const {keys:keys$1$$module$node_modules$rambda$dist$rambda_mjs}=Object;function mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=Array(b.length);for(;d<b.length;)e[d]=c?a(b[d],d):a(b[d]),d++;return e}\\nfunction mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,g);let c=0;const d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b),e=d.length,f={};for(;c<e;){const g=d[c];f[g]=a(b[g],g,b);c++}return f}const mapObjIndexed$$module$node_modules$rambda$dist$rambda_mjs=mapObject$$module$node_modules$rambda$dist$rambda_mjs;\\nfunction map$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>map$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error(INCORRECT_ITERABLE_INPUT);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?mapArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):mapObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}\\nfunction max$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>max$$module$node_modules$rambda$dist$rambda_mjs(a,c):b>a?b:a}\\nfunction converge$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>converge$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=reduce$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>max$$module$node_modules$rambda$dist$rambda_mjs(d,e.length),0,b);return curryN$$module$node_modules$rambda$dist$rambda_mjs(c,function(){return a.apply(this,map$$module$node_modules$rambda$dist$rambda_mjs(d=>d.apply(this,arguments),b))})}\\nfunction count$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>count$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?b.filter(c=>a(c)).length:0}function countBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>countBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};b.forEach(d=>{d=a(d);c[d]?c[d]++:c[d]=1});return c}\\nconst dec$$module$node_modules$rambda$dist$rambda_mjs=a=>a-1;function isFalsy$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a||!0===Number.isNaN(a)}function defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c):isFalsy$$module$node_modules$rambda$dist$rambda_mjs(b)?a:b}\\nfunction type$$module$node_modules$rambda$dist$rambda_mjs(a){if(null===a)return\"Null\";if(void 0===a)return\"Undefined\";if(Number.isNaN(a))return\"NaN\";a=Object.prototype.toString.call(a).slice(8,-1);return\"AsyncFunction\"===a?\"Promise\":a}\\nfunction _lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(`Cannot read property \\'indexOf\\' of ${b}`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(![\"Object\",\"Array\",\"NaN\",\"RegExp\"].includes(c))return b.lastIndexOf(a);({length:c}=b);let d=-1;for(;-1<--c&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}\\nfunction _indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(`Cannot read property \\'indexOf\\' of ${b}`);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(![\"Object\",\"Array\",\"NaN\",\"RegExp\"].includes(c))return b.indexOf(a);let d=c=-1;const {length:e}=b;for(;++c<e&&-1===d;)equals$$module$node_modules$rambda$dist$rambda_mjs(b[c],a)&&(d=c);return d}\\nfunction _arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a){const b=[];let c;for(;!(c=a.next()).done;)b.push(c.value);return b}function _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(a.size!==b.size)return!1;a=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(a.values());const c=_arrayFromIterator$$module$node_modules$rambda$dist$rambda_mjs(b.values());return 0===a.filter(d=>-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,c)).length}\\nfunction parseError$$module$node_modules$rambda$dist$rambda_mjs(a){const b=a.__proto__.toString();return[\"Error\",\"TypeError\"].includes(b)?[b,a.message]:[]}function parseDate$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toDateString?[!0,a.getTime()]:[!1]}function parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a){return a.constructor!==RegExp?[!1]:[!0,a.toString()]}\\nfunction equals$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>equals$$module$node_modules$rambda$dist$rambda_mjs(a,f);var c=type$$module$node_modules$rambda$dist$rambda_mjs(a);if(c!==type$$module$node_modules$rambda$dist$rambda_mjs(b))return!1;if(\"Function\"===c)return void 0===a.name?!1:a.name===b.name;if([\"NaN\",\"Undefined\",\"Null\"].includes(c))return!0;if(\"Number\"===c)return Object.is(-0,a)!==Object.is(-0,b)?!1:a.toString()===b.toString();if([\"String\",\"Boolean\"].includes(c))return a.toString()===\\nb.toString();if(\"Array\"===c){c=Array.from(a);const f=Array.from(b);if(c.toString()!==f.toString())return!1;let g=!0;c.forEach((h,k)=>{g&&(h===f[k]||equals$$module$node_modules$rambda$dist$rambda_mjs(h,f[k])||(g=!1))});return g}var d=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(a),e=parseRegex$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseDate$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseDate$$module$node_modules$rambda$dist$rambda_mjs(b);\\nif(d[0])return e[0]?d[1]===e[1]:!1;if(e[0])return!1;d=parseError$$module$node_modules$rambda$dist$rambda_mjs(a);e=parseError$$module$node_modules$rambda$dist$rambda_mjs(b);if(d[0])return e[0]?d[0]===e[0]&&d[1]===e[1]:!1;if(\"Set\"===c)return _equalsSets$$module$node_modules$rambda$dist$rambda_mjs(a,b);if(\"Object\"===c){c=Object.keys(a);if(c.length!==Object.keys(b).length)return!1;let f=!0;c.forEach(g=>{if(f){const h=a[g];g=b[g];h===g||equals$$module$node_modules$rambda$dist$rambda_mjs(h,g)||(f=!1)}});\\nreturn f}return!1}function includes$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>includes$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(\"string\"===typeof b)return b.includes(a);if(!b)throw new TypeError(`Cannot read property \\\\\\'indexOf\\\\\\' of ${b}`);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b):!1}\\nclass _Set$$module$node_modules$rambda$dist$rambda_mjs{constructor(){this.set=new Set;this.items={}}checkUniqueness(a){var b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return[\"Null\",\"Undefined\",\"NaN\"].includes(b)?b in this.items?!1:this.items[b]=!0:[\"Object\",\"Array\"].includes(b)?b in this.items?-1===_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,this.items[b])?(this.items[b].push(a),!0):!1:(this.items[b]=[a],!0):(b=this.set.size,this.set.add(a),this.set.size!==b)}}\\nfunction uniq$$module$node_modules$rambda$dist$rambda_mjs(a){const b=new _Set$$module$node_modules$rambda$dist$rambda_mjs,c=[];a.forEach(d=>{b.checkUniqueness(d)&&c.push(d)});return c}function difference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>difference$$module$node_modules$rambda$dist$rambda_mjs(a,c):uniq$$module$node_modules$rambda$dist$rambda_mjs(a).filter(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b))}\\nfunction dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dissoc$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(null===b||void 0===b)return{};const c={};for(const d in b)c[d]=b[d];delete c[a];return c}function divide$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>divide$$module$node_modules$rambda$dist$rambda_mjs(a,c):a/b}\\nfunction drop$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>drop$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.slice(0<a?a:0)}function dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>dropLast$$module$node_modules$rambda$dist$rambda_mjs(a,c):0<a?b.slice(0,-a):b.slice()}\\nfunction dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(0===b.length)return b;const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(\"function\"!==typeof a)throw Error(`\\'predicate\\' is from wrong type ${typeof a}`);if(!c&&\"string\"!==typeof b)throw Error(`\\'iterable\\' is from wrong type ${typeof b}`);let d=!1;const e=[];let f=b.length;for(;0<f;)f--,d||!1!==a(b[f])?d&&e.push(b[f]):\\n(d=!0,e.push(b[f]));return c?e.reverse():e.reverse().join(\"\")}function dropRepeats$$module$node_modules$rambda$dist$rambda_mjs(a){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(`${a} is not a list`);const b=[];a.reduce((c,d)=>{equals$$module$node_modules$rambda$dist$rambda_mjs(c,d)||b.push(d);return d},void 0);return b}\\nfunction dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw Error(`${b} is not a list`);const c=[];b.reduce((d,e)=>{if(void 0===d)return c.push(e),e;a(d,e)||c.push(e);return e},void 0);return c}\\nfunction dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>dropWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&\"string\"!==typeof b)throw Error(\"`iterable` is neither list nor a string\");let d=!1;const e=[];let f=-1;for(;f++<b.length-1;)d?e.push(b[f]):a(b[f])||(d||(d=!0),e.push(b[f]));return c?e:e.join(\"\")}\\nfunction either$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>either$$module$node_modules$rambda$dist$rambda_mjs(a,c):(...c)=>!(!a(...c)&&!b(...c))}\\nfunction endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>endsWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(\"string\"===typeof b)return b.endsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;const c=b.length-a.length;let d=!0;return a.filter((e,f)=>{if(!d)return!1;(e=equals$$module$node_modules$rambda$dist$rambda_mjs(e,b[f+c]))||(d=!1);return e}).length===a.length}\\nfunction prop$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>prop$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(b)return b[a]}function eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a,b),prop$$module$node_modules$rambda$dist$rambda_mjs(a,c))}const eqProps$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(eqPropsFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapArray$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>\"Function\"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c,b,!0)}\\nfunction evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return mapObject$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>{if(\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(c)){const e=type$$module$node_modules$rambda$dist$rambda_mjs(a[d]);return\"Function\"===e?a[d](c):\"Object\"===e?evolve$$module$node_modules$rambda$dist$rambda_mjs(a[d],c):c}return\"Function\"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?a[d](c):c},b)}\\nfunction evolve$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>evolve$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=type$$module$node_modules$rambda$dist$rambda_mjs(a),d=type$$module$node_modules$rambda$dist$rambda_mjs(b);if(d!==c)throw Error(\"iterableType !== rulesType\");if(![\"Object\",\"Array\"].includes(c))throw Error(`\\'iterable\\' and \\'rules\\' are from wrong type ${c}`);return\"Object\"===d?evolveObject$$module$node_modules$rambda$dist$rambda_mjs(a,b):evolveArray$$module$node_modules$rambda$dist$rambda_mjs(a,\\nb)}function F$$module$node_modules$rambda$dist$rambda_mjs(){return!1}function filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(const d in b)a(b[d],d,b)&&(c[d]=b[d]);return c}function filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){let d=0;const e=b.length,f=[];for(;d<e;)(c?a(b[d],d):a(b[d]))&&f.push(b[d]),d++;return f}\\nfunction filter$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>filter$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!b)throw Error(\"Incorrect iterable input\");return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?filterArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,!1):filterObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}\\nfunction find$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>find$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=0;const d=b.length;for(;c<d;){const e=b[c];if(a(e))return e;c++}}function findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>findIndex$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;let d=-1;for(;++d<c;)if(a(b[d]))return d;return-1}\\nfunction findLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLast$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return b[c]}function findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>findLastIndex$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=b.length;for(;0<=--c;)if(a(b[c]))return c;return-1}\\nfunction flatten$$module$node_modules$rambda$dist$rambda_mjs(a,b){b=void 0===b?[]:b;for(let c=0;c<a.length;c++)isArray$$module$node_modules$rambda$dist$rambda_mjs(a[c])?flatten$$module$node_modules$rambda$dist$rambda_mjs(a[c],b):b.push(a[c]);return b}\\nfunction flipFn$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>{if(1===b.length)return c=>a(c,b[0]);if(2===b.length)return a(b[1],b[0]);if(3===b.length)return a(b[1],b[0],b[2]);if(4===b.length)return a(b[1],b[0],b[2],b[3]);throw Error(\"R.flip doesn\\'t work with arity > 4\");}}function flip$$module$node_modules$rambda$dist$rambda_mjs(a){return flipFn$$module$node_modules$rambda$dist$rambda_mjs(a)}\\nfunction forEach$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>forEach$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(void 0!==b){if(isArray$$module$node_modules$rambda$dist$rambda_mjs(b))for(var c=0,d=b.length;c<d;)a(b[c]),c++;else{c=0;d=keys$1$$module$node_modules$rambda$dist$rambda_mjs(b);const e=d.length;for(;c<e;){const f=d[c];a(b[f],f,b);c++}}return b}}\\nfunction fromPairs$$module$node_modules$rambda$dist$rambda_mjs(a){const b={};a.forEach(([c,d])=>b[c]=d);return b}function groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>groupBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c={};for(let d=0;d<b.length;d++){const e=b[d],f=a(e);c[f]||(c[f]=[]);c[f].push(e)}return c}\\nfunction groupWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b))throw new TypeError(\"list.reduce is not a function\");const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(b);if(1===b.length)return[c];const d=[];let e=[];c.reduce((f,g,h)=>{if(0===h)return g;const k=a(f,g),l=0===e.length;h=h===b.length-1;if(k)return l&&e.push(f),e.push(g),h&&d.push(e),g;if(l)return d.push([f]),h&&d.push([g]),g;d.push(e);h&&d.push([g]);e=[];return g},\\nvoid 0);return d}function has$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>has$$module$node_modules$rambda$dist$rambda_mjs(a,c):b?b.hasOwnProperty(a):!1}function createPath$$module$node_modules$rambda$dist$rambda_mjs(a,b=\".\"){return\"string\"===typeof a?a.split(b):a}\\nfunction path$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>path$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=b,d=0,e=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);d<e.length;){if(null===c||void 0===c||null===c[e[d]])return;c=c[e[d]];d++}return c}}\\nfunction hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>hasPath$$module$node_modules$rambda$dist$rambda_mjs(a,c):void 0!==path$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function head$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a[0]||\"\":a[0]}function _objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b}const objectIs$$module$node_modules$rambda$dist$rambda_mjs=Object.is||_objectIs$$module$node_modules$rambda$dist$rambda_mjs;\\nfunction identical$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>identical$$module$node_modules$rambda$dist$rambda_mjs(a,c):objectIs$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function identity$$module$node_modules$rambda$dist$rambda_mjs(a){return a}function ifElseFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return(...d)=>!0===(\"boolean\"===typeof a?a:a(...d))?b(...d):c(...d)}\\nconst ifElse$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(ifElseFn$$module$node_modules$rambda$dist$rambda_mjs),inc$$module$node_modules$rambda$dist$rambda_mjs=a=>a+1;function indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={};for(let d=0;d<b.length;d++){const e=b[d];c[path$$module$node_modules$rambda$dist$rambda_mjs(a,e)]=e}return c}\\nfunction indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>indexBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(\"string\"===typeof a)return indexByPath$$module$node_modules$rambda$dist$rambda_mjs(a,b);const c={};for(let d=0;d<b.length;d++){const e=b[d];c[a(e)]=e}return c}\\nfunction indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_indexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=-1,{length:e}=a;c=c>e?e:c;0>c&&(c+=e);e=b>c?0:c-b>>>0;b>>>=0;for(c=Array(e);++d<e;)c[d]=a[d+b];return c}\\nfunction init$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a.slice(0,-1):a.length?baseSlice$$module$node_modules$rambda$dist$rambda_mjs(a,0,-1):[]}function intersection$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>intersection$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b)}\\nfunction intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>intersperse$$module$node_modules$rambda$dist$rambda_mjs(a,f);let c=-1;const d=b.length,e=[];for(;++c<d;)c===d-1?e.push(b[c]):e.push(b[c],a);return e}function is$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>is$$module$node_modules$rambda$dist$rambda_mjs(a,c):null!=b&&b.constructor===a||b instanceof a}\\nfunction isEmpty$$module$node_modules$rambda$dist$rambda_mjs(a){const b=type$$module$node_modules$rambda$dist$rambda_mjs(a);return[\"Undefined\",\"NaN\",\"Number\",\"Null\"].includes(b)?!1:a?\"Object\"===b?0===Object.keys(a).length:\"Array\"===b?0===a.length:!1:!0}function isNil$$module$node_modules$rambda$dist$rambda_mjs(a){return void 0===a||null===a}\\nfunction join$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>join$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.join(a)}function juxt$$module$node_modules$rambda$dist$rambda_mjs(a){return(...b)=>a.map(c=>c(...b))}function keys$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.keys(a)}function last$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a[a.length-1]||\"\":a[a.length-1]}\\nfunction lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function length$$module$node_modules$rambda$dist$rambda_mjs(a){return isArray$$module$node_modules$rambda$dist$rambda_mjs(a)||\"string\"===typeof a?a.length:NaN}\\nfunction lens$$module$node_modules$rambda$dist$rambda_mjs(a,b){return function(c){return function(d){return c(a(d)).map(e=>b(e,d))}}}function nth$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>nth$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=0>a?b.length+a:a;return\"[object String]\"===Object.prototype.toString.call(b)?b.charAt(c):b[c]}\\nfunction updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);return-1===a?c.fill(b,a):c.fill(b,a,a+1)}const update$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(updateFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction lensIndex$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(nth$$module$node_modules$rambda$dist$rambda_mjs(a),update$$module$node_modules$rambda$dist$rambda_mjs(a))}function lensPath$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a),assocPath$$module$node_modules$rambda$dist$rambda_mjs(a))}\\nfunction lensProp$$module$node_modules$rambda$dist$rambda_mjs(a){return lens$$module$node_modules$rambda$dist$rambda_mjs(prop$$module$node_modules$rambda$dist$rambda_mjs(a),assoc$$module$node_modules$rambda$dist$rambda_mjs(a))}function match$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>match$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=b.match(a);return null===c?[]:c}\\nfunction mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mathMod$$module$node_modules$rambda$dist$rambda_mjs(a,c):!isInteger$$module$node_modules$rambda$dist$rambda_mjs(a)||!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||1>b?NaN:(a%b+b)%b}function maxByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)>a(b)?c:b}const maxBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(maxByFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction sum$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>b+c,0)}function mean$$module$node_modules$rambda$dist$rambda_mjs(a){return sum$$module$node_modules$rambda$dist$rambda_mjs(a)/a.length}function median$$module$node_modules$rambda$dist$rambda_mjs(a){var b=a.length;if(0===b)return NaN;const c=2-b%2;b=(b-c)/2;return mean$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,0).sort((d,e)=>d===e?0:d<e?-1:1).slice(b,b+c))}\\nfunction mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeRight$$module$node_modules$rambda$dist$rambda_mjs(a,c):Object.assign({},a||{},b||{})}function mergeAll$$module$node_modules$rambda$dist$rambda_mjs(a){let b={};map$$module$node_modules$rambda$dist$rambda_mjs(c=>{b=mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,c)},a);return b}\\nfunction mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=clone$$module$node_modules$rambda$dist$rambda_mjs(a);Object.keys(b).forEach(d=>{\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(b[d])?\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(a[d])?c[d]=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(a[d],b[d]):c[d]=b[d]:c[d]=b[d]});return c}\\nfunction mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>mergeLeft$$module$node_modules$rambda$dist$rambda_mjs(a,c):mergeRight$$module$node_modules$rambda$dist$rambda_mjs(b,a)}function mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){const d={};Object.keys(b).forEach(e=>{d[e]=void 0===c[e]?b[e]:a(b[e],c[e])});Object.keys(c).forEach(e=>{void 0===d[e]&&(d[e]=void 0===b[e]?c[e]:a(b[e],c[e]))});return d}\\nconst mergeWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(mergeWithFn$$module$node_modules$rambda$dist$rambda_mjs);function min$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>min$$module$node_modules$rambda$dist$rambda_mjs(a,c):b<a?b:a}function minByFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)<a(b)?c:b}const minBy$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(minByFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction ownKeys$$module$node_modules$rambda$dist$rambda_mjs(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}));c.push.apply(c,d)}return c}\\nfunction _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{};b%2?ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c),!0).forEach(function(d){_defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,d,c[d])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):ownKeys$$module$node_modules$rambda$dist$rambda_mjs(Object(c)).forEach(function(d){Object.defineProperty(a,\\nd,Object.getOwnPropertyDescriptor(c,d))})}return a}function _defineProperty$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c;return a}function isIterable$$module$node_modules$rambda$dist$rambda_mjs(a){return Array.isArray(a)||\"Object\"===type$$module$node_modules$rambda$dist$rambda_mjs(a)}\\nfunction modifyFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return isIterable$$module$node_modules$rambda$dist$rambda_mjs(c)&&void 0!==c[a]?isArray$$module$node_modules$rambda$dist$rambda_mjs(c)?updateFn$$module$node_modules$rambda$dist$rambda_mjs(a,b(c[a]),c):_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a]:b(c[a])}):c}const modify$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){a=createPath$$module$node_modules$rambda$dist$rambda_mjs(a);if(1===a.length)return _objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},c),{},{[a[0]]:b(c[a[0]])});if(void 0===path$$module$node_modules$rambda$dist$rambda_mjs(a,c))return c;b=modifyPath$$module$node_modules$rambda$dist$rambda_mjs(Array.prototype.slice.call(a,1),b,c[a[0]]);return b===c[a[0]]?c:assoc$$module$node_modules$rambda$dist$rambda_mjs(a[0],\\nb,c)}const modifyPath$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs);function modulo$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>modulo$$module$node_modules$rambda$dist$rambda_mjs(a,c):a%b}\\nfunction moveFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){if(0>a||0>b)throw Error(\"Rambda.move does not support negative indexes\");if(a>c.length-1||b>c.length-1)return c;const d=cloneList$$module$node_modules$rambda$dist$rambda_mjs(c);d[a]=c[b];d[b]=c[a];return d}const move$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(moveFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction multiply$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>multiply$$module$node_modules$rambda$dist$rambda_mjs(a,c):a*b}function negate$$module$node_modules$rambda$dist$rambda_mjs(a){return-a}function none$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>none$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(let c=0;c<b.length;c++)if(a(b[c]))return!1;return!0}\\nfunction not$$module$node_modules$rambda$dist$rambda_mjs(a){return!a}function objOf$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>objOf$$module$node_modules$rambda$dist$rambda_mjs(a,c):{[a]:b}}function of$$module$node_modules$rambda$dist$rambda_mjs(a){return[a]}\\nfunction omit$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>omit$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(null!==b&&void 0!==b){var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,\",\"),d={};for(const e in b)c.includes(e)||(d[e]=b[e]);return d}}\\nfunction on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,d){return 3===arguments.length?e=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,c,e):2===arguments.length?(e,f)=>on$$module$node_modules$rambda$dist$rambda_mjs(a,b,e,f):a(b(c),b(d))}function onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b){let c;return function(){a&&(c=a.apply(b||this,arguments),a=null);return c}}\\nfunction once$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length){const c=onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b);return curry$$module$node_modules$rambda$dist$rambda_mjs(c)}return onceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b)}function or$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>or$$module$node_modules$rambda$dist$rambda_mjs(a,c):a||b}const Identity$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(a))});\\nfunction overFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(d=>Identity$$module$node_modules$rambda$dist$rambda_mjs(b(d)))(c).x}const over$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(overFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction partial$$module$node_modules$rambda$dist$rambda_mjs(a,...b){const c=a.length;return(...d)=>b.length+d.length>=c?a(...b,...d):partial$$module$node_modules$rambda$dist$rambda_mjs(a,...[...b,...d])}function partialObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return c=>a(mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs(c,b))}\\nfunction partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b){const c={},d={};Object.entries(b).forEach(([e,f])=>{a(f,e)?c[e]=f:d[e]=f});return[c,d]}function partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b,c=!1){const d=[],e=[];let f=-1;for(;f++<b.length-1;)(c?a(b[f],f):a(b[f]))?d.push(b[f]):e.push(b[f]);return[d,e]}\\nfunction partition$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>partition$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?partitionArray$$module$node_modules$rambda$dist$rambda_mjs(a,b):partitionObject$$module$node_modules$rambda$dist$rambda_mjs(a,b)}\\nfunction pathEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return equals$$module$node_modules$rambda$dist$rambda_mjs(path$$module$node_modules$rambda$dist$rambda_mjs(a,c),b)}const pathEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathEqFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction pathOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,path$$module$node_modules$rambda$dist$rambda_mjs(b,c))}const pathOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(pathOrFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction paths$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>paths$$module$node_modules$rambda$dist$rambda_mjs(a,c):a.map(c=>path$$module$node_modules$rambda$dist$rambda_mjs(c,b))}\\nfunction pick$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pick$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,\",\"),d={},e=0;e<c.length;)c[e]in b&&(d[c[e]]=b[c[e]]),e++;return d}}\\nfunction pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>pickAll$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(null!==b&&void 0!==b){for(var c=createPath$$module$node_modules$rambda$dist$rambda_mjs(a,\",\"),d={},e=0;e<c.length;)d[c[e]]=c[e]in b?b[c[e]]:void 0,e++;return d}}\\nfunction pluck$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>pluck$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=[];map$$module$node_modules$rambda$dist$rambda_mjs(d=>{void 0!==d[a]&&c.push(d[a])},b);return c}function prepend$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>prepend$$module$node_modules$rambda$dist$rambda_mjs(a,c):\"string\"===typeof b?[a].concat(b.split(\"\")):[a].concat(b)}\\nconst product$$module$node_modules$rambda$dist$rambda_mjs=reduce$$module$node_modules$rambda$dist$rambda_mjs(multiply$$module$node_modules$rambda$dist$rambda_mjs,1);function propEqFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?equals$$module$node_modules$rambda$dist$rambda_mjs(b,prop$$module$node_modules$rambda$dist$rambda_mjs(a,c)):!1}const propEq$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propEqFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction propIsFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return is$$module$node_modules$rambda$dist$rambda_mjs(a,c[b])}const propIs$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propIsFn$$module$node_modules$rambda$dist$rambda_mjs);function propOrFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c?defaultTo$$module$node_modules$rambda$dist$rambda_mjs(a,c[b]):a}const propOr$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propOrFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction props$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>props$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(\"propsToPick is not a list\");return mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>b[c],a)}function propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(prop$$module$node_modules$rambda$dist$rambda_mjs(b,c))}\\nconst propSatisfies$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(propSatisfiesFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction range$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>range$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(Number.isNaN(Number(a))||Number.isNaN(Number(b)))throw new TypeError(\"Both arguments to range must be numbers\");if(b<a)return[];const c=b-a,d=Array(c);for(let e=0;e<c;e++)d[e]=a+e;return d}\\nfunction reject$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>reject$$module$node_modules$rambda$dist$rambda_mjs(a,c):filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!a(c),b)}function repeat$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>repeat$$module$node_modules$rambda$dist$rambda_mjs(a,c):Array(b).fill(a)}function replaceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.replace(a,b)}\\nconst replace$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(replaceFn$$module$node_modules$rambda$dist$rambda_mjs);function reverse$$module$node_modules$rambda$dist$rambda_mjs(a){return\"string\"===typeof a?a.split(\"\").reverse().join(\"\"):a.slice().reverse()}function setFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return over$$module$node_modules$rambda$dist$rambda_mjs(a,always$$module$node_modules$rambda$dist$rambda_mjs(b),c)}\\nconst set$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(setFn$$module$node_modules$rambda$dist$rambda_mjs);function sliceFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return c.slice(a,b)}const slice$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(sliceFn$$module$node_modules$rambda$dist$rambda_mjs);\\nfunction sort$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sort$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort(a)}function sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>sortBy$$module$node_modules$rambda$dist$rambda_mjs(a,c):cloneList$$module$node_modules$rambda$dist$rambda_mjs(b).sort((c,d)=>{c=a(c);d=a(d);return c===d?0:c<d?-1:1})}\\nfunction split$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>split$$module$node_modules$rambda$dist$rambda_mjs(a,c):b.split(a)}function maybe$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){b=a&&\"Function\"===type$$module$node_modules$rambda$dist$rambda_mjs(b)?b():b;c=a||\"Function\"!==type$$module$node_modules$rambda$dist$rambda_mjs(c)?c:c();return a?b:c}\\nfunction take$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>take$$module$node_modules$rambda$dist$rambda_mjs(a,c):0>a?b.slice():\"string\"===typeof b?b.slice(0,a):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,0,a)}\\nfunction splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>splitAt$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(!b)throw new TypeError(`Cannot read property \\'slice\\' of ${b}`);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(b)&&\"string\"!==typeof b)return[[],[]];const c=maybe$$module$node_modules$rambda$dist$rambda_mjs(0>a,0>b.length+a?0:b.length+a,a);return[take$$module$node_modules$rambda$dist$rambda_mjs(c,b),drop$$module$node_modules$rambda$dist$rambda_mjs(c,\\nb)]}function splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>splitEvery$$module$node_modules$rambda$dist$rambda_mjs(a,e);if(1>a)throw Error(\"First argument to splitEvery must be a positive integer\");const c=[];let d=0;for(;d<b.length;)c.push(b.slice(d,d+=a));return c}\\nfunction splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>splitWhen$$module$node_modules$rambda$dist$rambda_mjs(a,g);if(!b)throw new TypeError(`Cannot read property \\'length\\' of ${b}`);const c=[],d=[];let e=!1,f=-1;for(;f++<b.length-1;)e?d.push(b[f]):a(b[f])?(d.push(b[f]),e=!0):c.push(b[f]);return[c,d]}\\nfunction startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>startsWith$$module$node_modules$rambda$dist$rambda_mjs(a,d);if(\"string\"===typeof b)return b.startsWith(a);if(!isArray$$module$node_modules$rambda$dist$rambda_mjs(a))return!1;let c=!0;return a.filter((d,e)=>{if(!c)return!1;(d=equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]))||(c=!1);return d}).length===a.length}\\nfunction subtract$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>subtract$$module$node_modules$rambda$dist$rambda_mjs(a,c):a-b}\\nfunction symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs(a,c):concat$$module$node_modules$rambda$dist$rambda_mjs(filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,b),a),filter$$module$node_modules$rambda$dist$rambda_mjs(c=>!includes$$module$node_modules$rambda$dist$rambda_mjs(c,a),b))}\\nfunction T$$module$node_modules$rambda$dist$rambda_mjs(){return!0}function tail$$module$node_modules$rambda$dist$rambda_mjs(a){return drop$$module$node_modules$rambda$dist$rambda_mjs(1,a)}\\nfunction takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>takeLast$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=b.length;if(0>a)return b.slice();let d=a>c?c:a;return\"string\"===typeof b?b.slice(c-d):baseSlice$$module$node_modules$rambda$dist$rambda_mjs(b,c-d,c)}\\nfunction takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return f=>takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs(a,f);if(0===b.length)return b;let c=!1;const d=[];let e=b.length;for(;!c||0===e;)e--,!1===a(b[e])?c=!0:c||d.push(b[e]);return isArray$$module$node_modules$rambda$dist$rambda_mjs(b)?d.reverse():d.reverse().join(\"\")}\\nfunction takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return g=>takeWhile$$module$node_modules$rambda$dist$rambda_mjs(a,g);const c=isArray$$module$node_modules$rambda$dist$rambda_mjs(b);if(!c&&\"string\"!==typeof b)throw Error(\"`iterable` is neither list nor a string\");let d=!0;const e=[];let f=-1;for(;f++<b.length-1;)a(b[f])?d&&e.push(b[f]):d&&(d=!1);return c?e:e.join(\"\")}\\nfunction tap$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>tap$$module$node_modules$rambda$dist$rambda_mjs(a,c);a(b);return b}function test$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>test$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(\"string\"===typeof a)throw new TypeError(`\\\\u2018test\\\\u2019 requires a value of type RegExp as its first argument; received \"${a}\"`);return-1!==b.search(a)}\\nfunction times$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return c=>times$$module$node_modules$rambda$dist$rambda_mjs(a,c);if(!isInteger$$module$node_modules$rambda$dist$rambda_mjs(b)||0>b)throw new RangeError(\"n must be an integer\");return map$$module$node_modules$rambda$dist$rambda_mjs(a,range$$module$node_modules$rambda$dist$rambda_mjs(0,b))}function toLower$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toLowerCase()}\\nfunction toPairs$$module$node_modules$rambda$dist$rambda_mjs(a){return Object.entries(a)}function toString$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toString()}function toUpper$$module$node_modules$rambda$dist$rambda_mjs(a){return a.toUpperCase()}function transpose$$module$node_modules$rambda$dist$rambda_mjs(a){return a.reduce((b,c)=>{c.forEach((d,e)=>isArray$$module$node_modules$rambda$dist$rambda_mjs(b[e])?b[e].push(d):b.push([d]));return b},[])}\\nfunction trim$$module$node_modules$rambda$dist$rambda_mjs(a){return a.trim()}const isFunction$$module$node_modules$rambda$dist$rambda_mjs=a=>[\"Promise\",\"Function\"].includes(type$$module$node_modules$rambda$dist$rambda_mjs(a));\\nfunction tryCatch$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(!isFunction$$module$node_modules$rambda$dist$rambda_mjs(a))throw Error(`R.tryCatch | fn \\'${a}\\'`);const c=isFunction$$module$node_modules$rambda$dist$rambda_mjs(b);return(...d)=>{try{return a(...d)}catch(e){return c?b(e,...d):b}}}function unapply$$module$node_modules$rambda$dist$rambda_mjs(a){return function(...b){return a.call(this,b)}}\\nfunction union$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>union$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=cloneList$$module$node_modules$rambda$dist$rambda_mjs(a);b.forEach(d=>{includes$$module$node_modules$rambda$dist$rambda_mjs(d,a)||c.push(d)});return c}\\nfunction uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>uniqBy$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=new Set;return b.filter(d=>{if(c.has(a(d)))return!1;c.add(a(d));return!0})}function includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){let d=!1,e=-1;for(;++e<c.length&&!d;)a(b,c[e])&&(d=!0);return d}\\nfunction uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>uniqWith$$module$node_modules$rambda$dist$rambda_mjs(a,e);let c=-1;const d=[];for(;++c<b.length;){const e=b[c];includesWith$$module$node_modules$rambda$dist$rambda_mjs(a,e,d)||d.push(e)}return d}function unless$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unless$$module$node_modules$rambda$dist$rambda_mjs(a,c):c=>a(c)?c:b(c)}\\nfunction unwind$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>unwind$$module$node_modules$rambda$dist$rambda_mjs(a,c):isArray$$module$node_modules$rambda$dist$rambda_mjs(b[a])?mapArray$$module$node_modules$rambda$dist$rambda_mjs(c=>_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs(_objectSpread2$$module$node_modules$rambda$dist$rambda_mjs({},b),{},{[a]:c}),b[a]):[b]}\\nfunction values$$module$node_modules$rambda$dist$rambda_mjs(a){return\"Object\"!==type$$module$node_modules$rambda$dist$rambda_mjs(a)?[]:Object.values(a)}const Const$$module$node_modules$rambda$dist$rambda_mjs=a=>({x:a,map:b=>Const$$module$node_modules$rambda$dist$rambda_mjs(a)});function view$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>view$$module$node_modules$rambda$dist$rambda_mjs(a,c):a(Const$$module$node_modules$rambda$dist$rambda_mjs)(b).x}\\nfunction whenFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return a(c)?b(c):c}const when$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(whenFn$$module$node_modules$rambda$dist$rambda_mjs);function where$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return d=>where$$module$node_modules$rambda$dist$rambda_mjs(a,d);let c=!0;for(const d in a){if(!c)continue;const e=a[d](b[d]);c&&!1===e&&(c=!1)}return c}\\nfunction whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(void 0===b)return c=>whereAny$$module$node_modules$rambda$dist$rambda_mjs(a,c);for(const c in a)if(a[c](b[c]))return!0;return!1}\\nfunction whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return d=>whereEq$$module$node_modules$rambda$dist$rambda_mjs(a,d);const c=filter$$module$node_modules$rambda$dist$rambda_mjs((d,e)=>equals$$module$node_modules$rambda$dist$rambda_mjs(d,b[e]),a);return Object.keys(c).length===Object.keys(a).length}\\nfunction without$$module$node_modules$rambda$dist$rambda_mjs(a,b){return void 0===b?c=>without$$module$node_modules$rambda$dist$rambda_mjs(a,c):reduce$$module$node_modules$rambda$dist$rambda_mjs((c,d)=>-1<_indexOf$$module$node_modules$rambda$dist$rambda_mjs(d,a)?c:c.concat(d),[],b)}function xor$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>xor$$module$node_modules$rambda$dist$rambda_mjs(a,c):!!a&&!b||!!b&&!a}\\nfunction zip$$module$node_modules$rambda$dist$rambda_mjs(a,b){if(1===arguments.length)return e=>zip$$module$node_modules$rambda$dist$rambda_mjs(a,e);const c=[],d=Math.min(a.length,b.length);for(let e=0;e<d;e++)c[e]=[a[e],b[e]];return c}function zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,b){return 1===arguments.length?c=>zipObj$$module$node_modules$rambda$dist$rambda_mjs(a,c):take$$module$node_modules$rambda$dist$rambda_mjs(b.length,a).reduce((c,d,e)=>{c[d]=b[e];return c},{})}\\nfunction zipWithFn$$module$node_modules$rambda$dist$rambda_mjs(a,b,c){return take$$module$node_modules$rambda$dist$rambda_mjs(b.length>c.length?c.length:b.length,b).map((d,e)=>a(d,c[e]))}const zipWith$$module$node_modules$rambda$dist$rambda_mjs=curry$$module$node_modules$rambda$dist$rambda_mjs(zipWithFn$$module$node_modules$rambda$dist$rambda_mjs);var module$node_modules$rambda$dist$rambda_mjs={};module$node_modules$rambda$dist$rambda_mjs.F=F$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.T=T$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.__findHighestArity=__findHighestArity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._arity=_arity$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._indexOf=_indexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs._lastIndexOf=_lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs._pipe=_pipe$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.add=add$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.adjust=adjust$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.all=all$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.allPass=allPass$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.always=always$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.and=and$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.any=any$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.anyPass=anyPass$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.append=append$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.apply=apply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.applySpec=applySpec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assoc=assoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.assocPath=assocPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.bind=bind$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.both=both$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.chain=chain$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clamp=clamp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.clone=clone$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.complement=complement$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.compose=compose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.concat=concat$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.cond=cond$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.converge=converge$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.count=count$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.countBy=countBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curry=curry$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.curryN=curryN$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dec=dec$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.defaultTo=defaultTo$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.difference=difference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dissoc=dissoc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.divide=divide$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.drop=drop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropLast=dropLast$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.dropLastWhile=dropLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeats=dropRepeats$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropRepeatsWith=dropRepeatsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.dropWhile=dropWhile$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.either=either$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.endsWith=endsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.eqProps=eqProps$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.equals=equals$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolve=evolve$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.evolveArray=evolveArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.evolveObject=evolveObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filter=filter$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterArray=filterArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.filterObject=filterObject$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.find=find$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findIndex=findIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLast=findLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.findLastIndex=findLastIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.flatten=flatten$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.flip=flip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.forEach=forEach$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.fromPairs=fromPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupBy=groupBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.groupWith=groupWith$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.has=has$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.hasPath=hasPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.head=head$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identical=identical$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.identity=identity$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.ifElse=ifElse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.inc=inc$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.includes=includes$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexBy=indexBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.indexOf=indexOf$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.init=init$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersection=intersection$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.intersperse=intersperse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.is=is$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.isEmpty=isEmpty$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.isNil=isNil$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.join=join$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.juxt=juxt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.keys=keys$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.last=last$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.lastIndexOf=lastIndexOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.length=length$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lens=lens$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensIndex=lensIndex$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.lensPath=lensPath$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.lensProp=lensProp$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.map=map$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapArray=mapArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObjIndexed=mapObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mapObject=mapObject$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.match=match$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mathMod=mathMod$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.max=max$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxBy=maxBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.maxByFn=maxByFn$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.mean=mean$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.median=median$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.merge=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeAll=mergeAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeDeepRight=mergeDeepRight$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.mergeLeft=mergeLeft$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeRight=mergeRight$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.mergeWith=mergeWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.min=min$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.minBy=minBy$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.minByFn=minByFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modify=modify$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPath=modifyPath$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modifyPathFn=modifyPathFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.modulo=modulo$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.move=move$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.multiply=multiply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.negate=negate$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.none=none$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.not=not$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.nth=nth$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.objOf=objOf$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.of=of$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.omit=omit$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.on=on$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.once=once$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.or=or$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.over=over$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partial=partial$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partialObject=partialObject$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.partition=partition$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionArray=partitionArray$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.partitionObject=partitionObject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.path=path$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pathEq=pathEq$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.pathOr=pathOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.paths=paths$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pick=pick$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pickAll=pickAll$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.pipe=pipe$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.pluck=pluck$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prepend=prepend$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.product=product$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.prop=prop$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propEq=propEq$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.propIs=propIs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propOr=propOr$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.propSatisfies=propSatisfies$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.props=props$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.range=range$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.reduce=reduce$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceFn=reduceFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reduceStopper=reduceStopper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reject=reject$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.repeat=repeat$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.replace=replace$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.reverse=reverse$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.set=set$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.slice=slice$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sort=sort$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.sortBy=sortBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.split=split$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitAt=splitAt$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitEvery=splitEvery$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.splitWhen=splitWhen$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.startsWith=startsWith$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.subtract=subtract$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.sum=sum$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.symmetricDifference=symmetricDifference$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tail=tail$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.take=take$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLast=takeLast$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeLastWhile=takeLastWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.takeWhile=takeWhile$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tap=tap$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.test=test$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.times=times$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toLower=toLower$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toPairs=toPairs$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.toString=toString$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.toUpper=toUpper$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.transpose=transpose$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.trim=trim$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.tryCatch=tryCatch$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.type=type$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.unapply=unapply$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.union=union$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniq=uniq$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqBy=uniqBy$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.uniqWith=uniqWith$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.unless=unless$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.unwind=unwind$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.update=update$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.updateFn=updateFn$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.values=values$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.view=view$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.when=when$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.where=where$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereAny=whereAny$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.whereEq=whereEq$$module$node_modules$rambda$dist$rambda_mjs;\\nmodule$node_modules$rambda$dist$rambda_mjs.without=without$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.xor=xor$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zip=zip$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipObj=zipObj$$module$node_modules$rambda$dist$rambda_mjs;module$node_modules$rambda$dist$rambda_mjs.zipWith=zipWith$$module$node_modules$rambda$dist$rambda_mjs;let startPromize$$module$src$workers$old_spn_worker;\\nconst getAudioContext$$module$src$workers$old_spn_worker=a=>window[a]||window.parent[`__csound_wasm_iframe_parent_${a}`]||newAudioContext$$module$src$utils$new_audio_context(),closeAndDeleteContext$$module$src$workers$old_spn_worker=async a=>{const b=window[a],c=window.parent[`__csound_wasm_iframe_parent_${a}`];if(b){if(\"closed\"!==b.state)try{await b.close()}catch(d){}delete window[a]}if(c){if(b!==c&&\"closed\"!==c.state)try{await c.close()}catch(d){}delete window.parent[`__csound_wasm_iframe_parent_${a}`]}},getAudioNode$$module$src$workers$old_spn_worker=\\na=>window[a+\"Node\"]||window.parent[`__csound_wasm_iframe_parent_${a}Node`],setAudioNode$$module$src$workers$old_spn_worker=(a,b)=>{window[a]?window[`${a}Node`]=b:window.parent[`__csound_wasm_iframe_parent_${a}Node`]=b},disconnectAudioNode$$module$src$workers$old_spn_worker=a=>{(a=getAudioNode$$module$src$workers$old_spn_worker(a))&&a.disconnect()},deleteAudioNode$$module$src$workers$old_spn_worker=a=>{window[a+\"Node\"]&&delete window[a+\"Node\"];window.parent[`__csound_wasm_iframe_parent_${a}Node`]&&\\ndelete window.parent[`__csound_wasm_iframe_parent_${a}Node`]},PERIODS$$module$src$workers$old_spn_worker=4,spnInstances$$module$src$workers$old_spn_worker=new Map;\\nclass CsoundScriptNodeProcessor$$module$src$workers$old_spn_worker{constructor({audioContext:a,contextUid:b,hardwareBufferSize:c,softwareBufferSize:d,inputsCount:e,outputsCount:f,sampleRate:g,audioContextIsProvided:h,autoConnect:k}){this.autoConnect=k;this.audioContextIsProvided=h;this.hardwareBufferSize=c;this.softwareBufferSize=d;this.inputsCount=e;this.outputsCount=f;this.sampleRate=g;this.vanillaOutputChannels=[];this.vanillaInputChannels=[];this.pendingFrames=this.vanillaAvailableFrames=this.vanillaInputReadIndex=\\nthis.vanillaOutputReadIndex=0;this.vanillaFirstTransferDone=this.vanillaInitialized=!1;this.vanillaInputChannels=instantiateAudioPacket$$module$src$workers$common_utils(e,c);this.vanillaOutputChannels=instantiateAudioPacket$$module$src$workers$common_utils(f,c);this.audioContext=a;this.contextUid=b;this.scriptNode=this.audioContext.createScriptProcessor(this.softwareBufferSize,e,f);this.process=this.process.bind(this);a=this.process.bind(this);this.scriptNode.onaudioprocess=a;this.autoConnect?setAudioNode$$module$src$workers$old_spn_worker(b,\\nthis.scriptNode.connect(this.audioContext.destination)):setAudioNode$$module$src$workers$old_spn_worker(b,this.scriptNode.context.destination);this.updateVanillaFrames=this.updateVanillaFrames.bind(this);this.initCallbacks=this.initCallbacks.bind(this)}async initCallbacks({workerMessagePort:a,transferInputFrames:b,requestPort:c}){this.workerMessagePort=a;this.transferInputFrames=b;this.requestPort=c;if(\"suspended\"===this.audioContext.state){for(a=0;100>a;)if(await new Promise(d=>setTimeout(d,100)),\\n\"suspended\"===this.audioContext.state)a+=1;else return;this.workerMessagePort.broadcastPlayState(\"realtimePerformancePaused\")}}updateVanillaFrames({audioPacket:a,numFrames:b,readIndex:c}){this.pendingFrames-=b;if(a){for(let d=0;d<this.outputsCount;++d){let e=!1,f=b;(c+b)%this.hardwareBufferSize<c&&(e=!0,f=this.hardwareBufferSize-c);this.vanillaOutputChannels[d].set(a[d].subarray(0,f),c);e&&this.vanillaOutputChannels[d].set(a[d].subarray(f))}this.vanillaAvailableFrames+=b}this.vanillaFirstTransferDone||\\n(this.vanillaFirstTransferDone=!0,startPromize$$module$src$workers$old_spn_worker&&startPromize$$module$src$workers$old_spn_worker())}process({inputBuffer:a,outputBuffer:b}){if(\"realtimePerformanceEnded\"===this.workerMessagePort.vanillaWorkerState)return setPlayState$$module$src$workers$old_spn_worker({contextUid:this.contextUid,newPlayState:\"realtimePerformanceEnded\"}),!0;if(!this.vanillaInitialized){var c=this.softwareBufferSize*PERIODS$$module$src$workers$old_spn_worker;this.requestPort.postMessage({readIndex:0,\\nnumFrames:c});this.pendingFrames+=c;return this.vanillaInitialized=!0}if(!this.vanillaFirstTransferDone)return!0;c=range$$module$node_modules$rambda$dist$rambda_mjs(0,this.inputsCount).map(h=>a.getChannelData(h));const d=range$$module$node_modules$rambda$dist$rambda_mjs(0,this.outputsCount).map(h=>b.getChannelData(h));var e=0<c.length;const f=(this.vanillaOutputReadIndex+d[0].length)%this.hardwareBufferSize,g=e?(this.vanillaInputReadIndex+c[0].length)%this.hardwareBufferSize:0;if(\"realtimePerformanceStarted\"!==\\nthis.workerMessagePort.vanillaWorkerState&&\"realtimePerformanceResumed\"!==this.workerMessagePort.vanillaWorkerState)return d.forEach(h=>{h.fill(0)}),!0;if(this.vanillaAvailableFrames>=d[0].length){d.forEach((h,k)=>{h.set(this.vanillaOutputChannels[k].subarray(this.vanillaOutputReadIndex,f<this.vanillaOutputReadIndex?this.hardwareBufferSize:f))});if(0<this.inputsCount&&e&&0<c[0].length&&(e=this.softwareBufferSize*PERIODS$$module$src$workers$old_spn_worker,c.forEach((h,k)=>{this.vanillaInputChannels[k].set(h,\\nthis.vanillaInputReadIndex)}),0===g%e)){const h=[],k=(0===g?this.hardwareBufferSize:g)-e,l=0===g?this.hardwareBufferSize:g;this.vanillaInputChannels.forEach(m=>{h.push(m.subarray(k,l))});this.transferInputFrames(h)}this.vanillaOutputReadIndex=f;this.vanillaInputReadIndex=g;this.vanillaAvailableFrames-=d[0].length;this.bufferUnderrunCount=0}else 1<this.bufferUnderrunCount&&12>this.bufferUnderrunCount&&(this.workerMessagePort.post(\"Buffer underrun\"),this.bufferUnderrunCount+=1),100===this.bufferUnderrunCount&&\\n(this.workerMessagePort.post(\"FATAL: 100 buffers failed in a row\"),this.workerMessagePort.broadcastPlayState(\"realtimePerformanceEnded\"));this.vanillaAvailableFrames<this.softwareBufferSize*PERIODS$$module$src$workers$old_spn_worker&&this.pendingFrames<this.softwareBufferSize*PERIODS$$module$src$workers$old_spn_worker&&(this.requestPort.postMessage({readIndex:(this.vanillaAvailableFrames+f+this.pendingFrames)%this.hardwareBufferSize,numFrames:this.softwareBufferSize*PERIODS$$module$src$workers$old_spn_worker}),\\nthis.pendingFrames+=this.softwareBufferSize*PERIODS$$module$src$workers$old_spn_worker);return!0}}\\nconst initAudioInputPort$$module$src$workers$old_spn_worker=({audioInputPort:a})=>b=>a.postMessage(b),initMessagePort$$module$src$workers$old_spn_worker=({port:a})=>{const b=new $jscompDefaultExport$$module$src$utils$message_port_state;b.post=c=>a.postMessage({log:c});b.broadcastPlayState=c=>{\"realtimePerformanceStarted\"===b.vanillaWorkerState&&\"realtimePerformanceStarted\"===c||a.postMessage({playStateChange:c})};b.ready=!0;return b},initRequestPort$$module$src$workers$old_spn_worker=({requestPort:a,\\nspnClassInstance:b})=>{a.addEventListener(\"message\",c=>{const {audioPacket:d,readIndex:e,numFrames:f}=c.data;b.updateVanillaFrames({audioPacket:d,numFrames:f,readIndex:e})});a.start();return a},setPlayState$$module$src$workers$old_spn_worker=async({contextUid:a,newPlayState:b})=>{const c=spnInstances$$module$src$workers$old_spn_worker.get(a);c&&(\"resume\"===b?(\"suspended\"===c.audioContext.state&&c.audioContext.resume(),\"running\"===c.audioContext.state&&c.workerMessagePort.broadcastPlayState(\"realtimePerformanceResumed\")):\\nc.workerMessagePort&&(\"realtimePerformanceEnded\"===b&&\"realtimePerformanceEnded\"!==c.workerMessagePort.vanillaWorkerState?(c.workerMessagePort.broadcastPlayState(\"realtimePerformanceEnded\"),c.autoConnect&&disconnectAudioNode$$module$src$workers$old_spn_worker(a),deleteAudioNode$$module$src$workers$old_spn_worker(a),spnInstances$$module$src$workers$old_spn_worker.delete(a),c.autoConnect&&!c.audioContextIsProvided&&closeAndDeleteContext$$module$src$workers$old_spn_worker(a)):\"realtimePerformanceResumed\"===\\nb&&\"suspended\"===c.audioContext.state&&c.audioContext.resume(),c.workerMessagePort.vanillaWorkerState=b))},initialize$$module$src$workers$old_spn_worker=async({contextUid:a,hardwareBufferSize:b,softwareBufferSize:c,inputsCount:d,outputsCount:e,sampleRate:f,audioInputPort:g,messagePort:h,requestPort:k,audioContextIsProvided:l,autoConnect:m,initialPlayState:n})=>{logOldSpnWorker$$module$src$logger(\"initializing old-spn worker in iframe\")();startPromize$$module$src$workers$old_spn_worker=void 0;const p=\\ngetAudioContext$$module$src$workers$old_spn_worker(a);b=new CsoundScriptNodeProcessor$$module$src$workers$old_spn_worker({audioContext:p,contextUid:a,hardwareBufferSize:b,softwareBufferSize:c,inputsCount:d,outputsCount:e,sampleRate:f,audioContextIsProvided:l,autoConnect:m});h=initMessagePort$$module$src$workers$old_spn_worker({port:h});g=initAudioInputPort$$module$src$workers$old_spn_worker({audioInputPort:g,spnClassInstance:b});initRequestPort$$module$src$workers$old_spn_worker({requestPort:k,spnClassInstance:b});\\nb.initCallbacks({workerMessagePort:h,transferInputFrames:g,requestPort:k});spnInstances$$module$src$workers$old_spn_worker.set(a,b);if(\"realtimePerformanceStarted\"===n)return await new Promise((q,r)=>{startPromize$$module$src$workers$old_spn_worker=q;setTimeout(()=>{if(\"function\"===typeof startPromize$$module$src$workers$old_spn_worker)return r(Error(\"a call to start() timed out\")),startPromize$$module$src$workers$old_spn_worker=void 0,-1},6E5)})};\\nexpose$$module$node_modules$comlink$dist$esm$comlink_mjs({initialize:initialize$$module$src$workers$old_spn_worker,setPlayState:setPlayState$$module$src$workers$old_spn_worker},windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs(window.parent));var module$src$workers$old_spn_worker={};}).call(this);\\n//# sourceMappingURL=__compiled.old-spn.worker.js.map\\n'])),\nmodule$dist$__compiled_old_spn_worker_inline={};module$dist$__compiled_old_spn_worker_inline.default=$jscompDefaultExport$$module$dist$__compiled_old_spn_worker_inline;let spnWorker$$module$src$mains$old_spn_main,proxyPort$$module$src$mains$old_spn_main,UID$$module$src$mains$old_spn_main=0;\nclass ScriptProcessorNodeMainThread$$module$src$mains$old_spn_main{constructor({audioContext:a,audioContextIsProvided:b,autoConnect:c}){this.autoConnect=c;this.audioContextIsProvided=b;this.audioContext=a;this.softwareBufferSize=this.hardwareBufferSize=this.outputsCount=this.inputsCount=this.sampleRate=this.csoundWorkerMain=this.currentPlayState=void 0;this.scriptProcessorNode=!0;logOldSpnMain$$module$src$logger(\"ScriptProcessorNodeMainThread was constructed\")()}async terminateInstance(){window[`__csound_wasm_iframe_parent_${this.contextUid}Node`]&&\n(window[`__csound_wasm_iframe_parent_${this.contextUid}Node`].disconnect(),delete window[`__csound_wasm_iframe_parent_${this.contextUid}Node`]);if(this.audioContext){if(\"closed\"!==this.audioContext.state)try{await this.audioContext.close()}catch(a){}delete this.audioContext}proxyPort$$module$src$mains$old_spn_main&&(proxyPort$$module$src$mains$old_spn_main[releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs](),proxyPort$$module$src$mains$old_spn_main=void 0);this.iFrameElement&&this.iFrameElement.remove();\nspnWorker$$module$src$mains$old_spn_main=void 0;UID$$module$src$mains$old_spn_main=0}async onPlayStateChange(a){if(this.currentPlayState!==a){switch(a){case \"realtimePerformanceStarted\":logOldSpnMain$$module$src$logger(\"event received: realtimePerformanceStarted\")();this.currentPlayState=a;await this.initialize();await this.csoundWorkerMain.eventPromises.releaseStartPromise();this.publicEvents.triggerRealtimePerformanceStarted(this.csoundWorkerMain);break;case \"realtimePerformanceEnded\":logOldSpnMain$$module$src$logger(\"event received: realtimePerformanceEnded\")();\nwindow[`__csound_wasm_iframe_parent_${this.contextUid}Node`]&&(window[`__csound_wasm_iframe_parent_${this.contextUid}Node`].disconnect(),delete window[`__csound_wasm_iframe_parent_${this.contextUid}Node`]);break;case \"realtimePerformancePaused\":this.csoundWorkerMain&&this.csoundWorkerMain.eventPromises&&(this.csoundWorkerMain.publicEvents&&this.csoundWorkerMain.publicEvents.triggerRealtimePerformancePaused(this),await this.csoundWorkerMain.eventPromises.releasePausePromise());break;case \"realtimePerformanceResumed\":this.csoundWorkerMain&&\nthis.csoundWorkerMain.eventPromises&&(this.csoundWorkerMain.publicEvents&&this.csoundWorkerMain.publicEvents.triggerRealtimePerformanceResumed(this),await this.csoundWorkerMain.eventPromises.releaseResumePromise())}this.currentPlayState=a;!proxyPort$$module$src$mains$old_spn_main||\"realtimePerformanceStarted\"===a&&\"renderStarted\"===a||await proxyPort$$module$src$mains$old_spn_main.setPlayState({contextUid:this.contextUid,newPlayState:a})}}async initIframe(){if(void 0===window||void 0===window.document)throw new TypeError(\"Can only run SPN in Browser scope\");\nconst a=window.document;var b=['<!doctype html>\\n<html lang=\"en\">\\n<head>\\n<meta charset=\"UTF-8\">\\n</head>\\n<body>',`<script type=\"text/javascript\" src=\"${$jscompDefaultExport$$module$dist$__compiled_old_spn_worker_inline()}\"></script>`,\"</body>\"].join(\"\\n\");b=new Blob([b],{type:\"text/html\"});this.iFrameElement=document.createElement(\"iframe\");this.iFrameElement.src=URL.createObjectURL(b);this.iFrameElement.sandbox.add(\"allow-scripts\",\"allow-same-origin\");this.iFrameElement.style.cssText=\"position:absolute;left:0;top:-999px;width:1px;height:1px;\";\nb=new Promise(c=>{this.iFrameElement.onload=()=>{c()}});a.body.append(this.iFrameElement);try{await b}catch(c){console.error(c)}spnWorker$$module$src$mains$old_spn_main=this.iFrameElement.contentWindow}async initialize(){if(!spnWorker$$module$src$mains$old_spn_main&&(await this.initIframe(),!spnWorker$$module$src$mains$old_spn_main)){console.error(\"SPN FATAL: Couldn't create iFrame\");return}var a=`audioWorklet${UID$$module$src$mains$old_spn_main}`;this.contextUid=a;UID$$module$src$mains$old_spn_main+=\n1;proxyPort$$module$src$mains$old_spn_main||(proxyPort$$module$src$mains$old_spn_main=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(windowEndpoint$$module$node_modules$comlink$dist$esm$comlink_mjs(spnWorker$$module$src$mains$old_spn_main)));this.audioContext||(this.audioContextIsProvided&&console.error(\"fatal: the provided AudioContext was undefined\"),this.audioContext=new (WebkitAudioContext$$module$src$utils())({sampleRate:this.sampleRate}));\"closed\"===this.audioContext.state&&(this.audioContextIsProvided&&\nconsole.error(\"fatal: the provided AudioContext was closed, falling back new AudioContext\"),this.audioContext=new (WebkitAudioContext$$module$src$utils())({sampleRate:this.sampleRate}));this.audioContextIsProvided||this.sampleRate===this.audioContext.sampleRate||(this.audioContext=new (WebkitAudioContext$$module$src$utils())({sampleRate:this.sampleRate}));spnWorker$$module$src$mains$old_spn_main[a]=this.audioContext;window[`__csound_wasm_iframe_parent_${a}`]=this.audioContext;let b;this.isRequestingInput&&\nawait new Promise(c=>{requestMicrophoneNode$$module$src$mains$io_utils(d=>{d&&(b=this.audioContext.createMediaStreamSource(d));c()})});logOldSpnMain$$module$src$logger(\"initializing proxyPort\")();await proxyPort$$module$src$mains$old_spn_main.initialize(transfer$$module$node_modules$comlink$dist$esm$comlink_mjs({contextUid:a,hardwareBufferSize:32768,softwareBufferSize:2048,inputsCount:this.inputsCount,outputsCount:this.outputsCount,sampleRate:this.sampleRate,audioInputPort:this.ipcMessagePorts.audioWorkerAudioInputPort,\nmessagePort:this.ipcMessagePorts.workerMessagePort2,requestPort:this.ipcMessagePorts.audioWorkerFrameRequestPort,audioContextIsProvided:this.audioContextIsProvided,autoConnect:this.autoConnect,initialPlayState:this.currentPlayState},[this.ipcMessagePorts.audioWorkerAudioInputPort,this.ipcMessagePorts.workerMessagePort2,this.ipcMessagePorts.audioWorkerFrameRequestPort]));logOldSpnMain$$module$src$logger(\"done initializing proxyPort\")();(a=spnWorker$$module$src$mains$old_spn_main[`${a}Node`]||window[`__csound_wasm_iframe_parent_${a}Node`])&&\nb&&b.connect(a);this.publicEvents.triggerOnAudioNodeCreated(a);this.isRequestingMidi&&this.csoundWorkerMain&&this.csoundWorkerMain.handleMidiInput&&(logOldSpnMain$$module$src$logger(\"requesting for web-midi connection\")(),requestMidi$$module$src$utils$request_midi({onMidiMessage:this.csoundWorkerMain.handleMidiInput.bind(this.csoundWorkerMain)}))}}var $jscompDefaultExport$$module$src$mains$old_spn_main=ScriptProcessorNodeMainThread$$module$src$mains$old_spn_main,module$src$mains$old_spn_main={};\nmodule$src$mains$old_spn_main.default=$jscompDefaultExport$$module$src$mains$old_spn_main;const dlinit$$module$src$dlinit=(a,b,c,d)=>{if(b.exports.csoundModuleInit){var e=new WebAssembly.Global({value:\"i32\",mutable:!0},0),f=new WebAssembly.Global({value:\"i32\",mutable:!0},0),g=new WebAssembly.Global({value:\"i32\",mutable:!0},0);const h=new WebAssembly.Global({value:\"i32\",mutable:!0},0);let k=c.length;\"function\"===typeof b.exports.csoundModuleCreate&&(c.grow(1),e.value=k,c.set(k,b.exports.csoundModuleCreate),k+=1);\"function\"===typeof b.exports.csoundModuleInit&&(c.grow(1),f.value=k,c.set(k,\nb.exports.csoundModuleInit),k+=1);\"function\"===typeof b.exports.csoundModuleDestroy&&(c.grow(1),g.value=k,c.set(k,b.exports.csoundModuleDestroy),k+=1);\"function\"===typeof b.exports.csoundModuleErrorCodeToString&&(c.grow(1),h.value=k,c.set(k,b.exports.csoundModuleErrorCodeToString));a.exports.csoundWasiLoadPlugin(d,e,f,g,h)}else b.exports.csound_opcode_init||b.exports.csound_fgen_init?(e=new WebAssembly.Global({value:\"i32\",mutable:!0},0),f=new WebAssembly.Global({value:\"i32\",mutable:!0},0),g=c.length,\n\"function\"===typeof b.exports.csound_opcode_init&&(e.value=g,c.grow(1),c.set(g,b.exports.csound_opcode_init),g+=1),\"function\"===typeof b.exports.csound_fgen_init&&(f.value=g,c.grow(1),c.set(g,b.exports.csound_fgen_init)),a.exports.csoundWasiLoadOpcodeLibrary(d,f,e)):console.error(\"Plugin doesn't export nececcary functions to quality as csound plugin.\")};var module$src$dlinit={};module$src$dlinit.dlinit=dlinit$$module$src$dlinit;void 0!==goog.global&&(goog.global={});goog.global.BigInt||(goog.global.BigInt=void 0===BigInt?Number:BigInt);\nconst WASI_ESUCCESS$$module$src$filesystem$constants=0,WASI_E2BIG$$module$src$filesystem$constants=1,WASI_EACCES$$module$src$filesystem$constants=2,WASI_EADDRINUSE$$module$src$filesystem$constants=3,WASI_EADDRNOTAVAIL$$module$src$filesystem$constants=4,WASI_EAFNOSUPPORT$$module$src$filesystem$constants=5,WASI_EAGAIN$$module$src$filesystem$constants=6,WASI_EALREADY$$module$src$filesystem$constants=7,WASI_EBADF$$module$src$filesystem$constants=8,WASI_EBADMSG$$module$src$filesystem$constants=9,WASI_EBUSY$$module$src$filesystem$constants=\n10,WASI_ECANCELED$$module$src$filesystem$constants=11,WASI_ECHILD$$module$src$filesystem$constants=12,WASI_ECONNABORTED$$module$src$filesystem$constants=13,WASI_ECONNREFUSED$$module$src$filesystem$constants=14,WASI_ECONNRESET$$module$src$filesystem$constants=15,WASI_EDEADLK$$module$src$filesystem$constants=16,WASI_EDESTADDRREQ$$module$src$filesystem$constants=17,WASI_EDOM$$module$src$filesystem$constants=18,WASI_EDQUOT$$module$src$filesystem$constants=19,WASI_EEXIST$$module$src$filesystem$constants=\n20,WASI_EFAULT$$module$src$filesystem$constants=21,WASI_EFBIG$$module$src$filesystem$constants=22,WASI_EHOSTUNREACH$$module$src$filesystem$constants=23,WASI_EIDRM$$module$src$filesystem$constants=24,WASI_EILSEQ$$module$src$filesystem$constants=25,WASI_EINPROGRESS$$module$src$filesystem$constants=26,WASI_EINTR$$module$src$filesystem$constants=27,WASI_EINVAL$$module$src$filesystem$constants=28,WASI_EIO$$module$src$filesystem$constants=29,WASI_EISCONN$$module$src$filesystem$constants=30,WASI_EISDIR$$module$src$filesystem$constants=\n31,WASI_ELOOP$$module$src$filesystem$constants=32,WASI_EMFILE$$module$src$filesystem$constants=33,WASI_EMLINK$$module$src$filesystem$constants=34,WASI_EMSGSIZE$$module$src$filesystem$constants=35,WASI_EMULTIHOP$$module$src$filesystem$constants=36,WASI_ENAMETOOLONG$$module$src$filesystem$constants=37,WASI_ENETDOWN$$module$src$filesystem$constants=38,WASI_ENETRESET$$module$src$filesystem$constants=39,WASI_ENETUNREACH$$module$src$filesystem$constants=40,WASI_ENFILE$$module$src$filesystem$constants=41,\nWASI_ENOBUFS$$module$src$filesystem$constants=42,WASI_ENODEV$$module$src$filesystem$constants=43,WASI_ENOENT$$module$src$filesystem$constants=44,WASI_ENOEXEC$$module$src$filesystem$constants=45,WASI_ENOLCK$$module$src$filesystem$constants=46,WASI_ENOLINK$$module$src$filesystem$constants=47,WASI_ENOMEM$$module$src$filesystem$constants=48,WASI_ENOMSG$$module$src$filesystem$constants=49,WASI_ENOPROTOOPT$$module$src$filesystem$constants=50,WASI_ENOSPC$$module$src$filesystem$constants=51,WASI_ENOSYS$$module$src$filesystem$constants=\n52,WASI_ENOTCONN$$module$src$filesystem$constants=53,WASI_ENOTDIR$$module$src$filesystem$constants=54,WASI_ENOTEMPTY$$module$src$filesystem$constants=55,WASI_ENOTRECOVERABLE$$module$src$filesystem$constants=56,WASI_ENOTSOCK$$module$src$filesystem$constants=57,WASI_ENOTSUP$$module$src$filesystem$constants=58,WASI_ENOTTY$$module$src$filesystem$constants=59,WASI_ENXIO$$module$src$filesystem$constants=60,WASI_EOVERFLOW$$module$src$filesystem$constants=61,WASI_EOWNERDEAD$$module$src$filesystem$constants=\n62,WASI_EPERM$$module$src$filesystem$constants=63,WASI_EPIPE$$module$src$filesystem$constants=64,WASI_EPROTO$$module$src$filesystem$constants=65,WASI_EPROTONOSUPPORT$$module$src$filesystem$constants=66,WASI_EPROTOTYPE$$module$src$filesystem$constants=67,WASI_ERANGE$$module$src$filesystem$constants=68,WASI_EROFS$$module$src$filesystem$constants=69,WASI_ESPIPE$$module$src$filesystem$constants=70,WASI_ESRCH$$module$src$filesystem$constants=71,WASI_ESTALE$$module$src$filesystem$constants=72,WASI_ETIMEDOUT$$module$src$filesystem$constants=\n73,WASI_ETXTBSY$$module$src$filesystem$constants=74,WASI_EXDEV$$module$src$filesystem$constants=75,WASI_ENOTCAPABLE$$module$src$filesystem$constants=76,WASI_SIGABRT$$module$src$filesystem$constants=0,WASI_SIGALRM$$module$src$filesystem$constants=1,WASI_SIGBUS$$module$src$filesystem$constants=2,WASI_SIGCHLD$$module$src$filesystem$constants=3,WASI_SIGCONT$$module$src$filesystem$constants=4,WASI_SIGFPE$$module$src$filesystem$constants=5,WASI_SIGHUP$$module$src$filesystem$constants=6,WASI_SIGILL$$module$src$filesystem$constants=\n7,WASI_SIGINT$$module$src$filesystem$constants=8,WASI_SIGKILL$$module$src$filesystem$constants=9,WASI_SIGPIPE$$module$src$filesystem$constants=10,WASI_SIGQUIT$$module$src$filesystem$constants=11,WASI_SIGSEGV$$module$src$filesystem$constants=12,WASI_SIGSTOP$$module$src$filesystem$constants=13,WASI_SIGTERM$$module$src$filesystem$constants=14,WASI_SIGTRAP$$module$src$filesystem$constants=15,WASI_SIGTSTP$$module$src$filesystem$constants=16,WASI_SIGTTIN$$module$src$filesystem$constants=17,WASI_SIGTTOU$$module$src$filesystem$constants=\n18,WASI_SIGURG$$module$src$filesystem$constants=19,WASI_SIGUSR1$$module$src$filesystem$constants=20,WASI_SIGUSR2$$module$src$filesystem$constants=21,WASI_SIGVTALRM$$module$src$filesystem$constants=22,WASI_SIGXCPU$$module$src$filesystem$constants=23,WASI_SIGXFSZ$$module$src$filesystem$constants=24,WASI_FILETYPE_UNKNOWN$$module$src$filesystem$constants=0,WASI_FILETYPE_BLOCK_DEVICE$$module$src$filesystem$constants=1,WASI_FILETYPE_CHARACTER_DEVICE$$module$src$filesystem$constants=2,WASI_FILETYPE_DIRECTORY$$module$src$filesystem$constants=\n3,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants=4,WASI_FILETYPE_SOCKET_DGRAM$$module$src$filesystem$constants=5,WASI_FILETYPE_SOCKET_STREAM$$module$src$filesystem$constants=6,WASI_FILETYPE_SYMBOLIC_LINK$$module$src$filesystem$constants=7,WASI_FDFLAG_APPEND$$module$src$filesystem$constants=1,WASI_FDFLAG_DSYNC$$module$src$filesystem$constants=2,WASI_FDFLAG_NONBLOCK$$module$src$filesystem$constants=4,WASI_FDFLAG_RSYNC$$module$src$filesystem$constants=8,WASI_FDFLAG_SYNC$$module$src$filesystem$constants=\n16,WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants=goog.global.BigInt(1),WASI_RIGHT_FD_READ$$module$src$filesystem$constants=goog.global.BigInt(2),WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants=goog.global.BigInt(4),WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants=goog.global.BigInt(8),WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants=goog.global.BigInt(16),WASI_RIGHT_FD_TELL$$module$src$filesystem$constants=goog.global.BigInt(32),WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants=\ngoog.global.BigInt(64),WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants=goog.global.BigInt(128),WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants=goog.global.BigInt(256),WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants=goog.global.BigInt(512),WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants=goog.global.BigInt(1024),WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants=goog.global.BigInt(2048),WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants=\ngoog.global.BigInt(4096),WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants=goog.global.BigInt(8192),WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants=goog.global.BigInt(16384),WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants=goog.global.BigInt(32768),WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants=goog.global.BigInt(65536),WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants=goog.global.BigInt(131072),WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants=\ngoog.global.BigInt(262144),WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants=goog.global.BigInt(524288),WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants=goog.global.BigInt(1048576),WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants=goog.global.BigInt(2097152),WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants=goog.global.BigInt(4194304),WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants=goog.global.BigInt(8388608),WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants=\ngoog.global.BigInt(16777216),WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants=goog.global.BigInt(33554432),WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants=goog.global.BigInt(67108864),WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants=goog.global.BigInt(134217728),WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants=goog.global.BigInt(268435456),RIGHTS_ALL$$module$src$filesystem$constants=WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_READ$$module$src$filesystem$constants|\nWASI_RIGHT_FD_SEEK$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_TELL$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants|\nWASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants|WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants|\nWASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants|\nWASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants,RIGHTS_BLOCK_DEVICE_BASE$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_BLOCK_DEVICE_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_CHARACTER_DEVICE_BASE$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_CHARACTER_DEVICE_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants=\nWASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_TELL$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|\nWASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants=goog.global.BigInt(0),RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants|WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants|\nWASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants|WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants|WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants|WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants|WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants|\nWASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants|WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants|WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants|WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants|WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants|\nWASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,RIGHTS_DIRECTORY_INHERITING$$module$src$filesystem$constants=RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants|RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants,RIGHTS_SOCKET_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|\nWASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants|WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants,RIGHTS_SOCKET_INHERITING$$module$src$filesystem$constants=RIGHTS_ALL$$module$src$filesystem$constants,RIGHTS_TTY_BASE$$module$src$filesystem$constants=WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants|WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants|WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants|WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants,\nRIGHTS_TTY_INHERITING$$module$src$filesystem$constants=goog.global.BigInt(0),WASI_CLOCK_REALTIME$$module$src$filesystem$constants=0,WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants=1,WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants=2,WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants=3,WASI_EVENTTYPE_CLOCK$$module$src$filesystem$constants=0,WASI_EVENTTYPE_FD_READ$$module$src$filesystem$constants=1,WASI_EVENTTYPE_FD_WRITE$$module$src$filesystem$constants=2,WASI_FILESTAT_SET_ATIM$$module$src$filesystem$constants=\n1,WASI_FILESTAT_SET_ATIM_NOW$$module$src$filesystem$constants=2,WASI_FILESTAT_SET_MTIM$$module$src$filesystem$constants=4,WASI_FILESTAT_SET_MTIM_NOW$$module$src$filesystem$constants=8,WASI_O_CREAT$$module$src$filesystem$constants=1,WASI_O_DIRECTORY$$module$src$filesystem$constants=2,WASI_O_EXCL$$module$src$filesystem$constants=4,WASI_O_TRUNC$$module$src$filesystem$constants=8,WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants=0,WASI_DIRCOOKIE_START$$module$src$filesystem$constants=0,WASI_STDIN_FILENO$$module$src$filesystem$constants=\n0,WASI_STDOUT_FILENO$$module$src$filesystem$constants=1,WASI_STDERR_FILENO$$module$src$filesystem$constants=2,WASI_WHENCE_SET$$module$src$filesystem$constants=0,WASI_WHENCE_CUR$$module$src$filesystem$constants=1,WASI_WHENCE_END$$module$src$filesystem$constants=2;var module$src$filesystem$constants={};module$src$filesystem$constants.RIGHTS_ALL=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_BLOCK_DEVICE_BASE=RIGHTS_ALL$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.RIGHTS_BLOCK_DEVICE_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_CHARACTER_DEVICE_BASE=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_CHARACTER_DEVICE_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_DIRECTORY_BASE=RIGHTS_DIRECTORY_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_DIRECTORY_INHERITING=RIGHTS_DIRECTORY_INHERITING$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.RIGHTS_REGULAR_FILE_BASE=RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_REGULAR_FILE_INHERITING=RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_SOCKET_BASE=RIGHTS_SOCKET_BASE$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_SOCKET_INHERITING=RIGHTS_ALL$$module$src$filesystem$constants;module$src$filesystem$constants.RIGHTS_TTY_BASE=RIGHTS_TTY_BASE$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.RIGHTS_TTY_INHERITING=RIGHTS_TTY_INHERITING$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_MONOTONIC=WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_PROCESS_CPUTIME_ID=WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_CLOCK_REALTIME=WASI_CLOCK_REALTIME$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_CLOCK_THREAD_CPUTIME_ID=WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_DIRCOOKIE_START=WASI_DIRCOOKIE_START$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_E2BIG=WASI_E2BIG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EACCES=WASI_EACCES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EADDRINUSE=WASI_EADDRINUSE$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_EADDRNOTAVAIL=WASI_EADDRNOTAVAIL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EAFNOSUPPORT=WASI_EAFNOSUPPORT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EAGAIN=WASI_EAGAIN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EALREADY=WASI_EALREADY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EBADF=WASI_EBADF$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_EBADMSG=WASI_EBADMSG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EBUSY=WASI_EBUSY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECANCELED=WASI_ECANCELED$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECHILD=WASI_ECHILD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECONNABORTED=WASI_ECONNABORTED$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_ECONNREFUSED=WASI_ECONNREFUSED$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ECONNRESET=WASI_ECONNRESET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDEADLK=WASI_EDEADLK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDESTADDRREQ=WASI_EDESTADDRREQ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EDOM=WASI_EDOM$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_EDQUOT=WASI_EDQUOT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EEXIST=WASI_EEXIST$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EFAULT=WASI_EFAULT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EFBIG=WASI_EFBIG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EHOSTUNREACH=WASI_EHOSTUNREACH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EIDRM=WASI_EIDRM$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_EILSEQ=WASI_EILSEQ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINPROGRESS=WASI_EINPROGRESS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINTR=WASI_EINTR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EINVAL=WASI_EINVAL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EIO=WASI_EIO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EISCONN=WASI_EISCONN$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_EISDIR=WASI_EISDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ELOOP=WASI_ELOOP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMFILE=WASI_EMFILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMLINK=WASI_EMLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMSGSIZE=WASI_EMSGSIZE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EMULTIHOP=WASI_EMULTIHOP$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_ENAMETOOLONG=WASI_ENAMETOOLONG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETDOWN=WASI_ENETDOWN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETRESET=WASI_ENETRESET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENETUNREACH=WASI_ENETUNREACH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENFILE=WASI_ENFILE$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_ENOBUFS=WASI_ENOBUFS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENODEV=WASI_ENODEV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOENT=WASI_ENOENT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOEXEC=WASI_ENOEXEC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOLCK=WASI_ENOLCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOLINK=WASI_ENOLINK$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_ENOMEM=WASI_ENOMEM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOMSG=WASI_ENOMSG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOPROTOOPT=WASI_ENOPROTOOPT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOSPC=WASI_ENOSPC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOSYS=WASI_ENOSYS$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_ENOTCAPABLE=WASI_ENOTCAPABLE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTCONN=WASI_ENOTCONN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTDIR=WASI_ENOTDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTEMPTY=WASI_ENOTEMPTY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTRECOVERABLE=WASI_ENOTRECOVERABLE$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_ENOTSOCK=WASI_ENOTSOCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTSUP=WASI_ENOTSUP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENOTTY=WASI_ENOTTY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ENXIO=WASI_ENXIO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EOVERFLOW=WASI_EOVERFLOW$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_EOWNERDEAD=WASI_EOWNERDEAD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPERM=WASI_EPERM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPIPE=WASI_EPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPROTO=WASI_EPROTO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EPROTONOSUPPORT=WASI_EPROTONOSUPPORT$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_EPROTOTYPE=WASI_EPROTOTYPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ERANGE=WASI_ERANGE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EROFS=WASI_EROFS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESPIPE=WASI_ESPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESRCH=WASI_ESRCH$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ESTALE=WASI_ESTALE$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_ESUCCESS=WASI_ESUCCESS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ETIMEDOUT=WASI_ETIMEDOUT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_ETXTBSY=WASI_ETXTBSY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EVENTTYPE_CLOCK=WASI_EVENTTYPE_CLOCK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EVENTTYPE_FD_READ=WASI_EVENTTYPE_FD_READ$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_EVENTTYPE_FD_WRITE=WASI_EVENTTYPE_FD_WRITE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_EXDEV=WASI_EXDEV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_APPEND=WASI_FDFLAG_APPEND$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_DSYNC=WASI_FDFLAG_DSYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_NONBLOCK=WASI_FDFLAG_NONBLOCK$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_FDFLAG_RSYNC=WASI_FDFLAG_RSYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FDFLAG_SYNC=WASI_FDFLAG_SYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_ATIM=WASI_FILESTAT_SET_ATIM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_ATIM_NOW=WASI_FILESTAT_SET_ATIM_NOW$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILESTAT_SET_MTIM=WASI_FILESTAT_SET_MTIM$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_FILESTAT_SET_MTIM_NOW=WASI_FILESTAT_SET_MTIM_NOW$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_BLOCK_DEVICE=WASI_FILETYPE_BLOCK_DEVICE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_CHARACTER_DEVICE=WASI_FILETYPE_CHARACTER_DEVICE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_DIRECTORY=WASI_FILETYPE_DIRECTORY$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_FILETYPE_REGULAR_FILE=WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SOCKET_DGRAM=WASI_FILETYPE_SOCKET_DGRAM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SOCKET_STREAM=WASI_FILETYPE_SOCKET_STREAM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_FILETYPE_SYMBOLIC_LINK=WASI_FILETYPE_SYMBOLIC_LINK$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_FILETYPE_UNKNOWN=WASI_FILETYPE_UNKNOWN$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_CREAT=WASI_O_CREAT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_DIRECTORY=WASI_O_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_EXCL=WASI_O_EXCL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_O_TRUNC=WASI_O_TRUNC$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_PREOPENTYPE_DIR=WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_ADVISE=WASI_RIGHT_FD_ADVISE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_ALLOCATE=WASI_RIGHT_FD_ALLOCATE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_DATASYNC=WASI_RIGHT_FD_DATASYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FDSTAT_SET_FLAGS=WASI_RIGHT_FD_FDSTAT_SET_FLAGS$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_GET=WASI_RIGHT_FD_FILESTAT_GET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_SET_SIZE=WASI_RIGHT_FD_FILESTAT_SET_SIZE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_FILESTAT_SET_TIMES=WASI_RIGHT_FD_FILESTAT_SET_TIMES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_READ=WASI_RIGHT_FD_READ$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_RIGHT_FD_READDIR=WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_SEEK=WASI_RIGHT_FD_SEEK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_SYNC=WASI_RIGHT_FD_SYNC$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_TELL=WASI_RIGHT_FD_TELL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_FD_WRITE=WASI_RIGHT_FD_WRITE$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_RIGHT_PATH_CREATE_DIRECTORY=WASI_RIGHT_PATH_CREATE_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_CREATE_FILE=WASI_RIGHT_PATH_CREATE_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_GET=WASI_RIGHT_PATH_FILESTAT_GET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_SET_SIZE=WASI_RIGHT_PATH_FILESTAT_SET_SIZE$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_RIGHT_PATH_FILESTAT_SET_TIMES=WASI_RIGHT_PATH_FILESTAT_SET_TIMES$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_LINK_SOURCE=WASI_RIGHT_PATH_LINK_SOURCE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_LINK_TARGET=WASI_RIGHT_PATH_LINK_TARGET$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_OPEN=WASI_RIGHT_PATH_OPEN$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_RIGHT_PATH_READLINK=WASI_RIGHT_PATH_READLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_REMOVE_DIRECTORY=WASI_RIGHT_PATH_REMOVE_DIRECTORY$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_RENAME_SOURCE=WASI_RIGHT_PATH_RENAME_SOURCE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_RENAME_TARGET=WASI_RIGHT_PATH_RENAME_TARGET$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_RIGHT_PATH_SYMLINK=WASI_RIGHT_PATH_SYMLINK$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_PATH_UNLINK_FILE=WASI_RIGHT_PATH_UNLINK_FILE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_POLL_FD_READWRITE=WASI_RIGHT_POLL_FD_READWRITE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_RIGHT_SOCK_SHUTDOWN=WASI_RIGHT_SOCK_SHUTDOWN$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_SIGABRT=WASI_SIGABRT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGALRM=WASI_SIGALRM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGBUS=WASI_SIGBUS$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGCHLD=WASI_SIGCHLD$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGCONT=WASI_SIGCONT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGFPE=WASI_SIGFPE$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_SIGHUP=WASI_SIGHUP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGILL=WASI_SIGILL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGINT=WASI_SIGINT$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGKILL=WASI_SIGKILL$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGPIPE=WASI_SIGPIPE$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGQUIT=WASI_SIGQUIT$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_SIGSEGV=WASI_SIGSEGV$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGSTOP=WASI_SIGSTOP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTERM=WASI_SIGTERM$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTRAP=WASI_SIGTRAP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTSTP=WASI_SIGTSTP$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGTTIN=WASI_SIGTTIN$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_SIGTTOU=WASI_SIGTTOU$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGURG=WASI_SIGURG$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGUSR1=WASI_SIGUSR1$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGUSR2=WASI_SIGUSR2$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGVTALRM=WASI_SIGVTALRM$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_SIGXCPU=WASI_SIGXCPU$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_SIGXFSZ=WASI_SIGXFSZ$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDERR_FILENO=WASI_STDERR_FILENO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDIN_FILENO=WASI_STDIN_FILENO$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_STDOUT_FILENO=WASI_STDOUT_FILENO$$module$src$filesystem$constants;\nmodule$src$filesystem$constants.WASI_WHENCE_CUR=WASI_WHENCE_CUR$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_WHENCE_END=WASI_WHENCE_END$$module$src$filesystem$constants;module$src$filesystem$constants.WASI_WHENCE_SET=WASI_WHENCE_SET$$module$src$filesystem$constants;goog.debug={};function module$contents$goog$debug$Error_DebugError(a,b){if(Error.captureStackTrace)Error.captureStackTrace(this,module$contents$goog$debug$Error_DebugError);else{const c=Error().stack;c&&(this.stack=c)}a&&(this.message=String(a));void 0!==b&&(this.cause=b);this.reportErrorToServer=!0}goog.inherits(module$contents$goog$debug$Error_DebugError,Error);module$contents$goog$debug$Error_DebugError.prototype.name=\"CustomError\";goog.debug.Error=module$contents$goog$debug$Error_DebugError;goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;function module$contents$goog$asserts_AssertionError(a,b){module$contents$goog$debug$Error_DebugError.call(this,module$contents$goog$asserts_subs(a,b));this.messagePattern=a}goog.inherits(module$contents$goog$asserts_AssertionError,module$contents$goog$debug$Error_DebugError);goog.asserts.AssertionError=module$contents$goog$asserts_AssertionError;module$contents$goog$asserts_AssertionError.prototype.name=\"AssertionError\";\ngoog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};let module$contents$goog$asserts_errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;function module$contents$goog$asserts_subs(a,b){a=a.split(\"%s\");let c=\"\";const d=a.length-1;for(let e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:\"%s\");return c+a[d]}\nfunction module$contents$goog$asserts_doAssertFailure(a,b,c,d){let e=\"Assertion failed\",f;c?(e+=\": \"+c,f=d):a&&(e+=\": \"+a,f=b);a=new module$contents$goog$asserts_AssertionError(\"\"+e,f||[]);module$contents$goog$asserts_errorHandler_(a)}goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(module$contents$goog$asserts_errorHandler_=a)};\ngoog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&module$contents$goog$asserts_doAssertFailure(\"\",null,b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertExists=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&null==a&&module$contents$goog$asserts_doAssertFailure(\"Expected to exist: %s.\",[a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&module$contents$goog$asserts_errorHandler_(new module$contents$goog$asserts_AssertionError(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&\"number\"!==typeof a&&module$contents$goog$asserts_doAssertFailure(\"Expected number but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&\"string\"!==typeof a&&module$contents$goog$asserts_doAssertFailure(\"Expected string but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&\"function\"!==typeof a&&module$contents$goog$asserts_doAssertFailure(\"Expected function but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&module$contents$goog$asserts_doAssertFailure(\"Expected object but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!Array.isArray(a)&&module$contents$goog$asserts_doAssertFailure(\"Expected array but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&\"boolean\"!==typeof a&&module$contents$goog$asserts_doAssertFailure(\"Expected boolean but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||module$contents$goog$asserts_doAssertFailure(\"Expected Element but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||module$contents$goog$asserts_doAssertFailure(\"Expected instanceof %s but got %s.\",[module$contents$goog$asserts_getType(b),module$contents$goog$asserts_getType(a)],c,Array.prototype.slice.call(arguments,3));return a};\ngoog.asserts.assertFinite=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||\"number\"==typeof a&&isFinite(a)||module$contents$goog$asserts_doAssertFailure(\"Expected %s to be a finite number but it is not.\",[a],b,Array.prototype.slice.call(arguments,2));return a};\nfunction module$contents$goog$asserts_getType(a){return a instanceof Function?a.displayName||a.name||\"unknown type name\":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?\"null\":typeof a};goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;const module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS=2012<goog.FEATURESET_YEAR;goog.array.ASSUME_NATIVE_FUNCTIONS=module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS;function module$contents$goog$array_peek(a){return a[a.length-1]}goog.array.peek=module$contents$goog$array_peek;goog.array.last=module$contents$goog$array_peek;\nconst module$contents$goog$array_indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(\"string\"===typeof a)return\"string\"!==typeof b||1!=b.length?-1:a.indexOf(b,c);for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};goog.array.indexOf=module$contents$goog$array_indexOf;\nconst module$contents$goog$array_lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if(\"string\"===typeof a)return\"string\"!==typeof b||1!=b.length?-1:a.lastIndexOf(b,c);for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1};\ngoog.array.lastIndexOf=module$contents$goog$array_lastIndexOf;const module$contents$goog$array_forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};goog.array.forEach=module$contents$goog$array_forEach;\nfunction module$contents$goog$array_forEachRight(a,b,c){var d=a.length;const e=\"string\"===typeof a?a.split(\"\"):a;for(--d;0<=d;--d)d in e&&b.call(c,e[d],d,a)}goog.array.forEachRight=module$contents$goog$array_forEachRight;\nconst module$contents$goog$array_filter=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){const d=a.length,e=[];let f=0;const g=\"string\"===typeof a?a.split(\"\"):a;for(let h=0;h<d;h++)if(h in g){const k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e};goog.array.filter=module$contents$goog$array_filter;\nconst module$contents$goog$array_map=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){const d=a.length,e=Array(d),f=\"string\"===typeof a?a.split(\"\"):a;for(let g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};goog.array.map=module$contents$goog$array_map;\nconst module$contents$goog$array_reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){let e=c;module$contents$goog$array_forEach(a,function(f,g){e=b.call(d,e,f,g,a)});return e};goog.array.reduce=module$contents$goog$array_reduce;\nconst module$contents$goog$array_reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){let e=c;module$contents$goog$array_forEachRight(a,function(f,g){e=b.call(d,e,f,g,a)});return e};goog.array.reduceRight=module$contents$goog$array_reduceRight;\nconst module$contents$goog$array_some=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};goog.array.some=module$contents$goog$array_some;\nconst module$contents$goog$array_every=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};goog.array.every=module$contents$goog$array_every;\nfunction module$contents$goog$array_count(a,b,c){let d=0;module$contents$goog$array_forEach(a,function(e,f,g){b.call(c,e,f,g)&&++d},c);return d}goog.array.count=module$contents$goog$array_count;function module$contents$goog$array_find(a,b,c){b=module$contents$goog$array_findIndex(a,b,c);return 0>b?null:\"string\"===typeof a?a.charAt(b):a[b]}goog.array.find=module$contents$goog$array_find;\nfunction module$contents$goog$array_findIndex(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1}goog.array.findIndex=module$contents$goog$array_findIndex;function module$contents$goog$array_findRight(a,b,c){b=module$contents$goog$array_findIndexRight(a,b,c);return 0>b?null:\"string\"===typeof a?a.charAt(b):a[b]}goog.array.findRight=module$contents$goog$array_findRight;\nfunction module$contents$goog$array_findIndexRight(a,b,c){var d=a.length;const e=\"string\"===typeof a?a.split(\"\"):a;for(--d;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1}goog.array.findIndexRight=module$contents$goog$array_findIndexRight;function module$contents$goog$array_contains(a,b){return 0<=module$contents$goog$array_indexOf(a,b)}goog.array.contains=module$contents$goog$array_contains;function module$contents$goog$array_isEmpty(a){return 0==a.length}goog.array.isEmpty=module$contents$goog$array_isEmpty;\nfunction module$contents$goog$array_clear(a){if(!Array.isArray(a))for(let b=a.length-1;0<=b;b--)delete a[b];a.length=0}goog.array.clear=module$contents$goog$array_clear;function module$contents$goog$array_insert(a,b){module$contents$goog$array_contains(a,b)||a.push(b)}goog.array.insert=module$contents$goog$array_insert;function module$contents$goog$array_insertAt(a,b,c){module$contents$goog$array_splice(a,c,0,b)}goog.array.insertAt=module$contents$goog$array_insertAt;\nfunction module$contents$goog$array_insertArrayAt(a,b,c){goog.partial(module$contents$goog$array_splice,a,c,0).apply(null,b)}goog.array.insertArrayAt=module$contents$goog$array_insertArrayAt;function module$contents$goog$array_insertBefore(a,b,c){let d;2==arguments.length||0>(d=module$contents$goog$array_indexOf(a,c))?a.push(b):module$contents$goog$array_insertAt(a,b,d)}goog.array.insertBefore=module$contents$goog$array_insertBefore;\nfunction module$contents$goog$array_remove(a,b){b=module$contents$goog$array_indexOf(a,b);let c;(c=0<=b)&&module$contents$goog$array_removeAt(a,b);return c}goog.array.remove=module$contents$goog$array_remove;function module$contents$goog$array_removeLast(a,b){b=module$contents$goog$array_lastIndexOf(a,b);return 0<=b?(module$contents$goog$array_removeAt(a,b),!0):!1}goog.array.removeLast=module$contents$goog$array_removeLast;\nfunction module$contents$goog$array_removeAt(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length}goog.array.removeAt=module$contents$goog$array_removeAt;function module$contents$goog$array_removeIf(a,b,c){b=module$contents$goog$array_findIndex(a,b,c);return 0<=b?(module$contents$goog$array_removeAt(a,b),!0):!1}goog.array.removeIf=module$contents$goog$array_removeIf;\nfunction module$contents$goog$array_removeAllIf(a,b,c){let d=0;module$contents$goog$array_forEachRight(a,function(e,f){b.call(c,e,f,a)&&module$contents$goog$array_removeAt(a,f)&&d++});return d}goog.array.removeAllIf=module$contents$goog$array_removeAllIf;function module$contents$goog$array_concat(a){return Array.prototype.concat.apply([],arguments)}goog.array.concat=module$contents$goog$array_concat;function module$contents$goog$array_join(a){return Array.prototype.concat.apply([],arguments)}\ngoog.array.join=module$contents$goog$array_join;function module$contents$goog$array_toArray(a){const b=a.length;if(0<b){const c=Array(b);for(let d=0;d<b;d++)c[d]=a[d];return c}return[]}const module$contents$goog$array_clone=goog.array.toArray=module$contents$goog$array_toArray;goog.array.clone=module$contents$goog$array_toArray;\nfunction module$contents$goog$array_extend(a,b){for(let c=1;c<arguments.length;c++){const d=arguments[c];if(goog.isArrayLike(d)){const e=a.length||0,f=d.length||0;a.length=e+f;for(let g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}}goog.array.extend=module$contents$goog$array_extend;function module$contents$goog$array_splice(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,module$contents$goog$array_slice(arguments,1))}goog.array.splice=module$contents$goog$array_splice;\nfunction module$contents$goog$array_slice(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)}goog.array.slice=module$contents$goog$array_slice;\nfunction module$contents$goog$array_removeDuplicates(a,b,c){b=b||a;var d=function(g){return goog.isObject(g)?\"o\"+goog.getUid(g):(typeof g).charAt(0)+g};c=c||d;let e=d=0;const f={};for(;e<a.length;){const g=a[e++],h=c(g);Object.prototype.hasOwnProperty.call(f,h)||(f[h]=!0,b[d++]=g)}b.length=d}goog.array.removeDuplicates=module$contents$goog$array_removeDuplicates;\nfunction module$contents$goog$array_binarySearch(a,b,c){return module$contents$goog$array_binarySearch_(a,c||module$contents$goog$array_defaultCompare,!1,b)}goog.array.binarySearch=module$contents$goog$array_binarySearch;function module$contents$goog$array_binarySelect(a,b,c){return module$contents$goog$array_binarySearch_(a,b,!0,void 0,c)}goog.array.binarySelect=module$contents$goog$array_binarySelect;\nfunction module$contents$goog$array_binarySearch_(a,b,c,d,e){let f=0,g=a.length,h;for(;f<g;){const k=f+(g-f>>>1);let m;m=c?b.call(e,a[k],k,a):b(d,a[k]);0<m?f=k+1:(g=k,h=!m)}return h?f:-f-1}function module$contents$goog$array_sort(a,b){a.sort(b||module$contents$goog$array_defaultCompare)}goog.array.sort=module$contents$goog$array_sort;\nfunction module$contents$goog$array_stableSort(a,b){const c=Array(a.length);for(let e=0;e<a.length;e++)c[e]={index:e,value:a[e]};const d=b||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(c,function(e,f){return d(e.value,f.value)||e.index-f.index});for(b=0;b<a.length;b++)a[b]=c[b].value}goog.array.stableSort=module$contents$goog$array_stableSort;\nfunction module$contents$goog$array_sortByKey(a,b,c){const d=c||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(a,function(e,f){return d(b(e),b(f))})}goog.array.sortByKey=module$contents$goog$array_sortByKey;function module$contents$goog$array_sortObjectsByKey(a,b,c){module$contents$goog$array_sortByKey(a,function(d){return d[b]},c)}goog.array.sortObjectsByKey=module$contents$goog$array_sortObjectsByKey;\nfunction module$contents$goog$array_isSorted(a,b,c){b=b||module$contents$goog$array_defaultCompare;for(let d=1;d<a.length;d++){const e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0}goog.array.isSorted=module$contents$goog$array_isSorted;function module$contents$goog$array_equals(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;const d=a.length;c=c||module$contents$goog$array_defaultCompareEquality;for(let e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0}\ngoog.array.equals=module$contents$goog$array_equals;function module$contents$goog$array_compare3(a,b,c){c=c||module$contents$goog$array_defaultCompare;const d=Math.min(a.length,b.length);for(let e=0;e<d;e++){const f=c(a[e],b[e]);if(0!=f)return f}return module$contents$goog$array_defaultCompare(a.length,b.length)}goog.array.compare3=module$contents$goog$array_compare3;function module$contents$goog$array_defaultCompare(a,b){return a>b?1:a<b?-1:0}goog.array.defaultCompare=module$contents$goog$array_defaultCompare;\nfunction module$contents$goog$array_inverseDefaultCompare(a,b){return-module$contents$goog$array_defaultCompare(a,b)}goog.array.inverseDefaultCompare=module$contents$goog$array_inverseDefaultCompare;function module$contents$goog$array_defaultCompareEquality(a,b){return a===b}goog.array.defaultCompareEquality=module$contents$goog$array_defaultCompareEquality;\nfunction module$contents$goog$array_binaryInsert(a,b,c){c=module$contents$goog$array_binarySearch(a,b,c);return 0>c?(module$contents$goog$array_insertAt(a,b,-(c+1)),!0):!1}goog.array.binaryInsert=module$contents$goog$array_binaryInsert;function module$contents$goog$array_binaryRemove(a,b,c){b=module$contents$goog$array_binarySearch(a,b,c);return 0<=b?module$contents$goog$array_removeAt(a,b):!1}goog.array.binaryRemove=module$contents$goog$array_binaryRemove;\nfunction module$contents$goog$array_bucket(a,b,c){const d={};for(let e=0;e<a.length;e++){const f=a[e],g=b.call(c,f,e,a);void 0!==g&&(d[g]||(d[g]=[])).push(f)}return d}goog.array.bucket=module$contents$goog$array_bucket;function module$contents$goog$array_bucketToMap(a,b){const c=new Map;for(let d=0;d<a.length;d++){const e=a[d],f=b(e,d,a);if(void 0!==f){let g=c.get(f);g||(g=[],c.set(f,g));g.push(e)}}return c}goog.array.bucketToMap=module$contents$goog$array_bucketToMap;\nfunction module$contents$goog$array_toObject(a,b,c){const d={};module$contents$goog$array_forEach(a,function(e,f){d[b.call(c,e,f,a)]=e});return d}goog.array.toObject=module$contents$goog$array_toObject;function module$contents$goog$array_toMap(a,b){const c=new Map;for(let d=0;d<a.length;d++){const e=a[d];c.set(b(e,d,a),e)}return c}goog.array.toMap=module$contents$goog$array_toMap;\nfunction module$contents$goog$array_range(a,b,c){const d=[];let e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d}goog.array.range=module$contents$goog$array_range;function module$contents$goog$array_repeat(a,b){const c=[];for(let d=0;d<b;d++)c[d]=a;return c}goog.array.repeat=module$contents$goog$array_repeat;\nfunction module$contents$goog$array_flatten(a){const b=[];for(let d=0;d<arguments.length;d++){const e=arguments[d];if(Array.isArray(e))for(let f=0;f<e.length;f+=8192){var c=module$contents$goog$array_slice(e,f,f+8192);c=module$contents$goog$array_flatten.apply(null,c);for(let g=0;g<c.length;g++)b.push(c[g])}else b.push(e)}return b}goog.array.flatten=module$contents$goog$array_flatten;\nfunction module$contents$goog$array_rotate(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a}goog.array.rotate=module$contents$goog$array_rotate;function module$contents$goog$array_moveItem(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0])}goog.array.moveItem=module$contents$goog$array_moveItem;\nfunction module$contents$goog$array_zip(a){if(!arguments.length)return[];const b=[];let c=arguments[0].length;for(var d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){const e=[];for(let f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b}goog.array.zip=module$contents$goog$array_zip;function module$contents$goog$array_shuffle(a,b){b=b||Math.random;for(let c=a.length-1;0<c;c--){const d=Math.floor(b()*(c+1)),e=a[c];a[c]=a[d];a[d]=e}}\ngoog.array.shuffle=module$contents$goog$array_shuffle;function module$contents$goog$array_copyByIndex(a,b){const c=[];module$contents$goog$array_forEach(b,function(d){c.push(a[d])});return c}goog.array.copyByIndex=module$contents$goog$array_copyByIndex;function module$contents$goog$array_concatMap(a,b,c){return module$contents$goog$array_concat.apply([],module$contents$goog$array_map(a,b,c))}goog.array.concatMap=module$contents$goog$array_concatMap;goog.dom.asserts={};goog.dom.asserts.assertIsLocation=function(a){if(goog.asserts.ENABLE_ASSERTS){var b=goog.dom.asserts.getWindow_(a);b&&(!a||!(a instanceof b.Location)&&a instanceof b.Element)&&goog.asserts.fail(\"Argument is not a Location (or a non-Element mock); got: %s\",goog.dom.asserts.debugStringForType_(a))}return a};\ngoog.dom.asserts.assertIsElementType_=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=goog.dom.asserts.getWindow_(a);c&&\"undefined\"!=typeof c[b]&&(a&&(a instanceof c[b]||!(a instanceof c.Location||a instanceof c.Element))||goog.asserts.fail(\"Argument is not a %s (or a non-Element, non-Location mock); got: %s\",b,goog.dom.asserts.debugStringForType_(a)))}return a};goog.dom.asserts.assertIsHTMLAnchorElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLAnchorElement\")};\ngoog.dom.asserts.assertIsHTMLButtonElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLButtonElement\")};goog.dom.asserts.assertIsHTMLLinkElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLLinkElement\")};goog.dom.asserts.assertIsHTMLImageElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLImageElement\")};goog.dom.asserts.assertIsHTMLAudioElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLAudioElement\")};\ngoog.dom.asserts.assertIsHTMLVideoElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLVideoElement\")};goog.dom.asserts.assertIsHTMLInputElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLInputElement\")};goog.dom.asserts.assertIsHTMLTextAreaElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLTextAreaElement\")};goog.dom.asserts.assertIsHTMLCanvasElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLCanvasElement\")};\ngoog.dom.asserts.assertIsHTMLEmbedElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLEmbedElement\")};goog.dom.asserts.assertIsHTMLFormElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLFormElement\")};goog.dom.asserts.assertIsHTMLFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLFrameElement\")};goog.dom.asserts.assertIsHTMLIFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLIFrameElement\")};\ngoog.dom.asserts.assertIsHTMLObjectElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLObjectElement\")};goog.dom.asserts.assertIsHTMLScriptElement=function(a){return goog.dom.asserts.assertIsElementType_(a,\"HTMLScriptElement\")};\ngoog.dom.asserts.debugStringForType_=function(a){if(goog.isObject(a))try{return a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a)}catch(b){return\"<object could not be stringified>\"}else return void 0===a?\"undefined\":null===a?\"null\":typeof a};goog.dom.asserts.getWindow_=function(a){try{var b=a&&a.ownerDocument,c=b&&(b.defaultView||b.parentWindow);c=c||goog.global;if(c.Element&&c.Location)return c}catch(d){}return null};goog.functions={};goog.functions.constant=function(a){return function(){return a}};goog.functions.FALSE=function(){return!1};goog.functions.TRUE=function(){return!0};goog.functions.NULL=function(){return null};goog.functions.UNDEFINED=function(){};goog.functions.EMPTY=goog.functions.UNDEFINED;goog.functions.identity=function(a,b){return a};goog.functions.error=function(a){return function(){throw Error(a);}};goog.functions.fail=function(a){return function(){throw a;}};\ngoog.functions.lock=function(a,b){b=b||0;return function(){return a.apply(this,Array.prototype.slice.call(arguments,0,b))}};goog.functions.nth=function(a){return function(){return arguments[a]}};goog.functions.partialRight=function(a,b){const c=Array.prototype.slice.call(arguments,1);return function(){let d=this;d===goog.global&&(d=void 0);const e=Array.prototype.slice.call(arguments);e.push.apply(e,c);return a.apply(d,e)}};\ngoog.functions.withReturnValue=function(a,b){return goog.functions.sequence(a,goog.functions.constant(b))};goog.functions.equalTo=function(a,b){return function(c){return b?a==c:a===c}};goog.functions.compose=function(a,b){const c=arguments,d=c.length;return function(){let e;d&&(e=c[d-1].apply(this,arguments));for(let f=d-2;0<=f;f--)e=c[f].call(this,e);return e}};\ngoog.functions.sequence=function(a){const b=arguments,c=b.length;return function(){let d;for(let e=0;e<c;e++)d=b[e].apply(this,arguments);return d}};goog.functions.and=function(a){const b=arguments,c=b.length;return function(){for(let d=0;d<c;d++)if(!b[d].apply(this,arguments))return!1;return!0}};goog.functions.or=function(a){const b=arguments,c=b.length;return function(){for(let d=0;d<c;d++)if(b[d].apply(this,arguments))return!0;return!1}};\ngoog.functions.not=function(a){return function(){return!a.apply(this,arguments)}};goog.functions.create=function(a,b){var c=function(){};c.prototype=a.prototype;c=new c;a.apply(c,Array.prototype.slice.call(arguments,1));return c};goog.functions.CACHE_RETURN_VALUE=!0;goog.functions.cacheReturnValue=function(a){let b=!1,c;return function(){if(!goog.functions.CACHE_RETURN_VALUE)return a();b||(c=a(),b=!0);return c}};goog.functions.once=function(a){let b=a;return function(){if(b){const c=b;b=null;c()}}};\ngoog.functions.debounce=function(a,b,c){let d=0;return function(e){goog.global.clearTimeout(d);const f=arguments;d=goog.global.setTimeout(function(){a.apply(c,f)},b)}};goog.functions.throttle=function(a,b,c){let d=0,e=!1,f=[];const g=function(){d=0;e&&(e=!1,h())},h=function(){d=goog.global.setTimeout(g,b);let k=f;f=[];a.apply(c,k)};return function(k){f=arguments;d?e=!0:h()}};\ngoog.functions.rateLimit=function(a,b,c){let d=0;const e=function(){d=0};return function(f){d||(d=goog.global.setTimeout(e,b),a.apply(c,arguments))}};goog.functions.isFunction=a=>\"function\"===typeof a;goog.string={};goog.string.TypedString=function(){};goog.string.Const=function(a,b){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_=a===goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_&&b||\"\";this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_};goog.string.Const.prototype.implementsGoogStringTypedString=!0;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};\ngoog.DEBUG&&(goog.string.Const.prototype.toString=function(){return\"Const{\"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+\"}\"});goog.string.Const.unwrap=function(a){if(a instanceof goog.string.Const&&a.constructor===goog.string.Const&&a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_)return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;goog.asserts.fail(\"expected object of type Const, got '\"+a+\"'\");return\"type_error:Const\"};\ngoog.string.Const.from=function(a){return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_,a)};goog.string.Const.TYPE_MARKER_={};goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_={};goog.string.Const.EMPTY=goog.string.Const.from(\"\");goog.html={};goog.html.trustedtypes={};goog.html.trustedtypes.POLICY_NAME=goog.TRUSTED_TYPES_POLICY_NAME?goog.TRUSTED_TYPES_POLICY_NAME+\"#html\":\"\";goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse=function(){if(!goog.html.trustedtypes.POLICY_NAME)return null;void 0===goog.html.trustedtypes.cachedPolicy_&&(goog.html.trustedtypes.cachedPolicy_=goog.createTrustedTypesPolicy(goog.html.trustedtypes.POLICY_NAME));return goog.html.trustedtypes.cachedPolicy_};const module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE={};\nclass module$contents$goog$html$SafeScript_SafeScript{constructor(a,b){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=b===module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE?a:\"\";this.implementsGoogStringTypedString=!0}toString(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static fromConstant(a){a=goog.string.Const.unwrap(a);return 0===a.length?module$contents$goog$html$SafeScript_SafeScript.EMPTY:module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a)}static fromJson(a){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(module$contents$goog$html$SafeScript_SafeScript.stringify_(a))}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static unwrap(a){return module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(a).toString()}static unwrapTrustedScript(a){if(a instanceof\nmodule$contents$goog$html$SafeScript_SafeScript&&a.constructor===module$contents$goog$html$SafeScript_SafeScript)return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;(0,goog.asserts.fail)(\"expected object of type SafeScript, got '\"+a+\"' of type \"+goog.typeOf(a));return\"type_error:SafeScript\"}static stringify_(a){return JSON.stringify(a).replace(/</g,\"\\\\x3c\")}static createSafeScriptSecurityPrivateDoNotAccessOrElse(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createScript(a):\na;return new module$contents$goog$html$SafeScript_SafeScript(a,module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE)}}module$contents$goog$html$SafeScript_SafeScript.EMPTY=function(){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(\"\")}();goog.html.SafeScript=module$contents$goog$html$SafeScript_SafeScript;goog.fs={};goog.fs.url={};goog.fs.url.createObjectUrl=function(a){return goog.fs.url.getUrlObject_().createObjectURL(a)};goog.fs.url.revokeObjectUrl=function(a){goog.fs.url.getUrlObject_().revokeObjectURL(a)};goog.fs.url.UrlObject_=function(){};goog.fs.url.UrlObject_.prototype.createObjectURL=function(a){};goog.fs.url.UrlObject_.prototype.revokeObjectURL=function(a){};\ngoog.fs.url.getUrlObject_=function(){const a=goog.fs.url.findUrlObject_();if(null!=a)return a;throw Error(\"This browser doesn't seem to support blob URLs\");};goog.fs.url.findUrlObject_=function(){return void 0!==goog.global.URL&&void 0!==goog.global.URL.createObjectURL?goog.global.URL:void 0!==goog.global.createObjectURL?goog.global:null};goog.fs.url.browserSupportsObjectUrls=function(){return null!=goog.fs.url.findUrlObject_()};goog.fs.blob={};goog.fs.blob.getBlob=function(a){var b=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(void 0!==b){b=new b;for(let c=0;c<arguments.length;c++)b.append(arguments[c]);return b.getBlob()}return goog.fs.blob.getBlobWithProperties(Array.prototype.slice.call(arguments))};\ngoog.fs.blob.getBlobWithProperties=function(a,b,c){var d=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(void 0!==d){d=new d;for(let e=0;e<a.length;e++)d.append(a[e],c);return d.getBlob(b)}if(void 0!==goog.global.Blob)return d={},b&&(d.type=b),c&&(d.endings=c),new Blob(a,d);throw Error(\"This browser doesn't seem to support creating Blobs\");};goog.html.TrustedResourceUrl=class{constructor(a,b){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=b===goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_?a:\"\"}toString(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+\"\"}};goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString()};\ngoog.html.TrustedResourceUrl.prototype.cloneWithParams=function(a,b){var c=goog.html.TrustedResourceUrl.unwrap(this);c=goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c);var d=c[3]||\"\";return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1]+goog.html.TrustedResourceUrl.stringifyParams_(\"?\",c[2]||\"\",a)+goog.html.TrustedResourceUrl.stringifyParams_(\"#\",d,b))};goog.html.TrustedResourceUrl.unwrap=function(a){return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a).toString()};\ngoog.html.TrustedResourceUrl.unwrapTrustedScriptURL=function(a){if(a instanceof goog.html.TrustedResourceUrl&&a.constructor===goog.html.TrustedResourceUrl)return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;goog.asserts.fail(\"expected object of type TrustedResourceUrl, got '\"+a+\"' of type \"+goog.typeOf(a));return\"type_error:TrustedResourceUrl\"};\ngoog.html.TrustedResourceUrl.format=function(a,b){var c=goog.string.Const.unwrap(a);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(c))throw Error(\"Invalid TrustedResourceUrl format: \"+c);a=c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(d,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, \"'+e+'\", in format string, \"'+c+'\", but no valid label mapping found in args: '+JSON.stringify(b));d=b[e];return d instanceof goog.string.Const?goog.string.Const.unwrap(d):\nencodeURIComponent(String(d))});return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=RegExp(\"^((https:)?//[0-9a-z.:[\\\\]-]+/|/[^/\\\\\\\\]|[^:/\\\\\\\\%]+/|[^:/\\\\\\\\%]*[?#]|about:blank#)\",\"i\");goog.html.TrustedResourceUrl.URL_PARAM_PARSER_=/^([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/;\ngoog.html.TrustedResourceUrl.formatWithParams=function(a,b,c,d){return goog.html.TrustedResourceUrl.format(a,b).cloneWithParams(c,d)};goog.html.TrustedResourceUrl.fromConstant=function(a){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};goog.html.TrustedResourceUrl.fromConstants=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=goog.string.Const.unwrap(a[c]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};\ngoog.html.TrustedResourceUrl.fromSafeScript=function(a){a=goog.fs.blob.getBlobWithProperties([module$contents$goog$html$SafeScript_SafeScript.unwrap(a)],\"text/javascript\");a=goog.fs.url.createObjectUrl(a);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};\ngoog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createScriptURL(a):a;return new goog.html.TrustedResourceUrl(a,goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};\ngoog.html.TrustedResourceUrl.stringifyParams_=function(a,b,c){if(null==c)return b;if(\"string\"===typeof c)return c?a+encodeURIComponent(c):\"\";for(var d in c)if(Object.prototype.hasOwnProperty.call(c,d)){var e=c[d];e=Array.isArray(e)?e:[e];for(var f=0;f<e.length;f++){var g=e[f];null!=g&&(b||(b=a),b+=(b.length>a.length?\"&\":\"\")+encodeURIComponent(d)+\"=\"+encodeURIComponent(String(g)))}}return b};goog.string.internal={};goog.string.internal.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.internal.endsWith=function(a,b){const c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.internal.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.slice(0,b.length))};goog.string.internal.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.slice(a.length-b.length))};\ngoog.string.internal.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.internal.isEmptyOrWhitespace=function(a){return/^[\\s\\xa0]*$/.test(a)};goog.string.internal.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1]};goog.string.internal.caseInsensitiveCompare=function(a,b){a=String(a).toLowerCase();b=String(b).toLowerCase();return a<b?-1:a==b?0:1};\ngoog.string.internal.newLineToBr=function(a,b){return a.replace(/(\\r\\n|\\r|\\n)/g,b?\"<br />\":\"<br>\")};\ngoog.string.internal.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.internal.AMP_RE_,\"&amp;\").replace(goog.string.internal.LT_RE_,\"&lt;\").replace(goog.string.internal.GT_RE_,\"&gt;\").replace(goog.string.internal.QUOT_RE_,\"&quot;\").replace(goog.string.internal.SINGLE_QUOTE_RE_,\"&#39;\").replace(goog.string.internal.NULL_RE_,\"&#0;\");else{if(!goog.string.internal.ALL_RE_.test(a))return a;-1!=a.indexOf(\"&\")&&(a=a.replace(goog.string.internal.AMP_RE_,\"&amp;\"));-1!=a.indexOf(\"<\")&&(a=a.replace(goog.string.internal.LT_RE_,\n\"&lt;\"));-1!=a.indexOf(\">\")&&(a=a.replace(goog.string.internal.GT_RE_,\"&gt;\"));-1!=a.indexOf('\"')&&(a=a.replace(goog.string.internal.QUOT_RE_,\"&quot;\"));-1!=a.indexOf(\"'\")&&(a=a.replace(goog.string.internal.SINGLE_QUOTE_RE_,\"&#39;\"));-1!=a.indexOf(\"\\x00\")&&(a=a.replace(goog.string.internal.NULL_RE_,\"&#0;\"))}return a};goog.string.internal.AMP_RE_=/&/g;goog.string.internal.LT_RE_=/</g;goog.string.internal.GT_RE_=/>/g;goog.string.internal.QUOT_RE_=/\"/g;goog.string.internal.SINGLE_QUOTE_RE_=/'/g;\ngoog.string.internal.NULL_RE_=/\\x00/g;goog.string.internal.ALL_RE_=/[\\x00&<>\"']/;goog.string.internal.whitespaceEscape=function(a,b){return goog.string.internal.newLineToBr(a.replace(/  /g,\" &#160;\"),b)};goog.string.internal.contains=function(a,b){return-1!=a.indexOf(b)};goog.string.internal.caseInsensitiveContains=function(a,b){return goog.string.internal.contains(a.toLowerCase(),b.toLowerCase())};\ngoog.string.internal.compareVersions=function(a,b){var c=0;a=goog.string.internal.trim(String(a)).split(\".\");b=goog.string.internal.trim(String(b)).split(\".\");const d=Math.max(a.length,b.length);for(let g=0;0==c&&g<d;g++){var e=a[g]||\"\",f=b[g]||\"\";do{e=/(\\d*)(\\D*)(.*)/.exec(e)||[\"\",\"\",\"\",\"\"];f=/(\\d*)(\\D*)(.*)/.exec(f)||[\"\",\"\",\"\",\"\"];if(0==e[0].length&&0==f[0].length)break;c=0==e[1].length?0:parseInt(e[1],10);const h=0==f[1].length?0:parseInt(f[1],10);c=goog.string.internal.compareElements_(c,h)||\ngoog.string.internal.compareElements_(0==e[2].length,0==f[2].length)||goog.string.internal.compareElements_(e[2],f[2]);e=e[3];f=f[3]}while(0==c)}return c};goog.string.internal.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.html.SafeUrl=class{constructor(a,b){this.privateDoNotAccessOrElseSafeUrlWrappedValue_=b===goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_?a:\"\"}toString(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()}};goog.html.SafeUrl.INNOCUOUS_STRING=\"about:invalid#zClosurez\";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()};\ngoog.html.SafeUrl.unwrap=function(a){if(a instanceof goog.html.SafeUrl&&a.constructor===goog.html.SafeUrl)return a.privateDoNotAccessOrElseSafeUrlWrappedValue_;goog.asserts.fail(\"expected object of type SafeUrl, got '\"+a+\"' of type \"+goog.typeOf(a));return\"type_error:SafeUrl\"};goog.html.SafeUrl.fromConstant=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};\ngoog.html.SAFE_MIME_TYPE_PATTERN_=RegExp('^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font/\\\\w+|image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon|heic|heif)|video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\\\\w+=(?:\\\\w+|\"[\\\\w;,= ]+\"))*$',\"i\");goog.html.SafeUrl.isSafeMimeType=function(a){return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a)};\ngoog.html.SafeUrl.fromBlob=function(a){a=goog.html.SafeUrl.isSafeMimeType(a.type)?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.revokeObjectUrl=function(a){a=a.getTypedStringValue();a!==goog.html.SafeUrl.INNOCUOUS_STRING&&goog.fs.url.revokeObjectUrl(a)};\ngoog.html.SafeUrl.fromMediaSource=function(a){goog.asserts.assert(\"MediaSource\"in goog.global,\"No support for MediaSource\");a=a instanceof MediaSource?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.DATA_URL_PATTERN_=/^data:(.*);base64,[a-z0-9+\\/]+=*$/i;\ngoog.html.SafeUrl.tryFromDataUrl=function(a){a=String(a);a=a.replace(/(%0A|%0D)/g,\"\");return a.match(goog.html.DATA_URL_PATTERN_)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a):null};goog.html.SafeUrl.fromDataUrl=function(a){return goog.html.SafeUrl.tryFromDataUrl(a)||goog.html.SafeUrl.INNOCUOUS_URL};goog.html.SafeUrl.fromTelUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"tel:\")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\ngoog.html.SIP_URL_PATTERN_=RegExp(\"^sip[s]?:[+a-z0-9_.!$%&'*\\\\/=^`{|}~-]+@([a-z0-9-]+\\\\.)+[a-z0-9]{2,63}$\",\"i\");goog.html.SafeUrl.fromSipUrl=function(a){goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a))||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromFacebookMessengerUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"fb-messenger://share\")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\ngoog.html.SafeUrl.fromWhatsAppUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"whatsapp://send\")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromSmsUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"sms:\")&&goog.html.SafeUrl.isSmsUrlBodyValid_(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\ngoog.html.SafeUrl.isSmsUrlBodyValid_=function(a){var b=a.indexOf(\"#\");0<b&&(a=a.substring(0,b));b=a.match(/[?&]body=/gi);if(!b)return!0;if(1<b.length)return!1;a=a.match(/[?&]body=([^&]*)/)[1];if(!a)return!0;try{decodeURIComponent(a)}catch(c){return!1}return/^(?:[a-z0-9\\-_.~]|%[0-9a-f]{2})+$/i.test(a)};goog.html.SafeUrl.fromSshUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,\"ssh://\")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\ngoog.html.SafeUrl.sanitizeChromeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\\/\\/([^\\/]+)\\//,a,b)};goog.html.SafeUrl.sanitizeFirefoxExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\\/\\/([^\\/]+)\\//,a,b)};goog.html.SafeUrl.sanitizeEdgeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\\/\\/([^\\/]+)\\//,a,b)};\ngoog.html.SafeUrl.sanitizeExtensionUrl_=function(a,b,c){(a=a.exec(b))?(a=a[1],-1==(c instanceof goog.string.Const?[goog.string.Const.unwrap(c)]:c.map(function(d){return goog.string.Const.unwrap(d)})).indexOf(a)&&(b=goog.html.SafeUrl.INNOCUOUS_STRING)):b=goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};goog.html.SafeUrl.fromTrustedResourceUrl=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a))};\ngoog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;goog.html.SafeUrl.SAFE_URL_PATTERN=goog.html.SAFE_URL_PATTERN_;goog.html.SafeUrl.trySanitize=function(a){if(a instanceof goog.html.SafeUrl)return a;a=\"object\"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return goog.html.SAFE_URL_PATTERN_.test(a)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a):goog.html.SafeUrl.tryFromDataUrl(a)};\ngoog.html.SafeUrl.sanitize=function(a){return goog.html.SafeUrl.trySanitize(a)||goog.html.SafeUrl.INNOCUOUS_URL};\ngoog.html.SafeUrl.sanitizeAssertUnchanged=function(a,b){if(a instanceof goog.html.SafeUrl)return a;a=\"object\"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);if(b&&/^data:/i.test(a)&&(b=goog.html.SafeUrl.fromDataUrl(a),b.getTypedStringValue()==a))return b;goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a),\"%s does not match the safe URL pattern\",a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};\ngoog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(a){return new goog.html.SafeUrl(a,goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};goog.html.SafeUrl.INNOCUOUS_URL=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\"about:blank\");const module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE={};\nclass module$contents$goog$html$SafeStyle_SafeStyle{constructor(a,b){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=b===module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE?a:\"\";this.implementsGoogStringTypedString=!0}static fromConstant(a){a=goog.string.Const.unwrap(a);if(0===a.length)return module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;(0,goog.asserts.assert)((0,goog.string.internal.endsWith)(a,\";\"),`Last character of style string is not ';': ${a}`);(0,goog.asserts.assert)((0,goog.string.internal.contains)(a,\n\":\"),\"Style string must contain at least one ':', to specify a \\\"name: value\\\" pair: \"+a);return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a)}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_}toString(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString()}static unwrap(a){if(a instanceof module$contents$goog$html$SafeStyle_SafeStyle&&a.constructor===module$contents$goog$html$SafeStyle_SafeStyle)return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;\n(0,goog.asserts.fail)(`expected object of type SafeStyle, got '${a}`+\"' of type \"+goog.typeOf(a));return\"type_error:SafeStyle\"}static createSafeStyleSecurityPrivateDoNotAccessOrElse(a){return new module$contents$goog$html$SafeStyle_SafeStyle(a,module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE)}static create(a){let b=\"\";for(let c in a)if(Object.prototype.hasOwnProperty.call(a,c)){if(!/^[-_a-zA-Z0-9]+$/.test(c))throw Error(`Name allows only [-_a-zA-Z0-9], got: ${c}`);let d=a[c];null!=d&&\n(d=Array.isArray(d)?d.map(module$contents$goog$html$SafeStyle_sanitizePropertyValue).join(\" \"):module$contents$goog$html$SafeStyle_sanitizePropertyValue(d),b+=`${c}:${d};`)}return b?module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):module$contents$goog$html$SafeStyle_SafeStyle.EMPTY}static concat(a){let b=\"\";const c=d=>{Array.isArray(d)?d.forEach(c):b+=module$contents$goog$html$SafeStyle_SafeStyle.unwrap(d)};Array.prototype.forEach.call(arguments,c);\nreturn b?module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):module$contents$goog$html$SafeStyle_SafeStyle.EMPTY}}module$contents$goog$html$SafeStyle_SafeStyle.EMPTY=module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(\"\");module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING=\"zClosurez\";\nfunction module$contents$goog$html$SafeStyle_sanitizePropertyValue(a){if(a instanceof goog.html.SafeUrl)return'url(\"'+goog.html.SafeUrl.unwrap(a).replace(/</g,\"%3c\").replace(/[\\\\\"]/g,\"\\\\$&\")+'\")';a=a instanceof goog.string.Const?goog.string.Const.unwrap(a):module$contents$goog$html$SafeStyle_sanitizePropertyValueString(String(a));if(/[{;}]/.test(a))throw new module$contents$goog$asserts_AssertionError(\"Value does not allow [{;}], got: %s.\",[a]);return a}\nfunction module$contents$goog$html$SafeStyle_sanitizePropertyValueString(a){const b=a.replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE,\"$1\").replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE,\"$1\").replace(module$contents$goog$html$SafeStyle_URL_RE,\"url\");if(module$contents$goog$html$SafeStyle_VALUE_RE.test(b)){if(module$contents$goog$html$SafeStyle_COMMENT_RE.test(a))return(0,goog.asserts.fail)(`String value disallows comments, got: ${a}`),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;\nif(!module$contents$goog$html$SafeStyle_hasBalancedQuotes(a))return(0,goog.asserts.fail)(`String value requires balanced quotes, got: ${a}`),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;if(!module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a))return(0,goog.asserts.fail)(\"String value requires balanced square brackets and one identifier per pair of brackets, got: \"+a),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING}else return(0,goog.asserts.fail)(`String value allows only ${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}`+\n\" and simple functions, got: \"+a),module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;return module$contents$goog$html$SafeStyle_sanitizeUrl(a)}function module$contents$goog$html$SafeStyle_hasBalancedQuotes(a){let b=!0,c=!0;for(let d=0;d<a.length;d++){const e=a.charAt(d);\"'\"==e&&c?b=!b:'\"'==e&&b&&(c=!c)}return b&&c}\nfunction module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a){let b=!0;const c=/^[-_a-zA-Z0-9]$/;for(let d=0;d<a.length;d++){const e=a.charAt(d);if(\"]\"==e){if(b)return!1;b=!0}else if(\"[\"==e){if(!b)return!1;b=!1}else if(!b&&!c.test(e))return!1}return b}\nconst module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS=\"[-,.\\\"'%_!#/ a-zA-Z0-9\\\\[\\\\]]\",module$contents$goog$html$SafeStyle_VALUE_RE=new RegExp(`^${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}+\\$`),module$contents$goog$html$SafeStyle_URL_RE=RegExp(\"\\\\b(url\\\\([ \\t\\n]*)('[ -&(-\\\\[\\\\]-~]*'|\\\"[ !#-\\\\[\\\\]-~]*\\\"|[!#-&*-\\\\[\\\\]-~]*)([ \\t\\n]*\\\\))\",\"g\"),module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS=\"calc cubic-bezier fit-content hsl hsla linear-gradient matrix minmax radial-gradient repeat rgb rgba (rotate|scale|translate)(X|Y|Z|3d)? steps var\".split(\" \"),\nmodule$contents$goog$html$SafeStyle_FUNCTIONS_RE=new RegExp(\"\\\\b(\"+module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS.join(\"|\")+\")\\\\([-+*/0-9a-zA-Z.%#\\\\[\\\\], ]+\\\\)\",\"g\"),module$contents$goog$html$SafeStyle_COMMENT_RE=/\\/\\*/;function module$contents$goog$html$SafeStyle_sanitizeUrl(a){return a.replace(module$contents$goog$html$SafeStyle_URL_RE,(b,c,d,e)=>{let f=\"\";d=d.replace(/^(['\"])(.*)\\1$/,(g,h,k)=>{f=h;return k});b=goog.html.SafeUrl.sanitize(d).getTypedStringValue();return c+f+b+f+e})}\ngoog.html.SafeStyle=module$contents$goog$html$SafeStyle_SafeStyle;goog.object={};function module$contents$goog$object_forEach(a,b,c){for(const d in a)b.call(c,a[d],d,a)}function module$contents$goog$object_filter(a,b,c){const d={};for(const e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d}function module$contents$goog$object_map(a,b,c){const d={};for(const e in a)d[e]=b.call(c,a[e],e,a);return d}function module$contents$goog$object_some(a,b,c){for(const d in a)if(b.call(c,a[d],d,a))return!0;return!1}\nfunction module$contents$goog$object_every(a,b,c){for(const d in a)if(!b.call(c,a[d],d,a))return!1;return!0}function module$contents$goog$object_getCount(a){let b=0;for(const c in a)b++;return b}function module$contents$goog$object_getAnyKey(a){for(const b in a)return b}function module$contents$goog$object_getAnyValue(a){for(const b in a)return a[b]}function module$contents$goog$object_contains(a,b){return module$contents$goog$object_containsValue(a,b)}\nfunction module$contents$goog$object_getValues(a){const b=[];let c=0;for(const d in a)b[c++]=a[d];return b}function module$contents$goog$object_getKeys(a){const b=[];let c=0;for(const d in a)b[c++]=d;return b}function module$contents$goog$object_getValueByKeys(a,b){var c=goog.isArrayLike(b);const d=c?b:arguments;for(c=c?0:1;c<d.length;c++){if(null==a)return;a=a[d[c]]}return a}function module$contents$goog$object_containsKey(a,b){return null!==a&&b in a}\nfunction module$contents$goog$object_containsValue(a,b){for(const c in a)if(a[c]==b)return!0;return!1}function module$contents$goog$object_findKey(a,b,c){for(const d in a)if(b.call(c,a[d],d,a))return d}function module$contents$goog$object_findValue(a,b,c){return(b=module$contents$goog$object_findKey(a,b,c))&&a[b]}function module$contents$goog$object_isEmpty(a){for(const b in a)return!1;return!0}function module$contents$goog$object_clear(a){for(const b in a)delete a[b]}\nfunction module$contents$goog$object_remove(a,b){let c;(c=b in a)&&delete a[b];return c}function module$contents$goog$object_add(a,b,c){if(null!==a&&b in a)throw Error(`The object already contains the key \"${b}\"`);module$contents$goog$object_set(a,b,c)}function module$contents$goog$object_get(a,b,c){return null!==a&&b in a?a[b]:c}function module$contents$goog$object_set(a,b,c){a[b]=c}function module$contents$goog$object_setIfUndefined(a,b,c){return b in a?a[b]:a[b]=c}\nfunction module$contents$goog$object_setWithReturnValueIfNotSet(a,b,c){if(b in a)return a[b];c=c();return a[b]=c}function module$contents$goog$object_equals(a,b){for(const c in a)if(!(c in b)||a[c]!==b[c])return!1;for(const c in b)if(!(c in a))return!1;return!0}function module$contents$goog$object_clone(a){const b={};for(const c in a)b[c]=a[c];return b}\nfunction module$contents$goog$object_unsafeClone(a){if(!a||\"object\"!==typeof a)return a;if(\"function\"===typeof a.clone)return a.clone();if(\"undefined\"!==typeof Map&&a instanceof Map)return new Map(a);if(\"undefined\"!==typeof Set&&a instanceof Set)return new Set(a);if(a instanceof Date)return new Date(a.getTime());const b=Array.isArray(a)?[]:\"function\"!==typeof ArrayBuffer||\"function\"!==typeof ArrayBuffer.isView||!ArrayBuffer.isView(a)||a instanceof DataView?{}:new a.constructor(a.length);for(const c in a)b[c]=\nmodule$contents$goog$object_unsafeClone(a[c]);return b}function module$contents$goog$object_transpose(a){const b={};for(const c in a)b[a[c]]=c;return b}const module$contents$goog$object_PROTOTYPE_FIELDS=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\nfunction module$contents$goog$object_extend(a,b){let c,d;for(let e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(let f=0;f<module$contents$goog$object_PROTOTYPE_FIELDS.length;f++)c=module$contents$goog$object_PROTOTYPE_FIELDS[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}}\nfunction module$contents$goog$object_create(a){const b=arguments.length;if(1==b&&Array.isArray(arguments[0]))return module$contents$goog$object_create.apply(null,arguments[0]);if(b%2)throw Error(\"Uneven number of arguments\");const c={};for(let d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c}\nfunction module$contents$goog$object_createSet(a){const b=arguments.length;if(1==b&&Array.isArray(arguments[0]))return module$contents$goog$object_createSet.apply(null,arguments[0]);const c={};for(let d=0;d<b;d++)c[arguments[d]]=!0;return c}function module$contents$goog$object_createImmutableView(a){let b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b}function module$contents$goog$object_isImmutableView(a){return!!Object.isFrozen&&Object.isFrozen(a)}\nfunction module$contents$goog$object_getAllPropertyNames(a,b,c){if(!a)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return module$contents$goog$object_getKeys(a);const d={};for(;a&&(a!==Object.prototype||b)&&(a!==Function.prototype||c);){const e=Object.getOwnPropertyNames(a);for(let f=0;f<e.length;f++)d[e[f]]=!0;a=Object.getPrototypeOf(a)}return module$contents$goog$object_getKeys(d)}\nfunction module$contents$goog$object_getSuperClass(a){return(a=Object.getPrototypeOf(a.prototype))&&a.constructor}goog.object.add=module$contents$goog$object_add;goog.object.clear=module$contents$goog$object_clear;goog.object.clone=module$contents$goog$object_clone;goog.object.contains=module$contents$goog$object_contains;goog.object.containsKey=module$contents$goog$object_containsKey;goog.object.containsValue=module$contents$goog$object_containsValue;goog.object.create=module$contents$goog$object_create;\ngoog.object.createImmutableView=module$contents$goog$object_createImmutableView;goog.object.createSet=module$contents$goog$object_createSet;goog.object.equals=module$contents$goog$object_equals;goog.object.every=module$contents$goog$object_every;goog.object.extend=module$contents$goog$object_extend;goog.object.filter=module$contents$goog$object_filter;goog.object.findKey=module$contents$goog$object_findKey;goog.object.findValue=module$contents$goog$object_findValue;goog.object.forEach=module$contents$goog$object_forEach;\ngoog.object.get=module$contents$goog$object_get;goog.object.getAllPropertyNames=module$contents$goog$object_getAllPropertyNames;goog.object.getAnyKey=module$contents$goog$object_getAnyKey;goog.object.getAnyValue=module$contents$goog$object_getAnyValue;goog.object.getCount=module$contents$goog$object_getCount;goog.object.getKeys=module$contents$goog$object_getKeys;goog.object.getSuperClass=module$contents$goog$object_getSuperClass;goog.object.getValueByKeys=module$contents$goog$object_getValueByKeys;\ngoog.object.getValues=module$contents$goog$object_getValues;goog.object.isEmpty=module$contents$goog$object_isEmpty;goog.object.isImmutableView=module$contents$goog$object_isImmutableView;goog.object.map=module$contents$goog$object_map;goog.object.remove=module$contents$goog$object_remove;goog.object.set=module$contents$goog$object_set;goog.object.setIfUndefined=module$contents$goog$object_setIfUndefined;goog.object.setWithReturnValueIfNotSet=module$contents$goog$object_setWithReturnValueIfNotSet;\ngoog.object.some=module$contents$goog$object_some;goog.object.transpose=module$contents$goog$object_transpose;goog.object.unsafeClone=module$contents$goog$object_unsafeClone;const module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE={};\nclass module$contents$goog$html$SafeStyleSheet_SafeStyleSheet{constructor(a,b){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=b===module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE?a:\"\";this.implementsGoogStringTypedString=!0}toString(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString()}static createRule(a,b){if((0,goog.string.internal.contains)(a,\"<\"))throw Error(`Selector does not allow '<', got: ${a}`);const c=a.replace(/('|\")((?!\\1)[^\\r\\n\\f\\\\]|\\\\[\\s\\S])*\\1/g,\n\"\");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|]+$/.test(c))throw Error(\"Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\\\]()=^$|] and strings, got: \"+a);if(!module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.hasBalancedBrackets_(c))throw Error(\"() and [] in selector must be balanced, got: \"+a);b instanceof module$contents$goog$html$SafeStyle_SafeStyle||(b=module$contents$goog$html$SafeStyle_SafeStyle.create(b));a=`${a}{`+module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b).replace(/</g,\"\\\\3C \")+\"}\";\nreturn module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)}static hasBalancedBrackets_(a){const b={\"(\":\")\",\"[\":\"]\"},c=[];for(let d=0;d<a.length;d++){const e=a[d];if(b[e])c.push(b[e]);else if(module$contents$goog$object_contains(b,e)&&c.pop()!=e)return!1}return 0==c.length}static concat(a){let b=\"\";const c=d=>{Array.isArray(d)?d.forEach(c):b+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(d)};Array.prototype.forEach.call(arguments,\nc);return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)}static fromConstant(a){a=goog.string.Const.unwrap(a);if(0===a.length)return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY;(0,goog.asserts.assert)(!(0,goog.string.internal.contains)(a,\"<\"),`Forbidden '<' character in style sheet string: ${a}`);return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_}static unwrap(a){if(a instanceof\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet&&a.constructor===module$contents$goog$html$SafeStyleSheet_SafeStyleSheet)return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;(0,goog.asserts.fail)(\"expected object of type SafeStyleSheet, got '\"+a+\"' of type \"+goog.typeOf(a));return\"type_error:SafeStyleSheet\"}static createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a){return new module$contents$goog$html$SafeStyleSheet_SafeStyleSheet(a,module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE)}}\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(\"\");goog.html.SafeStyleSheet=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet;goog.dom.HtmlElement=function(){};goog.dom.TagName=class{static cast(a,b){return a}constructor(){}toString(){}};goog.dom.TagName.A=\"A\";goog.dom.TagName.ABBR=\"ABBR\";goog.dom.TagName.ACRONYM=\"ACRONYM\";goog.dom.TagName.ADDRESS=\"ADDRESS\";goog.dom.TagName.APPLET=\"APPLET\";goog.dom.TagName.AREA=\"AREA\";goog.dom.TagName.ARTICLE=\"ARTICLE\";goog.dom.TagName.ASIDE=\"ASIDE\";goog.dom.TagName.AUDIO=\"AUDIO\";goog.dom.TagName.B=\"B\";goog.dom.TagName.BASE=\"BASE\";goog.dom.TagName.BASEFONT=\"BASEFONT\";goog.dom.TagName.BDI=\"BDI\";goog.dom.TagName.BDO=\"BDO\";\ngoog.dom.TagName.BIG=\"BIG\";goog.dom.TagName.BLOCKQUOTE=\"BLOCKQUOTE\";goog.dom.TagName.BODY=\"BODY\";goog.dom.TagName.BR=\"BR\";goog.dom.TagName.BUTTON=\"BUTTON\";goog.dom.TagName.CANVAS=\"CANVAS\";goog.dom.TagName.CAPTION=\"CAPTION\";goog.dom.TagName.CENTER=\"CENTER\";goog.dom.TagName.CITE=\"CITE\";goog.dom.TagName.CODE=\"CODE\";goog.dom.TagName.COL=\"COL\";goog.dom.TagName.COLGROUP=\"COLGROUP\";goog.dom.TagName.COMMAND=\"COMMAND\";goog.dom.TagName.DATA=\"DATA\";goog.dom.TagName.DATALIST=\"DATALIST\";goog.dom.TagName.DD=\"DD\";\ngoog.dom.TagName.DEL=\"DEL\";goog.dom.TagName.DETAILS=\"DETAILS\";goog.dom.TagName.DFN=\"DFN\";goog.dom.TagName.DIALOG=\"DIALOG\";goog.dom.TagName.DIR=\"DIR\";goog.dom.TagName.DIV=\"DIV\";goog.dom.TagName.DL=\"DL\";goog.dom.TagName.DT=\"DT\";goog.dom.TagName.EM=\"EM\";goog.dom.TagName.EMBED=\"EMBED\";goog.dom.TagName.FIELDSET=\"FIELDSET\";goog.dom.TagName.FIGCAPTION=\"FIGCAPTION\";goog.dom.TagName.FIGURE=\"FIGURE\";goog.dom.TagName.FONT=\"FONT\";goog.dom.TagName.FOOTER=\"FOOTER\";goog.dom.TagName.FORM=\"FORM\";\ngoog.dom.TagName.FRAME=\"FRAME\";goog.dom.TagName.FRAMESET=\"FRAMESET\";goog.dom.TagName.H1=\"H1\";goog.dom.TagName.H2=\"H2\";goog.dom.TagName.H3=\"H3\";goog.dom.TagName.H4=\"H4\";goog.dom.TagName.H5=\"H5\";goog.dom.TagName.H6=\"H6\";goog.dom.TagName.HEAD=\"HEAD\";goog.dom.TagName.HEADER=\"HEADER\";goog.dom.TagName.HGROUP=\"HGROUP\";goog.dom.TagName.HR=\"HR\";goog.dom.TagName.HTML=\"HTML\";goog.dom.TagName.I=\"I\";goog.dom.TagName.IFRAME=\"IFRAME\";goog.dom.TagName.IMG=\"IMG\";goog.dom.TagName.INPUT=\"INPUT\";\ngoog.dom.TagName.INS=\"INS\";goog.dom.TagName.ISINDEX=\"ISINDEX\";goog.dom.TagName.KBD=\"KBD\";goog.dom.TagName.KEYGEN=\"KEYGEN\";goog.dom.TagName.LABEL=\"LABEL\";goog.dom.TagName.LEGEND=\"LEGEND\";goog.dom.TagName.LI=\"LI\";goog.dom.TagName.LINK=\"LINK\";goog.dom.TagName.MAIN=\"MAIN\";goog.dom.TagName.MAP=\"MAP\";goog.dom.TagName.MARK=\"MARK\";goog.dom.TagName.MATH=\"MATH\";goog.dom.TagName.MENU=\"MENU\";goog.dom.TagName.MENUITEM=\"MENUITEM\";goog.dom.TagName.META=\"META\";goog.dom.TagName.METER=\"METER\";\ngoog.dom.TagName.NAV=\"NAV\";goog.dom.TagName.NOFRAMES=\"NOFRAMES\";goog.dom.TagName.NOSCRIPT=\"NOSCRIPT\";goog.dom.TagName.OBJECT=\"OBJECT\";goog.dom.TagName.OL=\"OL\";goog.dom.TagName.OPTGROUP=\"OPTGROUP\";goog.dom.TagName.OPTION=\"OPTION\";goog.dom.TagName.OUTPUT=\"OUTPUT\";goog.dom.TagName.P=\"P\";goog.dom.TagName.PARAM=\"PARAM\";goog.dom.TagName.PICTURE=\"PICTURE\";goog.dom.TagName.PRE=\"PRE\";goog.dom.TagName.PROGRESS=\"PROGRESS\";goog.dom.TagName.Q=\"Q\";goog.dom.TagName.RP=\"RP\";goog.dom.TagName.RT=\"RT\";\ngoog.dom.TagName.RTC=\"RTC\";goog.dom.TagName.RUBY=\"RUBY\";goog.dom.TagName.S=\"S\";goog.dom.TagName.SAMP=\"SAMP\";goog.dom.TagName.SCRIPT=\"SCRIPT\";goog.dom.TagName.SECTION=\"SECTION\";goog.dom.TagName.SELECT=\"SELECT\";goog.dom.TagName.SMALL=\"SMALL\";goog.dom.TagName.SOURCE=\"SOURCE\";goog.dom.TagName.SPAN=\"SPAN\";goog.dom.TagName.STRIKE=\"STRIKE\";goog.dom.TagName.STRONG=\"STRONG\";goog.dom.TagName.STYLE=\"STYLE\";goog.dom.TagName.SUB=\"SUB\";goog.dom.TagName.SUMMARY=\"SUMMARY\";goog.dom.TagName.SUP=\"SUP\";\ngoog.dom.TagName.SVG=\"SVG\";goog.dom.TagName.TABLE=\"TABLE\";goog.dom.TagName.TBODY=\"TBODY\";goog.dom.TagName.TD=\"TD\";goog.dom.TagName.TEMPLATE=\"TEMPLATE\";goog.dom.TagName.TEXTAREA=\"TEXTAREA\";goog.dom.TagName.TFOOT=\"TFOOT\";goog.dom.TagName.TH=\"TH\";goog.dom.TagName.THEAD=\"THEAD\";goog.dom.TagName.TIME=\"TIME\";goog.dom.TagName.TITLE=\"TITLE\";goog.dom.TagName.TR=\"TR\";goog.dom.TagName.TRACK=\"TRACK\";goog.dom.TagName.TT=\"TT\";goog.dom.TagName.U=\"U\";goog.dom.TagName.UL=\"UL\";goog.dom.TagName.VAR=\"VAR\";\ngoog.dom.TagName.VIDEO=\"VIDEO\";goog.dom.TagName.WBR=\"WBR\";goog.labs={};goog.labs.userAgent={};const module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE=\"\",module$contents$goog$labs$userAgent_USE_CLIENT_HINTS=!1;let module$contents$goog$labs$userAgent_forceClientHintsInTests=!1;goog.labs.userAgent.setUseClientHintsForTesting=a=>{module$contents$goog$labs$userAgent_forceClientHintsInTests=a};\nconst module$contents$goog$labs$userAgent_useClientHintsRuntimeOverride=module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE?!!goog.getObjectByName(module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE):!1;goog.labs.userAgent.useClientHints=()=>module$contents$goog$labs$userAgent_USE_CLIENT_HINTS||module$contents$goog$labs$userAgent_useClientHintsRuntimeOverride||module$contents$goog$labs$userAgent_forceClientHintsInTests;goog.labs.userAgent.util={};const module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT=!1;function module$contents$goog$labs$userAgent$util_getNativeUserAgentString(){var a=module$contents$goog$labs$userAgent$util_getNavigator();return a&&(a=a.userAgent)?a:\"\"}function module$contents$goog$labs$userAgent$util_getNativeUserAgentData(){const a=module$contents$goog$labs$userAgent$util_getNavigator();return a?a.userAgentData||null:null}\nfunction module$contents$goog$labs$userAgent$util_getNavigator(){return goog.global.navigator}let module$contents$goog$labs$userAgent$util_userAgentInternal=null,module$contents$goog$labs$userAgent$util_userAgentDataInternal=module$contents$goog$labs$userAgent$util_getNativeUserAgentData();\nfunction module$contents$goog$labs$userAgent$util_setUserAgent(a){module$contents$goog$labs$userAgent$util_userAgentInternal=\"string\"===typeof a?a:module$contents$goog$labs$userAgent$util_getNativeUserAgentString()}function module$contents$goog$labs$userAgent$util_getUserAgent(){return null==module$contents$goog$labs$userAgent$util_userAgentInternal?module$contents$goog$labs$userAgent$util_getNativeUserAgentString():module$contents$goog$labs$userAgent$util_userAgentInternal}\nfunction module$contents$goog$labs$userAgent$util_setUserAgentData(a){module$contents$goog$labs$userAgent$util_userAgentDataInternal=a}function module$contents$goog$labs$userAgent$util_resetUserAgentData(){module$contents$goog$labs$userAgent$util_userAgentDataInternal=module$contents$goog$labs$userAgent$util_getNativeUserAgentData()}function module$contents$goog$labs$userAgent$util_getUserAgentData(){return module$contents$goog$labs$userAgent$util_userAgentDataInternal}\nfunction module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(a){if(!(0,goog.labs.userAgent.useClientHints)())return!1;const b=module$contents$goog$labs$userAgent$util_getUserAgentData();return b?b.brands.some(({brand:c})=>c&&(0,goog.string.internal.contains)(c,a)):!1}function module$contents$goog$labs$userAgent$util_matchUserAgent(a){const b=module$contents$goog$labs$userAgent$util_getUserAgent();return(0,goog.string.internal.contains)(b,a)}\nfunction module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase(a){const b=module$contents$goog$labs$userAgent$util_getUserAgent();return(0,goog.string.internal.caseInsensitiveContains)(b,a)}function module$contents$goog$labs$userAgent$util_extractVersionTuples(a){const b=RegExp(\"([A-Z][\\\\w ]+)/([^\\\\s]+)\\\\s*(?:\\\\((.*?)\\\\))?\",\"g\"),c=[];let d;for(;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c}goog.labs.userAgent.util.ASSUME_CLIENT_HINTS_SUPPORT=module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT;\ngoog.labs.userAgent.util.extractVersionTuples=module$contents$goog$labs$userAgent$util_extractVersionTuples;goog.labs.userAgent.util.getNativeUserAgentString=module$contents$goog$labs$userAgent$util_getNativeUserAgentString;goog.labs.userAgent.util.getUserAgent=module$contents$goog$labs$userAgent$util_getUserAgent;goog.labs.userAgent.util.getUserAgentData=module$contents$goog$labs$userAgent$util_getUserAgentData;goog.labs.userAgent.util.matchUserAgent=module$contents$goog$labs$userAgent$util_matchUserAgent;\ngoog.labs.userAgent.util.matchUserAgentDataBrand=module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand;goog.labs.userAgent.util.matchUserAgentIgnoreCase=module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase;goog.labs.userAgent.util.resetUserAgentData=module$contents$goog$labs$userAgent$util_resetUserAgentData;goog.labs.userAgent.util.setUserAgent=module$contents$goog$labs$userAgent$util_setUserAgent;goog.labs.userAgent.util.setUserAgentData=module$contents$goog$labs$userAgent$util_setUserAgentData;var module$exports$goog$labs$userAgent$highEntropy$highEntropyValue={AsyncValue:class{getIfLoaded(){}load(){}},HighEntropyValue:class{constructor(a){this.key_=a;this.promise_=this.value_=void 0;this.pending_=!1}getIfLoaded(){if(module$contents$goog$labs$userAgent$util_getUserAgentData())return this.value_}async load(){const a=module$contents$goog$labs$userAgent$util_getUserAgentData();if(a)return this.promise_||(this.pending_=!0,this.promise_=(async()=>{try{return this.value_=(await a.getHighEntropyValues([this.key_]))[this.key_]}finally{this.pending_=\n!1}})()),await this.promise_}resetForTesting(){if(this.pending_)throw Error(\"Unsafe call to resetForTesting\");this.value_=this.promise_=void 0;this.pending_=!1}},Version:class{constructor(a){this.versionString_=a}toVersionStringForLogging(){return this.versionString_}isAtLeast(a){return 0<=(0,goog.string.internal.compareVersions)(this.versionString_,a)}}};var module$exports$goog$labs$userAgent$highEntropy$highEntropyData={};module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue(\"fullVersionList\");module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue(\"platformVersion\");goog.labs.userAgent.browser={};const module$contents$goog$labs$userAgent$browser_Brand={ANDROID_BROWSER:\"Android Browser\",CHROMIUM:\"Chromium\",EDGE:\"Microsoft Edge\",FIREFOX:\"Firefox\",IE:\"Internet Explorer\",OPERA:\"Opera\",SAFARI:\"Safari\",SILK:\"Silk\"};goog.labs.userAgent.browser.Brand=module$contents$goog$labs$userAgent$browser_Brand;\nfunction module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(a=!1){if(module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT)return!0;if(!a&&!(0,goog.labs.userAgent.useClientHints)())return!1;a=module$contents$goog$labs$userAgent$util_getUserAgentData();return!!a&&0<a.brands.length}\nfunction module$contents$goog$labs$userAgent$browser_hasFullVersionList(){return module$contents$goog$labs$userAgent$browser_isAtLeast(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM,98)}function module$contents$goog$labs$userAgent$browser_matchOpera(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent(\"Opera\")}\nfunction module$contents$goog$labs$userAgent$browser_matchIE(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent(\"Trident\")||module$contents$goog$labs$userAgent$util_matchUserAgent(\"MSIE\")}function module$contents$goog$labs$userAgent$browser_matchEdgeHtml(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent(\"Edge\")}\nfunction module$contents$goog$labs$userAgent$browser_matchEdgeChromium(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.EDGE):module$contents$goog$labs$userAgent$util_matchUserAgent(\"Edg/\")}\nfunction module$contents$goog$labs$userAgent$browser_matchOperaChromium(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.OPERA):module$contents$goog$labs$userAgent$util_matchUserAgent(\"OPR\")}\nfunction module$contents$goog$labs$userAgent$browser_matchFirefox(){return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Firefox\")||module$contents$goog$labs$userAgent$util_matchUserAgent(\"FxiOS\")}\nfunction module$contents$goog$labs$userAgent$browser_matchSafari(){return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Safari\")&&!(module$contents$goog$labs$userAgent$browser_matchChrome()||module$contents$goog$labs$userAgent$browser_matchCoast()||module$contents$goog$labs$userAgent$browser_matchOpera()||module$contents$goog$labs$userAgent$browser_matchEdgeHtml()||module$contents$goog$labs$userAgent$browser_matchEdgeChromium()||module$contents$goog$labs$userAgent$browser_matchOperaChromium()||\nmodule$contents$goog$labs$userAgent$browser_matchFirefox()||module$contents$goog$labs$userAgent$browser_isSilk()||module$contents$goog$labs$userAgent$util_matchUserAgent(\"Android\"))}function module$contents$goog$labs$userAgent$browser_matchCoast(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?!1:module$contents$goog$labs$userAgent$util_matchUserAgent(\"Coast\")}\nfunction module$contents$goog$labs$userAgent$browser_matchIosWebview(){return(module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPad\")||module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPhone\"))&&!module$contents$goog$labs$userAgent$browser_matchSafari()&&!module$contents$goog$labs$userAgent$browser_matchChrome()&&!module$contents$goog$labs$userAgent$browser_matchCoast()&&!module$contents$goog$labs$userAgent$browser_matchFirefox()&&module$contents$goog$labs$userAgent$util_matchUserAgent(\"AppleWebKit\")}\nfunction module$contents$goog$labs$userAgent$browser_matchChrome(){return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()?module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM):(module$contents$goog$labs$userAgent$util_matchUserAgent(\"Chrome\")||module$contents$goog$labs$userAgent$util_matchUserAgent(\"CriOS\"))&&!module$contents$goog$labs$userAgent$browser_matchEdgeHtml()||module$contents$goog$labs$userAgent$browser_isSilk()}\nfunction module$contents$goog$labs$userAgent$browser_matchAndroidBrowser(){return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Android\")&&!(module$contents$goog$labs$userAgent$browser_matchChrome()||module$contents$goog$labs$userAgent$browser_matchFirefox()||module$contents$goog$labs$userAgent$browser_matchOpera()||module$contents$goog$labs$userAgent$browser_isSilk())}const module$contents$goog$labs$userAgent$browser_isOpera=module$contents$goog$labs$userAgent$browser_matchOpera;\ngoog.labs.userAgent.browser.isOpera=module$contents$goog$labs$userAgent$browser_matchOpera;const module$contents$goog$labs$userAgent$browser_isIE=module$contents$goog$labs$userAgent$browser_matchIE;goog.labs.userAgent.browser.isIE=module$contents$goog$labs$userAgent$browser_matchIE;const module$contents$goog$labs$userAgent$browser_isEdge=module$contents$goog$labs$userAgent$browser_matchEdgeHtml;goog.labs.userAgent.browser.isEdge=module$contents$goog$labs$userAgent$browser_matchEdgeHtml;\nconst module$contents$goog$labs$userAgent$browser_isEdgeChromium=module$contents$goog$labs$userAgent$browser_matchEdgeChromium;goog.labs.userAgent.browser.isEdgeChromium=module$contents$goog$labs$userAgent$browser_matchEdgeChromium;const module$contents$goog$labs$userAgent$browser_isOperaChromium=module$contents$goog$labs$userAgent$browser_matchOperaChromium;goog.labs.userAgent.browser.isOperaChromium=module$contents$goog$labs$userAgent$browser_matchOperaChromium;\nconst module$contents$goog$labs$userAgent$browser_isFirefox=module$contents$goog$labs$userAgent$browser_matchFirefox;goog.labs.userAgent.browser.isFirefox=module$contents$goog$labs$userAgent$browser_matchFirefox;const module$contents$goog$labs$userAgent$browser_isSafari=module$contents$goog$labs$userAgent$browser_matchSafari;goog.labs.userAgent.browser.isSafari=module$contents$goog$labs$userAgent$browser_matchSafari;const module$contents$goog$labs$userAgent$browser_isCoast=module$contents$goog$labs$userAgent$browser_matchCoast;\ngoog.labs.userAgent.browser.isCoast=module$contents$goog$labs$userAgent$browser_matchCoast;const module$contents$goog$labs$userAgent$browser_isIosWebview=module$contents$goog$labs$userAgent$browser_matchIosWebview;goog.labs.userAgent.browser.isIosWebview=module$contents$goog$labs$userAgent$browser_matchIosWebview;const module$contents$goog$labs$userAgent$browser_isChrome=module$contents$goog$labs$userAgent$browser_matchChrome;goog.labs.userAgent.browser.isChrome=module$contents$goog$labs$userAgent$browser_matchChrome;\nconst module$contents$goog$labs$userAgent$browser_isAndroidBrowser=module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;goog.labs.userAgent.browser.isAndroidBrowser=module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;function module$contents$goog$labs$userAgent$browser_isSilk(){return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Silk\")}goog.labs.userAgent.browser.isSilk=module$contents$goog$labs$userAgent$browser_isSilk;\nfunction module$contents$goog$labs$userAgent$browser_createVersionMap(a){const b={};a.forEach(c=>{b[c[0]]=c[1]});return c=>b[c.find(d=>d in b)]||\"\"}\nfunction module$contents$goog$labs$userAgent$browser_getVersion(){var a=module$contents$goog$labs$userAgent$util_getUserAgent();if(module$contents$goog$labs$userAgent$browser_matchIE())return module$contents$goog$labs$userAgent$browser_getIEVersion(a);a=module$contents$goog$labs$userAgent$util_extractVersionTuples(a);const b=module$contents$goog$labs$userAgent$browser_createVersionMap(a);return module$contents$goog$labs$userAgent$browser_matchOpera()?b([\"Version\",\"Opera\"]):module$contents$goog$labs$userAgent$browser_matchEdgeHtml()?\nb([\"Edge\"]):module$contents$goog$labs$userAgent$browser_matchEdgeChromium()?b([\"Edg\"]):module$contents$goog$labs$userAgent$browser_isSilk()?b([\"Silk\"]):module$contents$goog$labs$userAgent$browser_matchChrome()?b([\"Chrome\",\"CriOS\",\"HeadlessChrome\"]):(a=a[2])&&a[1]||\"\"}goog.labs.userAgent.browser.getVersion=module$contents$goog$labs$userAgent$browser_getVersion;\nfunction module$contents$goog$labs$userAgent$browser_isVersionOrHigher(a){return 0<=(0,goog.string.internal.compareVersions)(module$contents$goog$labs$userAgent$browser_getVersion(),a)}goog.labs.userAgent.browser.isVersionOrHigher=module$contents$goog$labs$userAgent$browser_isVersionOrHigher;\nfunction module$contents$goog$labs$userAgent$browser_getIEVersion(a){var b=/rv: *([\\d\\.]*)/.exec(a);if(b&&b[1])return b[1];b=\"\";const c=/MSIE +([\\d\\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\\/(\\d.\\d)/.exec(a),\"7.0\"==c[1])if(a&&a[1])switch(a[1]){case \"4.0\":b=\"8.0\";break;case \"5.0\":b=\"9.0\";break;case \"6.0\":b=\"10.0\";break;case \"7.0\":b=\"11.0\"}else b=\"7.0\";else b=c[1];return b}\nfunction module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a){var b=module$contents$goog$labs$userAgent$util_getUserAgent();if(a===module$contents$goog$labs$userAgent$browser_Brand.IE)return module$contents$goog$labs$userAgent$browser_matchIE()?module$contents$goog$labs$userAgent$browser_getIEVersion(b):\"\";b=module$contents$goog$labs$userAgent$util_extractVersionTuples(b);const c=module$contents$goog$labs$userAgent$browser_createVersionMap(b);switch(a){case module$contents$goog$labs$userAgent$browser_Brand.OPERA:if(module$contents$goog$labs$userAgent$browser_matchOpera())return c([\"Version\",\n\"Opera\"]);if(module$contents$goog$labs$userAgent$browser_matchOperaChromium())return c([\"OPR\"]);break;case module$contents$goog$labs$userAgent$browser_Brand.EDGE:if(module$contents$goog$labs$userAgent$browser_matchEdgeHtml())return c([\"Edge\"]);if(module$contents$goog$labs$userAgent$browser_matchEdgeChromium())return c([\"Edg\"]);break;case module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM:if(module$contents$goog$labs$userAgent$browser_matchChrome())return c([\"Chrome\",\"CriOS\",\"HeadlessChrome\"])}return a===\nmodule$contents$goog$labs$userAgent$browser_Brand.FIREFOX&&module$contents$goog$labs$userAgent$browser_matchFirefox()||a===module$contents$goog$labs$userAgent$browser_Brand.SAFARI&&module$contents$goog$labs$userAgent$browser_matchSafari()||a===module$contents$goog$labs$userAgent$browser_Brand.ANDROID_BROWSER&&module$contents$goog$labs$userAgent$browser_matchAndroidBrowser()||a===module$contents$goog$labs$userAgent$browser_Brand.SILK&&module$contents$goog$labs$userAgent$browser_isSilk()?(a=b[2])&&\na[1]||\"\":\"\"}\nfunction module$contents$goog$labs$userAgent$browser_versionOf_(a){if(module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()&&a!==module$contents$goog$labs$userAgent$browser_Brand.SILK){var b=module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:c})=>c===a);if(!b||!b.version)return NaN;b=b.version.split(\".\")}else{b=module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a);if(\"\"===b)return NaN;b=b.split(\".\")}return 0===b.length?NaN:Number(b[0])}\nfunction module$contents$goog$labs$userAgent$browser_isAtLeast(a,b){(0,goog.asserts.assert)(Math.floor(b)===b,\"Major version must be an integer\");return module$contents$goog$labs$userAgent$browser_versionOf_(a)>=b}goog.labs.userAgent.browser.isAtLeast=module$contents$goog$labs$userAgent$browser_isAtLeast;\nfunction module$contents$goog$labs$userAgent$browser_isAtMost(a,b){(0,goog.asserts.assert)(Math.floor(b)===b,\"Major version must be an integer\");return module$contents$goog$labs$userAgent$browser_versionOf_(a)<=b}goog.labs.userAgent.browser.isAtMost=module$contents$goog$labs$userAgent$browser_isAtMost;\nclass module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion{constructor(a,b,c){this.brand_=a;this.version_=new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(c);this.useUach_=b}getIfLoaded(){if(this.useUach_){var a=module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.getIfLoaded();if(void 0!==a)return a=a.find(({brand:b})=>this.brand_===b),(0,goog.asserts.assertExists)(a),new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(a.version)}if(module$contents$goog$labs$userAgent$browser_preUachHasLoaded)return this.version_}async load(){if(this.useUach_){var a=\nawait module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load();if(void 0!==a)return a=a.find(({brand:b})=>this.brand_===b),(0,goog.asserts.assertExists)(a),new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(a.version)}else await 0;module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!0;return this.version_}}let module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!1;\nasync function module$contents$goog$labs$userAgent$browser_loadFullVersions(){module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0)&&await module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load();module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!0}goog.labs.userAgent.browser.loadFullVersions=module$contents$goog$labs$userAgent$browser_loadFullVersions;\ngoog.labs.userAgent.browser.resetForTesting=()=>{module$contents$goog$labs$userAgent$browser_preUachHasLoaded=!1;module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.resetForTesting()};\nfunction module$contents$goog$labs$userAgent$browser_fullVersionOf(a){let b=\"\";module$contents$goog$labs$userAgent$browser_hasFullVersionList()||(b=module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a));const c=a!==module$contents$goog$labs$userAgent$browser_Brand.SILK&&module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0);if(c){if(!module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:d})=>d===a))return}else if(\"\"===b)return;return new module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion(a,\nc,b)}goog.labs.userAgent.browser.fullVersionOf=module$contents$goog$labs$userAgent$browser_fullVersionOf;\nfunction module$contents$goog$labs$userAgent$browser_getVersionStringForLogging(a){if(module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand(!0)){var b=module$contents$goog$labs$userAgent$browser_fullVersionOf(a);if(b){if(b=b.getIfLoaded())return b.toVersionStringForLogging();b=module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(({brand:c})=>c===a);(0,goog.asserts.assertExists)(b);return b.version}return\"\"}return module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a)}\ngoog.labs.userAgent.browser.getVersionStringForLogging=module$contents$goog$labs$userAgent$browser_getVersionStringForLogging;goog.dom.tags={};goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};goog.dom.tags.isVoidTag=function(a){return!0===goog.dom.tags.VOID_TAGS_[a]};const module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE={};\nclass module$contents$goog$html$SafeHtml_SafeHtml{constructor(a,b){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=b===module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE?a:\"\";this.implementsGoogStringTypedString=!0}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()}toString(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()}static unwrap(a){return module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(a).toString()}static unwrapTrustedHTML(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml&&\na.constructor===module$contents$goog$html$SafeHtml_SafeHtml)return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;goog.asserts.fail(`expected object of type SafeHtml, got '${a}' of type `+goog.typeOf(a));return\"type_error:SafeHtml\"}static htmlEscape(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml)return a;a=\"object\"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a))}static htmlEscapePreservingNewlines(a){if(a instanceof\nmodule$contents$goog$html$SafeHtml_SafeHtml)return a;a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static htmlEscapePreservingNewlinesAndSpaces(a){if(a instanceof module$contents$goog$html$SafeHtml_SafeHtml)return a;a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static comment(a){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"\\x3c!--\"+\ngoog.string.internal.htmlEscape(a)+\"--\\x3e\")}static create(a,b,c){module$contents$goog$html$SafeHtml_SafeHtml.verifyTagName(String(a));return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a),b,c)}static verifyTagName(a){if(!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(a))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Invalid tag name <${a}>.`:\"\");if(a.toUpperCase()in module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\n`Tag name <${a}> is not allowed for SafeHtml.`:\"\");}static createIframe(a,b,c,d){a&&goog.html.TrustedResourceUrl.unwrap(a);const e={};e.src=a||null;e.srcdoc=b&&module$contents$goog$html$SafeHtml_SafeHtml.unwrap(b);a=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e,{sandbox:\"\"},c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"iframe\",a,d)}static createSandboxIframe(a,b,c,d){if(!module$contents$goog$html$SafeHtml_SafeHtml.canUseSandboxIframe())throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\n\"The browser does not support sandboxed iframes.\":\"\");const e={};e.src=a?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)):null;e.srcdoc=b||null;e.sandbox=\"\";a=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e,{},c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"iframe\",a,d)}static canUseSandboxIframe(){return goog.global.HTMLIFrameElement&&\"sandbox\"in goog.global.HTMLIFrameElement.prototype}static createScriptSrc(a,b){goog.html.TrustedResourceUrl.unwrap(a);\na=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({src:a},{},b);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"script\",a)}static createScript(a,b){for(var c in b)if(Object.prototype.hasOwnProperty.call(b,c)){var d=c.toLowerCase();if(\"language\"==d||\"src\"==d||\"text\"==d)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Cannot set \"${d}\" attribute`:\"\");}c=\"\";a=module$contents$goog$array_concat(a);for(d=0;d<\na.length;d++)c+=module$contents$goog$html$SafeScript_SafeScript.unwrap(a[d]);a=module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"script\",b,a)}static createStyle(a,b){b=module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({type:\"text/css\"},{},b);let c=\"\";a=module$contents$goog$array_concat(a);for(let d=0;d<a.length;d++)c+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(a[d]);\na=module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"style\",b,a)}static createMetaRefresh(a,b){a=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a));(module$contents$goog$labs$userAgent$browser_matchIE()||module$contents$goog$labs$userAgent$browser_matchEdgeHtml())&&goog.string.internal.contains(a,\";\")&&(a=\"'\"+a.replace(/'/g,\"%27\")+\"'\");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"meta\",\n{\"http-equiv\":\"refresh\",content:(b||0)+\"; url=\"+a})}static join(a,b){a=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);const c=[],d=e=>{Array.isArray(e)?e.forEach(d):(e=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(e),c.push(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(e)))};b.forEach(d);return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c.join(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)))}static concat(a){return module$contents$goog$html$SafeHtml_SafeHtml.join(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY,\nArray.prototype.slice.call(arguments))}static createSafeHtmlSecurityPrivateDoNotAccessOrElse(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createHTML(a):a;return new module$contents$goog$html$SafeHtml_SafeHtml(a,module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE)}static createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(a,b,c){b=`<${a}`+module$contents$goog$html$SafeHtml_SafeHtml.stringifyAttributes(a,b);null==c?c=[]:Array.isArray(c)||(c=[c]);goog.dom.tags.isVoidTag(a.toLowerCase())?\n(goog.asserts.assert(!c.length,`Void tag <${a}> does not allow content.`),b+=\">\"):(c=module$contents$goog$html$SafeHtml_SafeHtml.concat(c),b+=\">\"+module$contents$goog$html$SafeHtml_SafeHtml.unwrap(c)+\"</\"+a+\">\");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b)}static stringifyAttributes(a,b){let c=\"\";if(b)for(let d in b)if(Object.prototype.hasOwnProperty.call(b,d)){if(!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(d))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\n`Invalid attribute name \"${d}\".`:\"\");const e=b[d];null!=e&&(c+=\" \"+module$contents$goog$html$SafeHtml_getAttrNameAndValue(a,d,e))}return c}static combineAttributes(a,b,c){const d={};for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&(goog.asserts.assert(e.toLowerCase()==e,\"Must be lower case\"),d[e]=a[e]);for(const f in b)Object.prototype.hasOwnProperty.call(b,f)&&(goog.asserts.assert(f.toLowerCase()==f,\"Must be lower case\"),d[f]=b[f]);if(c)for(const f in c)if(Object.prototype.hasOwnProperty.call(c,\nf)){e=f.toLowerCase();if(e in a)throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Cannot override \"${e}\" attribute, got \"`+f+'\" with value \"'+c[f]+'\"':\"\");e in b&&delete d[e];d[f]=c[f]}return d}}module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES=goog.DEBUG;module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE=!0;module$contents$goog$html$SafeHtml_SafeHtml.from=module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape;\nconst module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG=/^[a-zA-Z0-9-]+$/,module$contents$goog$html$SafeHtml_URL_ATTRIBUTES={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0},module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES={[goog.dom.TagName.APPLET]:!0,[goog.dom.TagName.BASE]:!0,[goog.dom.TagName.EMBED]:!0,[goog.dom.TagName.IFRAME]:!0,[goog.dom.TagName.LINK]:!0,[goog.dom.TagName.MATH]:!0,[goog.dom.TagName.META]:!0,[goog.dom.TagName.OBJECT]:!0,[goog.dom.TagName.SCRIPT]:!0,\n[goog.dom.TagName.STYLE]:!0,[goog.dom.TagName.SVG]:!0,[goog.dom.TagName.TEMPLATE]:!0};\nfunction module$contents$goog$html$SafeHtml_getAttrNameAndValue(a,b,c){if(c instanceof goog.string.Const)c=goog.string.Const.unwrap(c);else if(\"style\"==b.toLowerCase())if(module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE)c=module$contents$goog$html$SafeHtml_getStyleValue(c);else throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?'Attribute \"style\" not supported.':\"\");else{if(/^on/i.test(b))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?\n`Attribute \"${b}`+'\" requires goog.string.Const value, \"'+c+'\" given.':\"\");if(b.toLowerCase()in module$contents$goog$html$SafeHtml_URL_ATTRIBUTES)if(c instanceof goog.html.TrustedResourceUrl)c=goog.html.TrustedResourceUrl.unwrap(c);else if(c instanceof goog.html.SafeUrl)c=goog.html.SafeUrl.unwrap(c);else if(\"string\"===typeof c)c=goog.html.SafeUrl.sanitize(c).getTypedStringValue();else throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?`Attribute \"${b}\" on tag \"${a}`+'\" requires goog.html.SafeUrl, goog.string.Const, or string, value \"'+\nc+'\" given.':\"\");}c.implementsGoogStringTypedString&&(c=c.getTypedStringValue());goog.asserts.assert(\"string\"===typeof c||\"number\"===typeof c,\"String or number value expected, got \"+typeof c+\" with value: \"+c);return`${b}=\"`+goog.string.internal.htmlEscape(String(c))+'\"'}\nfunction module$contents$goog$html$SafeHtml_getStyleValue(a){if(!goog.isObject(a))throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES?'The \"style\" attribute requires goog.html.SafeStyle or map of style properties, '+typeof a+\" given: \"+a:\"\");a instanceof module$contents$goog$html$SafeStyle_SafeStyle||(a=module$contents$goog$html$SafeStyle_SafeStyle.create(a));return module$contents$goog$html$SafeStyle_SafeStyle.unwrap(a)}\nmodule$contents$goog$html$SafeHtml_SafeHtml.DOCTYPE_HTML=function(){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"<!DOCTYPE html>\")}();module$contents$goog$html$SafeHtml_SafeHtml.EMPTY=new module$contents$goog$html$SafeHtml_SafeHtml(goog.global.trustedTypes&&goog.global.trustedTypes.emptyHTML||\"\",module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE);module$contents$goog$html$SafeHtml_SafeHtml.BR=function(){return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"<br>\")}();\ngoog.html.SafeHtml=module$contents$goog$html$SafeHtml_SafeHtml;goog.html.uncheckedconversions={};goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b)};\ngoog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b)};\ngoog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b)};\ngoog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};\ngoog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};\ngoog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),\"must provide justification\");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),\"must provide non-empty justification\");return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};goog.dom.safe={};goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:\"afterbegin\",AFTEREND:\"afterend\",BEFOREBEGIN:\"beforebegin\",BEFOREEND:\"beforeend\"};goog.dom.safe.insertAdjacentHtml=function(a,b,c){a.insertAdjacentHTML(b,module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(c))};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};\ngoog.dom.safe.isInnerHtmlCleanupRecursive_=goog.functions.cacheReturnValue(function(){if(goog.DEBUG&&\"undefined\"===typeof document)return!1;var a=document.createElement(\"div\"),b=document.createElement(\"div\");b.appendChild(document.createElement(\"div\"));a.appendChild(b);if(goog.DEBUG&&!a.firstChild)return!1;b=a.firstChild.firstChild;a.innerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY);return!b.parentElement});\ngoog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(a,b){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;a.lastChild;)a.removeChild(a.lastChild);a.innerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};\ngoog.dom.safe.setInnerHtml=function(a,b){if(goog.asserts.ENABLE_ASSERTS&&a.tagName){var c=a.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c])throw Error(\"goog.dom.safe.setInnerHtml cannot be used to set content of \"+a.tagName+\".\");}goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a,b)};\ngoog.dom.safe.setInnerHtmlFromConstant=function(a,b){goog.dom.safe.setInnerHtml(a,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\"Constant HTML to be immediatelly used.\"),goog.string.Const.unwrap(b)))};goog.dom.safe.setOuterHtml=function(a,b){a.outerHTML=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};\ngoog.dom.safe.setFormElementAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLFormElement(a).action=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setButtonFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLButtonElement(a).formAction=goog.html.SafeUrl.unwrap(b)};\ngoog.dom.safe.setInputFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLInputElement(a).formAction=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setStyle=function(a,b){a.style.cssText=module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b)};goog.dom.safe.documentWrite=function(a,b){a.write(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b))};\ngoog.dom.safe.setAnchorHref=function(a,b){goog.dom.asserts.assertIsHTMLAnchorElement(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setAudioSrc=function(a,b){goog.dom.asserts.assertIsHTMLAudioElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:audio\\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};\ngoog.dom.safe.setVideoSrc=function(a,b){goog.dom.asserts.assertIsHTMLVideoElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:video\\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setEmbedSrc=function(a,b){goog.dom.asserts.assertIsHTMLEmbedElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setFrameSrc=function(a,b){goog.dom.asserts.assertIsHTMLFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};\ngoog.dom.safe.setIframeSrc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};goog.dom.safe.setIframeSrcdoc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.srcdoc=module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b)};\ngoog.dom.safe.setLinkHrefAndRel=function(a,b,c){goog.dom.asserts.assertIsHTMLLinkElement(a);a.rel=c;goog.string.internal.caseInsensitiveContains(c,\"stylesheet\")?(goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl,'URL must be TrustedResourceUrl because \"rel\" contains \"stylesheet\"'),a.href=goog.html.TrustedResourceUrl.unwrap(b),(b=goog.dom.safe.getStyleNonce(a.ownerDocument&&a.ownerDocument.defaultView))&&a.setAttribute(\"nonce\",b)):a.href=b instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrap(b):\nb instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrap(b):goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(b))};goog.dom.safe.setObjectData=function(a,b){goog.dom.asserts.assertIsHTMLObjectElement(a);a.data=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setScriptSrc=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);goog.dom.safe.setNonceForScriptElement_(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};\ngoog.dom.safe.setScriptContent=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);goog.dom.safe.setNonceForScriptElement_(a);a.textContent=module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(b)};goog.dom.safe.setNonceForScriptElement_=function(a){const b=goog.dom.safe.getScriptNonce(a.ownerDocument&&a.ownerDocument.defaultView);b&&a.setAttribute(\"nonce\",b)};\ngoog.dom.safe.setLocationHref=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.assignLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.assign(goog.html.SafeUrl.unwrap(b))};\ngoog.dom.safe.replaceLocation=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.replace(goog.html.SafeUrl.unwrap(b))};goog.dom.safe.openInWindow=function(a,b,c,d){a=a instanceof goog.html.SafeUrl?a:goog.html.SafeUrl.sanitizeAssertUnchanged(a);b=b||goog.global;c=c instanceof goog.string.Const?goog.string.Const.unwrap(c):c||\"\";return void 0!==d?b.open(goog.html.SafeUrl.unwrap(a),c,d):b.open(goog.html.SafeUrl.unwrap(a),c)};\ngoog.dom.safe.parseFromStringHtml=function(a,b){return goog.dom.safe.parseFromString(a,b,\"text/html\")};goog.dom.safe.parseFromString=function(a,b,c){return a.parseFromString(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b),c)};\ngoog.dom.safe.createImageFromBlob=function(a){if(!/^image\\/.*/g.test(a.type))throw Error(\"goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.\");var b=goog.global.URL.createObjectURL(a);a=new goog.global.Image;a.onload=function(){goog.global.URL.revokeObjectURL(b)};a.src=b;return a};goog.dom.safe.createContextualFragment=function(a,b){return a.createContextualFragment(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b))};\ngoog.dom.safe.getScriptNonce=function(a){return goog.dom.safe.getNonce_(\"script[nonce]\",a)};goog.dom.safe.getStyleNonce=function(a){return goog.dom.safe.getNonce_('style[nonce],link[rel=\"stylesheet\"][nonce]',a)};goog.dom.safe.NONCE_PATTERN_=/^[\\w+/_-]+[=]{0,2}$/;goog.dom.safe.getNonce_=function(a,b){b=(b||goog.global).document;return b.querySelector?(a=b.querySelector(a))&&(a=a.nonce||a.getAttribute(\"nonce\"))&&goog.dom.safe.NONCE_PATTERN_.test(a)?a:\"\":\"\"};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:\"\\u00a0\",ZERO_WIDTH_SPACE:\"\\u200b\"};goog.string.startsWith=goog.string.internal.startsWith;goog.string.endsWith=goog.string.internal.endsWith;goog.string.caseInsensitiveStartsWith=goog.string.internal.caseInsensitiveStartsWith;goog.string.caseInsensitiveEndsWith=goog.string.internal.caseInsensitiveEndsWith;goog.string.caseInsensitiveEquals=goog.string.internal.caseInsensitiveEquals;\ngoog.string.subs=function(a,b){const c=a.split(\"%s\");let d=\"\";const e=Array.prototype.slice.call(arguments,1);for(;e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")};goog.string.collapseWhitespace=function(a){return a.replace(/[\\s\\xa0]+/g,\" \").replace(/^\\s+|\\s+$/g,\"\")};goog.string.isEmptyOrWhitespace=goog.string.internal.isEmptyOrWhitespace;goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;\ngoog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return!/[^\\t\\n\\r ]/.test(a)};goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)};goog.string.isNumeric=function(a){return!/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return\" \"==a};\ngoog.string.isUnicodeChar=function(a){return 1==a.length&&\" \"<=a&&\"~\">=a||\"\\u0080\"<=a&&\"\\ufffd\">=a};goog.string.stripNewlines=function(a){return a.replace(/(\\r\\n|\\r|\\n)+/g,\" \")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\\r\\n|\\r|\\n)/g,\"\\n\")};goog.string.normalizeWhitespace=function(a){return a.replace(/\\xa0|\\s/g,\" \")};goog.string.normalizeSpaces=function(a){return a.replace(/\\xa0|[ \\t]+/g,\" \")};\ngoog.string.collapseBreakingSpaces=function(a){return a.replace(/[\\t\\r\\n ]+/g,\" \").replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g,\"\")};goog.string.trim=goog.string.internal.trim;goog.string.trimLeft=function(a){return a.replace(/^[\\s\\xa0]+/,\"\")};goog.string.trimRight=function(a){return a.replace(/[\\s\\xa0]+$/,\"\")};goog.string.caseInsensitiveCompare=goog.string.internal.caseInsensitiveCompare;\ngoog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;const d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length);for(let g=0;g<f;g++){c=d[g];const h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\d+|\\D+/g)};\ngoog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\d+|\\.\\d+|\\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\\+/g,\" \"))};goog.string.newLineToBr=goog.string.internal.newLineToBr;\ngoog.string.htmlEscape=function(a,b){a=goog.string.internal.htmlEscape(a,b);goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,\"&#101;\"));return a};goog.string.E_RE_=/e/g;goog.string.unescapeEntities=function(a){return goog.string.contains(a,\"&\")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&\"document\"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};\ngoog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,\"&\")?goog.string.unescapeEntitiesUsingDom_(a,b):a};\ngoog.string.unescapeEntitiesUsingDom_=function(a,b){const c={\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"'};let d;d=b?b.createElement(\"div\"):goog.global.document.createElement(\"div\");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(e,f){let g=c[e];if(g)return g;\"#\"==f.charAt(0)&&(f=Number(\"0\"+f.slice(1)),isNaN(f)||(g=String.fromCharCode(f)));g||(goog.dom.safe.setInnerHtml(d,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\"Single HTML entity.\"),\ne+\" \")),g=d.firstChild.nodeValue.slice(0,-1));return c[e]=g})};goog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(b,c){switch(c){case \"amp\":return\"&\";case \"lt\":return\"<\";case \"gt\":return\">\";case \"quot\":return'\"';default:return\"#\"!=c.charAt(0)||(c=Number(\"0\"+c.slice(1)),isNaN(c))?b:String.fromCharCode(c)}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g,\" &#160;\"),b)};\ngoog.string.preserveSpaces=function(a){return a.replace(/(^|[\\n ]) /g,\"$1\"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){const c=b.length;for(let d=0;d<c;d++){const e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+\"...\");c&&(a=goog.string.htmlEscape(a));return a};\ngoog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+\"...\"+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+\"...\"+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={\"\\x00\":\"\\\\0\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\v\":\"\\\\x0B\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"<\":\"\\\\u003C\"};goog.string.jsEscapeCache_={\"'\":\"\\\\'\"};\ngoog.string.quote=function(a){a=String(a);const b=['\"'];for(let c=0;c<a.length;c++){const d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}b.push('\"');return b.join(\"\")};goog.string.escapeString=function(a){const b=[];for(let c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join(\"\")};\ngoog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];let b;const c=a.charCodeAt(0);if(31<c&&127>c)b=a;else{if(256>c){if(b=\"\\\\x\",16>c||256<c)b+=\"0\"}else b=\"\\\\u\",4096>c&&(b+=\"0\");b+=c.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[a]=b};goog.string.contains=goog.string.internal.contains;\ngoog.string.caseInsensitiveContains=goog.string.internal.caseInsensitiveContains;goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){let d=a;0<=b&&b<a.length&&0<c&&(d=a.slice(0,b)+a.slice(b+c));return d};goog.string.remove=function(a,b){return a.replace(b,\"\")};goog.string.removeAll=function(a,b){b=new RegExp(goog.string.regExpEscape(b),\"g\");return a.replace(b,\"\")};\ngoog.string.replaceAll=function(a,b,c){b=new RegExp(goog.string.regExpEscape(b),\"g\");return a.replace(b,c.replace(/\\$/g,\"$$$$\"))};goog.string.regExpEscape=function(a){return String(a).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g,\"\\\\$1\").replace(/\\x08/g,\"\\\\x08\")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};\ngoog.string.padNumber=function(a,b,c){if(!Number.isFinite(a))return String(a);a=void 0!==c?a.toFixed(c):String(a);c=a.indexOf(\".\");-1===c&&(c=a.length);const d=\"-\"===a[0]?\"-\":\"\";d&&(a=a.substring(1));return d+goog.string.repeat(\"0\",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?\"\":String(a)};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};\ngoog.string.compareVersions=goog.string.internal.compareVersions;goog.string.hashCode=function(a){let b=0;for(let c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;goog.string.createUniqueString=function(){return\"goog_\"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(a){const b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)};\ngoog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\\-([a-z])/g,function(b,c){return c.toUpperCase()})};goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,\"-$1\").toLowerCase()};goog.string.toTitleCase=function(a,b){b=\"string\"===typeof b?goog.string.regExpEscape(b):\"\\\\s\";return a.replace(new RegExp(\"(^\"+(b?\"|[\"+b+\"]+\":\"\")+\")([a-z])\",\"g\"),function(c,d,e){return d+e.toUpperCase()})};\ngoog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.slice(1)).toLowerCase()};goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return\"string\"===typeof a?/^\\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};goog.string.splitLimit=function(a,b,c){a=a.split(b);const d=[];for(;0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};\ngoog.string.lastComponent=function(a,b){if(b)\"string\"==typeof b&&(b=[b]);else return a;let c=-1;for(let d=0;d<b.length;d++){if(\"\"==b[d])continue;const e=a.lastIndexOf(b[d]);e>c&&(c=e)}return-1==c?a:a.slice(c+1)};\ngoog.string.editDistance=function(a,b){const c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]};goog.string.path={};goog.string.path.baseName=function(a){const b=a.lastIndexOf(\"/\")+1;return a.slice(b)};goog.string.path.basename=goog.string.path.baseName;goog.string.path.dirname=function(a){const b=a.lastIndexOf(\"/\")+1;a=a.slice(0,b);/^\\/+$/.test(a)||(a=a.replace(/\\/+$/,\"\"));return a};goog.string.path.extension=function(a){a=goog.string.path.baseName(a).replace(/\\.+/g,\".\");const b=a.lastIndexOf(\".\");return 0>=b?\"\":a.slice(b+1)};\ngoog.string.path.join=function(a){let b=arguments[0];for(let c=1;c<arguments.length;c++){const d=arguments[c];b=goog.string.startsWith(d,\"/\")?d:\"\"==b||goog.string.endsWith(b,\"/\")?b+d:b+(\"/\"+d)}return b};\ngoog.string.path.normalizePath=function(a){if(\"\"==a)return\".\";let b=\"\";goog.string.startsWith(a,\"/\")&&(b=\"/\",goog.string.startsWith(a,\"//\")&&!goog.string.startsWith(a,\"///\")&&(b=\"//\"));a=a.split(\"/\");const c=[];for(let d=0;d<a.length;d++){const e=a[d];\"\"!=e&&\".\"!=e&&(\"..\"!=e||!b&&!c.length||\"..\"==module$contents$goog$array_peek(c)?c.push(e):c.pop())}return b+c.join(\"/\")||\".\"};goog.string.path.split=function(a){const b=goog.string.path.dirname(a);a=goog.string.path.baseName(a);return[b,a]};const DEBUG_WASI$$module$src$filesystem$wasi=!1;function assertLeadingSlash$$module$src$filesystem$wasi(a){return/^\\//g.test(a)?a:`/${a}`}function removeLeadingSlash$$module$src$filesystem$wasi(a){return a.replace(/^\\//g,\"\")}function shouldOpenReader$$module$src$filesystem$wasi(a){return(a&(WASI_RIGHT_FD_READ$$module$src$filesystem$constants|WASI_RIGHT_FD_READDIR$$module$src$filesystem$constants))!==goog.global.BigInt(0)}\nfunction performanceNowPoly$$module$src$filesystem$wasi(){if(\"undefined\"===typeof performance||\"undefined\"===typeof performance.now){const a=Date.now();return Date.now()-a}return performance.now()}function concatUint8Arrays$$module$src$filesystem$wasi(a){var b=a.reduce((d,e)=>d+e.length,0);if(0!==a.length){b=new Uint8Array(b);var c=0;for(const d of a)b.set(d,c),c+=d.length;return b}}\nconst WASI$$module$src$filesystem$wasi=function({}){this.fd=Array.from({length:4});this.fd[0]={fd:0,path:\"/dev/stdin\",seekPos:goog.global.BigInt(0),buffers:[]};this.fd[1]={fd:1,path:\"/dev/stdout\",seekPos:goog.global.BigInt(0),buffers:[]};this.fd[2]={fd:2,path:\"/dev/stderr\",seekPos:goog.global.BigInt(0),buffers:[]};this.fd[3]={fd:3,path:\"/\",seekPos:goog.global.BigInt(0),buffers:[]};this.getMemory=this.getMemory.bind(this);this.CPUTIME_START=0};\nWASI$$module$src$filesystem$wasi.prototype.start=function(a){this.CPUTIME_START=performanceNowPoly$$module$src$filesystem$wasi();a.exports._start()};WASI$$module$src$filesystem$wasi.prototype.getImports=function(a){const b={};a=WebAssembly.Module.imports(a);for(const c of a)\"function\"===c.kind&&c.module.startsWith(\"wasi_\")&&(\"object\"!==typeof b[c.module]&&(b[c.module]={}),b[c.module][c.name]=this[c.name].bind(this));return b};\nWASI$$module$src$filesystem$wasi.prototype.setMemory=function(a){this.memory=a};WASI$$module$src$filesystem$wasi.prototype.getMemory=function(){this.view&&this.view.buffer&&this.view.buffer.byteLength||(this.view=new DataView(this.memory.buffer));return this.view};WASI$$module$src$filesystem$wasi.prototype.msToNs=function(a){const b=Math.trunc(a);a=goog.global.BigInt(Math.round(1E6*(a-b)));return goog.global.BigInt(b)*goog.global.BigInt(1E6)+a};\nWASI$$module$src$filesystem$wasi.prototype.now=function(a){switch(a){case WASI_CLOCK_MONOTONIC$$module$src$filesystem$constants:return Math.floor(performanceNowPoly$$module$src$filesystem$wasi());case WASI_CLOCK_REALTIME$$module$src$filesystem$constants:return this.msToNs(Date.now());case WASI_CLOCK_PROCESS_CPUTIME_ID$$module$src$filesystem$constants:case WASI_CLOCK_THREAD_CPUTIME_ID$$module$src$filesystem$constants:return Math.floor(performanceNowPoly$$module$src$filesystem$wasi()-this.CPUTIME_START);\ndefault:return 0}};WASI$$module$src$filesystem$wasi.prototype.args_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"args_get\",a,b,module$src$filesystem$constants);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.args_sizes_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"args_sizes_get\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.clock_res_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"args_get\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.clock_time_get=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"clock_time_get\",a,b,c,arguments);const d=this.getMemory(),e=this.now(a);d.setBigUint64(c,goog.global.BigInt(e),!0);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.environ_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"environ_get\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.environ_sizes_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"environ_sizes_get\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.fd_advise=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_advise\",a,b,c,d,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_allocate=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_allocate\",a,b,c,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.fd_close=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_close\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_datasync=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_datasync\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.fd_fdstat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_fdstat_get\",a,b,arguments);const c=this.getMemory();c.setUint8(b+4,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants);c.setUint16(b+2,0,!0);c.setUint16(b+4,0,!0);c.setBigUint64(b+8,goog.global.BigInt(RIGHTS_REGULAR_FILE_BASE$$module$src$filesystem$constants),!0);c.setBigUint64(b+8+8,goog.global.BigInt(RIGHTS_REGULAR_FILE_INHERITING$$module$src$filesystem$constants),\n!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_set_flags=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_fdstat_set_flags\",a,b,arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_fdstat_set_rights=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_fdstat_set_rights\",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.fd_filestat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_filestat_get\",a,b,arguments);let c=0;this.fd[a]&&(c=this.fd[a].buffers.reduce(function(e,f){return e+(null==f?void 0:f.byteLength)?null==f?void 0:f.byteLength:0},0));const d=this.getMemory();d.setBigUint64(b,goog.global.BigInt(a),!0);b+=8;d.setBigUint64(b,goog.global.BigInt(a),!0);b+=8;d.setUint8(b,WASI_FILETYPE_REGULAR_FILE$$module$src$filesystem$constants);b+=8;d.setBigUint64(b,\ngoog.global.BigInt(1),!0);b+=8;d.setBigUint64(b,goog.global.BigInt(c),!0);b+=8;d.setBigUint64(b,this.msToNs(this.CPUTIME_START),!0);b+=8;d.setBigUint64(b,this.msToNs(this.CPUTIME_START),!0);d.setBigUint64(b+8,this.msToNs(this.CPUTIME_START),!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_filestat_set_size=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_filestat_set_size\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.fd_filestat_set_times=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_filestat_set_times\",a,b,c,d,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_pread=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_pread\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.fd_prestat_dir_name=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_prestat_dir_name\",a,b,c,this.fd[a]);if(!this.fd[a]&&!this.fd[a-1])return WASI_EBADF$$module$src$filesystem$constants;({path:c}=this.fd[a]);a=this.getMemory();c=encoder$$module$src$utils$text_encoders.encode(c);(new Uint8Array(a.buffer)).set(c,b);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.fd_prestat_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_prestat_get\",a,b,this.fd[a]);if(!this.fd[a])return WASI_EBADF$$module$src$filesystem$constants;var {path:c}=this.fd[a];a=this.getMemory();c=encoder$$module$src$utils$text_encoders.encode(c);a.setUint8(b,WASI_PREOPENTYPE_DIR$$module$src$filesystem$constants);a.setUint32(b+4,c.byteLength,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.fd_pwrite=function(a,b,c,d,e){console.log(\"fd_pwrite\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.fd_read=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_read\",a,b,c,d,arguments);const e=this.fd[a]&&this.fd[a].buffers;var f=e.reduce((l,p)=>l+p.length,0);const g=this.getMemory();if(e&&0!==e.length){var h=Number(this.fd[a].seekPos),k=0,m=!1;if(h>=f)return-1;for(f=0;f<c;f++){var n=b+8*f;const l=g.getUint32(n,!0);n=g.getUint32(n+4,!0);m||(k+=n,Array.from({length:n},(p,q)=>q).reduce((p,q)=>{if(m)return p;const [u,t]=p;let x=p=0,r=\n!1,y=0,v;if(0===q)for(;!r;)v=e[p]?e[p].byteLength:0,y<=h&&v+y>h?(r=!0,x=h-y):(y+=v,p+=1);else p=u,x=t;e[p]?(g.setUint8(l+q,e[p][x]),x+1>=e[p].byteLength?(p=u+1,x=0):x+=1):(g.setUint8(l+q,\"\\x00\"),h+=q,m=!0);return[p,x]},[0,0]),m||(h+=n))}this.fd[a].seekPos=goog.global.BigInt(h);g.setUint32(d,k,!0);return WASI_ESUCCESS$$module$src$filesystem$constants}console.error(\"Reading non existent file\",a,this.fd[a])};\nWASI$$module$src$filesystem$wasi.prototype.fd_readdir=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_readdir\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_renumber=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_renumber\",a,b,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.fd_seek=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_seek\",a,b,c,d,arguments);const e=this.getMemory();switch(c){case WASI_WHENCE_CUR$$module$src$filesystem$constants:var f;this.fd[a].seekPos=(null!=(f=this.fd[a].seekPos)?f:goog.global.BigInt(0))+goog.global.BigInt(b);break;case WASI_WHENCE_END$$module$src$filesystem$constants:f=(this.fd[a].buffers||[]).reduce((g,h)=>g+h.length,0);this.fd[a].seekPos=BigInt(f)+BigInt(b);break;\ncase WASI_WHENCE_SET$$module$src$filesystem$constants:this.fd[a].seekPos=BigInt(b)}e.setBigUint64(d,this.fd[a].seekPos,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.fd_sync=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_sync\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.fd_tell=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_tell\",a,b,arguments);const c=this.getMemory();this.fd[a].seekPos||(this.fd[a].seekPos=goog.global.BigInt(0));c.setBigUint64(b,this.fd[a].seekPos,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.fd_write=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"fd_write\",{fd:a,iovs:b,iovsLength:c,nwritten:d});let e=!1;const f=this.getMemory();this.fd[a].buffers=this.fd[a].buffers||[];this.fd[a].seekPos===goog.global.BigInt(0)&&0<this.fd[a].buffers.length&&(e=!0);let g=0;for(let m=0;m<c;m++){var h=b+8*m,k=f.getUint32(h,!0);h=f.getUint32(h+4,!0);g+=h;k=new Uint8Array(f.buffer,k,h);e?this.fd[a].buffers.unshift(k.slice(0,h)):this.fd[a].buffers.push(k.slice(0,\nh))}this.fd[a].seekPos+=goog.global.BigInt(g);f.setUint32(d,g,!0);[1,2].includes(a)&&console.log(decoder$$module$src$utils$text_encoders.decode(concatUint8Arrays$$module$src$filesystem$wasi(this.fd[a].buffers)));return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_create_directory=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_create_directory\",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.path_filestat_get=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_filestat_get\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_filestat_set_times=function(a,b,c,d,e,f,g){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_filestat_set_times\",a,b,c,d,e,f,g,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.path_link=function(a,b,c,d,e,f,g){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_link\",a,b,c,d,e,f,g,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.path_open=function(a,b,c,d,e,f,g,h,k){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_open\",a,b,c,d,e,f,g,h,k,arguments);const m=this.getMemory();var n=(this.fd[a]||{path:\"/\"}).path,l=new Uint8Array(m.buffer,c,d);l=decoder$$module$src$utils$text_encoders.decode(l);const p=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(goog.string.path.join(3===a?\"\":n,l)));DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\";; opening path\",\np,\"withREader\",shouldOpenReader$$module$src$filesystem$wasi(f));if(p.startsWith(\"/..\")||\"/._\"===p||\"/.AppleDouble\"===p)return WASI_EBADF$$module$src$filesystem$constants;(n=Object.values(this.fd).find(q=>q.path===p&&Array.isArray(q.buffers)))?l=n.fd:(l=this.fd.length,this.fd[l]={fd:l});this.fd[l]={...this.fd[l],path:p,type:\"file\",seekPos:goog.global.BigInt(0),buffers:n?this.fd[l].buffers:[]};shouldOpenReader$$module$src$filesystem$wasi(f)&&DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"should open a read handle for\",\np);m.setUint32(k,l,!0);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_readlink=function(a,b,c,d,e,f){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_readlink\",a,b,c,d,e,f,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_remove_directory=function(a,b,c){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_remove_directory\",a,b,c);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.path_rename=function(a,b,c,d,e,f){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_rename\",a,b,c,d,e,f,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.path_symlink=function(a,b,c,d,e){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_symlink\",a,b,c,d,e,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.path_unlink_file=function(a,b,c){3<a&&DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"path_unlink_file\",a,b,c,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.poll_oneoff=function(a,b,c,d){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"poll_oneoff\",a,b,c,d,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.proc_exit=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"proc_exit\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.proc_raise=function(a){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"proc_raise\",a,arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.random_get=function(a,b){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"random_get\",a,b);return WASI_ESUCCESS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sched_yield=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"sched_yield\",arguments);return WASI_ESUCCESS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.sock_recv=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"sock_recv\",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.sock_send=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"sock_send\",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};\nWASI$$module$src$filesystem$wasi.prototype.sock_shutdown=function(){DEBUG_WASI$$module$src$filesystem$wasi&&console.log(\"sock_shutdown\",arguments);return WASI_ENOSYS$$module$src$filesystem$constants};WASI$$module$src$filesystem$wasi.prototype.findBuffers=function(a){const b=Object.values(this.fd).find(({path:c})=>c===a);return b&&b.buffers};\nWASI$$module$src$filesystem$wasi.prototype.readdir=function(a){const b=(assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a))+\"/\").replace(\"//\",\"/\"),c=[];Object.values(this.fd).forEach(({path:d})=>!/\\//g.test(d.replace(b,\"\"))&&c.push(d));return c.map(d=>removeLeadingSlash$$module$src$filesystem$wasi(d.replace(b,\"\"))).filter(d=>!!d)};\nWASI$$module$src$filesystem$wasi.prototype.writeFile=function(a,b){const c=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));a=Object.keys(this.fd).length;const d=Object.values(this.fd).find(({path:e})=>e===c);this.fd[a]={fd:a,path:c,seekPos:goog.global.BigInt(0),buffers:[b]};d&&delete this.fd[d]};\nWASI$$module$src$filesystem$wasi.prototype.appendFile=function(a,b){var c=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));(c=this.findBuffers(c))?c.push(b):console.error(`Can't append to non-existing file ${a}`)};WASI$$module$src$filesystem$wasi.prototype.readFile=function(a){a=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));if(a=this.findBuffers(a))return concatUint8Arrays$$module$src$filesystem$wasi(a)};\nWASI$$module$src$filesystem$wasi.prototype.readStdOut=function(){const a=Object.values(this.fd[0]);return concatUint8Arrays$$module$src$filesystem$wasi(a&&a.buffers||[])};WASI$$module$src$filesystem$wasi.prototype.unlink=function(a){const b=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a));(a=Object.values(this.fd).find(({path:c})=>c===b))?delete this.fd[a]:console.error(`While trying to unlink ${b}, path not found`)};\nWASI$$module$src$filesystem$wasi.prototype.mkdir=function(a){const b=assertLeadingSlash$$module$src$filesystem$wasi((0,goog.string.path.normalizePath)(a)),c=[];Object.values(this.fd).forEach(({path:d})=>d.startsWith(b)&&c.push(d));0<c.length?console.warn(`mkdir: path ${a} already exists`):(a=Object.keys(this.fd).length,this.fd[a]={fd:a,path:b})};var module$src$filesystem$wasi={};module$src$filesystem$wasi.WASI=WASI$$module$src$filesystem$wasi;const CompressionMethod$$module$src$zlib$zlib={DEFLATE:8,RESERVED:15};var module$src$zlib$zlib={};module$src$zlib$zlib.CompressionMethod=CompressionMethod$$module$src$zlib$zlib;/*\n zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */\nfunction Huffman$$module$src$zlib$huffman(a){const b=a.length;let c=0,d=Number.POSITIVE_INFINITY,e,f,g,h;let k,m;for(k=0;k<b;++k)a[k]>c&&(c=a[k]),a[k]<d&&(d=a[k]);const n=1<<c,l=new Uint32Array(n);e=1;f=0;for(g=2;e<=c;){for(k=0;k<b;++k)if(a[k]===e){h=0;var p=f;for(m=0;m<e;++m)h=h<<1|p&1,p>>=1;p=e<<16|k;for(m=h;m<n;m+=g)l[m]=p;++f}++e;f<<=1;g<<=1}return[l,c,d]}var module$src$zlib$huffman={};module$src$zlib$huffman.Huffman=Huffman$$module$src$zlib$huffman;const ZLIB_RAW_INFLATE_BUFFER_SIZE$$module$src$zlib$rawinflate=32768;\nfunction RawInflate$$module$src$zlib$rawinflate(a,b){this.blocks=[];this.bufferSize=ZLIB_RAW_INFLATE_BUFFER_SIZE$$module$src$zlib$rawinflate;this.bitsbuflen=this.bitsbuf=this.ip=this.totalpos=0;this.input=new Uint8Array(a);this.bfinal=!1;this.bufferType=RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE;this.resize=!1;if(b||!(b={}))b.index&&(this.ip=b.index),b.bufferSize&&(this.bufferSize=b.bufferSize),b.bufferType&&(this.bufferType=b.bufferType),b.resize&&(this.resize=b.resize);switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.op=\nRawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;this.output=new Uint8Array(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength+this.bufferSize+RawInflate$$module$src$zlib$rawinflate.MaxCopyLength);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.op=0;this.output=new Uint8Array(this.bufferSize);break;default:throw Error(\"invalid inflate mode\");}}RawInflate$$module$src$zlib$rawinflate.BufferType={BLOCK:0,ADAPTIVE:1};\nRawInflate$$module$src$zlib$rawinflate.prototype.decompress=function(){for(;!this.bfinal;)this.parseBlock();switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:return this.concatBufferBlock();case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:return this.concatBufferDynamic();default:throw Error(\"invalid inflate mode\");}};RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength=32768;RawInflate$$module$src$zlib$rawinflate.MaxCopyLength=258;\nRawInflate$$module$src$zlib$rawinflate.Order=function(a){return new Uint16Array(a)}([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);RawInflate$$module$src$zlib$rawinflate.LengthCodeTable=function(a){return new Uint16Array(a)}([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]);RawInflate$$module$src$zlib$rawinflate.LengthExtraTable=function(a){return new Uint8Array(a)}([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]);\nRawInflate$$module$src$zlib$rawinflate.DistCodeTable=function(a){return new Uint16Array(a)}([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]);RawInflate$$module$src$zlib$rawinflate.DistExtraTable=function(a){return new Uint8Array(a)}([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\nRawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable=function(a){return a}(function(){const a=new Uint8Array(288);let b,c;b=0;for(c=a.length;b<c;++b)a[b]=143>=b?8:255>=b?9:279>=b?7:8;return Huffman$$module$src$zlib$huffman(a)}());RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable=function(a){return a}(function(){const a=new Uint8Array(30);let b,c;b=0;for(c=a.length;b<c;++b)a[b]=5;return Huffman$$module$src$zlib$huffman(a)}());\nRawInflate$$module$src$zlib$rawinflate.prototype.parseBlock=function(){let a=this.readBits(3);a&1&&(this.bfinal=!0);a>>>=1;switch(a){case 0:this.parseUncompressedBlock();break;case 1:this.parseFixedHuffmanBlock();break;case 2:this.parseDynamicHuffmanBlock();break;default:throw Error(\"unknown BTYPE: \"+a);}};\nRawInflate$$module$src$zlib$rawinflate.prototype.readBits=function(a){let b=this.bitsbuf,c=this.bitsbuflen;const d=this.input;let e=this.ip;if(e+(a-c+7>>3)>=d.length)throw Error(\"input buffer is broken\");for(;c<a;)b|=d[e++]<<c,c+=8;this.bitsbuf=b>>>a;this.bitsbuflen=c-a;this.ip=e;return b&(1<<a)-1};\nRawInflate$$module$src$zlib$rawinflate.prototype.readCodeByTable=function(a){let b=this.bitsbuf,c=this.bitsbuflen;var d=this.input;let e=this.ip;var f=d.length;const g=a[0];for(a=a[1];c<a&&!(e>=f);)b|=d[e++]<<c,c+=8;d=g[b&(1<<a)-1];f=d>>>16;if(f>c)throw Error(\"invalid code length: \"+f);this.bitsbuf=b>>f;this.bitsbuflen=c-f;this.ip=e;return d&65535};\nRawInflate$$module$src$zlib$rawinflate.prototype.parseUncompressedBlock=function(){const a=this.input;let b=this.ip,c=this.output,d=this.op;var e=a.length;let f;const g=c.length;this.bitsbuflen=this.bitsbuf=0;if(b+1>=e)throw Error(\"invalid uncompressed block header: LEN\");f=a[b++]|a[b++]<<8;if(b+1>=e)throw Error(\"invalid uncompressed block header: NLEN\");e=a[b++]|a[b++]<<8;if(f===~e)throw Error(\"invalid uncompressed block header: length verify\");if(b+f>a.length)throw Error(\"input buffer is broken\");\nswitch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:for(;d+f>c.length;)e=g-d,f-=e,c.set(a.subarray(b,b+e),d),d+=e,b+=e,this.op=d,c=this.expandBufferBlock(),d=this.op;break;case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:for(;d+f>c.length;)c=this.expandBufferAdaptive({fixRatio:2});break;default:throw Error(\"invalid inflate mode\");}c.set(a.subarray(b,b+f),d);this.ip=b+f;this.op=d+f;this.output=c};\nRawInflate$$module$src$zlib$rawinflate.prototype.parseFixedHuffmanBlock=function(){switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.decodeHuffmanAdaptive(RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable,RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.decodeHuffmanBlock(RawInflate$$module$src$zlib$rawinflate.FixedLiteralLengthTable,RawInflate$$module$src$zlib$rawinflate.FixedDistanceTable);\nbreak;default:throw Error(\"invalid inflate mode\");}};\nRawInflate$$module$src$zlib$rawinflate.prototype.parseDynamicHuffmanBlock=function(){var a=this.readBits(5)+257,b=this.readBits(5)+1,c=this.readBits(4)+4,d=new Uint8Array(RawInflate$$module$src$zlib$rawinflate.Order.length);let e;for(e=0;e<c;++e)d[RawInflate$$module$src$zlib$rawinflate.Order[e]]=this.readBits(3);d=Huffman$$module$src$zlib$huffman(d);c=new Uint8Array(a+b);e=0;for(b=a+b;e<b;){var f=this.readCodeByTable(d);switch(f){case 16:for(f=3+this.readBits(2);f--;)c[e++]=g;break;case 17:for(f=\n3+this.readBits(3);f--;)c[e++]=0;var g=0;break;case 18:for(f=11+this.readBits(7);f--;)c[e++]=0;g=0;break;default:g=c[e++]=f}}g=Huffman$$module$src$zlib$huffman(c.subarray(0,a));a=Huffman$$module$src$zlib$huffman(c.subarray(a));switch(this.bufferType){case RawInflate$$module$src$zlib$rawinflate.BufferType.ADAPTIVE:this.decodeHuffmanAdaptive(g,a);break;case RawInflate$$module$src$zlib$rawinflate.BufferType.BLOCK:this.decodeHuffmanBlock(g,a);break;default:throw Error(\"invalid inflate mode\");}};\nRawInflate$$module$src$zlib$rawinflate.prototype.decodeHuffmanBlock=function(a,b){let c=this.output,d=this.op;this.currentLitlenTable=a;const e=c.length-RawInflate$$module$src$zlib$rawinflate.MaxCopyLength;var f;let g,h;const k=RawInflate$$module$src$zlib$rawinflate.LengthCodeTable,m=RawInflate$$module$src$zlib$rawinflate.LengthExtraTable,n=RawInflate$$module$src$zlib$rawinflate.DistCodeTable,l=RawInflate$$module$src$zlib$rawinflate.DistExtraTable;for(;256!==(f=this.readCodeByTable(a));)if(256>f)d>=\ne&&(this.op=d,c=this.expandBufferBlock(),d=this.op),c[d++]=f;else for(f-=257,h=k[f],0<m[f]&&(h+=this.readBits(m[f])),f=this.readCodeByTable(b),g=n[f],0<l[f]&&(g+=this.readBits(l[f])),d>=e&&(this.op=d,c=this.expandBufferBlock(),d=this.op);h--;)c[d]=c[d++-g];for(;8<=this.bitsbuflen;)this.bitsbuflen-=8,this.ip--;this.op=d};\nRawInflate$$module$src$zlib$rawinflate.prototype.decodeHuffmanAdaptive=function(a,b){let c=this.output,d=this.op;this.currentLitlenTable=a;let e=c.length;var f;let g,h;const k=RawInflate$$module$src$zlib$rawinflate.LengthCodeTable,m=RawInflate$$module$src$zlib$rawinflate.LengthExtraTable,n=RawInflate$$module$src$zlib$rawinflate.DistCodeTable,l=RawInflate$$module$src$zlib$rawinflate.DistExtraTable;for(;256!==(f=this.readCodeByTable(a));)if(256>f)d>=e&&(c=this.expandBufferAdaptive(),e=c.length),c[d++]=\nf;else for(f-=257,h=k[f],0<m[f]&&(h+=this.readBits(m[f])),f=this.readCodeByTable(b),g=n[f],0<l[f]&&(g+=this.readBits(l[f])),d+h>e&&(c=this.expandBufferAdaptive(),e=c.length);h--;)c[d]=c[d++-g];for(;8<=this.bitsbuflen;)this.bitsbuflen-=8,this.ip--;this.op=d};\nRawInflate$$module$src$zlib$rawinflate.prototype.expandBufferBlock=function(a){a=new Uint8Array(this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength);const b=this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,c=this.output;a.set(c.subarray(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,a.length));this.blocks.push(a);this.totalpos+=a.length;c.set(c.subarray(b,b+RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength));this.op=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;\nreturn c};RawInflate$$module$src$zlib$rawinflate.prototype.expandBufferAdaptive=function(a){let b=Math.trunc(this.input.length/this.ip+1);const c=this.input,d=this.output;a&&(\"number\"===typeof a.fixRatio&&(b=a.fixRatio),\"number\"===typeof a.addRatio&&(b+=a.addRatio));2>b?(a=(c.length-this.ip)/this.currentLitlenTable[2],a=Math.trunc(a/2*258),a=a<d.length?d.length+a:d.length<<1):a=d.length*b;a=new Uint8Array(a);a.set(d);return this.output=a};\nRawInflate$$module$src$zlib$rawinflate.prototype.concatBufferBlock=function(){let a=0;const b=this.output,c=this.blocks;let d;const e=new Uint8Array(this.totalpos+(this.op-RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength));let f,g,h,k;if(0===c.length)return this.output.subarray(RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength,this.op);f=0;for(g=c.length;f<g;++f)for(d=c[f],h=0,k=d.length;h<k;++h)e[a++]=d[h];f=RawInflate$$module$src$zlib$rawinflate.MaxBackwardLength;for(g=this.op;f<\ng;++f)e[a++]=b[f];this.blocks=[];return this.buffer=e};RawInflate$$module$src$zlib$rawinflate.prototype.concatBufferDynamic=function(){let a;const b=this.op;this.resize?(a=new Uint8Array(b),a.set(this.output.subarray(0,b))):a=this.output.subarray(0,b);return this.buffer=a};var module$src$zlib$rawinflate={};module$src$zlib$rawinflate.RawInflate=RawInflate$$module$src$zlib$rawinflate;function Util$$module$src$zlib$util(){}Util$$module$src$zlib$util.stringToByteArray=function(a){a=[...a];let b,c;b=0;for(c=a.length;b<c;b++)a[b]=(a[b].charPointAt(0)&255)>>>0;return new Uint8Array([a])};var module$src$zlib$util={};module$src$zlib$util.Util=Util$$module$src$zlib$util;function Adler32$$module$src$zlib$adler32(a){\"string\"===typeof a&&(a=Util$$module$src$zlib$util.stringToByteArray(a));return Adler32$$module$src$zlib$adler32.update(1,a)}Adler32$$module$src$zlib$adler32.update=function(a,b){let c=a&65535;a=a>>>16&65535;let d=b.length,e,f=0;for(;0<d;){e=d>Adler32$$module$src$zlib$adler32.OptimizationParameter?Adler32$$module$src$zlib$adler32.OptimizationParameter:d;d-=e;do c+=b[f++],a+=c;while(--e);c%=65521;a%=65521}return(a<<16|c)>>>0};\nAdler32$$module$src$zlib$adler32.OptimizationParameter=1024;var module$src$zlib$adler32={};module$src$zlib$adler32.Adler32=Adler32$$module$src$zlib$adler32;function Inflate$$module$src$zlib$inflate(a,b){this.input=a;this.ip=0;if(b||!(b={}))b.index&&(this.ip=b.index),b.verify&&(this.verify=b.verify);const c=a[this.ip++],d=a[this.ip++];switch(c&15){case CompressionMethod$$module$src$zlib$zlib.DEFLATE:this.method=CompressionMethod$$module$src$zlib$zlib.DEFLATE;break;default:throw Error(\"unsupported compression method\");}if(0!==((c<<8)+d)%31)throw Error(\"invalid fcheck flag:\"+((c<<8)+d)%31);if(d&32)throw Error(\"fdict flag is not supported\");this.rawinflate=\nnew RawInflate$$module$src$zlib$rawinflate(a,{index:this.ip,bufferSize:b.bufferSize,bufferType:b.bufferType,resize:b.resize})}Inflate$$module$src$zlib$inflate.BufferType=RawInflate$$module$src$zlib$rawinflate.BufferType;\nInflate$$module$src$zlib$inflate.prototype.decompress=function(){var a=this.input;const b=this.rawinflate.decompress();this.ip=this.rawinflate.ip;if(this.verify&&(a=(a[this.ip++]<<24|a[this.ip++]<<16|a[this.ip++]<<8|a[this.ip++])>>>0,a!==Adler32$$module$src$zlib$adler32(b)))throw Error(\"invalid adler-32 checksum\");return b};var module$src$zlib$inflate={};module$src$zlib$inflate.Inflate=Inflate$$module$src$zlib$inflate;const PAGE_SIZE$$module$src$module=65536,PAGES_PER_MB$$module$src$module=16,csoundWasiJsMessageCallback$$module$src$module=({memory:a,messagePort:b,streamBuffer:c})=>function(d,e,f,g){if(a){d=new Uint8Array(a.buffer,g,f);d=uint2String$$module$src$utils$text_encoders(d);var h=/\\n$/g.test(d);e=/^\\n/g.test(d);var k=d.split(\"\\n\").filter(n=>0<n.length),m=[];if(0===k.length&&h||e)m.push(c.join(\"\")),clearArray$$module$src$utils$clear_array(c);k.forEach((n,l)=>{l+1===k.length?h?0===l?(m.push(c.join(\"\")+n),\nclearArray$$module$src$utils$clear_array(c)):m.push(n):c.push(n):0===l?(m.push(c.join(\"\")+n),clearArray$$module$src$utils$clear_array(c)):m.push(n)});m.forEach(n=>{n.replace(/(\\r\\n|\\n|\\r)/gm,\"\")&&b.post({log:n})})}},assertPluginExports$$module$src$module=a=>{if(a&&\"object\"===typeof a&&\"object\"===typeof a.exports){if(a.exports.__wasm_call_ctors){if(a.exports.csoundModuleCreate||a.exports.csound_opcode_init||a.exports.csound_fgen_init)return!0;console.error(a.exports,\"A csound plugin turns out to be neither a plugin, opcode or module.\\nPerhaps csdl.h or module.h wasn't imported correctly?\");\nreturn!1}console.error(\"A csound plugin didn't export __wasm_call_ctors.\\nPlease re-run wasm-ld with either --export-all or include --export=__wasm_call_ctors\");return!1}console.error(\"Error instantiating a csound plugin, instance and/or export is missing!\");return!1},getBinaryHeaderData$$module$src$module=a=>{function b(){let m=0,n=1;for(;;){const l=a[c++];m+=(l&127)*n;n*=128;if(!(l&128))break}return m}1836278016!==(new Uint32Array((new Uint8Array(a.subarray(0,24))).buffer))[0]&&console.error(\"Wasm magic number is missing!\");\nif(0!==a[8])return logWasmModule$$module$src$logger(\"Dylink section wasn't found in wasm binary, assuming static wasm.\"),\"static\";let c=9;const d=b();c++;(0,goog.asserts.assert)(a[c]===\"d\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"y\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"l\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"i\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"n\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"k\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\n\".\".codePointAt(0));c++;(0,goog.asserts.assert)(a[c]===\"0\".codePointAt(0));c+=3;const e=b(),f=b(),g=b(),h=b(),k=b();return{sectionSize:d,memorySize:e,memoryAlign:f,neededDynlibsCount:k,tableSize:g,tableAlign:h}},loadStaticWasm$$module$src$module=async({wasmBytes:a,wasi:b,messagePort:c})=>{const d=await WebAssembly.compile(a);a=new WebAssembly.Memory({initial:16384});const e=b.getImports(d);e.env=e.env||{};e.env.csoundLoadModules=()=>0;e.env.memory=a;e.env.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module({memory:e.env.memory,\nstreamBuffer:[],messagePort:c});c=await WebAssembly.instantiate(d,e);b.setMemory(a);b.start(c);c.exports.__wasi_js_csoundSetMessageStringCallback();return[c,b]};\nvar $jscompDefaultExport$$module$src$module=async function({wasmDataURI:a,withPlugins:b=[],messagePort:c}){var d={};const e=new WASI$$module$src$filesystem$wasi({preopens:{\"/\":\"/\"}});a=new Uint8Array(a);a=(new Inflate$$module$src$zlib$inflate(a)).decompress();var f=getBinaryHeaderData$$module$src$module(a);if(\"static\"===f)return await loadStaticWasm$$module$src$module({messagePort:c,wasmBytes:a,wasmFs:d,wasi:e});const {memorySize:g,memoryAlign:h,tableSize:k}=f;b=await b.reduce(async(v,z)=>{v=await v;\nlet B,w;try{B=new Uint8Array(z),w=getBinaryHeaderData$$module$src$module(B)}catch(C){console.error(\"Error in plugin\",C)}w&&v.push({headerData:w,wasmPluginBytes:B});return v},[]);var m=128*PAGES_PER_MB$$module$src$module;d=Math.ceil((g+h)/PAGE_SIZE$$module$src$module);f=Math.ceil(b.reduce((v,{headerData:z})=>\"static\"===z?0:v+(z.memorySize+h),0)/PAGE_SIZE$$module$src$module);f=d+f+m;const n=new WebAssembly.Memory({initial:f,maximum:1024*PAGES_PER_MB$$module$src$module}),l=new WebAssembly.Table({initial:k+\n1,element:\"anyfunc\"});e.setMemory(n);const p=new WebAssembly.Global({value:\"i32\",mutable:!0},f*PAGE_SIZE$$module$src$module);f=new WebAssembly.Global({value:\"i32\",mutable:!0},f*PAGE_SIZE$$module$src$module);m=new WebAssembly.Global({value:\"i32\",mutable:!1},m);const q=new WebAssembly.Global({value:\"i32\",mutable:!1},1),u=new WebAssembly.Global({value:\"i32\",mutable:!0},0);a=await WebAssembly.compile(a);const t=e.getImports(a);let x=[],r=d;t.env=t.env||{};t.env.memory=n;t.env.__indirect_function_table=\nl;t.env.__stack_pointer=p;t.env.__memory_base=m;t.env.__table_base=q;t.env.csoundLoadModules=v=>{x.forEach(z=>{void 0===y?console.error(\"csound-wasm internal: timing problem detected!\"):dlinit$$module$src$dlinit(y,z,l,v)});return 0};t.env._ZTH5errno=function(){};t.env.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module({memory:n,messagePort:c,streamBuffer:[]});t.env.printDebugCallback=(v,z)=>{v=new Uint8Array(n.buffer,v,z);v=uint2String$$module$src$utils$text_encoders(v);console.log(v)};\nt[\"GOT.mem\"]=t[\"GOT.mem\"]||{};t[\"GOT.mem\"].__heap_base=f;t[\"GOT.func\"]=t[\"GOT.func\"]||{};const y=await WebAssembly.instantiate(a,t);c=Object.assign({},y.exports);a={};a.exports=Object.assign(c,{memory:n});x=await b.reduce(async(v,{headerData:z,wasmPluginBytes:B})=>{v=await v;try{const {memorySize:w,memoryAlign:C,tableSize:F}=z,E=await WebAssembly.compile(B),A=e.getImports(E),G=new WebAssembly.Global({value:\"i32\",mutable:!1},r*PAGE_SIZE$$module$src$module);l.grow(F);A.env=Object.assign({},A.env);A.env.memory=\nn;A.env.__indirect_function_table=l;A.env.__memory_base=G;A.env.__stack_pointer=p;A.env.__table_base=q;A.env.csoundLoadModules=u;delete A.env.csoundWasiJsMessageCallback;r+=Math.ceil((w+C)/PAGE_SIZE$$module$src$module);const D=await WebAssembly.instantiate(E,A);assertPluginExports$$module$src$module(D)&&(D.exports.__wasm_call_ctors(),v.push(D))}catch(w){console.error(\"Error while compiling csound-plugin\",w)}return v},[]);e.start(a);a.exports.__wasi_js_csoundSetMessageStringCallback();return[a,e]},\nmodule$src$module={};module$src$module.csoundWasiJsMessageCallback=csoundWasiJsMessageCallback$$module$src$module;module$src$module.default=$jscompDefaultExport$$module$src$module;function MessagePortState$$module$src$utils$message_port_state(){}MessagePortState$$module$src$utils$message_port_state.prototype.ready=!1;MessagePortState$$module$src$utils$message_port_state.prototype.port=void 0;MessagePortState$$module$src$utils$message_port_state.prototype.post=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.broadcastPlayState=()=>{};MessagePortState$$module$src$utils$message_port_state.prototype.workerState=void 0;\nMessagePortState$$module$src$utils$message_port_state.prototype.vanillaWorkerState=void 0;var $jscompDefaultExport$$module$src$utils$message_port_state=MessagePortState$$module$src$utils$message_port_state,module$src$utils$message_port_state={};module$src$utils$message_port_state.MessagePortState=MessagePortState$$module$src$utils$message_port_state;module$src$utils$message_port_state.default=$jscompDefaultExport$$module$src$utils$message_port_state;class ScriptProcessorNodeSingleThread$$module$src$mains$spn_main{constructor({audioContext:a,inputChannelCount:b=1,outputChannelCount:c=2}){this.publicEvents=new PublicEventAPI$$module$src$events(this);this.eventPromises=new EventPromises$$module$src$utils$event_promises;this.audioContext=a;this.onaudioprocess=this.onaudioprocess.bind(this);this.currentPlayState=void 0;this.onPlayStateChange=this.onPlayStateChange.bind(this);this.start=this.start.bind(this);this.stop=this.stop.bind(this);this.pause=\nthis.pause.bind(this);this.resume=this.resume.bind(this);this.csoundApi=this.csoundInstance=this.wasm=void 0;this.exportApi={};this.spn=a.createScriptProcessor(0,b,c);this.spn.audioContext=a;this.spn.inputChannelCount=b;this.spn.outputChannelCount=c;this.spn.onaudioprocess=this.onaudioprocess;this.node=this.spn;this.exportApi.getNode=async()=>this.spn;this.sampleRate=a.sampleRate;this.messagePort=new $jscompDefaultExport$$module$src$utils$message_port_state;this.messagePort.post=d=>messageEventHandler$$module$src$mains$messages_main(this)({data:{log:d}});\nthis.messagePort.ready=!0;this.started=this.running=!1}async terminateInstance(){this.spn&&(this.spn.disconnect(),delete this.spn);this.audioContext&&(\"closed\"!==this.audioContext.state&&await this.audioContext.close(),delete this.audioContext);this.publicEvents&&(this.publicEvents.terminateInstance(),delete this.publicEvents);Object.keys(this.exportApi).forEach(a=>delete this.exportApi[a]);Object.keys(this).forEach(a=>delete this[a])}async onPlayStateChange(a){if(this.publicEvents&&this.currentPlayState!==\na)switch(this.currentPlayState=a,a){case \"realtimePerformanceStarted\":this.publicEvents.triggerRealtimePerformanceStarted(this);break;case \"realtimePerformanceEnded\":this.publicEvents.triggerRealtimePerformanceEnded(this);break;case \"realtimePerformancePaused\":this.publicEvents.triggerRealtimePerformancePaused(this);break;case \"realtimePerformanceResumed\":this.publicEvents.triggerRealtimePerformanceResumed(this);break;case \"renderStarted\":this.publicEvents.triggerRenderStarted(this);break;case \"renderEnded\":this.publicEvents.triggerRenderEnded(this)}}async pause(){this.started&&\nthis.running&&(this.running=!1,this.onPlayStateChange(\"realtimePerformancePaused\"))}async resume(){this.started&&!this.running&&(this.running=!0,this.onPlayStateChange(\"realtimePerformanceResumed\"))}async stop(){if(this.started){this.eventPromises.createStopPromise();const a=this.csoundApi.csoundStop(this.csoundInstance);await this.eventPromises.waitForStop();this.watcherStdOut&&(this.watcherStdOut.close(),delete this.watcherStdOut);this.watcherStdErr&&(this.watcherStdErr.close(),delete this.watcherStdErr);\ndelete this.csoundInputBuffer;delete this.csoundOutputBuffer;delete this.currentPlayState;return a}}async start(){if(this.csoundApi){var a=(this.csoundApi.csoundGetOutputName(this.csoundInstance)||\"test.wav\").includes(\"dac\");if(a&&\"realtimePerformanceStarted\"!==this.currentPlayState){this.result=0;this.csoundApi.csoundSetOption(this.csoundInstance,\"--sample-rate=\"+this.sampleRate);this.nchnls_i=this.nchnls=-1;this.cnt=this.ksmps=a=this.csoundApi.csoundGetKsmps(this.csoundInstance);this.nchnls=this.csoundApi.csoundGetNchnls(this.csoundInstance);\nthis.nchnls_i=this.csoundApi.csoundGetNchnlsInput(this.csoundInstance);var b=this.csoundApi.csoundGetSpout(this.csoundInstance);this.csoundOutputBuffer=new Float64Array(this.wasm.wasi.memory.buffer,b,a*this.nchnls);b=this.csoundApi.csoundGetSpin(this.csoundInstance);this.csoundInputBuffer=new Float64Array(this.wasm.wasi.memory.buffer,b,a*this.nchnls_i);this.zerodBFS=this.csoundApi.csoundGet0dBFS(this.csoundInstance);this.publicEvents.triggerOnAudioNodeCreated(this.spn);this.eventPromises.createStartPromise();\na=this.csoundApi.csoundStart(this.csoundInstance);this.csoundApi._isRequestingRtMidiInput(this.csoundInstance)&&requestMidi$$module$src$utils$request_midi({onMidiMessage:({data:c})=>this.csoundApi.csoundPushMidiMessage(this.csoundInstance,c[0],c[1],c[2])});this.running=!0;await this.eventPromises.waitForStart();return a}if(!a&&\"renderStarted\"!==this.currentPlayState)return a=this.csoundApi.csoundStart(this.csoundInstance),this.onPlayStateChange(\"renderStarted\"),setTimeout(()=>{let c=0;for(;0===c&&\nthis.csoundApi&&this.csoundInstance;)c=this.csoundApi.csoundPerformKsmps(this.csoundInstance);this.onPlayStateChange&&this.onPlayStateChange(\"renderEnded\")},0),a}else console.error(\"starting csound failed because csound instance wasn't created\")}async initialize({wasmDataURI:a,withPlugins:b,autoConnect:c}){this.plugins||!b||isEmpty$$module$node_modules$rambda$dist$rambda_mjs(b)||(b=await fetchPlugins$$module$src$utils(b));if(!this.wasm){const [f,g]=await $jscompDefaultExport$$module$src$module({wasmDataURI:a(),\nwithPlugins:b,messagePort:this.messagePort});this.wasm=f;this.wasi=g;f.wasi=g}const d=$jscompDefaultExport$$module$src$libcsound(this.wasm);this.csoundApi=d;const e=await d.csoundCreate(0);this.csoundInstance=e;c&&this.spn.connect(this.audioContext.destination);this.resetCsound(!1);Object.keys(d).reduce((f,g)=>{if([\"mkdir\",\"readdir\",\"writeFile\"].includes(g)){f.fs=f.fs||{};var h=async(...k)=>makeSingleThreadCallback$$module$src$utils(this.wasm,d[g]).apply({},k);h.toString=d[g].toString;f.fs[g]=h}else h=\ncsoundApiRename$$module$src$utils(g),f[h]=(...k)=>makeSingleThreadCallback$$module$src$utils(e,d[g]).apply({},k),f[h].toString=d[g].toString;return f},this.exportApi);this.exportApi.pause=this.pause.bind(this);this.exportApi.resume=this.resume.bind(this);this.exportApi.start=this.start.bind(this);this.exportApi.stop=this.stop.bind(this);this.exportApi.terminateInstance=this.terminateInstance.bind(this);this.exportApi.getAudioContext=async()=>this.audioContext;this.exportApi.name=\"Csound: ScriptProcessor Node, Single-threaded\";\nthis.exportApi=this.publicEvents.decorateAPI(this.exportApi);this.exportApi.reset=()=>this.resetCsound(!0);this.exportApi.addListener(\"message\",console.log);return this.exportApi}async resetCsound(a){if(a&&\"realtimePerformanceEnded\"!==this.currentPlayState&&\"realtimePerformanceStarted\"!==this.currentPlayState)return-1;if(\"realtimePerformanceStarted\"===this.currentPlayState)this.onPlayStateChange(\"realtimePerformanceEnded\");this.started=this.running=!1;this.result=0;const b=this.csoundInstance,c=this.csoundApi;\na&&c.csoundReset(b);c.csoundSetOption(b,\"--sample-rate=\"+this.sampleRate);this.nchnls_i=this.nchnls=-1;delete this.csoundOutputBuffer;delete this.csoundInputBuffer}onaudioprocess(a){if(this.csoundApi&&![\"renderStarted\",\"renderEnded\"].includes(this.currentPlayState)){if(null===this.csoundOutputBuffer||!1===this.running){var b=a.outputBuffer,c=b.getChannelData(0);if(c){c=c.length;for(var d=0;d<c;d++)for(var e=0;e<b.numberOfChannels;e++)b.getChannelData(e)[d]=0}}this.running&&!this.started&&(this.started=\n!0,this.onPlayStateChange(\"realtimePerformanceStarted\"),this.eventPromises&&this.eventPromises.releaseStartPromise());b=a.inputBuffer;a=a.outputBuffer;c=a.getChannelData(0).length;d=this.csoundOutputBuffer;e=this.csoundInputBuffer;var f=this.ksmps,g=this.zerodBFS,h=this.nchnls,k=this.nchnls_i,m=this.cnt||0,n=this.result||0;for(let u=0;u<c;u++,m++){m===f&&0===n&&(n=this.csoundApi.csoundPerformKsmps(this.csoundInstance),m=0,0!==n&&(this.started=this.running=!1,this.onPlayStateChange(\"realtimePerformanceEnded\"),\nthis.eventPromises&&this.eventPromises.releaseStopPromise()));d&&0!==d.length||(d=this.csoundOutputBuffer=new Float64Array(this.wasm.wasi.memory.buffer,this.csoundApi.csoundGetSpout(this.csoundInstance),f*h));e&&0!==e.length||(e=this.csoundInputBuffer=new Float64Array(this.wasm.wasi.memory.buffer,this.csoundApi.csoundGetSpin(this.csoundInstance),f*k));var l=Math.min(this.nchnls_i,b.numberOfChannels);for(var p=0;p<l;p++){var q=b.getChannelData(p);e[m*k+p]=q[u]*g}if(this.nchnls===a.numberOfChannels)for(l=\n0;l<a.numberOfChannels;l++)a.getChannelData(l)[u]=0===n?d[m*h+l]/g:0;else 2===this.nchnls&&1===a.numberOfChannels?a.getChannelData(0)[u]=0===n?.5*(d[m*h]/g+d[m*h+1]/g):0:1===this.nchnls&&2===a.numberOfChannels&&(l=a.getChannelData(0),p=a.getChannelData(1),0===n?(q=d[m*h]/g,l[u]=q,p[u]=q):(l[u]=0,p[u]=0))}this.cnt=m;this.result=n}}}var $jscompDefaultExport$$module$src$mains$spn_main=ScriptProcessorNodeSingleThread$$module$src$mains$spn_main,module$src$mains$spn_main={};\nmodule$src$mains$spn_main.default=$jscompDefaultExport$$module$src$mains$spn_main;var $jscompDefaultExport$$module$dist$__compiled_worklet_singlethread_worker_inline=()=>\"data:application/javascript;base64,bGV0IHNlbGYgPSBBdWRpb1dvcmtsZXRHbG9iYWxTY29wZTsKLyoKCiBDb3B5cmlnaHQgVGhlIENsb3N1cmUgTGlicmFyeSBBdXRob3JzLgogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjAKKi8KdmFyICRqc2NvbXA9JGpzY29tcHx8e307JGpzY29tcC5zY29wZT17fTt2YXIgQ09NUElMRUQ9ITAsZ29vZz1nb29nfHx7fTtnb29nLmdsb2JhbD10aGlzfHxzZWxmO2dvb2cuZXhwb3J0UGF0aF89ZnVuY3Rpb24oYSxiLGMsZCl7YT1hLnNwbGl0KCIuIik7ZD1kfHxnb29nLmdsb2JhbDthWzBdaW4gZHx8InVuZGVmaW5lZCI9PXR5cGVvZiBkLmV4ZWNTY3JpcHR8fGQuZXhlY1NjcmlwdCgidmFyICIrYVswXSk7Zm9yKHZhciBlO2EubGVuZ3RoJiYoZT1hLnNoaWZ0KCkpOylpZihhLmxlbmd0aHx8dm9pZCAwPT09YilkPWRbZV0mJmRbZV0hPT1PYmplY3QucHJvdG90eXBlW2VdP2RbZV06ZFtlXT17fTtlbHNlIGlmKCFjJiZnb29nLmlzT2JqZWN0KGIpJiZnb29nLmlzT2JqZWN0KGRbZV0pKWZvcih2YXIgZiBpbiBiKWIuaGFzT3duUHJvcGVydHkoZikmJihkW2VdW2ZdPWJbZl0pO2Vsc2UgZFtlXT1ifTsKZ29vZy5kZWZpbmU9ZnVuY3Rpb24oYSxiKXtpZighQ09NUElMRUQpe3ZhciBjPWdvb2cuZ2xvYmFsLkNMT1NVUkVfVU5DT01QSUxFRF9ERUZJTkVTLGQ9Z29vZy5nbG9iYWwuQ0xPU1VSRV9ERUZJTkVTO2MmJnZvaWQgMD09PWMubm9kZVR5cGUmJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChjLGEpP2I9Y1thXTpkJiZ2b2lkIDA9PT1kLm5vZGVUeXBlJiZPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZCxhKSYmKGI9ZFthXSl9cmV0dXJuIGJ9O2dvb2cuRkVBVFVSRVNFVF9ZRUFSPTIwMjA7Z29vZy5ERUJVRz0hMDtnb29nLkxPQ0FMRT0iZW4iO2dvb2cuZ2V0TG9jYWxlPWZ1bmN0aW9uKCl7cmV0dXJuIGdvb2cuTE9DQUxFfTtnb29nLlRSVVNURURfU0lURT0hMDtnb29nLkRJU0FMTE9XX1RFU1RfT05MWV9DT0RFPUNPTVBJTEVEJiYhZ29vZy5ERUJVRztnb29nLkVOQUJMRV9DSFJPTUVfQVBQX1NBRkVfU0NSSVBUX0xPQURJTkc9ITE7Cmdvb2cucHJvdmlkZT1mdW5jdGlvbihhKXtpZihnb29nLmlzSW5Nb2R1bGVMb2FkZXJfKCkpdGhyb3cgRXJyb3IoImdvb2cucHJvdmlkZSBjYW5ub3QgYmUgdXNlZCB3aXRoaW4gYSBtb2R1bGUuIik7aWYoIUNPTVBJTEVEJiZnb29nLmlzUHJvdmlkZWRfKGEpKXRocm93IEVycm9yKCdOYW1lc3BhY2UgIicrYSsnIiBhbHJlYWR5IGRlY2xhcmVkLicpO2dvb2cuY29uc3RydWN0TmFtZXNwYWNlXyhhKX07Z29vZy5jb25zdHJ1Y3ROYW1lc3BhY2VfPWZ1bmN0aW9uKGEsYixjKXtpZighQ09NUElMRUQpe2RlbGV0ZSBnb29nLmltcGxpY2l0TmFtZXNwYWNlc19bYV07Zm9yKHZhciBkPWE7KGQ9ZC5zdWJzdHJpbmcoMCxkLmxhc3RJbmRleE9mKCIuIikpKSYmIWdvb2cuZ2V0T2JqZWN0QnlOYW1lKGQpOylnb29nLmltcGxpY2l0TmFtZXNwYWNlc19bZF09ITB9Z29vZy5leHBvcnRQYXRoXyhhLGIsYyl9O2dvb2cuTk9OQ0VfUEFUVEVSTl89L15bXHcrL18tXStbPV17MCwyfSQvOwpnb29nLmdldFNjcmlwdE5vbmNlXz1mdW5jdGlvbihhKXthPShhfHxnb29nLmdsb2JhbCkuZG9jdW1lbnQ7cmV0dXJuKGE9YS5xdWVyeVNlbGVjdG9yJiZhLnF1ZXJ5U2VsZWN0b3IoInNjcmlwdFtub25jZV0iKSkmJihhPWEubm9uY2V8fGEuZ2V0QXR0cmlidXRlKCJub25jZSIpKSYmZ29vZy5OT05DRV9QQVRURVJOXy50ZXN0KGEpP2E6IiJ9O2dvb2cuVkFMSURfTU9EVUxFX1JFXz0vXlthLXpBLVpfJF1bYS16QS1aMC05Ll8kXSokLzsKZ29vZy5tb2R1bGU9ZnVuY3Rpb24oYSl7aWYoInN0cmluZyIhPT10eXBlb2YgYXx8IWF8fC0xPT1hLnNlYXJjaChnb29nLlZBTElEX01PRFVMRV9SRV8pKXRocm93IEVycm9yKCJJbnZhbGlkIG1vZHVsZSBpZGVudGlmaWVyIik7aWYoIWdvb2cuaXNJbkdvb2dNb2R1bGVMb2FkZXJfKCkpdGhyb3cgRXJyb3IoIk1vZHVsZSAiK2ErIiBoYXMgYmVlbiBsb2FkZWQgaW5jb3JyZWN0bHkuIE5vdGUsIG1vZHVsZXMgY2Fubm90IGJlIGxvYWRlZCBhcyBub3JtYWwgc2NyaXB0cy4gVGhleSByZXF1aXJlIHNvbWUga2luZCBvZiBwcmUtcHJvY2Vzc2luZyBzdGVwLiBZb3UncmUgbGlrZWx5IHRyeWluZyB0byBsb2FkIGEgbW9kdWxlIHZpYSBhIHNjcmlwdCB0YWcgb3IgYXMgYSBwYXJ0IG9mIGEgY29uY2F0ZW5hdGVkIGJ1bmRsZSB3aXRob3V0IHJld3JpdGluZyB0aGUgbW9kdWxlLiBGb3IgbW9yZSBpbmZvIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9jbG9zdXJlLWxpYnJhcnkvd2lraS9nb29nLm1vZHVsZTotYW4tRVM2LW1vZHVsZS1saWtlLWFsdGVybmF0aXZlLXRvLWdvb2cucHJvdmlkZS4iKTtpZihnb29nLm1vZHVsZUxvYWRlclN0YXRlXy5tb2R1bGVOYW1lKXRocm93IEVycm9yKCJnb29nLm1vZHVsZSBtYXkgb25seSBiZSBjYWxsZWQgb25jZSBwZXIgbW9kdWxlLiIpOwpnb29nLm1vZHVsZUxvYWRlclN0YXRlXy5tb2R1bGVOYW1lPWE7aWYoIUNPTVBJTEVEKXtpZihnb29nLmlzUHJvdmlkZWRfKGEpKXRocm93IEVycm9yKCdOYW1lc3BhY2UgIicrYSsnIiBhbHJlYWR5IGRlY2xhcmVkLicpO2RlbGV0ZSBnb29nLmltcGxpY2l0TmFtZXNwYWNlc19bYV19fTtnb29nLm1vZHVsZS5nZXQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGdvb2cubW9kdWxlLmdldEludGVybmFsXyhhKX07Z29vZy5tb2R1bGUuZ2V0SW50ZXJuYWxfPWZ1bmN0aW9uKGEpe2lmKCFDT01QSUxFRCl7aWYoYSBpbiBnb29nLmxvYWRlZE1vZHVsZXNfKXJldHVybiBnb29nLmxvYWRlZE1vZHVsZXNfW2FdLmV4cG9ydHM7aWYoIWdvb2cuaW1wbGljaXROYW1lc3BhY2VzX1thXSlyZXR1cm4gYT1nb29nLmdldE9iamVjdEJ5TmFtZShhKSxudWxsIT1hP2E6bnVsbH1yZXR1cm4gbnVsbH07Z29vZy5Nb2R1bGVUeXBlPXtFUzY6ImVzNiIsR09PRzoiZ29vZyJ9O2dvb2cubW9kdWxlTG9hZGVyU3RhdGVfPW51bGw7Cmdvb2cuaXNJbk1vZHVsZUxvYWRlcl89ZnVuY3Rpb24oKXtyZXR1cm4gZ29vZy5pc0luR29vZ01vZHVsZUxvYWRlcl8oKXx8Z29vZy5pc0luRXM2TW9kdWxlTG9hZGVyXygpfTtnb29nLmlzSW5Hb29nTW9kdWxlTG9hZGVyXz1mdW5jdGlvbigpe3JldHVybiEhZ29vZy5tb2R1bGVMb2FkZXJTdGF0ZV8mJmdvb2cubW9kdWxlTG9hZGVyU3RhdGVfLnR5cGU9PWdvb2cuTW9kdWxlVHlwZS5HT09HfTtnb29nLmlzSW5FczZNb2R1bGVMb2FkZXJfPWZ1bmN0aW9uKCl7aWYoZ29vZy5tb2R1bGVMb2FkZXJTdGF0ZV8mJmdvb2cubW9kdWxlTG9hZGVyU3RhdGVfLnR5cGU9PWdvb2cuTW9kdWxlVHlwZS5FUzYpcmV0dXJuITA7dmFyIGE9Z29vZy5nbG9iYWwuJGpzY29tcDtyZXR1cm4gYT8iZnVuY3Rpb24iIT10eXBlb2YgYS5nZXRDdXJyZW50TW9kdWxlUGF0aD8hMTohIWEuZ2V0Q3VycmVudE1vZHVsZVBhdGgoKTohMX07Cmdvb2cubW9kdWxlLmRlY2xhcmVMZWdhY3lOYW1lc3BhY2U9ZnVuY3Rpb24oKXtpZighQ09NUElMRUQmJiFnb29nLmlzSW5Hb29nTW9kdWxlTG9hZGVyXygpKXRocm93IEVycm9yKCJnb29nLm1vZHVsZS5kZWNsYXJlTGVnYWN5TmFtZXNwYWNlIG11c3QgYmUgY2FsbGVkIGZyb20gd2l0aGluIGEgZ29vZy5tb2R1bGUiKTtpZighQ09NUElMRUQmJiFnb29nLm1vZHVsZUxvYWRlclN0YXRlXy5tb2R1bGVOYW1lKXRocm93IEVycm9yKCJnb29nLm1vZHVsZSBtdXN0IGJlIGNhbGxlZCBwcmlvciB0byBnb29nLm1vZHVsZS5kZWNsYXJlTGVnYWN5TmFtZXNwYWNlLiIpO2dvb2cubW9kdWxlTG9hZGVyU3RhdGVfLmRlY2xhcmVMZWdhY3lOYW1lc3BhY2U9ITB9Owpnb29nLmRlY2xhcmVNb2R1bGVJZD1mdW5jdGlvbihhKXtpZighQ09NUElMRUQpe2lmKCFnb29nLmlzSW5FczZNb2R1bGVMb2FkZXJfKCkpdGhyb3cgRXJyb3IoImdvb2cuZGVjbGFyZU1vZHVsZUlkIG1heSBvbmx5IGJlIGNhbGxlZCBmcm9tIHdpdGhpbiBhbiBFUzYgbW9kdWxlIik7aWYoZ29vZy5tb2R1bGVMb2FkZXJTdGF0ZV8mJmdvb2cubW9kdWxlTG9hZGVyU3RhdGVfLm1vZHVsZU5hbWUpdGhyb3cgRXJyb3IoImdvb2cuZGVjbGFyZU1vZHVsZUlkIG1heSBvbmx5IGJlIGNhbGxlZCBvbmNlIHBlciBtb2R1bGUuIik7aWYoYSBpbiBnb29nLmxvYWRlZE1vZHVsZXNfKXRocm93IEVycm9yKCdNb2R1bGUgd2l0aCBuYW1lc3BhY2UgIicrYSsnIiBhbHJlYWR5IGV4aXN0cy4nKTt9aWYoZ29vZy5tb2R1bGVMb2FkZXJTdGF0ZV8pZ29vZy5tb2R1bGVMb2FkZXJTdGF0ZV8ubW9kdWxlTmFtZT1hO2Vsc2V7dmFyIGI9Z29vZy5nbG9iYWwuJGpzY29tcDtpZighYnx8ImZ1bmN0aW9uIiE9dHlwZW9mIGIuZ2V0Q3VycmVudE1vZHVsZVBhdGgpdGhyb3cgRXJyb3IoJ01vZHVsZSB3aXRoIG5hbWVzcGFjZSAiJysKYSsnIiBoYXMgYmVlbiBsb2FkZWQgaW5jb3JyZWN0bHkuJyk7Yj1iLnJlcXVpcmUoYi5nZXRDdXJyZW50TW9kdWxlUGF0aCgpKTtnb29nLmxvYWRlZE1vZHVsZXNfW2FdPXtleHBvcnRzOmIsdHlwZTpnb29nLk1vZHVsZVR5cGUuRVM2LG1vZHVsZUlkOmF9fX07Z29vZy5zZXRUZXN0T25seT1mdW5jdGlvbihhKXtpZihnb29nLkRJU0FMTE9XX1RFU1RfT05MWV9DT0RFKXRocm93IGE9YXx8IiIsRXJyb3IoIkltcG9ydGluZyB0ZXN0LW9ubHkgY29kZSBpbnRvIG5vbi1kZWJ1ZyBlbnZpcm9ubWVudCIrKGE/IjogIithOiIuIikpO307Z29vZy5mb3J3YXJkRGVjbGFyZT1mdW5jdGlvbihhKXt9O0NPTVBJTEVEfHwoZ29vZy5pc1Byb3ZpZGVkXz1mdW5jdGlvbihhKXtyZXR1cm4gYSBpbiBnb29nLmxvYWRlZE1vZHVsZXNffHwhZ29vZy5pbXBsaWNpdE5hbWVzcGFjZXNfW2FdJiZudWxsIT1nb29nLmdldE9iamVjdEJ5TmFtZShhKX0sZ29vZy5pbXBsaWNpdE5hbWVzcGFjZXNfPXsiZ29vZy5tb2R1bGUiOiEwfSk7Cmdvb2cuZ2V0T2JqZWN0QnlOYW1lPWZ1bmN0aW9uKGEsYil7YT1hLnNwbGl0KCIuIik7Yj1ifHxnb29nLmdsb2JhbDtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKylpZihiPWJbYVtjXV0sbnVsbD09YilyZXR1cm4gbnVsbDtyZXR1cm4gYn07Z29vZy5hZGREZXBlbmRlbmN5PWZ1bmN0aW9uKGEsYixjLGQpeyFDT01QSUxFRCYmZ29vZy5ERVBFTkRFTkNJRVNfRU5BQkxFRCYmZ29vZy5kZWJ1Z0xvYWRlcl8uYWRkRGVwZW5kZW5jeShhLGIsYyxkKX07Z29vZy5FTkFCTEVfREVCVUdfTE9BREVSPSEwO2dvb2cubG9nVG9Db25zb2xlXz1mdW5jdGlvbihhKXtnb29nLmdsb2JhbC5jb25zb2xlJiZnb29nLmdsb2JhbC5jb25zb2xlLmVycm9yKGEpfTsKZ29vZy5yZXF1aXJlPWZ1bmN0aW9uKGEpe2lmKCFDT01QSUxFRCl7Z29vZy5FTkFCTEVfREVCVUdfTE9BREVSJiZnb29nLmRlYnVnTG9hZGVyXy5yZXF1ZXN0ZWQoYSk7aWYoZ29vZy5pc1Byb3ZpZGVkXyhhKSl7aWYoZ29vZy5pc0luTW9kdWxlTG9hZGVyXygpKXJldHVybiBnb29nLm1vZHVsZS5nZXRJbnRlcm5hbF8oYSl9ZWxzZSBpZihnb29nLkVOQUJMRV9ERUJVR19MT0FERVIpe3ZhciBiPWdvb2cubW9kdWxlTG9hZGVyU3RhdGVfO2dvb2cubW9kdWxlTG9hZGVyU3RhdGVfPW51bGw7dHJ5e2dvb2cuZGVidWdMb2FkZXJfLmxvYWRfKGEpfWZpbmFsbHl7Z29vZy5tb2R1bGVMb2FkZXJTdGF0ZV89Yn19cmV0dXJuIG51bGx9fTtnb29nLnJlcXVpcmVUeXBlPWZ1bmN0aW9uKGEpe3JldHVybnt9fTtnb29nLmJhc2VQYXRoPSIiO2dvb2cuYWJzdHJhY3RNZXRob2Q9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigidW5pbXBsZW1lbnRlZCBhYnN0cmFjdCBtZXRob2QiKTt9Owpnb29nLmFkZFNpbmdsZXRvbkdldHRlcj1mdW5jdGlvbihhKXthLmluc3RhbmNlXz12b2lkIDA7YS5nZXRJbnN0YW5jZT1mdW5jdGlvbigpe2lmKGEuaW5zdGFuY2VfKXJldHVybiBhLmluc3RhbmNlXztnb29nLkRFQlVHJiYoZ29vZy5pbnN0YW50aWF0ZWRTaW5nbGV0b25zX1tnb29nLmluc3RhbnRpYXRlZFNpbmdsZXRvbnNfLmxlbmd0aF09YSk7cmV0dXJuIGEuaW5zdGFuY2VfPW5ldyBhfX07Z29vZy5pbnN0YW50aWF0ZWRTaW5nbGV0b25zXz1bXTtnb29nLkxPQURfTU9EVUxFX1VTSU5HX0VWQUw9ITA7Z29vZy5TRUFMX01PRFVMRV9FWFBPUlRTPWdvb2cuREVCVUc7Z29vZy5sb2FkZWRNb2R1bGVzXz17fTtnb29nLkRFUEVOREVOQ0lFU19FTkFCTEVEPSFDT01QSUxFRCYmZ29vZy5FTkFCTEVfREVCVUdfTE9BREVSO2dvb2cuVFJBTlNQSUxFPSJkZXRlY3QiO2dvb2cuQVNTVU1FX0VTX01PRFVMRVNfVFJBTlNQSUxFRD0hMTtnb29nLlRSVVNURURfVFlQRVNfUE9MSUNZX05BTUU9Imdvb2ciOwpnb29nLmhhc0JhZExldFNjb3Bpbmc9bnVsbDsKZ29vZy5sb2FkTW9kdWxlPWZ1bmN0aW9uKGEpe3ZhciBiPWdvb2cubW9kdWxlTG9hZGVyU3RhdGVfO3RyeXtnb29nLm1vZHVsZUxvYWRlclN0YXRlXz17bW9kdWxlTmFtZToiIixkZWNsYXJlTGVnYWN5TmFtZXNwYWNlOiExLHR5cGU6Z29vZy5Nb2R1bGVUeXBlLkdPT0d9O3ZhciBjPXt9LGQ9YztpZigiZnVuY3Rpb24iPT09dHlwZW9mIGEpZD1hLmNhbGwodm9pZCAwLGQpO2Vsc2UgaWYoInN0cmluZyI9PT10eXBlb2YgYSlkPWdvb2cubG9hZE1vZHVsZUZyb21Tb3VyY2VfLmNhbGwodm9pZCAwLGQsYSk7ZWxzZSB0aHJvdyBFcnJvcigiSW52YWxpZCBtb2R1bGUgZGVmaW5pdGlvbiIpO3ZhciBlPWdvb2cubW9kdWxlTG9hZGVyU3RhdGVfLm1vZHVsZU5hbWU7aWYoInN0cmluZyI9PT10eXBlb2YgZSYmZSlnb29nLm1vZHVsZUxvYWRlclN0YXRlXy5kZWNsYXJlTGVnYWN5TmFtZXNwYWNlP2dvb2cuY29uc3RydWN0TmFtZXNwYWNlXyhlLGQsYyE9PWQpOmdvb2cuU0VBTF9NT0RVTEVfRVhQT1JUUyYmCk9iamVjdC5zZWFsJiYib2JqZWN0Ij09dHlwZW9mIGQmJm51bGwhPWQmJk9iamVjdC5zZWFsKGQpLGdvb2cubG9hZGVkTW9kdWxlc19bZV09e2V4cG9ydHM6ZCx0eXBlOmdvb2cuTW9kdWxlVHlwZS5HT09HLG1vZHVsZUlkOmdvb2cubW9kdWxlTG9hZGVyU3RhdGVfLm1vZHVsZU5hbWV9O2Vsc2UgdGhyb3cgRXJyb3IoJ0ludmFsaWQgbW9kdWxlIG5hbWUgIicrZSsnIicpO31maW5hbGx5e2dvb2cubW9kdWxlTG9hZGVyU3RhdGVfPWJ9fTtnb29nLmxvYWRNb2R1bGVGcm9tU291cmNlXz1mdW5jdGlvbihhLGIpe2V2YWwoZ29vZy5DTE9TVVJFX0VWQUxfUFJFRklMVEVSXy5jcmVhdGVTY3JpcHQoYikpO3JldHVybiBhfTtnb29nLm5vcm1hbGl6ZVBhdGhfPWZ1bmN0aW9uKGEpe2E9YS5zcGxpdCgiLyIpO2Zvcih2YXIgYj0wO2I8YS5sZW5ndGg7KSIuIj09YVtiXT9hLnNwbGljZShiLDEpOmImJiIuLiI9PWFbYl0mJmFbYi0xXSYmIi4uIiE9YVtiLTFdP2Euc3BsaWNlKC0tYiwyKTpiKys7cmV0dXJuIGEuam9pbigiLyIpfTsKZ29vZy5sb2FkRmlsZVN5bmNfPWZ1bmN0aW9uKGEpe2lmKGdvb2cuZ2xvYmFsLkNMT1NVUkVfTE9BRF9GSUxFX1NZTkMpcmV0dXJuIGdvb2cuZ2xvYmFsLkNMT1NVUkVfTE9BRF9GSUxFX1NZTkMoYSk7dHJ5e3ZhciBiPW5ldyBnb29nLmdsb2JhbC5YTUxIdHRwUmVxdWVzdDtiLm9wZW4oImdldCIsYSwhMSk7Yi5zZW5kKCk7cmV0dXJuIDA9PWIuc3RhdHVzfHwyMDA9PWIuc3RhdHVzP2IucmVzcG9uc2VUZXh0Om51bGx9Y2F0Y2goYyl7cmV0dXJuIG51bGx9fTtnb29nLnR5cGVPZj1mdW5jdGlvbihhKXt2YXIgYj10eXBlb2YgYTtyZXR1cm4ib2JqZWN0IiE9Yj9iOmE/QXJyYXkuaXNBcnJheShhKT8iYXJyYXkiOmI6Im51bGwifTtnb29nLmlzQXJyYXlMaWtlPWZ1bmN0aW9uKGEpe3ZhciBiPWdvb2cudHlwZU9mKGEpO3JldHVybiJhcnJheSI9PWJ8fCJvYmplY3QiPT1iJiYibnVtYmVyIj09dHlwZW9mIGEubGVuZ3RofTsKZ29vZy5pc0RhdGVMaWtlPWZ1bmN0aW9uKGEpe3JldHVybiBnb29nLmlzT2JqZWN0KGEpJiYiZnVuY3Rpb24iPT10eXBlb2YgYS5nZXRGdWxsWWVhcn07Z29vZy5pc09iamVjdD1mdW5jdGlvbihhKXt2YXIgYj10eXBlb2YgYTtyZXR1cm4ib2JqZWN0Ij09YiYmbnVsbCE9YXx8ImZ1bmN0aW9uIj09Yn07Z29vZy5nZXRVaWQ9ZnVuY3Rpb24oYSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLGdvb2cuVUlEX1BST1BFUlRZXykmJmFbZ29vZy5VSURfUFJPUEVSVFlfXXx8KGFbZ29vZy5VSURfUFJPUEVSVFlfXT0rK2dvb2cudWlkQ291bnRlcl8pfTtnb29nLmhhc1VpZD1mdW5jdGlvbihhKXtyZXR1cm4hIWFbZ29vZy5VSURfUFJPUEVSVFlfXX07Z29vZy5yZW1vdmVVaWQ9ZnVuY3Rpb24oYSl7bnVsbCE9PWEmJiJyZW1vdmVBdHRyaWJ1dGUiaW4gYSYmYS5yZW1vdmVBdHRyaWJ1dGUoZ29vZy5VSURfUFJPUEVSVFlfKTt0cnl7ZGVsZXRlIGFbZ29vZy5VSURfUFJPUEVSVFlfXX1jYXRjaChiKXt9fTsKZ29vZy5VSURfUFJPUEVSVFlfPSJjbG9zdXJlX3VpZF8iKygxRTkqTWF0aC5yYW5kb20oKT4+PjApO2dvb2cudWlkQ291bnRlcl89MDtnb29nLmNsb25lT2JqZWN0PWZ1bmN0aW9uKGEpe3ZhciBiPWdvb2cudHlwZU9mKGEpO2lmKCJvYmplY3QiPT1ifHwiYXJyYXkiPT1iKXtpZigiZnVuY3Rpb24iPT09dHlwZW9mIGEuY2xvbmUpcmV0dXJuIGEuY2xvbmUoKTtpZigidW5kZWZpbmVkIiE9PXR5cGVvZiBNYXAmJmEgaW5zdGFuY2VvZiBNYXApcmV0dXJuIG5ldyBNYXAoYSk7aWYoInVuZGVmaW5lZCIhPT10eXBlb2YgU2V0JiZhIGluc3RhbmNlb2YgU2V0KXJldHVybiBuZXcgU2V0KGEpO2I9ImFycmF5Ij09Yj9bXTp7fTtmb3IodmFyIGMgaW4gYSliW2NdPWdvb2cuY2xvbmVPYmplY3QoYVtjXSk7cmV0dXJuIGJ9cmV0dXJuIGF9O2dvb2cuYmluZE5hdGl2ZV89ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBhLmNhbGwuYXBwbHkoYS5iaW5kLGFyZ3VtZW50cyl9Owpnb29nLmJpbmRKc189ZnVuY3Rpb24oYSxiLGMpe2lmKCFhKXRocm93IEVycm9yKCk7aWYoMjxhcmd1bWVudHMubGVuZ3RoKXt2YXIgZD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMik7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtBcnJheS5wcm90b3R5cGUudW5zaGlmdC5hcHBseShlLGQpO3JldHVybiBhLmFwcGx5KGIsZSl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBhLmFwcGx5KGIsYXJndW1lbnRzKX19O2dvb2cuYmluZD1mdW5jdGlvbihhLGIsYyl7RnVuY3Rpb24ucHJvdG90eXBlLmJpbmQmJi0xIT1GdW5jdGlvbi5wcm90b3R5cGUuYmluZC50b1N0cmluZygpLmluZGV4T2YoIm5hdGl2ZSBjb2RlIik/Z29vZy5iaW5kPWdvb2cuYmluZE5hdGl2ZV86Z29vZy5iaW5kPWdvb2cuYmluZEpzXztyZXR1cm4gZ29vZy5iaW5kLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Cmdvb2cucGFydGlhbD1mdW5jdGlvbihhLGIpe3ZhciBjPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZD1jLnNsaWNlKCk7ZC5wdXNoLmFwcGx5KGQsYXJndW1lbnRzKTtyZXR1cm4gYS5hcHBseSh0aGlzLGQpfX07Z29vZy5ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKX07Z29vZy5nbG9iYWxFdmFsPWZ1bmN0aW9uKGEpeygwLGV2YWwpKGEpfTsKZ29vZy5nZXRDc3NOYW1lPWZ1bmN0aW9uKGEsYil7aWYoIi4iPT1TdHJpbmcoYSkuY2hhckF0KDApKXRocm93IEVycm9yKCdjbGFzc05hbWUgcGFzc2VkIGluIGdvb2cuZ2V0Q3NzTmFtZSBtdXN0IG5vdCBzdGFydCB3aXRoICIuIi4gWW91IHBhc3NlZDogJythKTt2YXIgYz1mdW5jdGlvbihlKXtyZXR1cm4gZ29vZy5jc3NOYW1lTWFwcGluZ19bZV18fGV9LGQ9ZnVuY3Rpb24oZSl7ZT1lLnNwbGl0KCItIik7Zm9yKHZhciBmPVtdLGc9MDtnPGUubGVuZ3RoO2crKylmLnB1c2goYyhlW2ddKSk7cmV0dXJuIGYuam9pbigiLSIpfTtkPWdvb2cuY3NzTmFtZU1hcHBpbmdfPyJCWV9XSE9MRSI9PWdvb2cuY3NzTmFtZU1hcHBpbmdTdHlsZV8/YzpkOmZ1bmN0aW9uKGUpe3JldHVybiBlfTthPWI/YSsiLSIrZChiKTpkKGEpO3JldHVybiBnb29nLmdsb2JhbC5DTE9TVVJFX0NTU19OQU1FX01BUF9GTj9nb29nLmdsb2JhbC5DTE9TVVJFX0NTU19OQU1FX01BUF9GTihhKTphfTsKZ29vZy5zZXRDc3NOYW1lTWFwcGluZz1mdW5jdGlvbihhLGIpe2dvb2cuY3NzTmFtZU1hcHBpbmdfPWE7Z29vZy5jc3NOYW1lTWFwcGluZ1N0eWxlXz1ifTshQ09NUElMRUQmJmdvb2cuZ2xvYmFsLkNMT1NVUkVfQ1NTX05BTUVfTUFQUElORyYmKGdvb2cuY3NzTmFtZU1hcHBpbmdfPWdvb2cuZ2xvYmFsLkNMT1NVUkVfQ1NTX05BTUVfTUFQUElORyk7Z29vZy5HZXRNc2dPcHRpb25zPWZ1bmN0aW9uKCl7fTsKZ29vZy5nZXRNc2c9ZnVuY3Rpb24oYSxiLGMpe2MmJmMuaHRtbCYmKGE9YS5yZXBsYWNlKC88L2csIiZsdDsiKSk7YyYmYy51bmVzY2FwZUh0bWxFbnRpdGllcyYmKGE9YS5yZXBsYWNlKC8mbHQ7L2csIjwiKS5yZXBsYWNlKC8mZ3Q7L2csIj4iKS5yZXBsYWNlKC8mYXBvczsvZywiJyIpLnJlcGxhY2UoLyZxdW90Oy9nLCciJykucmVwbGFjZSgvJmFtcDsvZywiJiIpKTtiJiYoYT1hLnJlcGxhY2UoL1x7XCQoW159XSspfS9nLGZ1bmN0aW9uKGQsZSl7cmV0dXJuIG51bGwhPWImJmUgaW4gYj9iW2VdOmR9KSk7cmV0dXJuIGF9O2dvb2cuZ2V0TXNnV2l0aEZhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGF9O2dvb2cuZXhwb3J0U3ltYm9sPWZ1bmN0aW9uKGEsYixjKXtnb29nLmV4cG9ydFBhdGhfKGEsYiwhMCxjKX07Z29vZy5leHBvcnRQcm9wZXJ0eT1mdW5jdGlvbihhLGIsYyl7YVtiXT1jfTsKZ29vZy5pbmhlcml0cz1mdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGMoKXt9Yy5wcm90b3R5cGU9Yi5wcm90b3R5cGU7YS5zdXBlckNsYXNzXz1iLnByb3RvdHlwZTthLnByb3RvdHlwZT1uZXcgYzthLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1hO2EuYmFzZT1mdW5jdGlvbihkLGUsZil7Zm9yKHZhciBnPUFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMiksaD0yO2g8YXJndW1lbnRzLmxlbmd0aDtoKyspZ1toLTJdPWFyZ3VtZW50c1toXTtyZXR1cm4gYi5wcm90b3R5cGVbZV0uYXBwbHkoZCxnKX19O2dvb2cuc2NvcGU9ZnVuY3Rpb24oYSl7aWYoZ29vZy5pc0luTW9kdWxlTG9hZGVyXygpKXRocm93IEVycm9yKCJnb29nLnNjb3BlIGlzIG5vdCBzdXBwb3J0ZWQgd2l0aGluIGEgbW9kdWxlLiIpO2EuY2FsbChnb29nLmdsb2JhbCl9O0NPTVBJTEVEfHwoZ29vZy5nbG9iYWwuQ09NUElMRUQ9Q09NUElMRUQpOwpnb29nLmRlZmluZUNsYXNzPWZ1bmN0aW9uKGEsYil7dmFyIGM9Yi5jb25zdHJ1Y3RvcixkPWIuc3RhdGljcztjJiZjIT1PYmplY3QucHJvdG90eXBlLmNvbnN0cnVjdG9yfHwoYz1mdW5jdGlvbigpe3Rocm93IEVycm9yKCJjYW5ub3QgaW5zdGFudGlhdGUgYW4gaW50ZXJmYWNlIChubyBjb25zdHJ1Y3RvciBkZWZpbmVkKS4iKTt9KTtjPWdvb2cuZGVmaW5lQ2xhc3MuY3JlYXRlU2VhbGluZ0NvbnN0cnVjdG9yXyhjLGEpO2EmJmdvb2cuaW5oZXJpdHMoYyxhKTtkZWxldGUgYi5jb25zdHJ1Y3RvcjtkZWxldGUgYi5zdGF0aWNzO2dvb2cuZGVmaW5lQ2xhc3MuYXBwbHlQcm9wZXJ0aWVzXyhjLnByb3RvdHlwZSxiKTtudWxsIT1kJiYoZCBpbnN0YW5jZW9mIEZ1bmN0aW9uP2QoYyk6Z29vZy5kZWZpbmVDbGFzcy5hcHBseVByb3BlcnRpZXNfKGMsZCkpO3JldHVybiBjfTtnb29nLmRlZmluZUNsYXNzLlNFQUxfQ0xBU1NfSU5TVEFOQ0VTPWdvb2cuREVCVUc7Cmdvb2cuZGVmaW5lQ2xhc3MuY3JlYXRlU2VhbGluZ0NvbnN0cnVjdG9yXz1mdW5jdGlvbihhLGIpe3JldHVybiBnb29nLmRlZmluZUNsYXNzLlNFQUxfQ0xBU1NfSU5TVEFOQ0VTP2Z1bmN0aW9uKCl7dmFyIGM9YS5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXM7Y1tnb29nLlVJRF9QUk9QRVJUWV9dPWNbZ29vZy5VSURfUFJPUEVSVFlfXTtyZXR1cm4gY306YX07Z29vZy5kZWZpbmVDbGFzcy5PQkpFQ1RfUFJPVE9UWVBFX0ZJRUxEU189ImNvbnN0cnVjdG9yIGhhc093blByb3BlcnR5IGlzUHJvdG90eXBlT2YgcHJvcGVydHlJc0VudW1lcmFibGUgdG9Mb2NhbGVTdHJpbmcgdG9TdHJpbmcgdmFsdWVPZiIuc3BsaXQoIiAiKTsKZ29vZy5kZWZpbmVDbGFzcy5hcHBseVByb3BlcnRpZXNfPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjIGluIGIpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsYykmJihhW2NdPWJbY10pO2Zvcih2YXIgZD0wO2Q8Z29vZy5kZWZpbmVDbGFzcy5PQkpFQ1RfUFJPVE9UWVBFX0ZJRUxEU18ubGVuZ3RoO2QrKyljPWdvb2cuZGVmaW5lQ2xhc3MuT0JKRUNUX1BST1RPVFlQRV9GSUVMRFNfW2RdLE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLGMpJiYoYVtjXT1iW2NdKX07Z29vZy5pZGVudGl0eV89ZnVuY3Rpb24oYSl7cmV0dXJuIGF9Owpnb29nLmNyZWF0ZVRydXN0ZWRUeXBlc1BvbGljeT1mdW5jdGlvbihhKXt2YXIgYj1udWxsLGM9Z29vZy5nbG9iYWwudHJ1c3RlZFR5cGVzO2lmKCFjfHwhYy5jcmVhdGVQb2xpY3kpcmV0dXJuIGI7dHJ5e2I9Yy5jcmVhdGVQb2xpY3koYSx7Y3JlYXRlSFRNTDpnb29nLmlkZW50aXR5XyxjcmVhdGVTY3JpcHQ6Z29vZy5pZGVudGl0eV8sY3JlYXRlU2NyaXB0VVJMOmdvb2cuaWRlbnRpdHlffSl9Y2F0Y2goZCl7Z29vZy5sb2dUb0NvbnNvbGVfKGQubWVzc2FnZSl9cmV0dXJuIGJ9OwohQ09NUElMRUQmJmdvb2cuREVQRU5ERU5DSUVTX0VOQUJMRUQmJihnb29nLmlzRWRnZV89ZnVuY3Rpb24oKXtyZXR1cm4hIShnb29nLmdsb2JhbC5uYXZpZ2F0b3ImJmdvb2cuZ2xvYmFsLm5hdmlnYXRvci51c2VyQWdlbnQ/Z29vZy5nbG9iYWwubmF2aWdhdG9yLnVzZXJBZ2VudDoiIikubWF0Y2goL0VkZ2VcLyhcZCspKFwuXGQpKi9pKX0sZ29vZy5pbkh0bWxEb2N1bWVudF89ZnVuY3Rpb24oKXt2YXIgYT1nb29nLmdsb2JhbC5kb2N1bWVudDtyZXR1cm4gbnVsbCE9YSYmIndyaXRlImluIGF9LGdvb2cuaXNEb2N1bWVudExvYWRpbmdfPWZ1bmN0aW9uKCl7dmFyIGE9Z29vZy5nbG9iYWwuZG9jdW1lbnQ7cmV0dXJuIGEuYXR0YWNoRXZlbnQ/ImNvbXBsZXRlIiE9YS5yZWFkeVN0YXRlOiJsb2FkaW5nIj09YS5yZWFkeVN0YXRlfSxnb29nLmZpbmRCYXNlUGF0aF89ZnVuY3Rpb24oKXtpZih2b2lkIDAhPWdvb2cuZ2xvYmFsLkNMT1NVUkVfQkFTRV9QQVRIJiYic3RyaW5nIj09PXR5cGVvZiBnb29nLmdsb2JhbC5DTE9TVVJFX0JBU0VfUEFUSClnb29nLmJhc2VQYXRoPQpnb29nLmdsb2JhbC5DTE9TVVJFX0JBU0VfUEFUSDtlbHNlIGlmKGdvb2cuaW5IdG1sRG9jdW1lbnRfKCkpe3ZhciBhPWdvb2cuZ2xvYmFsLmRvY3VtZW50LGI9YS5jdXJyZW50U2NyaXB0O2E9Yj9bYl06YS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiU0NSSVBUIik7Zm9yKGI9YS5sZW5ndGgtMTswPD1iOy0tYil7dmFyIGM9YVtiXS5zcmMsZD1jLmxhc3RJbmRleE9mKCI/Iik7ZD0tMT09ZD9jLmxlbmd0aDpkO2lmKCJiYXNlLmpzIj09Yy5zbGljZShkLTcsZCkpe2dvb2cuYmFzZVBhdGg9Yy5zbGljZSgwLGQtNyk7YnJlYWt9fX19LGdvb2cuZmluZEJhc2VQYXRoXygpLGdvb2cucHJvdGVjdFNjcmlwdFRhZ189ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVwbGFjZSgvPFwvKFNDUklQVCkvaWcsIlxceDNjLyQxIil9LGdvb2cuRGVidWdMb2FkZXJfPWZ1bmN0aW9uKCl7dGhpcy5kZXBlbmRlbmNpZXNfPXt9O3RoaXMuaWRUb1BhdGhfPXt9O3RoaXMud3JpdHRlbl89e307dGhpcy5sb2FkaW5nRGVwc189CltdO3RoaXMuZGVwc1RvTG9hZF89W107dGhpcy5wYXVzZWRfPSExO3RoaXMuZmFjdG9yeV89bmV3IGdvb2cuRGVwZW5kZW5jeUZhY3Rvcnk7dGhpcy5kZWZlcnJlZENhbGxiYWNrc189e307dGhpcy5kZWZlcnJlZFF1ZXVlXz1bXX0sZ29vZy5EZWJ1Z0xvYWRlcl8ucHJvdG90eXBlLmJvb3RzdHJhcD1mdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGMoKXtkJiYoZ29vZy5nbG9iYWwuc2V0VGltZW91dChkLDApLGQ9bnVsbCl9dmFyIGQ9YjtpZihhLmxlbmd0aCl7Yj1bXTtmb3IodmFyIGU9MDtlPGEubGVuZ3RoO2UrKyl7dmFyIGY9dGhpcy5nZXRQYXRoRnJvbURlcHNfKGFbZV0pO2lmKCFmKXRocm93IEVycm9yKCJVbnJlZ29uaXplZCBuYW1lc3BhY2U6ICIrYVtlXSk7Yi5wdXNoKHRoaXMuZGVwZW5kZW5jaWVzX1tmXSl9Zj1nb29nLnJlcXVpcmU7dmFyIGc9MDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKWYoYVtlXSksYltlXS5vbkxvYWQoZnVuY3Rpb24oKXsrK2c9PWEubGVuZ3RoJiZjKCl9KX1lbHNlIGMoKX0sCmdvb2cuRGVidWdMb2FkZXJfLnByb3RvdHlwZS5sb2FkQ2xvc3VyZURlcHM9ZnVuY3Rpb24oKXt0aGlzLmRlcHNUb0xvYWRfLnB1c2godGhpcy5mYWN0b3J5Xy5jcmVhdGVEZXBlbmRlbmN5KGdvb2cubm9ybWFsaXplUGF0aF8oZ29vZy5iYXNlUGF0aCsiZGVwcy5qcyIpLCJkZXBzLmpzIixbXSxbXSx7fSkpO3RoaXMubG9hZERlcHNfKCl9LGdvb2cuRGVidWdMb2FkZXJfLnByb3RvdHlwZS5yZXF1ZXN0ZWQ9ZnVuY3Rpb24oYSxiKXsoYT10aGlzLmdldFBhdGhGcm9tRGVwc18oYSkpJiYoYnx8dGhpcy5hcmVEZXBzTG9hZGVkXyh0aGlzLmRlcGVuZGVuY2llc19bYV0ucmVxdWlyZXMpKSYmKGI9dGhpcy5kZWZlcnJlZENhbGxiYWNrc19bYV0pJiYoZGVsZXRlIHRoaXMuZGVmZXJyZWRDYWxsYmFja3NfW2FdLGIoKSl9LGdvb2cuRGVidWdMb2FkZXJfLnByb3RvdHlwZS5zZXREZXBlbmRlbmN5RmFjdG9yeT1mdW5jdGlvbihhKXt0aGlzLmZhY3RvcnlfPWF9LGdvb2cuRGVidWdMb2FkZXJfLnByb3RvdHlwZS5sb2FkXz0KZnVuY3Rpb24oYSl7aWYodGhpcy5nZXRQYXRoRnJvbURlcHNfKGEpKXt2YXIgYj10aGlzLGM9W10sZD1mdW5jdGlvbihlKXt2YXIgZj1iLmdldFBhdGhGcm9tRGVwc18oZSk7aWYoIWYpdGhyb3cgRXJyb3IoIkJhZCBkZXBlbmRlbmN5IHBhdGggb3Igc3ltYm9sOiAiK2UpO2lmKCFiLndyaXR0ZW5fW2ZdKXtiLndyaXR0ZW5fW2ZdPSEwO2U9Yi5kZXBlbmRlbmNpZXNfW2ZdO2ZvcihmPTA7ZjxlLnJlcXVpcmVzLmxlbmd0aDtmKyspZ29vZy5pc1Byb3ZpZGVkXyhlLnJlcXVpcmVzW2ZdKXx8ZChlLnJlcXVpcmVzW2ZdKTtjLnB1c2goZSl9fTtkKGEpO2E9ISF0aGlzLmRlcHNUb0xvYWRfLmxlbmd0aDt0aGlzLmRlcHNUb0xvYWRfPXRoaXMuZGVwc1RvTG9hZF8uY29uY2F0KGMpO3RoaXMucGF1c2VkX3x8YXx8dGhpcy5sb2FkRGVwc18oKX1lbHNlIGdvb2cubG9nVG9Db25zb2xlXygiZ29vZy5yZXF1aXJlIGNvdWxkIG5vdCBmaW5kOiAiK2EpfSxnb29nLkRlYnVnTG9hZGVyXy5wcm90b3R5cGUubG9hZERlcHNfPQpmdW5jdGlvbigpe2Zvcih2YXIgYT10aGlzLGI9dGhpcy5wYXVzZWRfO3RoaXMuZGVwc1RvTG9hZF8ubGVuZ3RoJiYhYjspKGZ1bmN0aW9uKCl7dmFyIGM9ITEsZD1hLmRlcHNUb0xvYWRfLnNoaWZ0KCksZT0hMTthLmxvYWRpbmdfKGQpO3ZhciBmPXtwYXVzZTpmdW5jdGlvbigpe2lmKGMpdGhyb3cgRXJyb3IoIkNhbm5vdCBjYWxsIHBhdXNlIGFmdGVyIHRoZSBjYWxsIHRvIGxvYWQuIik7Yj0hMH0scmVzdW1lOmZ1bmN0aW9uKCl7Yz9hLnJlc3VtZV8oKTpiPSExfSxsb2FkZWQ6ZnVuY3Rpb24oKXtpZihlKXRocm93IEVycm9yKCJEb3VibGUgY2FsbCB0byBsb2FkZWQuIik7ZT0hMDthLmxvYWRlZF8oZCl9LHBlbmRpbmc6ZnVuY3Rpb24oKXtmb3IodmFyIGc9W10saD0wO2g8YS5sb2FkaW5nRGVwc18ubGVuZ3RoO2grKylnLnB1c2goYS5sb2FkaW5nRGVwc19baF0pO3JldHVybiBnfSxzZXRNb2R1bGVTdGF0ZTpmdW5jdGlvbihnKXtnb29nLm1vZHVsZUxvYWRlclN0YXRlXz17dHlwZTpnLAptb2R1bGVOYW1lOiIiLGRlY2xhcmVMZWdhY3lOYW1lc3BhY2U6ITF9fSxyZWdpc3RlckVzNk1vZHVsZUV4cG9ydHM6ZnVuY3Rpb24oZyxoLGspe2smJihnb29nLmxvYWRlZE1vZHVsZXNfW2tdPXtleHBvcnRzOmgsdHlwZTpnb29nLk1vZHVsZVR5cGUuRVM2LG1vZHVsZUlkOmt8fCIifSl9LHJlZ2lzdGVyR29vZ01vZHVsZUV4cG9ydHM6ZnVuY3Rpb24oZyxoKXtnb29nLmxvYWRlZE1vZHVsZXNfW2ddPXtleHBvcnRzOmgsdHlwZTpnb29nLk1vZHVsZVR5cGUuR09PRyxtb2R1bGVJZDpnfX0sY2xlYXJNb2R1bGVTdGF0ZTpmdW5jdGlvbigpe2dvb2cubW9kdWxlTG9hZGVyU3RhdGVfPW51bGx9LGRlZmVyOmZ1bmN0aW9uKGcpe2lmKGMpdGhyb3cgRXJyb3IoIkNhbm5vdCByZWdpc3RlciB3aXRoIGRlZmVyIGFmdGVyIHRoZSBjYWxsIHRvIGxvYWQuIik7YS5kZWZlcl8oZCxnKX0sYXJlRGVwc0xvYWRlZDpmdW5jdGlvbigpe3JldHVybiBhLmFyZURlcHNMb2FkZWRfKGQucmVxdWlyZXMpfX07CnRyeXtkLmxvYWQoZil9ZmluYWxseXtjPSEwfX0pKCk7YiYmdGhpcy5wYXVzZV8oKX0sZ29vZy5EZWJ1Z0xvYWRlcl8ucHJvdG90eXBlLnBhdXNlXz1mdW5jdGlvbigpe3RoaXMucGF1c2VkXz0hMH0sZ29vZy5EZWJ1Z0xvYWRlcl8ucHJvdG90eXBlLnJlc3VtZV89ZnVuY3Rpb24oKXt0aGlzLnBhdXNlZF8mJih0aGlzLnBhdXNlZF89ITEsdGhpcy5sb2FkRGVwc18oKSl9LGdvb2cuRGVidWdMb2FkZXJfLnByb3RvdHlwZS5sb2FkaW5nXz1mdW5jdGlvbihhKXt0aGlzLmxvYWRpbmdEZXBzXy5wdXNoKGEpfSxnb29nLkRlYnVnTG9hZGVyXy5wcm90b3R5cGUubG9hZGVkXz1mdW5jdGlvbihhKXtmb3IodmFyIGI9MDtiPHRoaXMubG9hZGluZ0RlcHNfLmxlbmd0aDtiKyspaWYodGhpcy5sb2FkaW5nRGVwc19bYl09PWEpe3RoaXMubG9hZGluZ0RlcHNfLnNwbGljZShiLDEpO2JyZWFrfWZvcihiPTA7Yjx0aGlzLmRlZmVycmVkUXVldWVfLmxlbmd0aDtiKyspaWYodGhpcy5kZWZlcnJlZFF1ZXVlX1tiXT09CmEucGF0aCl7dGhpcy5kZWZlcnJlZFF1ZXVlXy5zcGxpY2UoYiwxKTticmVha31pZih0aGlzLmxvYWRpbmdEZXBzXy5sZW5ndGg9PXRoaXMuZGVmZXJyZWRRdWV1ZV8ubGVuZ3RoJiYhdGhpcy5kZXBzVG9Mb2FkXy5sZW5ndGgpZm9yKDt0aGlzLmRlZmVycmVkUXVldWVfLmxlbmd0aDspdGhpcy5yZXF1ZXN0ZWQodGhpcy5kZWZlcnJlZFF1ZXVlXy5zaGlmdCgpLCEwKTthLmxvYWRlZCgpfSxnb29nLkRlYnVnTG9hZGVyXy5wcm90b3R5cGUuYXJlRGVwc0xvYWRlZF89ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPXRoaXMuZ2V0UGF0aEZyb21EZXBzXyhhW2JdKTtpZighY3x8IShjIGluIHRoaXMuZGVmZXJyZWRDYWxsYmFja3NffHxnb29nLmlzUHJvdmlkZWRfKGFbYl0pKSlyZXR1cm4hMX1yZXR1cm4hMH0sZ29vZy5EZWJ1Z0xvYWRlcl8ucHJvdG90eXBlLmdldFBhdGhGcm9tRGVwc189ZnVuY3Rpb24oYSl7cmV0dXJuIGEgaW4gdGhpcy5pZFRvUGF0aF8/CnRoaXMuaWRUb1BhdGhfW2FdOmEgaW4gdGhpcy5kZXBlbmRlbmNpZXNfP2E6bnVsbH0sZ29vZy5EZWJ1Z0xvYWRlcl8ucHJvdG90eXBlLmRlZmVyXz1mdW5jdGlvbihhLGIpe3RoaXMuZGVmZXJyZWRDYWxsYmFja3NfW2EucGF0aF09Yjt0aGlzLmRlZmVycmVkUXVldWVfLnB1c2goYS5wYXRoKX0sZ29vZy5Mb2FkQ29udHJvbGxlcj1mdW5jdGlvbigpe30sZ29vZy5Mb2FkQ29udHJvbGxlci5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24oKXt9LGdvb2cuTG9hZENvbnRyb2xsZXIucHJvdG90eXBlLnJlc3VtZT1mdW5jdGlvbigpe30sZ29vZy5Mb2FkQ29udHJvbGxlci5wcm90b3R5cGUubG9hZGVkPWZ1bmN0aW9uKCl7fSxnb29nLkxvYWRDb250cm9sbGVyLnByb3RvdHlwZS5wZW5kaW5nPWZ1bmN0aW9uKCl7fSxnb29nLkxvYWRDb250cm9sbGVyLnByb3RvdHlwZS5yZWdpc3RlckVzNk1vZHVsZUV4cG9ydHM9ZnVuY3Rpb24oYSxiLGMpe30sZ29vZy5Mb2FkQ29udHJvbGxlci5wcm90b3R5cGUuc2V0TW9kdWxlU3RhdGU9CmZ1bmN0aW9uKGEpe30sZ29vZy5Mb2FkQ29udHJvbGxlci5wcm90b3R5cGUuY2xlYXJNb2R1bGVTdGF0ZT1mdW5jdGlvbigpe30sZ29vZy5Mb2FkQ29udHJvbGxlci5wcm90b3R5cGUuZGVmZXI9ZnVuY3Rpb24oYSl7fSxnb29nLkxvYWRDb250cm9sbGVyLnByb3RvdHlwZS5hcmVEZXBzTG9hZGVkPWZ1bmN0aW9uKCl7fSxnb29nLkRlcGVuZGVuY3k9ZnVuY3Rpb24oYSxiLGMsZCxlKXt0aGlzLnBhdGg9YTt0aGlzLnJlbGF0aXZlUGF0aD1iO3RoaXMucHJvdmlkZXM9Yzt0aGlzLnJlcXVpcmVzPWQ7dGhpcy5sb2FkRmxhZ3M9ZTt0aGlzLmxvYWRlZF89ITE7dGhpcy5sb2FkQ2FsbGJhY2tzXz1bXX0sZ29vZy5EZXBlbmRlbmN5LnByb3RvdHlwZS5nZXRQYXRoTmFtZT1mdW5jdGlvbigpe3ZhciBhPXRoaXMucGF0aCxiPWEuaW5kZXhPZigiOi8vIik7MDw9YiYmKGE9YS5zdWJzdHJpbmcoYiszKSxiPWEuaW5kZXhPZigiLyIpLDA8PWImJihhPWEuc3Vic3RyaW5nKGIrMSkpKTtyZXR1cm4gYX0sCmdvb2cuRGVwZW5kZW5jeS5wcm90b3R5cGUub25Mb2FkPWZ1bmN0aW9uKGEpe3RoaXMubG9hZGVkXz9hKCk6dGhpcy5sb2FkQ2FsbGJhY2tzXy5wdXNoKGEpfSxnb29nLkRlcGVuZGVuY3kucHJvdG90eXBlLmxvYWRlZD1mdW5jdGlvbigpe3RoaXMubG9hZGVkXz0hMDt2YXIgYT10aGlzLmxvYWRDYWxsYmFja3NfO3RoaXMubG9hZENhbGxiYWNrc189W107Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspYVtiXSgpfSxnb29nLkRlcGVuZGVuY3kuZGVmZXJfPSExLGdvb2cuRGVwZW5kZW5jeS5jYWxsYmFja01hcF89e30sZ29vZy5EZXBlbmRlbmN5LnJlZ2lzdGVyQ2FsbGJhY2tfPWZ1bmN0aW9uKGEpe3ZhciBiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzIpO2dvb2cuRGVwZW5kZW5jeS5jYWxsYmFja01hcF9bYl09YTtyZXR1cm4gYn0sZ29vZy5EZXBlbmRlbmN5LnVucmVnaXN0ZXJDYWxsYmFja189ZnVuY3Rpb24oYSl7ZGVsZXRlIGdvb2cuRGVwZW5kZW5jeS5jYWxsYmFja01hcF9bYV19LApnb29nLkRlcGVuZGVuY3kuY2FsbGJhY2tfPWZ1bmN0aW9uKGEsYil7aWYoYSBpbiBnb29nLkRlcGVuZGVuY3kuY2FsbGJhY2tNYXBfKXtmb3IodmFyIGM9Z29vZy5EZXBlbmRlbmN5LmNhbGxiYWNrTWFwX1thXSxkPVtdLGU9MTtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKWQucHVzaChhcmd1bWVudHNbZV0pO2MuYXBwbHkodm9pZCAwLGQpfWVsc2UgdGhyb3cgRXJyb3IoIkNhbGxiYWNrIGtleSAiK2ErIiBkb2VzIG5vdCBleGlzdCAod2FzIGJhc2UuanMgbG9hZGVkIG1vcmUgdGhhbiBvbmNlPykuIik7fSxnb29nLkRlcGVuZGVuY3kucHJvdG90eXBlLmxvYWQ9ZnVuY3Rpb24oYSl7aWYoZ29vZy5nbG9iYWwuQ0xPU1VSRV9JTVBPUlRfU0NSSVBUKWdvb2cuZ2xvYmFsLkNMT1NVUkVfSU1QT1JUX1NDUklQVCh0aGlzLnBhdGgpP2EubG9hZGVkKCk6YS5wYXVzZSgpO2Vsc2UgaWYoZ29vZy5pbkh0bWxEb2N1bWVudF8oKSl7dmFyIGI9Z29vZy5nbG9iYWwuZG9jdW1lbnQ7aWYoImNvbXBsZXRlIj09CmIucmVhZHlTdGF0ZSYmIWdvb2cuRU5BQkxFX0NIUk9NRV9BUFBfU0FGRV9TQ1JJUFRfTE9BRElORyl7aWYoL1xiZGVwcy5qcyQvLnRlc3QodGhpcy5wYXRoKSl7YS5sb2FkZWQoKTtyZXR1cm59dGhyb3cgRXJyb3IoJ0Nhbm5vdCB3cml0ZSAiJyt0aGlzLnBhdGgrJyIgYWZ0ZXIgZG9jdW1lbnQgbG9hZCcpO312YXIgYz1nb29nLmdldFNjcmlwdE5vbmNlXygpO2lmKCFnb29nLkVOQUJMRV9DSFJPTUVfQVBQX1NBRkVfU0NSSVBUX0xPQURJTkcmJmdvb2cuaXNEb2N1bWVudExvYWRpbmdfKCkpe3ZhciBkPWZ1bmN0aW9uKGgpe2gucmVhZHlTdGF0ZSYmImNvbXBsZXRlIiE9aC5yZWFkeVN0YXRlP2gub25sb2FkPWQ6KGdvb2cuRGVwZW5kZW5jeS51bnJlZ2lzdGVyQ2FsbGJhY2tfKGUpLGEubG9hZGVkKCkpfTt2YXIgZT1nb29nLkRlcGVuZGVuY3kucmVnaXN0ZXJDYWxsYmFja18oZCk7Yz1jPycgbm9uY2U9IicrYysnIic6IiI7dmFyIGY9JzxzY3JpcHQgc3JjPSInK3RoaXMucGF0aCsnIicrCmMrKGdvb2cuRGVwZW5kZW5jeS5kZWZlcl8/IiBkZWZlciI6IiIpKycgaWQ9InNjcmlwdC0nK2UrJyI+XHgzYy9zY3JpcHQ+JztmKz0iPHNjcmlwdCIrYysiPiI7Zj1nb29nLkRlcGVuZGVuY3kuZGVmZXJfP2YrKCJkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2NyaXB0LSIrZSsiJykub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gIGdvb2cuRGVwZW5kZW5jeS5jYWxsYmFja18oJyIrZSsiJywgdGhpcyk7XG59O1xuIik6ZisoImdvb2cuRGVwZW5kZW5jeS5jYWxsYmFja18oJyIrZSsiJywgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NjcmlwdC0iK2UrIicpKTsiKTtmKz0iXHgzYy9zY3JpcHQ+IjtiLndyaXRlKGdvb2cuVFJVU1RFRF9UWVBFU19QT0xJQ1lfP2dvb2cuVFJVU1RFRF9UWVBFU19QT0xJQ1lfLmNyZWF0ZUhUTUwoZik6Zil9ZWxzZXt2YXIgZz1iLmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO2cuZGVmZXI9Z29vZy5EZXBlbmRlbmN5LmRlZmVyXztnLmFzeW5jPSExO2MmJihnLm5vbmNlPQpjKTtnLm9ubG9hZD1mdW5jdGlvbigpe2cub25sb2FkPW51bGw7YS5sb2FkZWQoKX07Zy5zcmM9Z29vZy5UUlVTVEVEX1RZUEVTX1BPTElDWV8/Z29vZy5UUlVTVEVEX1RZUEVTX1BPTElDWV8uY3JlYXRlU2NyaXB0VVJMKHRoaXMucGF0aCk6dGhpcy5wYXRoO2IuaGVhZC5hcHBlbmRDaGlsZChnKX19ZWxzZSBnb29nLmxvZ1RvQ29uc29sZV8oIkNhbm5vdCB1c2UgZGVmYXVsdCBkZWJ1ZyBsb2FkZXIgb3V0c2lkZSBvZiBIVE1MIGRvY3VtZW50cy4iKSwiZGVwcy5qcyI9PXRoaXMucmVsYXRpdmVQYXRoPyhnb29nLmxvZ1RvQ29uc29sZV8oIkNvbnNpZGVyIHNldHRpbmcgQ0xPU1VSRV9JTVBPUlRfU0NSSVBUIGJlZm9yZSBsb2FkaW5nIGJhc2UuanMsIG9yIHNldHRpbmcgQ0xPU1VSRV9OT19ERVBTIHRvIHRydWUuIiksYS5sb2FkZWQoKSk6YS5wYXVzZSgpfSxnb29nLkVzNk1vZHVsZURlcGVuZGVuY3k9ZnVuY3Rpb24oYSxiLGMsZCxlKXtnb29nLkRlcGVuZGVuY3kuY2FsbCh0aGlzLGEsCmIsYyxkLGUpfSxnb29nLmluaGVyaXRzKGdvb2cuRXM2TW9kdWxlRGVwZW5kZW5jeSxnb29nLkRlcGVuZGVuY3kpLGdvb2cuRXM2TW9kdWxlRGVwZW5kZW5jeS5wcm90b3R5cGUubG9hZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKGwsbSl7dmFyIG49IiIscD1nb29nLmdldFNjcmlwdE5vbmNlXygpO3AmJihuPScgbm9uY2U9IicrcCsnIicpO2w9bT8nPHNjcmlwdCB0eXBlPSJtb2R1bGUiIGNyb3Nzb3JpZ2luJytuKyI+IittKyJceDNjL3NjcmlwdD4iOic8c2NyaXB0IHR5cGU9Im1vZHVsZSIgY3Jvc3NvcmlnaW4gc3JjPSInK2wrJyInK24rIj5ceDNjL3NjcmlwdD4iO2Qud3JpdGUoZ29vZy5UUlVTVEVEX1RZUEVTX1BPTElDWV8/Z29vZy5UUlVTVEVEX1RZUEVTX1BPTElDWV8uY3JlYXRlSFRNTChsKTpsKX1mdW5jdGlvbiBjKGwsbSl7dmFyIG49ZC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtuLmRlZmVyPSEwO24uYXN5bmM9ITE7bi50eXBlPSJtb2R1bGUiO24uc2V0QXR0cmlidXRlKCJjcm9zc29yaWdpbiIsCiEwKTt2YXIgcD1nb29nLmdldFNjcmlwdE5vbmNlXygpO3AmJihuLm5vbmNlPXApO20/bi50ZXh0PWdvb2cuVFJVU1RFRF9UWVBFU19QT0xJQ1lfP2dvb2cuVFJVU1RFRF9UWVBFU19QT0xJQ1lfLmNyZWF0ZVNjcmlwdChtKTptOm4uc3JjPWdvb2cuVFJVU1RFRF9UWVBFU19QT0xJQ1lfP2dvb2cuVFJVU1RFRF9UWVBFU19QT0xJQ1lfLmNyZWF0ZVNjcmlwdFVSTChsKTpsO2QuaGVhZC5hcHBlbmRDaGlsZChuKX1pZihnb29nLmdsb2JhbC5DTE9TVVJFX0lNUE9SVF9TQ1JJUFQpZ29vZy5nbG9iYWwuQ0xPU1VSRV9JTVBPUlRfU0NSSVBUKHRoaXMucGF0aCk/YS5sb2FkZWQoKTphLnBhdXNlKCk7ZWxzZSBpZihnb29nLmluSHRtbERvY3VtZW50XygpKXt2YXIgZD1nb29nLmdsb2JhbC5kb2N1bWVudCxlPXRoaXM7aWYoZ29vZy5pc0RvY3VtZW50TG9hZGluZ18oKSl7dmFyIGY9Yjtnb29nLkRlcGVuZGVuY3kuZGVmZXJfPSEwfWVsc2UgZj1jO3ZhciBnPWdvb2cuRGVwZW5kZW5jeS5yZWdpc3RlckNhbGxiYWNrXyhmdW5jdGlvbigpe2dvb2cuRGVwZW5kZW5jeS51bnJlZ2lzdGVyQ2FsbGJhY2tfKGcpOwphLnNldE1vZHVsZVN0YXRlKGdvb2cuTW9kdWxlVHlwZS5FUzYpfSk7Zih2b2lkIDAsJ2dvb2cuRGVwZW5kZW5jeS5jYWxsYmFja18oIicrZysnIiknKTtmKHRoaXMucGF0aCx2b2lkIDApO3ZhciBoPWdvb2cuRGVwZW5kZW5jeS5yZWdpc3RlckNhbGxiYWNrXyhmdW5jdGlvbihsKXtnb29nLkRlcGVuZGVuY3kudW5yZWdpc3RlckNhbGxiYWNrXyhoKTthLnJlZ2lzdGVyRXM2TW9kdWxlRXhwb3J0cyhlLnBhdGgsbCxnb29nLm1vZHVsZUxvYWRlclN0YXRlXy5tb2R1bGVOYW1lKX0pO2Yodm9pZCAwLCdpbXBvcnQgKiBhcyBtIGZyb20gIicrdGhpcy5wYXRoKyciOyBnb29nLkRlcGVuZGVuY3kuY2FsbGJhY2tfKCInK2grJyIsIG0pJyk7dmFyIGs9Z29vZy5EZXBlbmRlbmN5LnJlZ2lzdGVyQ2FsbGJhY2tfKGZ1bmN0aW9uKCl7Z29vZy5EZXBlbmRlbmN5LnVucmVnaXN0ZXJDYWxsYmFja18oayk7YS5jbGVhck1vZHVsZVN0YXRlKCk7YS5sb2FkZWQoKX0pO2Yodm9pZCAwLCdnb29nLkRlcGVuZGVuY3kuY2FsbGJhY2tfKCInKwprKyciKScpfWVsc2UgZ29vZy5sb2dUb0NvbnNvbGVfKCJDYW5ub3QgdXNlIGRlZmF1bHQgZGVidWcgbG9hZGVyIG91dHNpZGUgb2YgSFRNTCBkb2N1bWVudHMuIiksYS5wYXVzZSgpfSxnb29nLlRyYW5zZm9ybWVkRGVwZW5kZW5jeT1mdW5jdGlvbihhLGIsYyxkLGUpe2dvb2cuRGVwZW5kZW5jeS5jYWxsKHRoaXMsYSxiLGMsZCxlKTt0aGlzLmNvbnRlbnRzXz1udWxsO3RoaXMubGF6eUZldGNoXz0hZ29vZy5pbkh0bWxEb2N1bWVudF8oKXx8ISgibm9Nb2R1bGUiaW4gZ29vZy5nbG9iYWwuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0IikpfSxnb29nLmluaGVyaXRzKGdvb2cuVHJhbnNmb3JtZWREZXBlbmRlbmN5LGdvb2cuRGVwZW5kZW5jeSksZ29vZy5UcmFuc2Zvcm1lZERlcGVuZGVuY3kucHJvdG90eXBlLmxvYWQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe2UuY29udGVudHNfPWdvb2cubG9hZEZpbGVTeW5jXyhlLnBhdGgpO2UuY29udGVudHNfJiYoZS5jb250ZW50c189CmUudHJhbnNmb3JtKGUuY29udGVudHNfKSxlLmNvbnRlbnRzXyYmKGUuY29udGVudHNfKz0iXG4vLyMgc291cmNlVVJMPSIrZS5wYXRoKSl9ZnVuY3Rpb24gYygpe2UubGF6eUZldGNoXyYmYigpO2lmKGUuY29udGVudHNfKXtmJiZhLnNldE1vZHVsZVN0YXRlKGdvb2cuTW9kdWxlVHlwZS5FUzYpO3RyeXt2YXIgbD1lLmNvbnRlbnRzXztlLmNvbnRlbnRzXz1udWxsO2dvb2cuZ2xvYmFsRXZhbChnb29nLkNMT1NVUkVfRVZBTF9QUkVGSUxURVJfLmNyZWF0ZVNjcmlwdChsKSk7aWYoZil2YXIgbT1nb29nLm1vZHVsZUxvYWRlclN0YXRlXy5tb2R1bGVOYW1lfWZpbmFsbHl7ZiYmYS5jbGVhck1vZHVsZVN0YXRlKCl9ZiYmZ29vZy5nbG9iYWwuJGpzY29tcC5yZXF1aXJlLmVuc3VyZShbZS5nZXRQYXRoTmFtZSgpXSxmdW5jdGlvbigpe2EucmVnaXN0ZXJFczZNb2R1bGVFeHBvcnRzKGUucGF0aCxnb29nLmdsb2JhbC4kanNjb21wLnJlcXVpcmUoZS5nZXRQYXRoTmFtZSgpKSxtKX0pO2EubG9hZGVkKCl9fQpmdW5jdGlvbiBkKCl7dmFyIGw9Z29vZy5nbG9iYWwuZG9jdW1lbnQsbT1nb29nLkRlcGVuZGVuY3kucmVnaXN0ZXJDYWxsYmFja18oZnVuY3Rpb24oKXtnb29nLkRlcGVuZGVuY3kudW5yZWdpc3RlckNhbGxiYWNrXyhtKTtjKCl9KSxuPWdvb2cuZ2V0U2NyaXB0Tm9uY2VfKCk7bj0iPHNjcmlwdCIrKG4/JyBub25jZT0iJytuKyciJzoiIikrIj4iK2dvb2cucHJvdGVjdFNjcmlwdFRhZ18oJ2dvb2cuRGVwZW5kZW5jeS5jYWxsYmFja18oIicrbSsnIik7JykrIlx4M2Mvc2NyaXB0PiI7bC53cml0ZShnb29nLlRSVVNURURfVFlQRVNfUE9MSUNZXz9nb29nLlRSVVNURURfVFlQRVNfUE9MSUNZXy5jcmVhdGVIVE1MKG4pOm4pfXZhciBlPXRoaXM7aWYoZ29vZy5nbG9iYWwuQ0xPU1VSRV9JTVBPUlRfU0NSSVBUKWIoKSx0aGlzLmNvbnRlbnRzXyYmZ29vZy5nbG9iYWwuQ0xPU1VSRV9JTVBPUlRfU0NSSVBUKCIiLHRoaXMuY29udGVudHNfKT8odGhpcy5jb250ZW50c189bnVsbCxhLmxvYWRlZCgpKToKYS5wYXVzZSgpO2Vsc2V7dmFyIGY9dGhpcy5sb2FkRmxhZ3MubW9kdWxlPT1nb29nLk1vZHVsZVR5cGUuRVM2O3RoaXMubGF6eUZldGNoX3x8YigpO3ZhciBnPTE8YS5wZW5kaW5nKCkubGVuZ3RoO2lmKGdvb2cuRGVwZW5kZW5jeS5kZWZlcl8mJihnfHxnb29nLmlzRG9jdW1lbnRMb2FkaW5nXygpKSlhLmRlZmVyKGZ1bmN0aW9uKCl7YygpfSk7ZWxzZXt2YXIgaD1nb29nLmdsb2JhbC5kb2N1bWVudDtnPWdvb2cuaW5IdG1sRG9jdW1lbnRfKCkmJigiQWN0aXZlWE9iamVjdCJpbiBnb29nLmdsb2JhbHx8Z29vZy5pc0VkZ2VfKCkpO2lmKGYmJmdvb2cuaW5IdG1sRG9jdW1lbnRfKCkmJmdvb2cuaXNEb2N1bWVudExvYWRpbmdfKCkmJiFnKXtnb29nLkRlcGVuZGVuY3kuZGVmZXJfPSEwO2EucGF1c2UoKTt2YXIgaz1oLm9ucmVhZHlzdGF0ZWNoYW5nZTtoLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpeyJpbnRlcmFjdGl2ZSI9PWgucmVhZHlTdGF0ZSYmKGgub25yZWFkeXN0YXRlY2hhbmdlPQprLGMoKSxhLnJlc3VtZSgpKTsiZnVuY3Rpb24iPT09dHlwZW9mIGsmJmsuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9fWVsc2UgZ29vZy5pbkh0bWxEb2N1bWVudF8oKSYmZ29vZy5pc0RvY3VtZW50TG9hZGluZ18oKT9kKCk6YygpfX19LGdvb2cuVHJhbnNmb3JtZWREZXBlbmRlbmN5LnByb3RvdHlwZS50cmFuc2Zvcm09ZnVuY3Rpb24oYSl7fSxnb29nLlByZVRyYW5zcGlsZWRFczZNb2R1bGVEZXBlbmRlbmN5PWZ1bmN0aW9uKGEsYixjLGQsZSl7Z29vZy5UcmFuc2Zvcm1lZERlcGVuZGVuY3kuY2FsbCh0aGlzLGEsYixjLGQsZSl9LGdvb2cuaW5oZXJpdHMoZ29vZy5QcmVUcmFuc3BpbGVkRXM2TW9kdWxlRGVwZW5kZW5jeSxnb29nLlRyYW5zZm9ybWVkRGVwZW5kZW5jeSksZ29vZy5QcmVUcmFuc3BpbGVkRXM2TW9kdWxlRGVwZW5kZW5jeS5wcm90b3R5cGUudHJhbnNmb3JtPWZ1bmN0aW9uKGEpe3JldHVybiBhfSxnb29nLkdvb2dNb2R1bGVEZXBlbmRlbmN5PWZ1bmN0aW9uKGEsYiwKYyxkLGUpe2dvb2cuVHJhbnNmb3JtZWREZXBlbmRlbmN5LmNhbGwodGhpcyxhLGIsYyxkLGUpfSxnb29nLmluaGVyaXRzKGdvb2cuR29vZ01vZHVsZURlcGVuZGVuY3ksZ29vZy5UcmFuc2Zvcm1lZERlcGVuZGVuY3kpLGdvb2cuR29vZ01vZHVsZURlcGVuZGVuY3kucHJvdG90eXBlLnRyYW5zZm9ybT1mdW5jdGlvbihhKXtyZXR1cm4gZ29vZy5MT0FEX01PRFVMRV9VU0lOR19FVkFMJiZ2b2lkIDAhPT1nb29nLmdsb2JhbC5KU09OPyJnb29nLmxvYWRNb2R1bGUoIitnb29nLmdsb2JhbC5KU09OLnN0cmluZ2lmeShhKyJcbi8vIyBzb3VyY2VVUkw9Iit0aGlzLnBhdGgrIlxuIikrIik7IjonZ29vZy5sb2FkTW9kdWxlKGZ1bmN0aW9uKGV4cG9ydHMpIHsidXNlIHN0cmljdCI7JythKyJcbjtyZXR1cm4gZXhwb3J0c30pO1xuLy8jIHNvdXJjZVVSTD0iK3RoaXMucGF0aCsiXG4ifSxnb29nLkRlYnVnTG9hZGVyXy5wcm90b3R5cGUuYWRkRGVwZW5kZW5jeT1mdW5jdGlvbihhLGIsYyxkKXtiPQpifHxbXTthPWEucmVwbGFjZSgvXFwvZywiLyIpO3ZhciBlPWdvb2cubm9ybWFsaXplUGF0aF8oZ29vZy5iYXNlUGF0aCthKTtkJiYiYm9vbGVhbiIhPT10eXBlb2YgZHx8KGQ9ZD97bW9kdWxlOmdvb2cuTW9kdWxlVHlwZS5HT09HfTp7fSk7Yz10aGlzLmZhY3RvcnlfLmNyZWF0ZURlcGVuZGVuY3koZSxhLGIsYyxkKTt0aGlzLmRlcGVuZGVuY2llc19bZV09Yztmb3IoYz0wO2M8Yi5sZW5ndGg7YysrKXRoaXMuaWRUb1BhdGhfW2JbY11dPWU7dGhpcy5pZFRvUGF0aF9bYV09ZX0sZ29vZy5EZXBlbmRlbmN5RmFjdG9yeT1mdW5jdGlvbigpe30sZ29vZy5EZXBlbmRlbmN5RmFjdG9yeS5wcm90b3R5cGUuY3JlYXRlRGVwZW5kZW5jeT1mdW5jdGlvbihhLGIsYyxkLGUpe3JldHVybiBlLm1vZHVsZT09Z29vZy5Nb2R1bGVUeXBlLkdPT0c/bmV3IGdvb2cuR29vZ01vZHVsZURlcGVuZGVuY3koYSxiLGMsZCxlKTplLm1vZHVsZT09Z29vZy5Nb2R1bGVUeXBlLkVTNj9nb29nLkFTU1VNRV9FU19NT0RVTEVTX1RSQU5TUElMRUQ/Cm5ldyBnb29nLlByZVRyYW5zcGlsZWRFczZNb2R1bGVEZXBlbmRlbmN5KGEsYixjLGQsZSk6bmV3IGdvb2cuRXM2TW9kdWxlRGVwZW5kZW5jeShhLGIsYyxkLGUpOm5ldyBnb29nLkRlcGVuZGVuY3koYSxiLGMsZCxlKX0sZ29vZy5kZWJ1Z0xvYWRlcl89bmV3IGdvb2cuRGVidWdMb2FkZXJfLGdvb2cubG9hZENsb3N1cmVEZXBzPWZ1bmN0aW9uKCl7Z29vZy5kZWJ1Z0xvYWRlcl8ubG9hZENsb3N1cmVEZXBzKCl9LGdvb2cuc2V0RGVwZW5kZW5jeUZhY3Rvcnk9ZnVuY3Rpb24oYSl7Z29vZy5kZWJ1Z0xvYWRlcl8uc2V0RGVwZW5kZW5jeUZhY3RvcnkoYSl9LGdvb2cuVFJVU1RFRF9UWVBFU19QT0xJQ1lfPWdvb2cuVFJVU1RFRF9UWVBFU19QT0xJQ1lfTkFNRT9nb29nLmNyZWF0ZVRydXN0ZWRUeXBlc1BvbGljeShnb29nLlRSVVNURURfVFlQRVNfUE9MSUNZX05BTUUrIiNiYXNlIik6bnVsbCxnb29nLmdsb2JhbC5DTE9TVVJFX05PX0RFUFN8fGdvb2cuZGVidWdMb2FkZXJfLmxvYWRDbG9zdXJlRGVwcygpLApnb29nLmJvb3RzdHJhcD1mdW5jdGlvbihhLGIpe2dvb2cuZGVidWdMb2FkZXJfLmJvb3RzdHJhcChhLGIpfSk7aWYoIUNPTVBJTEVEKXt2YXIgaXNDaHJvbWU4Nz0hMTt0cnl7aXNDaHJvbWU4Nz1ldmFsKGdvb2cuZ2xvYmFsLnRydXN0ZWRUeXBlcy5lbXB0eVNjcmlwdCkhPT1nb29nLmdsb2JhbC50cnVzdGVkVHlwZXMuZW1wdHlTY3JpcHR9Y2F0Y2goYSl7fWdvb2cuQ0xPU1VSRV9FVkFMX1BSRUZJTFRFUl89Z29vZy5nbG9iYWwudHJ1c3RlZFR5cGVzJiZpc0Nocm9tZTg3JiZnb29nLmNyZWF0ZVRydXN0ZWRUeXBlc1BvbGljeSgiZ29vZyNiYXNlI2Rldm9ubHkjZXZhbCIpfHx7Y3JlYXRlU2NyaXB0Omdvb2cuaWRlbnRpdHlffX07Y29uc3QgcHJveHlNYXJrZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcz1TeW1ib2woIkNvbWxpbmsucHJveHkiKSxjcmVhdGVFbmRwb2ludCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzPVN5bWJvbCgiQ29tbGluay5lbmRwb2ludCIpLHJlbGVhc2VQcm94eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzPVN5bWJvbCgiQ29tbGluay5yZWxlYXNlUHJveHkiKSx0aHJvd01hcmtlciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzPVN5bWJvbCgiQ29tbGluay50aHJvd24iKSxpc09iamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzPWE9PiJvYmplY3QiPT09dHlwZW9mIGEmJm51bGwhPT1hfHwiZnVuY3Rpb24iPT09dHlwZW9mIGEscHJveHlUcmFuc2ZlckhhbmRsZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcz0Ke2NhbkhhbmRsZTphPT5pc09iamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEpJiZhW3Byb3h5TWFya2VyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanNdLHNlcmlhbGl6ZShhKXtjb25zdCB7cG9ydDE6Yixwb3J0MjpjfT1uZXcgTWVzc2FnZUNoYW5uZWw7ZXhwb3NlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMoYSxiKTtyZXR1cm5bYyxbY11dfSxkZXNlcmlhbGl6ZShhKXthLnN0YXJ0KCk7cmV0dXJuIHdyYXAkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhhKX19LHRocm93VHJhbnNmZXJIYW5kbGVyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanM9e2NhbkhhbmRsZTphPT5pc09iamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEpJiYKdGhyb3dNYXJrZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyBpbiBhLHNlcmlhbGl6ZSh7dmFsdWU6YX0pe3JldHVyblthIGluc3RhbmNlb2YgRXJyb3I/e2lzRXJyb3I6ITAsdmFsdWU6e21lc3NhZ2U6YS5tZXNzYWdlLG5hbWU6YS5uYW1lLHN0YWNrOmEuc3RhY2t9fTp7aXNFcnJvcjohMSx2YWx1ZTphfSxbXV19LGRlc2VyaWFsaXplKGEpe2lmKGEuaXNFcnJvcil0aHJvdyBPYmplY3QuYXNzaWduKEVycm9yKGEudmFsdWUubWVzc2FnZSksYS52YWx1ZSk7dGhyb3cgYS52YWx1ZTt9fSx0cmFuc2ZlckhhbmRsZXJzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanM9bmV3IE1hcChbWyJwcm94eSIscHJveHlUcmFuc2ZlckhhbmRsZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qc10sWyJ0aHJvdyIsdGhyb3dUcmFuc2ZlckhhbmRsZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qc11dKTsKZnVuY3Rpb24gZXhwb3NlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMoYSxiPXNlbGYpe2IuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsZnVuY3Rpb24gZShkKXtpZihkJiZkLmRhdGEpe3ZhciB7aWQ6Zix0eXBlOmcscGF0aDpofT1PYmplY3QuYXNzaWduKHtwYXRoOltdfSxkLmRhdGEpLGs9KGQuZGF0YS5hcmd1bWVudExpc3R8fFtdKS5tYXAoZnJvbVdpcmVWYWx1ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKTt0cnl7Y29uc3QgbT1oLnNsaWNlKDAsLTEpLnJlZHVjZSgocCxxKT0+cFtxXSxhKSxuPWgucmVkdWNlKChwLHEpPT5wW3FdLGEpO3N3aXRjaChnKXtjYXNlICJHRVQiOnZhciBsPW47YnJlYWs7Y2FzZSAiU0VUIjptW2guc2xpY2UoLTEpWzBdXT1mcm9tV2lyZVZhbHVlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMoZC5kYXRhLnZhbHVlKTsKbD0hMDticmVhaztjYXNlICJBUFBMWSI6bD1uLmFwcGx5KG0sayk7YnJlYWs7Y2FzZSAiQ09OU1RSVUNUIjpjb25zdCBwPW5ldyBuKC4uLmspO2w9cHJveHkkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhwKTticmVhaztjYXNlICJFTkRQT0lOVCI6Y29uc3Qge3BvcnQxOnEscG9ydDI6dX09bmV3IE1lc3NhZ2VDaGFubmVsO2V4cG9zZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEsdSk7bD10cmFuc2ZlciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKHEsW3FdKTticmVhaztjYXNlICJSRUxFQVNFIjpsPXZvaWQgMDticmVhaztkZWZhdWx0OnJldHVybn19Y2F0Y2gobSl7bD17dmFsdWU6bSxbdGhyb3dNYXJrZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qc106MH19UHJvbWlzZS5yZXNvbHZlKGwpLmNhdGNoKG09Pgooe3ZhbHVlOm0sW3Rocm93TWFya2VyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanNdOjB9KSkudGhlbihtPT57Y29uc3QgW24scF09dG9XaXJlVmFsdWUkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhtKTtiLnBvc3RNZXNzYWdlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxuKSx7aWQ6Zn0pLHApOyJSRUxFQVNFIj09PWcmJihiLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLGUpLGNsb3NlRW5kUG9pbnQkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhiKSl9KX19KTtiLnN0YXJ0JiZiLnN0YXJ0KCl9ZnVuY3Rpb24gaXNNZXNzYWdlUG9ydCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEpe3JldHVybiJNZXNzYWdlUG9ydCI9PT1hLmNvbnN0cnVjdG9yLm5hbWV9CmZ1bmN0aW9uIGNsb3NlRW5kUG9pbnQkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhhKXtpc01lc3NhZ2VQb3J0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMoYSkmJmEuY2xvc2UoKX1mdW5jdGlvbiB3cmFwJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMoYSxiKXtyZXR1cm4gY3JlYXRlUHJveHkkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhhLFtdLGIpfWZ1bmN0aW9uIHRocm93SWZQcm94eVJlbGVhc2VkJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMoYSl7aWYoYSl0aHJvdyBFcnJvcigiUHJveHkgaGFzIGJlZW4gcmVsZWFzZWQgYW5kIGlzIG5vdCB1c2VhYmxlIik7fQpmdW5jdGlvbiBjcmVhdGVQcm94eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEsYj1bXSxjPWZ1bmN0aW9uKCl7fSl7bGV0IGQ9ITE7Y29uc3QgZT1uZXcgUHJveHkoYyx7Z2V0KGYsZyl7dGhyb3dJZlByb3h5UmVsZWFzZWQkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhkKTtpZihnPT09cmVsZWFzZVByb3h5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMpcmV0dXJuKCk9PnJlcXVlc3RSZXNwb25zZU1lc3NhZ2UkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhhLHt0eXBlOiJSRUxFQVNFIixwYXRoOmIubWFwKGg9PmgudG9TdHJpbmcoKSl9KS50aGVuKCgpPT57Y2xvc2VFbmRQb2ludCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEpO2Q9ITB9KTtpZigidGhlbiI9PT0KZyl7aWYoMD09PWIubGVuZ3RoKXJldHVybnt0aGVuOigpPT5lfTtmPXJlcXVlc3RSZXNwb25zZU1lc3NhZ2UkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhhLHt0eXBlOiJHRVQiLHBhdGg6Yi5tYXAoaD0+aC50b1N0cmluZygpKX0pLnRoZW4oZnJvbVdpcmVWYWx1ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKTtyZXR1cm4gZi50aGVuLmJpbmQoZil9cmV0dXJuIGNyZWF0ZVByb3h5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMoYSxbLi4uYixnXSl9LHNldChmLGcsaCl7dGhyb3dJZlByb3h5UmVsZWFzZWQkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhkKTtjb25zdCBbayxsXT10b1dpcmVWYWx1ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGgpO3JldHVybiByZXF1ZXN0UmVzcG9uc2VNZXNzYWdlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMoYSwKe3R5cGU6IlNFVCIscGF0aDpbLi4uYixnXS5tYXAobT0+bS50b1N0cmluZygpKSx2YWx1ZTprfSxsKS50aGVuKGZyb21XaXJlVmFsdWUkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyl9LGFwcGx5KGYsZyxoKXt0aHJvd0lmUHJveHlSZWxlYXNlZCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGQpO2Y9YltiLmxlbmd0aC0xXTtpZihmPT09Y3JlYXRlRW5kcG9pbnQkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcylyZXR1cm4gcmVxdWVzdFJlc3BvbnNlTWVzc2FnZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEse3R5cGU6IkVORFBPSU5UIn0pLnRoZW4oZnJvbVdpcmVWYWx1ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKTtpZigiYmluZCI9PT1mKXJldHVybiBjcmVhdGVQcm94eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEsCmIuc2xpY2UoMCwtMSkpO2NvbnN0IFtrLGxdPXByb2Nlc3NBcmd1bWVudHMkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhoKTtyZXR1cm4gcmVxdWVzdFJlc3BvbnNlTWVzc2FnZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEse3R5cGU6IkFQUExZIixwYXRoOmIubWFwKG09Pm0udG9TdHJpbmcoKSksYXJndW1lbnRMaXN0Omt9LGwpLnRoZW4oZnJvbVdpcmVWYWx1ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKX0sY29uc3RydWN0KGYsZyl7dGhyb3dJZlByb3h5UmVsZWFzZWQkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhkKTtjb25zdCBbaCxrXT1wcm9jZXNzQXJndW1lbnRzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMoZyk7cmV0dXJuIHJlcXVlc3RSZXNwb25zZU1lc3NhZ2UkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhhLAp7dHlwZToiQ09OU1RSVUNUIixwYXRoOmIubWFwKGw9PmwudG9TdHJpbmcoKSksYXJndW1lbnRMaXN0Omh9LGspLnRoZW4oZnJvbVdpcmVWYWx1ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKX19KTtyZXR1cm4gZX1mdW5jdGlvbiBteUZsYXQkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhhKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShbXSxhKX0KZnVuY3Rpb24gcHJvY2Vzc0FyZ3VtZW50cyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEpe2E9YS5tYXAodG9XaXJlVmFsdWUkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyk7cmV0dXJuW2EubWFwKGI9PmJbMF0pLG15RmxhdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEubWFwKGI9PmJbMV0pKV19Y29uc3QgdHJhbnNmZXJDYWNoZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzPW5ldyBXZWFrTWFwO2Z1bmN0aW9uIHRyYW5zZmVyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMoYSxiKXt0cmFuc2ZlckNhY2hlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMuc2V0KGEsYik7cmV0dXJuIGF9CmZ1bmN0aW9uIHByb3h5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMoYSl7cmV0dXJuIE9iamVjdC5hc3NpZ24oYSx7W3Byb3h5TWFya2VyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanNdOiEwfSl9ZnVuY3Rpb24gd2luZG93RW5kcG9pbnQkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhhLGI9c2VsZixjPSIqIil7cmV0dXJue3Bvc3RNZXNzYWdlOihkLGUpPT5hLnBvc3RNZXNzYWdlKGQsYyxlKSxhZGRFdmVudExpc3RlbmVyOmIuYWRkRXZlbnRMaXN0ZW5lci5iaW5kKGIpLHJlbW92ZUV2ZW50TGlzdGVuZXI6Yi5yZW1vdmVFdmVudExpc3RlbmVyLmJpbmQoYil9fQpmdW5jdGlvbiB0b1dpcmVWYWx1ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEpe2Zvcihjb25zdCBbYixjXW9mIHRyYW5zZmVySGFuZGxlcnMkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcylpZihjLmNhbkhhbmRsZShhKSl7Y29uc3QgW2QsZV09Yy5zZXJpYWxpemUoYSk7cmV0dXJuW3t0eXBlOiJIQU5ETEVSIixuYW1lOmIsdmFsdWU6ZH0sZV19cmV0dXJuW3t0eXBlOiJSQVciLHZhbHVlOmF9LHRyYW5zZmVyQ2FjaGUkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcy5nZXQoYSl8fFtdXX0KZnVuY3Rpb24gZnJvbVdpcmVWYWx1ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKGEpe3N3aXRjaChhLnR5cGUpe2Nhc2UgIkhBTkRMRVIiOnJldHVybiB0cmFuc2ZlckhhbmRsZXJzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMuZ2V0KGEubmFtZSkuZGVzZXJpYWxpemUoYS52YWx1ZSk7Y2FzZSAiUkFXIjpyZXR1cm4gYS52YWx1ZX19CmZ1bmN0aW9uIHJlcXVlc3RSZXNwb25zZU1lc3NhZ2UkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyhhLGIsYyl7cmV0dXJuIG5ldyBQcm9taXNlKGQ9Pntjb25zdCBlPWdlbmVyYXRlVVVJRCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzKCk7YS5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixmdW5jdGlvbiBoKGcpe2cuZGF0YSYmZy5kYXRhLmlkJiZnLmRhdGEuaWQ9PT1lJiYoYS5yZW1vdmVFdmVudExpc3RlbmVyKCJtZXNzYWdlIixoKSxkKGcuZGF0YSkpfSk7YS5zdGFydCYmYS5zdGFydCgpO2EucG9zdE1lc3NhZ2UoT2JqZWN0LmFzc2lnbih7aWQ6ZX0sYiksYyl9KX0KZnVuY3Rpb24gZ2VuZXJhdGVVVUlEJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMoKXtyZXR1cm4gQXJyYXkoNCkuZmlsbCgwKS5tYXAoKCk9Pk1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSpOdW1iZXIuTUFYX1NBRkVfSU5URUdFUikudG9TdHJpbmcoMTYpKS5qb2luKCItIil9dmFyIG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcz17fTttb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMuY3JlYXRlRW5kcG9pbnQ9Y3JlYXRlRW5kcG9pbnQkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMuZXhwb3NlPWV4cG9zZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMucHJveHk9cHJveHkkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMucHJveHlNYXJrZXI9cHJveHlNYXJrZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMucmVsZWFzZVByb3h5PXJlbGVhc2VQcm94eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcy50cmFuc2Zlcj10cmFuc2ZlciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanMudHJhbnNmZXJIYW5kbGVycz10cmFuc2ZlckhhbmRsZXJzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzLndpbmRvd0VuZHBvaW50PXdpbmRvd0VuZHBvaW50JCRtb2R1bGUkbm9kZV9tb2R1bGVzJGNvbWxpbmskZGlzdCRlc20kY29tbGlua19tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzLndyYXA9d3JhcCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRjb21saW5rJGRpc3QkZXNtJGNvbWxpbmtfbWpzO2Z1bmN0aW9uIE1lc3NhZ2VQb3J0U3RhdGUkJG1vZHVsZSRzcmMkdXRpbHMkbWVzc2FnZV9wb3J0X3N0YXRlKCl7fU1lc3NhZ2VQb3J0U3RhdGUkJG1vZHVsZSRzcmMkdXRpbHMkbWVzc2FnZV9wb3J0X3N0YXRlLnByb3RvdHlwZS5yZWFkeT0hMTtNZXNzYWdlUG9ydFN0YXRlJCRtb2R1bGUkc3JjJHV0aWxzJG1lc3NhZ2VfcG9ydF9zdGF0ZS5wcm90b3R5cGUucG9ydD12b2lkIDA7TWVzc2FnZVBvcnRTdGF0ZSQkbW9kdWxlJHNyYyR1dGlscyRtZXNzYWdlX3BvcnRfc3RhdGUucHJvdG90eXBlLnBvc3Q9KCk9Pnt9O01lc3NhZ2VQb3J0U3RhdGUkJG1vZHVsZSRzcmMkdXRpbHMkbWVzc2FnZV9wb3J0X3N0YXRlLnByb3RvdHlwZS5icm9hZGNhc3RQbGF5U3RhdGU9KCk9Pnt9O01lc3NhZ2VQb3J0U3RhdGUkJG1vZHVsZSRzcmMkdXRpbHMkbWVzc2FnZV9wb3J0X3N0YXRlLnByb3RvdHlwZS53b3JrZXJTdGF0ZT12b2lkIDA7Ck1lc3NhZ2VQb3J0U3RhdGUkJG1vZHVsZSRzcmMkdXRpbHMkbWVzc2FnZV9wb3J0X3N0YXRlLnByb3RvdHlwZS52YW5pbGxhV29ya2VyU3RhdGU9dm9pZCAwO3ZhciAkanNjb21wRGVmYXVsdEV4cG9ydCQkbW9kdWxlJHNyYyR1dGlscyRtZXNzYWdlX3BvcnRfc3RhdGU9TWVzc2FnZVBvcnRTdGF0ZSQkbW9kdWxlJHNyYyR1dGlscyRtZXNzYWdlX3BvcnRfc3RhdGUsbW9kdWxlJHNyYyR1dGlscyRtZXNzYWdlX3BvcnRfc3RhdGU9e307bW9kdWxlJHNyYyR1dGlscyRtZXNzYWdlX3BvcnRfc3RhdGUuTWVzc2FnZVBvcnRTdGF0ZT1NZXNzYWdlUG9ydFN0YXRlJCRtb2R1bGUkc3JjJHV0aWxzJG1lc3NhZ2VfcG9ydF9zdGF0ZTttb2R1bGUkc3JjJHV0aWxzJG1lc3NhZ2VfcG9ydF9zdGF0ZS5kZWZhdWx0PSRqc2NvbXBEZWZhdWx0RXhwb3J0JCRtb2R1bGUkc3JjJHV0aWxzJG1lc3NhZ2VfcG9ydF9zdGF0ZTtjb25zdCBjc291bmRDcmVhdGUkJG1vZHVsZSRzcmMkbW9kdWxlcyRpbnN0YW50aWF0aW9uPWE9PigpPT5hLmV4cG9ydHMuY3NvdW5kQ3JlYXRlV2FzaSgpO2Nzb3VuZENyZWF0ZSQkbW9kdWxlJHNyYyRtb2R1bGVzJGluc3RhbnRpYXRpb24udG9TdHJpbmc9KCk9PiJjcmVhdGUgPSBhc3luYyAoKSA9PiB1bmRlZmluZWQ7Ijtjb25zdCBjc291bmREZXN0cm95JCRtb2R1bGUkc3JjJG1vZHVsZXMkaW5zdGFudGlhdGlvbj1hPT5iPT5hLmV4cG9ydHMuY3NvdW5kRGVzdHJveShiKTtjc291bmREZXN0cm95JCRtb2R1bGUkc3JjJG1vZHVsZXMkaW5zdGFudGlhdGlvbi50b1N0cmluZz0oKT0+ImRlc3Ryb3kgPSBhc3luYyAoKSA9PiB1bmRlZmluZWQ7Ijtjb25zdCBjc291bmRHZXRBUElWZXJzaW9uJCRtb2R1bGUkc3JjJG1vZHVsZXMkaW5zdGFudGlhdGlvbj1hPT4oKT0+YS5leHBvcnRzLmNzb3VuZEdldEFQSVZlcnNpb24oKTsKY3NvdW5kR2V0QVBJVmVyc2lvbiQkbW9kdWxlJHNyYyRtb2R1bGVzJGluc3RhbnRpYXRpb24udG9TdHJpbmc9KCk9PiJnZXRBUElWZXJzaW9uID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7Y29uc3QgY3NvdW5kR2V0VmVyc2lvbiQkbW9kdWxlJHNyYyRtb2R1bGVzJGluc3RhbnRpYXRpb249YT0+KCk9PmEuZXhwb3J0cy5jc291bmRHZXRWZXJzaW9uKCk7Y3NvdW5kR2V0VmVyc2lvbiQkbW9kdWxlJHNyYyRtb2R1bGVzJGluc3RhbnRpYXRpb24udG9TdHJpbmc9KCk9PiJnZXRWZXJzaW9uID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7Y29uc3QgY3NvdW5kSW5pdGlhbGl6ZSQkbW9kdWxlJHNyYyRtb2R1bGVzJGluc3RhbnRpYXRpb249YT0+KGIsYyk9PmEuZXhwb3J0cy5jc291bmRJbml0aWFsaXplKGMpO2Nzb3VuZEluaXRpYWxpemUkJG1vZHVsZSRzcmMkbW9kdWxlcyRpbnN0YW50aWF0aW9uLnRvU3RyaW5nPSgpPT4iaW5pdGlhbGl6ZSA9IGFzeW5jICgpID0+IE51bWJlcjsiOwp2YXIgbW9kdWxlJHNyYyRtb2R1bGVzJGluc3RhbnRpYXRpb249e307bW9kdWxlJHNyYyRtb2R1bGVzJGluc3RhbnRpYXRpb24uY3NvdW5kQ3JlYXRlPWNzb3VuZENyZWF0ZSQkbW9kdWxlJHNyYyRtb2R1bGVzJGluc3RhbnRpYXRpb247bW9kdWxlJHNyYyRtb2R1bGVzJGluc3RhbnRpYXRpb24uY3NvdW5kRGVzdHJveT1jc291bmREZXN0cm95JCRtb2R1bGUkc3JjJG1vZHVsZXMkaW5zdGFudGlhdGlvbjttb2R1bGUkc3JjJG1vZHVsZXMkaW5zdGFudGlhdGlvbi5jc291bmRHZXRBUElWZXJzaW9uPWNzb3VuZEdldEFQSVZlcnNpb24kJG1vZHVsZSRzcmMkbW9kdWxlcyRpbnN0YW50aWF0aW9uO21vZHVsZSRzcmMkbW9kdWxlcyRpbnN0YW50aWF0aW9uLmNzb3VuZEdldFZlcnNpb249Y3NvdW5kR2V0VmVyc2lvbiQkbW9kdWxlJHNyYyRtb2R1bGVzJGluc3RhbnRpYXRpb247bW9kdWxlJHNyYyRtb2R1bGVzJGluc3RhbnRpYXRpb24uY3NvdW5kSW5pdGlhbGl6ZT1jc291bmRJbml0aWFsaXplJCRtb2R1bGUkc3JjJG1vZHVsZXMkaW5zdGFudGlhdGlvbjtjb25zdCBXSVRIX1RFWFRfRU5DT0RFUl9QT0xZRklMTCQkbW9kdWxlJHNyYyR1dGlscyR0ZXh0X2VuY29kZXJzPTE7ZnVuY3Rpb24gVGV4dEVuY29kZXJQb2x5JCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnMoKXt0aGlzLmVuY29kaW5nPSJ1dGY4IjtyZXR1cm4gdGhpc31UZXh0RW5jb2RlclBvbHkkJG1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVycy5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKGEpe2lmKCJzdHJpbmciIT09dHlwZW9mIGEpdGhyb3cgbmV3IFR5cGVFcnJvcigicGFzc2VkIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBzdHJpbmcgIithKyIgIit0eXBlb2YgYSk7YT11bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoYSkpO2NvbnN0IGI9bmV3IFVpbnQ4QXJyYXkoYS5sZW5ndGgpO1suLi5hXS5mb3JFYWNoKGZ1bmN0aW9uKGMsZCl7YltkXT1jLmNvZGVQb2ludEF0KDApfSk7cmV0dXJuIGJ9OwpmdW5jdGlvbiBUZXh0RGVjb2RlclBvbHkkJG1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVycygpe3RoaXMuZW5jb2Rpbmc9InV0ZjgiO3RoaXMuaWdub3JlQk9NPSExO3RoaXMudHJpbU51bGw9YT0+e2NvbnN0IGI9YS5pbmRleE9mKCJceDAwIik7cmV0dXJuLTE8Yj9hLnNsaWNlKDAsTWF0aC5tYXgoMCxiKSk6YX07dGhpcy5kZWNvZGU9ZnVuY3Rpb24oYSxiKXtpZih2b2lkIDA9PT1hKXJldHVybiIiO2lmKCJib29sZWFuIiE9PXR5cGVvZih2b2lkIDAhPT1iJiYic3RyZWFtImluIGI/Yi5zdHJlYW06ITEpKXRocm93IG5ldyBUeXBlRXJyb3IoInN0cmVhbSBvcHRpb24gbXVzdCBiZSBib29sZWFuIik7aWYoQXJyYXlCdWZmZXIuaXNWaWV3KGEpKXthPW5ldyBVaW50OEFycmF5KGEuYnVmZmVyLGEuYnl0ZU9mZnNldCxhLmJ5dGVMZW5ndGgpO2NvbnN0IGM9QXJyYXkuZnJvbSh7bGVuZ3RoOmEubGVuZ3RofSk7YS5mb3JFYWNoKGZ1bmN0aW9uKGQsZSl7Y1tlXT1TdHJpbmcuZnJvbUNvZGVQb2ludChkKX0pOwpyZXR1cm4gdGhpcy50cmltTnVsbChjLmpvaW4oIiIpKX10aHJvdyBuZXcgVHlwZUVycm9yKCJwYXNzZWQgYXJndW1lbnQgbXVzdCBiZSBhbiBhcnJheSBidWZmZXIgdmlldyIpO319CmNvbnN0IGRlY29kZXIkJG1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVycz1XSVRIX1RFWFRfRU5DT0RFUl9QT0xZRklMTCQkbW9kdWxlJHNyYyR1dGlscyR0ZXh0X2VuY29kZXJzP25ldyBUZXh0RGVjb2RlclBvbHkkJG1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVyczpuZXcgVGV4dERlY29kZXIoInV0ZjgiKSxlbmNvZGVyJCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnM9V0lUSF9URVhUX0VOQ09ERVJfUE9MWUZJTEwkJG1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVycz9uZXcgVGV4dEVuY29kZXJQb2x5JCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnM6bmV3IFRleHRFbmNvZGVyKCJ1dGY4IiksdWludDJTdHJpbmckJG1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVycz1hPT5kZWNvZGVyJCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnMuZGVjb2RlKGEpO3ZhciBtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnM9e307Cm1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVycy5kZWNvZGVyPWRlY29kZXIkJG1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVyczttb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnMuZW5jb2Rlcj1lbmNvZGVyJCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnM7bW9kdWxlJHNyYyR1dGlscyR0ZXh0X2VuY29kZXJzLnVpbnQyU3RyaW5nPXVpbnQyU3RyaW5nJCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnM7Y29uc3QgdHJpbU51bGwkJG1vZHVsZSRzcmMkdXRpbHMkdHJpbV9udWxsPWE9Pntjb25zdCBiPWEuaW5kZXhPZigiXHgwMCIpO3JldHVybi0xPGI/YS5zdWJzdHIoMCxiKTphfTt2YXIgbW9kdWxlJHNyYyR1dGlscyR0cmltX251bGw9e307bW9kdWxlJHNyYyR1dGlscyR0cmltX251bGwudHJpbU51bGw9dHJpbU51bGwkJG1vZHVsZSRzcmMkdXRpbHMkdHJpbV9udWxsO2NvbnN0IGZyZWVTdHJpbmdQdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzPShhLGIpPT57YS5leHBvcnRzLmZyZWVTdHJpbmdNZW0oYil9LHB0cjJzdHJpbmckJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzPShhLGIpPT57KHtidWZmZXI6YX09YS53YXNpLm1lbW9yeSk7Yj1uZXcgVWludDhBcnJheShhLGIpO2I9dWludDJTdHJpbmckJG1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVycyhiKTtyZXR1cm4gdHJpbU51bGwkJG1vZHVsZSRzcmMkdXRpbHMkdHJpbV9udWxsKGIpfSxzdHJpbmcycHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycz0oYSxiKT0+e2lmKCJzdHJpbmciIT09dHlwZW9mIGIpY29uc29sZS5lcnJvcigiRXhwZWN0ZWQgc3RyaW5nIGJ1dCBnb3QiLHR5cGVvZiBiKTtlbHNle2I9ZW5jb2RlciQkbW9kdWxlJHNyYyR1dGlscyR0ZXh0X2VuY29kZXJzLmVuY29kZShiKTt2YXIgYz1hLmV4cG9ydHMuYWxsb2NTdHJpbmdNZW0oYi5sZW5ndGgpOwooe2J1ZmZlcjphfT1hLndhc2kubWVtb3J5KTsobmV3IFVpbnQ4QXJyYXkoYSxjLGIubGVuZ3RoKzEpKS5zZXQoYik7cmV0dXJuIGN9fTt2YXIgbW9kdWxlJHNyYyR1dGlscyRzdHJpbmdfcG9pbnRlcnM9e307bW9kdWxlJHNyYyR1dGlscyRzdHJpbmdfcG9pbnRlcnMuZnJlZVN0cmluZ1B0cj1mcmVlU3RyaW5nUHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVyczttb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycy5wdHIyc3RyaW5nPXB0cjJzdHJpbmckJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzO21vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzLnN0cmluZzJwdHI9c3RyaW5nMnB0ciQkbW9kdWxlJHNyYyR1dGlscyRzdHJpbmdfcG9pbnRlcnM7Y29uc3QgY3NvdW5kUGFyc2VPcmMkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZT1hPT4oYixjKT0+YS5leHBvcnRzLmNzb3VuZFBhcnNlT3JjKGIsYyk7Y3NvdW5kUGFyc2VPcmMkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZS50b1N0cmluZz0oKT0+InBhcnNlT3JjID0gYXN5bmMgKG9yY2hlc3RyYSkgPT4gT2JqZWN0OyI7Y29uc3QgY3NvdW5kQ29tcGlsZVRyZWUkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZT1hPT4oYixjKT0+YS5leHBvcnRzLmNzb3VuZENvbXBpbGVUcmVlKGIsYyk7Y3NvdW5kQ29tcGlsZVRyZWUkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZS50b1N0cmluZz0oKT0+ImNvbXBpbGVUcmVlID0gYXN5bmMgKHRyZWUpID0+IE51bWJlcjsiOwpjb25zdCBjc291bmRDb21waWxlT3JjJCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2U9YT0+KGIsYyk9PntjPXN0cmluZzJwdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYyk7Yj1hLmV4cG9ydHMuY3NvdW5kQ29tcGlsZU9yYyhiLGMpO2ZyZWVTdHJpbmdQdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYyk7cmV0dXJuIGJ9O2Nzb3VuZENvbXBpbGVPcmMkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZS50b1N0cmluZz0oKT0+ImNvbXBpbGVPcmMgPSBhc3luYyAob3JjaGVzdHJhKSA9PiBOdW1iZXI7IjsKY29uc3QgY3NvdW5kRXZhbENvZGUkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZT1hPT4oYixjKT0+e2M9c3RyaW5nMnB0ciQkbW9kdWxlJHNyYyR1dGlscyRzdHJpbmdfcG9pbnRlcnMoYSxjKTtiPWEuZXhwb3J0cy5jc291bmRFdmFsQ29kZShiLGMpO2ZyZWVTdHJpbmdQdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYyk7cmV0dXJuIGJ9O2Nzb3VuZEV2YWxDb2RlJCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2UudG9TdHJpbmc9KCk9PiJjc291bmRFdmFsQ29kZSA9IGFzeW5jIChvcmNoZXN0cmEpID0+IE51bWJlcjsiO2NvbnN0IGNzb3VuZFN0YXJ0JCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2U9YT0+Yj0+YS5leHBvcnRzLmNzb3VuZFN0YXJ0V2FzaShiKTtjc291bmRTdGFydCQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLnRvU3RyaW5nPSgpPT4ic3RhcnQgPSBhc3luYyAoKSA9PiBOdW1iZXI7IjsKY29uc3QgY3NvdW5kQ29tcGlsZUNzZCQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlPWE9PihiLGMpPT57Yz1zdHJpbmcycHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycyhhLGMpO2xldCBkO3RyeXtkPWEuZXhwb3J0cy5jc291bmRDb21waWxlQ3NkKGIsYyl9Y2F0Y2goZSl7Y29uc29sZS5lcnJvcihlKX1mcmVlU3RyaW5nUHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycyhhLGMpO3JldHVybiBkfTtjc291bmRDb21waWxlQ3NkJCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2UudG9TdHJpbmc9KCk9PiJjb21waWxlQ3NkID0gYXN5bmMgKHBhdGgpID0+IE51bWJlcjsiOwpjb25zdCBjc291bmRDb21waWxlQ3NkVGV4dCQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlPWE9PihiLGMpPT57Yz1zdHJpbmcycHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycyhhLGMpO2I9YS5leHBvcnRzLmNzb3VuZENvbXBpbGVDc2RUZXh0KGIsYyk7ZnJlZVN0cmluZ1B0ciQkbW9kdWxlJHNyYyR1dGlscyRzdHJpbmdfcG9pbnRlcnMoYSxjKTtyZXR1cm4gYn07Y3NvdW5kQ29tcGlsZUNzZFRleHQkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZS50b1N0cmluZz0oKT0+ImNvbXBpbGVDc2RUZXh0ID0gYXN5bmMgKGNzb3VuZERvY3VtZW50KSA9PiBOdW1iZXI7Ijtjb25zdCBjc291bmRQZXJmb3JtJCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2U9YT0+Yj0+YS5leHBvcnRzLmNzb3VuZFBlcmZvcm0oYik7Y3NvdW5kUGVyZm9ybSQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLnRvU3RyaW5nPSgpPT4icGVyZm9ybSA9IGFzeW5jICgpID0+IE51bWJlcjsiOwpjb25zdCBjc291bmRQZXJmb3JtS3NtcHMkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZT1hPT5iPT5hLmV4cG9ydHMuY3NvdW5kUGVyZm9ybUtzbXBzV2FzaShiKTtjc291bmRQZXJmb3JtS3NtcHMkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZS50b1N0cmluZz0oKT0+InBlcmZvcm1Lc21wcyA9IGFzeW5jIChjc291bmQpID0+IE51bWJlcjsiO2NvbnN0IGNzb3VuZFBlcmZvcm1CdWZmZXIkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZT1hPT5iPT5hLmV4cG9ydHMuY3NvdW5kUGVyZm9ybUJ1ZmZlcihiKTtjc291bmRQZXJmb3JtQnVmZmVyJCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2UudG9TdHJpbmc9KCk9PiJwZXJmb3JtQnVmZmVyID0gYXN5bmMgKGNzb3VuZCkgPT4gTnVtYmVyOyI7Y29uc3QgY3NvdW5kU3RvcCQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlPWE9PmI9PmEuZXhwb3J0cy5jc291bmRTdG9wKGIpOwpjc291bmRTdG9wJCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2UudG9TdHJpbmc9KCk9PiJzdG9wID0gYXN5bmMgKCkgPT4gdW5kZWZpbmVkOyI7Y29uc3QgY3NvdW5kQ2xlYW51cCQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlPWE9PmI9PmEuZXhwb3J0cy5jc291bmRDbGVhbnVwKGIpO2Nzb3VuZENsZWFudXAkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZS50b1N0cmluZz0oKT0+ImNsZWFudXAgPSBhc3luYyAoKSA9PiBOdW1iZXI7Ijtjb25zdCBjc291bmRSZXNldCQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlPWE9PmI9PmEuZXhwb3J0cy5jc291bmRSZXNldFdhc2koYik7Y3NvdW5kUmVzZXQkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZS50b1N0cmluZz0oKT0+InJlc2V0ID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7dmFyIG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZT17fTsKbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLmNzb3VuZENsZWFudXA9Y3NvdW5kQ2xlYW51cCQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlO21vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZS5jc291bmRDb21waWxlQ3NkPWNzb3VuZENvbXBpbGVDc2QkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZTttb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2UuY3NvdW5kQ29tcGlsZUNzZFRleHQ9Y3NvdW5kQ29tcGlsZUNzZFRleHQkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZTttb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2UuY3NvdW5kQ29tcGlsZU9yYz1jc291bmRDb21waWxlT3JjJCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2U7bW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLmNzb3VuZENvbXBpbGVUcmVlPWNzb3VuZENvbXBpbGVUcmVlJCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2U7Cm1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZS5jc291bmRFdmFsQ29kZT1jc291bmRFdmFsQ29kZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlO21vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZS5jc291bmRQYXJzZU9yYz1jc291bmRQYXJzZU9yYyQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlO21vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZS5jc291bmRQZXJmb3JtPWNzb3VuZFBlcmZvcm0kJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZTttb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2UuY3NvdW5kUGVyZm9ybUJ1ZmZlcj1jc291bmRQZXJmb3JtQnVmZmVyJCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2U7bW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLmNzb3VuZFBlcmZvcm1Lc21wcz1jc291bmRQZXJmb3JtS3NtcHMkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZTsKbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLmNzb3VuZFJlc2V0PWNzb3VuZFJlc2V0JCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2U7bW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLmNzb3VuZFN0YXJ0PWNzb3VuZFN0YXJ0JCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2U7bW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLmNzb3VuZFN0b3A9Y3NvdW5kU3RvcCQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlO2NvbnN0IHNpemVPZlByaW1pdGl2ZSQkbW9kdWxlJHNyYyR1dGlscyRuYXRpdmVfc2l6ZXM9e2ludDo0LE1ZRkxUOjQsY2hhcjoxfSxzaXplb2ZTdHJ1Y3QkJG1vZHVsZSRzcmMkdXRpbHMkbmF0aXZlX3NpemVzPWE9PmEucmVkdWNlKChiLFssYywuLi5kXSk9PmIrKCJjaGFyIj09PWM/c2l6ZU9mUHJpbWl0aXZlJCRtb2R1bGUkc3JjJHV0aWxzJG5hdGl2ZV9zaXplc1tjXSpkWzBdOnNpemVPZlByaW1pdGl2ZSQkbW9kdWxlJHNyYyR1dGlscyRuYXRpdmVfc2l6ZXNbY10pLDApO3ZhciBtb2R1bGUkc3JjJHV0aWxzJG5hdGl2ZV9zaXplcz17fTttb2R1bGUkc3JjJHV0aWxzJG5hdGl2ZV9zaXplcy5zaXplT2ZQcmltaXRpdmU9c2l6ZU9mUHJpbWl0aXZlJCRtb2R1bGUkc3JjJHV0aWxzJG5hdGl2ZV9zaXplczttb2R1bGUkc3JjJHV0aWxzJG5hdGl2ZV9zaXplcy5zaXplb2ZTdHJ1Y3Q9c2l6ZW9mU3RydWN0JCRtb2R1bGUkc3JjJHV0aWxzJG5hdGl2ZV9zaXplcztjb25zdCBzdHJ1Y3RCdWZmZXJUb09iamVjdCQkbW9kdWxlJHNyYyR1dGlscyRzdHJ1Y3R1cmVfYnVmZmVyX3RvX29iamVjdD0oYSxiKT0+e1thXT1hLnJlZHVjZSgoW2MsZF0sW2UsZiwuLi5nXSk9PntnPSJjaGFyIj09PWY/c2l6ZU9mUHJpbWl0aXZlJCRtb2R1bGUkc3JjJHV0aWxzJG5hdGl2ZV9zaXplc1tmXSpnWzBdOnNpemVPZlByaW1pdGl2ZSQkbW9kdWxlJHNyYyR1dGlscyRuYXRpdmVfc2l6ZXNbZl07Zj0iY2hhciI9PT1mP3RyaW1OdWxsJCRtb2R1bGUkc3JjJHV0aWxzJHRyaW1fbnVsbCh1aW50MlN0cmluZyQkbW9kdWxlJHNyYyR1dGlscyR0ZXh0X2VuY29kZXJzKGIuc3ViYXJyYXkoZCxnKSkpfHwiIjpiW2RdO2NbZV09ZjtyZXR1cm5bYyxkK2ddfSxbe30sMF0pO3JldHVybiBhfTt2YXIgbW9kdWxlJHNyYyR1dGlscyRzdHJ1Y3R1cmVfYnVmZmVyX3RvX29iamVjdD17fTsKbW9kdWxlJHNyYyR1dGlscyRzdHJ1Y3R1cmVfYnVmZmVyX3RvX29iamVjdC5zdHJ1Y3RCdWZmZXJUb09iamVjdD1zdHJ1Y3RCdWZmZXJUb09iamVjdCQkbW9kdWxlJHNyYyR1dGlscyRzdHJ1Y3R1cmVfYnVmZmVyX3RvX29iamVjdDtjb25zdCBDU09VTkRfUEFSQU1TJCRtb2R1bGUkc3JjJHN0cnVjdHVyZXM9W1siZGVidWdfbW9kZSIsImludCJdLFsiYnVmZmVyX2ZyYW1lcyIsImludCJdLFsiaGFyZHdhcmVfYnVmZmVyX2ZyYW1lcyIsImludCJdLFsiZGlzcGxheXMiLCJpbnQiXSxbImFzY2lpX2dyYXBocyIsImludCJdLFsicG9zdHNjcmlwdF9ncmFwaHMiLCJpbnQiXSxbIm1lc3NhZ2VfbGV2ZWwiLCJpbnQiXSxbInRlbXBvIiwiaW50Il0sWyJyaW5nX2JlbGwiLCJpbnQiXSxbInVzZV9jc2NvcmUiLCJpbnQiXSxbInRlcm1pbmF0ZV9vbl9taWRpIiwiaW50Il0sWyJoZWFydGJlYXQiLCJpbnQiXSxbImRlZmVyX2dlbjAxX2xvYWQiLCJpbnQiXSxbIm1pZGlfa2V5IiwiaW50Il0sWyJtaWRpX2tleV9jcHMiLCJpbnQiXSxbIm1pZGlfa2V5X29jdCIsImludCJdLFsibWlkaV9rZXlfcGNoIiwiaW50Il0sWyJtaWRpX3ZlbG9jaXR5IiwiaW50Il0sWyJtaWRpX3ZlbG9jaXR5X2FtcCIsImludCJdLFsibm9fZGVmYXVsdF9wYXRocyIsCiJpbnQiXSxbIm51bWJlcl9vZl90aHJlYWRzIiwiaW50Il0sWyJzeW50YXhfY2hlY2tfb25seSIsImludCJdLFsiY3NkX2xpbmVfY291bnRzIiwiaW50Il0sWyJjb21wdXRlX3dlaWdodHMiLCJpbnQiXSxbInJlYWx0aW1lX21vZGUiLCJpbnQiXSxbInNhbXBsZV9hY2N1cmF0ZSIsImludCJdLFsic2FtcGxlX3JhdGVfb3ZlcnJpZGUiLCJNWUZMVCJdLFsiY29udHJvbF9yYXRlX292ZXJyaWRlIiwiTVlGTFQiXSxbIm5jaG5sc19vdmVycmlkZSIsImludCJdLFsibmNobmxzX2lfb3ZlcnJpZGUiLCJpbnQiXSxbImUwZGJmc19vdmVycmlkZSIsIk1ZRkxUIl0sWyJkYWVtb24iLCJpbnQiXSxbImtzbXBzX292ZXJyaWRlIiwiaW50Il0sWyJGRlRfbGlicmFyeSIsImludCJdXSxDU19NSURJREVWSUNFJCRtb2R1bGUkc3JjJHN0cnVjdHVyZXM9W1siZGV2aWNlX25hbWUiLCJjaGFyIiw2NF0sWyJpbnRlcmZhY2VfbmFtZSIsImNoYXIiLDY0XSxbImRldmljZV9pZCIsImNoYXIiLDY0XSxbIm1pZGlfbW9kdWxlIiwKImNoYXIiLDY0XSxbImlzT3V0cHV0IiwiaW50Il1dO3ZhciBtb2R1bGUkc3JjJHN0cnVjdHVyZXM9e307Y29uc3QgY3NvdW5kR2V0U3IkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzPWE9PmI9PmEuZXhwb3J0cy5jc291bmRHZXRTcihiKTtjc291bmRHZXRTciQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMudG9TdHJpbmc9KCk9PiJnZXRTciA9IGFzeW5jICgpID0+IE51bWJlcjsiO2NvbnN0IGNzb3VuZEdldEtyJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcz1hPT5iPT5hLmV4cG9ydHMuY3NvdW5kR2V0S3IoYik7Y3NvdW5kR2V0S3IkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLnRvU3RyaW5nPSgpPT4iZ2V0S3IgPSBhc3luYyAoKSA9PiBOdW1iZXI7Ijtjb25zdCBjc291bmRHZXRLc21wcyQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXM9YT0+Yj0+YS5leHBvcnRzLmNzb3VuZEdldEtzbXBzKGIpO2Nzb3VuZEdldEtzbXBzJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcy50b1N0cmluZz0oKT0+ImdldEtzbXBzID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7CmNvbnN0IGNzb3VuZEdldE5jaG5scyQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXM9YT0+Yj0+YS5leHBvcnRzLmNzb3VuZEdldE5jaG5scyhiKTtjc291bmRHZXROY2hubHMkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLnRvU3RyaW5nPSgpPT4iZ2V0TmNobmxzID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7Y29uc3QgY3NvdW5kR2V0TmNobmxzSW5wdXQkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzPWE9PmI9PmEuZXhwb3J0cy5jc291bmRHZXROY2hubHNJbnB1dChiKTtjc291bmRHZXROY2hubHNJbnB1dCQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMudG9TdHJpbmc9KCk9PiJnZXROY2hubHNJbnB1dCA9IGFzeW5jICgpID0+IE51bWJlcjsiO2NvbnN0IGNzb3VuZEdldDBkQkZTJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcz1hPT5iPT5hLmV4cG9ydHMuY3NvdW5kR2V0MGRCRlMoYik7CmNzb3VuZEdldDBkQkZTJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcy50b1N0cmluZz0oKT0+ImdldDBkQkZTID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7Y29uc3QgY3NvdW5kR2V0QTQkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzPWE9PmI9PmEuZXhwb3J0cy5jc291bmRHZXRBNChiKTtjc291bmRHZXRBNCQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMudG9TdHJpbmc9KCk9PiJnZXRBNCA9IGFzeW5jICgpID0+IE51bWJlcjsiO2NvbnN0IGNzb3VuZEdldEN1cnJlbnRUaW1lU2FtcGxlcyQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXM9YT0+Yj0+YS5leHBvcnRzLmNzb3VuZEdldEN1cnJlbnRUaW1lU2FtcGxlcyhiKTtjc291bmRHZXRDdXJyZW50VGltZVNhbXBsZXMkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLnRvU3RyaW5nPSgpPT4iZ2V0Q3VycmVudFRpbWVTYW1wbGVzID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7CmNvbnN0IGNzb3VuZEdldFNpemVPZk1ZRkxUJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcz1hPT5iPT5hLmV4cG9ydHMuY3NvdW5kR2V0U2l6ZU9mTVlGTFQoYik7Y3NvdW5kR2V0U2l6ZU9mTVlGTFQkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLnRvU3RyaW5nPSgpPT4iZ2V0U2l6ZU9mTVlGTFQgPSBhc3luYyAoKSA9PiBOdW1iZXI7Ijtjb25zdCBjc291bmRTZXRPcHRpb24kJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzPWE9PihiLGMpPT57Yz1zdHJpbmcycHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycyhhLGMpO2I9YS5leHBvcnRzLmNzb3VuZFNldE9wdGlvbihiLGMpO2ZyZWVTdHJpbmdQdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYyk7cmV0dXJuIGJ9O2Nzb3VuZFNldE9wdGlvbiQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMudG9TdHJpbmc9KCk9PiJzZXRPcHRpb24gPSBhc3luYyAob3B0aW9uKSA9PiBOdW1iZXI7IjsKY29uc3QgY3NvdW5kU2V0UGFyYW1zJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcz1hPT4oYixjKT0+e2EuZXhwb3J0cy5jc291bmRTZXRQYXJhbXMoYixjKX07Y3NvdW5kU2V0UGFyYW1zJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcy50b1N0cmluZz0oKT0+InNldFBhcmFtcyA9IGFzeW5jIChjc291bmRQYXJhbXMpID0+IHVuZGVmaW5lZDsiOwpjb25zdCBjc291bmRHZXRQYXJhbXMkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzPWE9PmI9Pnt2YXIge2J1ZmZlcjpjfT1hLndhc2kubWVtb3J5O2NvbnN0IGQ9c2l6ZW9mU3RydWN0JCRtb2R1bGUkc3JjJHV0aWxzJG5hdGl2ZV9zaXplcyhDU09VTkRfUEFSQU1TJCRtb2R1bGUkc3JjJHN0cnVjdHVyZXMpLGU9YS5leHBvcnRzLmFsbG9jQ3NvdW5kUGFyYW1zU3RydWN0KCk7Yz1uZXcgVWludDhBcnJheShjLGUsZCk7YS5leHBvcnRzLmNzb3VuZEdldFBhcmFtcyhiLGUpO2I9c3RydWN0QnVmZmVyVG9PYmplY3QkJG1vZHVsZSRzcmMkdXRpbHMkc3RydWN0dXJlX2J1ZmZlcl90b19vYmplY3QoQ1NPVU5EX1BBUkFNUyQkbW9kdWxlJHNyYyRzdHJ1Y3R1cmVzLGMpO2EuZXhwb3J0cy5mcmVlQ3NvdW5kUGFyYW1zKGUpO3JldHVybiBifTtjc291bmRHZXRQYXJhbXMkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLnRvU3RyaW5nPSgpPT4iZ2V0UGFyYW1zID0gYXN5bmMgKCkgPT4gQ1NPVU5EX1BBUkFNUzsiOwpjb25zdCBjc291bmRHZXREZWJ1ZyQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXM9YT0+Yj0+YS5leHBvcnRzLmNzb3VuZEdldERlYnVnKGIpO2Nzb3VuZEdldERlYnVnJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcy50b1N0cmluZz0oKT0+ImdldERlYnVnID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7Y29uc3QgY3NvdW5kU2V0RGVidWckJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzPWE9PihiLGMpPT57YS5leHBvcnRzLmNzb3VuZFNldERlYnVnKGIsYyl9O2Nzb3VuZFNldERlYnVnJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcy50b1N0cmluZz0oKT0+InNldERlYnVnID0gYXN5bmMgKG51bWJlcikgPT4gdW5kZWZpbmVkOyI7dmFyIG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzPXt9O21vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLmNzb3VuZEdldDBkQkZTPWNzb3VuZEdldDBkQkZTJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlczsKbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMuY3NvdW5kR2V0QTQ9Y3NvdW5kR2V0QTQkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzO21vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLmNzb3VuZEdldEN1cnJlbnRUaW1lU2FtcGxlcz1jc291bmRHZXRDdXJyZW50VGltZVNhbXBsZXMkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzO21vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLmNzb3VuZEdldERlYnVnPWNzb3VuZEdldERlYnVnJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlczttb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcy5jc291bmRHZXRLcj1jc291bmRHZXRLciQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXM7bW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMuY3NvdW5kR2V0S3NtcHM9Y3NvdW5kR2V0S3NtcHMkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzOwptb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcy5jc291bmRHZXROY2hubHM9Y3NvdW5kR2V0TmNobmxzJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlczttb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcy5jc291bmRHZXROY2hubHNJbnB1dD1jc291bmRHZXROY2hubHNJbnB1dCQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXM7bW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMuY3NvdW5kR2V0UGFyYW1zPWNzb3VuZEdldFBhcmFtcyQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXM7bW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMuY3NvdW5kR2V0U2l6ZU9mTVlGTFQ9Y3NvdW5kR2V0U2l6ZU9mTVlGTFQkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzO21vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLmNzb3VuZEdldFNyPWNzb3VuZEdldFNyJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlczsKbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMuY3NvdW5kU2V0RGVidWc9Y3NvdW5kU2V0RGVidWckJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzO21vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLmNzb3VuZFNldE9wdGlvbj1jc291bmRTZXRPcHRpb24kJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzO21vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLmNzb3VuZFNldFBhcmFtcz1jc291bmRTZXRQYXJhbXMkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzO2NvbnN0IGNzb3VuZEdldElucHV0QnVmZmVyU2l6ZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0YXVkaW89YT0+Yj0+YS5leHBvcnRzLmNzb3VuZEdldElucHV0QnVmZmVyU2l6ZShiKTtjc291bmRHZXRJbnB1dEJ1ZmZlclNpemUkJG1vZHVsZSRzcmMkbW9kdWxlcyRydGF1ZGlvLnRvU3RyaW5nPSgpPT4iZ2V0SW5wdXRCdWZmZXJTaXplID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7Y29uc3QgY3NvdW5kR2V0T3V0cHV0QnVmZmVyU2l6ZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0YXVkaW89YT0+Yj0+YS5leHBvcnRzLmNzb3VuZEdldE91dHB1dEJ1ZmZlclNpemUoYik7Y3NvdW5kR2V0T3V0cHV0QnVmZmVyU2l6ZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0YXVkaW8udG9TdHJpbmc9KCk9PiJnZXRPdXRwdXRCdWZmZXJTaXplID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7Y29uc3QgY3NvdW5kR2V0SW5wdXRCdWZmZXIkJG1vZHVsZSRzcmMkbW9kdWxlcyRydGF1ZGlvPWE9PmI9PmEuZXhwb3J0cy5jc291bmRHZXRJbnB1dEJ1ZmZlcihiKTsKY3NvdW5kR2V0SW5wdXRCdWZmZXIkJG1vZHVsZSRzcmMkbW9kdWxlcyRydGF1ZGlvLnRvU3RyaW5nPSgpPT4iZ2V0SW5wdXRCdWZmZXIgPSBhc3luYyAoKSA9PiBOdW1iZXI7Ijtjb25zdCBjc291bmRHZXRPdXRwdXRCdWZmZXIkJG1vZHVsZSRzcmMkbW9kdWxlcyRydGF1ZGlvPWE9PmI9PmEuZXhwb3J0cy5jc291bmRHZXRPdXRwdXRCdWZmZXIoYik7Y3NvdW5kR2V0T3V0cHV0QnVmZmVyJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpby50b1N0cmluZz0oKT0+ImdldE91dHB1dEJ1ZmZlciA9IGFzeW5jICgpID0+IE51bWJlcjsiO2NvbnN0IGNzb3VuZEdldFNwaW4kJG1vZHVsZSRzcmMkbW9kdWxlcyRydGF1ZGlvPWE9PmI9PmEuZXhwb3J0cy5jc291bmRHZXRTcGluKGIpO2Nzb3VuZEdldFNwaW4kJG1vZHVsZSRzcmMkbW9kdWxlcyRydGF1ZGlvLnRvU3RyaW5nPSgpPT4iZ2V0U3BpbiA9IGFzeW5jIChjc291bmQpID0+IE51bWJlcjsiOwpjb25zdCBjc291bmRHZXRTcG91dCQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0YXVkaW89YT0+Yj0+YS5leHBvcnRzLmNzb3VuZEdldFNwb3V0KGIpO2Nzb3VuZEdldFNwb3V0JCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpby50b1N0cmluZz0oKT0+ImdldFNwb3V0ID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7dmFyIG1vZHVsZSRzcmMkbW9kdWxlcyRydGF1ZGlvPXt9O21vZHVsZSRzcmMkbW9kdWxlcyRydGF1ZGlvLmNzb3VuZEdldElucHV0QnVmZmVyPWNzb3VuZEdldElucHV0QnVmZmVyJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpbzttb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpby5jc291bmRHZXRJbnB1dEJ1ZmZlclNpemU9Y3NvdW5kR2V0SW5wdXRCdWZmZXJTaXplJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpbzttb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpby5jc291bmRHZXRPdXRwdXRCdWZmZXI9Y3NvdW5kR2V0T3V0cHV0QnVmZmVyJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpbzsKbW9kdWxlJHNyYyRtb2R1bGVzJHJ0YXVkaW8uY3NvdW5kR2V0T3V0cHV0QnVmZmVyU2l6ZT1jc291bmRHZXRPdXRwdXRCdWZmZXJTaXplJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpbzttb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpby5jc291bmRHZXRTcGluPWNzb3VuZEdldFNwaW4kJG1vZHVsZSRzcmMkbW9kdWxlcyRydGF1ZGlvO21vZHVsZSRzcmMkbW9kdWxlcyRydGF1ZGlvLmNzb3VuZEdldFNwb3V0PWNzb3VuZEdldFNwb3V0JCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpbztmdW5jdGlvbiBhZGQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5hZGQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOk51bWJlcihhKStOdW1iZXIoYil9Y29uc3QgY2xvbmVMaXN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM9YT0+QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7ZnVuY3Rpb24gY3VycnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGI9W10pe3JldHVybiguLi5jKT0+e2M9Wy4uLmIsLi4uY107cmV0dXJuIGMubGVuZ3RoPj1hLmxlbmd0aD9hKC4uLmMpOmN1cnJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKX19CmZ1bmN0aW9uIGFkanVzdEZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiLGMpe2NvbnN0IGQ9MD5hP2MubGVuZ3RoK2E6YTtpZihhPj1jLmxlbmd0aHx8MD5kKXJldHVybiBjO2E9Y2xvbmVMaXN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYyk7YVtkXT1iKGFbZF0pO3JldHVybiBhfWNvbnN0IGFkanVzdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzPWN1cnJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYWRqdXN0Rm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyk7CmZ1bmN0aW9uIGFsbCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGM9PmFsbCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk7Zm9yKGxldCBjPTA7YzxiLmxlbmd0aDtjKyspaWYoIWEoYltjXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gYWxsUGFzcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe3JldHVybiguLi5iKT0+e2xldCBjPTA7Zm9yKDtjPGEubGVuZ3RoOyl7aWYoIWFbY10oLi4uYikpcmV0dXJuITE7YysrfXJldHVybiEwfX1mdW5jdGlvbiBhbHdheXMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4gYj0+YX0KZnVuY3Rpb24gYW5kJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+YW5kJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTphJiZifWZ1bmN0aW9uIGFueSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGQ9PmFueSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZCk7bGV0IGM9MDtmb3IoO2M8Yi5sZW5ndGg7KXtpZihhKGJbY10sYykpcmV0dXJuITA7YysrfXJldHVybiExfQpmdW5jdGlvbiBhbnlQYXNzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuKC4uLmIpPT57bGV0IGM9MDtmb3IoO2M8YS5sZW5ndGg7KXtpZihhW2NdKC4uLmIpKXJldHVybiEwO2MrK31yZXR1cm4hMX19ZnVuY3Rpb24gYXBwZW5kJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZD0+YXBwZW5kJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxkKTtpZigic3RyaW5nIj09PXR5cGVvZiBiKXJldHVybiBiLnNwbGl0KCIiKS5jb25jYXQoYSk7Y29uc3QgYz1jbG9uZUxpc3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiKTtjLnB1c2goYSk7cmV0dXJuIGN9CmZ1bmN0aW9uIGFwcGx5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+YXBwbHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOmEuYXBwbHkodGhpcyxiKX1jb25zdCB7aXNBcnJheTppc0FycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanN9PUFycmF5OwpmdW5jdGlvbiBfX2ZpbmRIaWdoZXN0QXJpdHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGI9MCl7Zm9yKGNvbnN0IGMgaW4gYSkhMSE9PWEuaGFzT3duUHJvcGVydHkoYykmJiJjb25zdHJ1Y3RvciIhPT1jJiYoIm9iamVjdCI9PT10eXBlb2YgYVtjXSYmKGI9TWF0aC5tYXgoYixfX2ZpbmRIaWdoZXN0QXJpdHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhW2NdKSkpLCJmdW5jdGlvbiI9PT10eXBlb2YgYVtjXSYmKGI9TWF0aC5tYXgoYixhW2NdLmxlbmd0aCkpKTtyZXR1cm4gYn0KZnVuY3Rpb24gX19maWx0ZXJVbmRlZmluZWQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcygpe2NvbnN0IGE9W107bGV0IGI9MDtjb25zdCBjPWFyZ3VtZW50cy5sZW5ndGg7Zm9yKDtiPGMmJiJ1bmRlZmluZWQiIT09dHlwZW9mIGFyZ3VtZW50c1tiXTspYVtiXT1hcmd1bWVudHNbYl0sYisrO3JldHVybiBhfQpmdW5jdGlvbiBfX2FwcGx5U3BlY1dpdGhBcml0eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXt2YXIgZD1iLWMubGVuZ3RoO2lmKDE9PT1kKXJldHVybiBmPT5fX2FwcGx5U3BlY1dpdGhBcml0eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixfX2ZpbHRlclVuZGVmaW5lZCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKC4uLmMsZikpO2lmKDI9PT1kKXJldHVybihmLGcpPT5fX2FwcGx5U3BlY1dpdGhBcml0eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixfX2ZpbHRlclVuZGVmaW5lZCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKC4uLmMsZixnKSk7aWYoMz09PWQpcmV0dXJuKGYsZyxoKT0+X19hcHBseVNwZWNXaXRoQXJpdHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLApiLF9fZmlsdGVyVW5kZWZpbmVkJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoLi4uYyxmLGcsaCkpO2lmKDQ9PT1kKXJldHVybihmLGcsaCxrKT0+X19hcHBseVNwZWNXaXRoQXJpdHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIsX19maWx0ZXJVbmRlZmluZWQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyguLi5jLGYsZyxoLGspKTtpZig0PGQpcmV0dXJuKC4uLmYpPT5fX2FwcGx5U3BlY1dpdGhBcml0eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixfX2ZpbHRlclVuZGVmaW5lZCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKC4uLmMsLi4uZikpO2lmKGlzQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKSl7dmFyIGU9W107ZD0wO2NvbnN0IGY9YS5sZW5ndGg7CmZvcig7ZDxmO2QrKyl7aWYoIm9iamVjdCI9PT10eXBlb2YgYVtkXXx8aXNBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGFbZF0pKWVbZF09X19hcHBseVNwZWNXaXRoQXJpdHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhW2RdLGIsYyk7ImZ1bmN0aW9uIj09PXR5cGVvZiBhW2RdJiYoZVtkXT1hW2RdKC4uLmMpKX1yZXR1cm4gZX1kPXt9O2ZvcihlIGluIGEpITEhPT1hLmhhc093blByb3BlcnR5KGUpJiYiY29uc3RydWN0b3IiIT09ZSYmKCJvYmplY3QiPT09dHlwZW9mIGFbZV0/ZFtlXT1fX2FwcGx5U3BlY1dpdGhBcml0eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGFbZV0sYixjKToiZnVuY3Rpb24iPT09dHlwZW9mIGFbZV0mJihkW2VdPWFbZV0oLi4uYykpKTtyZXR1cm4gZH0KZnVuY3Rpb24gYXBwbHlTcGVjJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSwuLi5iKXtjb25zdCBjPV9fZmluZEhpZ2hlc3RBcml0eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpO3JldHVybiAwPT09Yz8oKT0+KHt9KTpfX2FwcGx5U3BlY1dpdGhBcml0eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyxiKX1mdW5jdGlvbiBhc3NvY0ZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiLGMpe3JldHVybiBPYmplY3QuYXNzaWduKHt9LGMse1thXTpifSl9Y29uc3QgYXNzb2MkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGFzc29jRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyk7CmZ1bmN0aW9uIF9pc0ludGVnZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4gYTw8MD09PWF9Y29uc3QgaXNJbnRlZ2VyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM9TnVtYmVyLmlzSW50ZWdlcnx8X2lzSW50ZWdlciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwpmdW5jdGlvbiBhc3NvY1BhdGhGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtjb25zdCBkPSJzdHJpbmciPT09dHlwZW9mIGE/YS5zcGxpdCgiLiIpLm1hcChlPT5pc0ludGVnZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhOdW1iZXIoZSkpP051bWJlcihlKTplKTphO2lmKDA9PT1kLmxlbmd0aClyZXR1cm4gYjthPWRbMF07aWYoMTxkLmxlbmd0aCl7Y29uc3QgZT0ib2JqZWN0Ij09PXR5cGVvZiBjJiZudWxsIT09YyYmYy5oYXNPd25Qcm9wZXJ0eShhKT9jW2FdOmlzSW50ZWdlciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGRbMV0pP1tdOnt9O2I9YXNzb2NQYXRoRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChkLDEpLGIsZSl9cmV0dXJuIGlzSW50ZWdlciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpJiYKaXNBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGMpPyhjPWNsb25lTGlzdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGMpLGNbYV09YixjKTphc3NvYyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKX1jb25zdCBhc3NvY1BhdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGFzc29jUGF0aEZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpOwpmdW5jdGlvbiBfY3VycnlOJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiLGMpe3JldHVybiBmdW5jdGlvbigpe3ZhciBkPTA7bGV0IGU9MDtjb25zdCBmPWIubGVuZ3RoLGc9YXJndW1lbnRzLmxlbmd0aCxoPUFycmF5KGYrZyk7Zm9yKDtkPGY7KWhbZF09YltkXSxkKys7Zm9yKDtlPGc7KWhbZitlXT1hcmd1bWVudHNbZV0sZSsrO2Q9YS1oLmxlbmd0aDtyZXR1cm4gaC5sZW5ndGg+PWE/Yy5hcHBseSh0aGlzLGgpOl9hcml0eSQxJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoZCxfY3VycnlOJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxoLGMpKX19CmZ1bmN0aW9uIF9hcml0eSQxJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtzd2l0Y2goYSl7Y2FzZSAwOnJldHVybiBmdW5jdGlvbigpe3JldHVybiBiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y2FzZSAxOnJldHVybiBmdW5jdGlvbihjKXtyZXR1cm4gYi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24oYyxkKXtyZXR1cm4gYi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24oYyxkLGUpe3JldHVybiBiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y2FzZSA0OnJldHVybiBmdW5jdGlvbihjLGQsZSxmKXtyZXR1cm4gYi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Nhc2UgNTpyZXR1cm4gZnVuY3Rpb24oYyxkLGUsZixnKXtyZXR1cm4gYi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Nhc2UgNjpyZXR1cm4gZnVuY3Rpb24oYyxkLGUsZixnLGgpe3JldHVybiBiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07CmNhc2UgNzpyZXR1cm4gZnVuY3Rpb24oYyxkLGUsZixnLGgsayl7cmV0dXJuIGIuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtjYXNlIDg6cmV0dXJuIGZ1bmN0aW9uKGMsZCxlLGYsZyxoLGssbCl7cmV0dXJuIGIuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtjYXNlIDk6cmV0dXJuIGZ1bmN0aW9uKGMsZCxlLGYsZyxoLGssbCxtKXtyZXR1cm4gYi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2RlZmF1bHQ6cmV0dXJuIGZ1bmN0aW9uKGMsZCxlLGYsZyxoLGssbCxtLG4pe3JldHVybiBiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19fQpmdW5jdGlvbiBjdXJyeU4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBjPT5jdXJyeU4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpO2lmKDEwPGEpdGhyb3cgRXJyb3IoIkZpcnN0IGFyZ3VtZW50IHRvIF9hcml0eSBtdXN0IGJlIGEgbm9uLW5lZ2F0aXZlIGludGVnZXIgbm8gZ3JlYXRlciB0aGFuIHRlbiIpO3JldHVybiBfYXJpdHkkMSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsX2N1cnJ5TiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsW10sYikpfQpmdW5jdGlvbiBiaW5kJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+YmluZCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6Y3VycnlOJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYS5sZW5ndGgsKC4uLmMpPT5hLmFwcGx5KGIsYykpfWZ1bmN0aW9uIGJvdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5ib3RoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTooLi4uYyk9PmEoLi4uYykmJmIoLi4uYyl9CmZ1bmN0aW9uIGNoYWluJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+Y2hhaW4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOltdLmNvbmNhdCguLi5iLm1hcChhKSl9ZnVuY3Rpb24gY2xhbXBGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtpZihhPmIpdGhyb3cgRXJyb3IoIm1pbiBtdXN0IG5vdCBiZSBncmVhdGVyIHRoYW4gbWF4IGluIGNsYW1wKG1pbiwgbWF4LCB2YWx1ZSkiKTtpZihjPj1hJiZjPD1iKXJldHVybiBjO2lmKGM+YilyZXR1cm4gYjtpZihjPGEpcmV0dXJuIGF9Y29uc3QgY2xhbXAkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGNsYW1wRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyk7CmZ1bmN0aW9uIGNsb25lJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7Y29uc3QgYj1pc0FycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSk/QXJyYXkoYS5sZW5ndGgpOnt9O2lmKGEmJmEuZ2V0VGltZSlyZXR1cm4gbmV3IERhdGUoYS5nZXRUaW1lKCkpO2Zvcihjb25zdCBjIGluIGEpe2NvbnN0IGQ9YVtjXTtiW2NdPSJvYmplY3QiPT09dHlwZW9mIGQmJm51bGwhPT1kP2QuZ2V0VGltZT9uZXcgRGF0ZShkLmdldFRpbWUoKSk6Y2xvbmUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhkKTpkfXJldHVybiBifWZ1bmN0aW9uIGNvbXBsZW1lbnQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4oLi4uYik9PiFhKC4uLmIpfQpjbGFzcyBSZWR1Y2VTdG9wcGVyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanN7Y29uc3RydWN0b3IoYSl7dGhpcy52YWx1ZT1hfX1mdW5jdGlvbiByZWR1Y2VGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtpZighaXNBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGMpKXRocm93IG5ldyBUeXBlRXJyb3IoInJlZHVjZTogbGlzdCBtdXN0IGJlIGFycmF5IG9yIGl0ZXJhYmxlIik7bGV0IGQ9MDtjb25zdCBlPWMubGVuZ3RoO2Zvcig7ZDxlOyl7Yj1hKGIsY1tkXSxkLGMpO2lmKGIgaW5zdGFuY2VvZiBSZWR1Y2VTdG9wcGVyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpcmV0dXJuIGIudmFsdWU7ZCsrfXJldHVybiBifQpjb25zdCByZWR1Y2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKHJlZHVjZUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpLHJlZHVjZVN0b3BwZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1hPT5uZXcgUmVkdWNlU3RvcHBlciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpOwpmdW5jdGlvbiBfYXJpdHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3N3aXRjaChhKXtjYXNlIDA6cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGIuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKGMpe3JldHVybiBiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y2FzZSAyOnJldHVybiBmdW5jdGlvbihjLGQpe3JldHVybiBiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihjLGQsZSl7cmV0dXJuIGIuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtjYXNlIDQ6cmV0dXJuIGZ1bmN0aW9uKGMsZCxlLGYpe3JldHVybiBiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y2FzZSA1OnJldHVybiBmdW5jdGlvbihjLGQsZSxmLGcpe3JldHVybiBiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y2FzZSA2OnJldHVybiBmdW5jdGlvbihjLGQsZSxmLGcsaCl7cmV0dXJuIGIuYXBwbHkodGhpcyxhcmd1bWVudHMpfTsKY2FzZSA3OnJldHVybiBmdW5jdGlvbihjLGQsZSxmLGcsaCxrKXtyZXR1cm4gYi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Nhc2UgODpyZXR1cm4gZnVuY3Rpb24oYyxkLGUsZixnLGgsayxsKXtyZXR1cm4gYi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Nhc2UgOTpyZXR1cm4gZnVuY3Rpb24oYyxkLGUsZixnLGgsayxsLG0pe3JldHVybiBiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y2FzZSAxMDpyZXR1cm4gZnVuY3Rpb24oYyxkLGUsZixnLGgsayxsLG0sbil7cmV0dXJuIGIuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtkZWZhdWx0OnRocm93IEVycm9yKCJGaXJzdCBhcmd1bWVudCB0byBfYXJpdHkgbXVzdCBiZSBhIG5vbi1uZWdhdGl2ZSBpbnRlZ2VyIG5vIGdyZWF0ZXIgdGhhbiB0ZW4iKTt9fQpmdW5jdGlvbiBfcGlwZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGIuY2FsbCh0aGlzLGEuYXBwbHkodGhpcyxhcmd1bWVudHMpKX19CmZ1bmN0aW9uIHBpcGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcygpe2lmKDA9PT1hcmd1bWVudHMubGVuZ3RoKXRocm93IEVycm9yKCJwaXBlIHJlcXVpcmVzIGF0IGxlYXN0IG9uZSBhcmd1bWVudCIpO3JldHVybiBfYXJpdHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhcmd1bWVudHNbMF0ubGVuZ3RoLHJlZHVjZUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoX3BpcGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyxhcmd1bWVudHNbMF0sQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEsSW5maW5pdHkpKSl9CmZ1bmN0aW9uIGNvbXBvc2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcygpe2lmKDA9PT1hcmd1bWVudHMubGVuZ3RoKXRocm93IEVycm9yKCJjb21wb3NlIHJlcXVpcmVzIGF0IGxlYXN0IG9uZSBhcmd1bWVudCIpO3JldHVybiBwaXBlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuYXBwbHkodGhpcyxBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCkucmV2ZXJzZSgpKX1mdW5jdGlvbiBjb25jYXQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5jb25jYXQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOiJzdHJpbmciPT09dHlwZW9mIGE/YCR7YX0ke2J9YDpbLi4uYSwuLi5iXX0KZnVuY3Rpb24gY29uZCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe3JldHVybiBiPT57bGV0IGM9ITEsZDthLmZvckVhY2goKFtlLGZdKT0+eyFjJiZlKGIpJiYoYz0hMCxkPWYoYikpfSk7cmV0dXJuIGR9fWNvbnN0IHtrZXlzOmtleXMkMSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzfT1PYmplY3Q7ZnVuY3Rpb24gbWFwQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIsYz0hMSl7bGV0IGQ9MDtjb25zdCBlPUFycmF5KGIubGVuZ3RoKTtmb3IoO2Q8Yi5sZW5ndGg7KWVbZF09Yz9hKGJbZF0sZCk6YShiW2RdKSxkKys7cmV0dXJuIGV9CmZ1bmN0aW9uIG1hcE9iamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGc9Pm1hcE9iamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZyk7bGV0IGM9MDtjb25zdCBkPWtleXMkMSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIpLGU9ZC5sZW5ndGgsZj17fTtmb3IoO2M8ZTspe2NvbnN0IGc9ZFtjXTtmW2ddPWEoYltnXSxnLGIpO2MrK31yZXR1cm4gZn1jb25zdCBtYXBPYmpJbmRleGVkJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM9bWFwT2JqZWN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7CmZ1bmN0aW9uIG1hcCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGM9Pm1hcCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk7aWYoIWIpdGhyb3cgRXJyb3IoSU5DT1JSRUNUX0lURVJBQkxFX0lOUFVUKTtyZXR1cm4gaXNBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIpP21hcEFycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKTptYXBPYmplY3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpfQpmdW5jdGlvbiBtYXgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5tYXgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOmI+YT9iOmF9CmZ1bmN0aW9uIGNvbnZlcmdlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZD0+Y29udmVyZ2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGQpO2NvbnN0IGM9cmVkdWNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoKGQsZSk9Pm1heCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGQsZS5sZW5ndGgpLDAsYik7cmV0dXJuIGN1cnJ5TiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGMsZnVuY3Rpb24oKXtyZXR1cm4gYS5hcHBseSh0aGlzLG1hcCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGQ9PmQuYXBwbHkodGhpcyxhcmd1bWVudHMpLGIpKX0pfQpmdW5jdGlvbiBjb3VudCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9PmNvdW50JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTppc0FycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYik/Yi5maWx0ZXIoYz0+YShjKSkubGVuZ3RoOjB9ZnVuY3Rpb24gY291bnRCeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGQ9PmNvdW50QnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGQpO2NvbnN0IGM9e307Yi5mb3JFYWNoKGQ9PntkPWEoZCk7Y1tkXT9jW2RdKys6Y1tkXT0xfSk7cmV0dXJuIGN9CmNvbnN0IGRlYyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzPWE9PmEtMTtmdW5jdGlvbiBpc0ZhbHN5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuIHZvaWQgMD09PWF8fG51bGw9PT1hfHwhMD09PU51bWJlci5pc05hTihhKX1mdW5jdGlvbiBkZWZhdWx0VG8kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5kZWZhdWx0VG8kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOmlzRmFsc3kkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiKT9hOmJ9CmZ1bmN0aW9uIHR5cGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtpZihudWxsPT09YSlyZXR1cm4iTnVsbCI7aWYodm9pZCAwPT09YSlyZXR1cm4iVW5kZWZpbmVkIjtpZihOdW1iZXIuaXNOYU4oYSkpcmV0dXJuIk5hTiI7YT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYSkuc2xpY2UoOCwtMSk7cmV0dXJuIkFzeW5jRnVuY3Rpb24iPT09YT8iUHJvbWlzZSI6YX0KZnVuY3Rpb24gX2xhc3RJbmRleE9mJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZighaXNBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIpKXRocm93IEVycm9yKGBDYW5ub3QgcmVhZCBwcm9wZXJ0eSAnaW5kZXhPZicgb2YgJHtifWApO3ZhciBjPXR5cGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKTtpZighWyJPYmplY3QiLCJBcnJheSIsIk5hTiIsIlJlZ0V4cCJdLmluY2x1ZGVzKGMpKXJldHVybiBiLmxhc3RJbmRleE9mKGEpOyh7bGVuZ3RoOmN9PWIpO2xldCBkPS0xO2Zvcig7LTE8LS1jJiYtMT09PWQ7KWVxdWFscyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGJbY10sYSkmJihkPWMpO3JldHVybiBkfQpmdW5jdGlvbiBfaW5kZXhPZiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoIWlzQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiKSl0aHJvdyBFcnJvcihgQ2Fubm90IHJlYWQgcHJvcGVydHkgJ2luZGV4T2YnIG9mICR7Yn1gKTt2YXIgYz10eXBlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSk7aWYoIVsiT2JqZWN0IiwiQXJyYXkiLCJOYU4iLCJSZWdFeHAiXS5pbmNsdWRlcyhjKSlyZXR1cm4gYi5pbmRleE9mKGEpO2xldCBkPWM9LTE7Y29uc3Qge2xlbmd0aDplfT1iO2Zvcig7KytjPGUmJi0xPT09ZDspZXF1YWxzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYltjXSxhKSYmKGQ9Yyk7cmV0dXJuIGR9CmZ1bmN0aW9uIF9hcnJheUZyb21JdGVyYXRvciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe2NvbnN0IGI9W107bGV0IGM7Zm9yKDshKGM9YS5uZXh0KCkpLmRvbmU7KWIucHVzaChjLnZhbHVlKTtyZXR1cm4gYn1mdW5jdGlvbiBfZXF1YWxzU2V0cyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoYS5zaXplIT09Yi5zaXplKXJldHVybiExO2E9X2FycmF5RnJvbUl0ZXJhdG9yJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYS52YWx1ZXMoKSk7Y29uc3QgYz1fYXJyYXlGcm9tSXRlcmF0b3IkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiLnZhbHVlcygpKTtyZXR1cm4gMD09PWEuZmlsdGVyKGQ9Pi0xPT09X2luZGV4T2YkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhkLGMpKS5sZW5ndGh9CmZ1bmN0aW9uIHBhcnNlRXJyb3IkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtjb25zdCBiPWEuX19wcm90b19fLnRvU3RyaW5nKCk7cmV0dXJuWyJFcnJvciIsIlR5cGVFcnJvciJdLmluY2x1ZGVzKGIpP1tiLGEubWVzc2FnZV06W119ZnVuY3Rpb24gcGFyc2VEYXRlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuIGEudG9EYXRlU3RyaW5nP1shMCxhLmdldFRpbWUoKV06WyExXX1mdW5jdGlvbiBwYXJzZVJlZ2V4JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuIGEuY29uc3RydWN0b3IhPT1SZWdFeHA/WyExXTpbITAsYS50b1N0cmluZygpXX0KZnVuY3Rpb24gZXF1YWxzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZj0+ZXF1YWxzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxmKTt2YXIgYz10eXBlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSk7aWYoYyE9PXR5cGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiKSlyZXR1cm4hMTtpZigiRnVuY3Rpb24iPT09YylyZXR1cm4gdm9pZCAwPT09YS5uYW1lPyExOmEubmFtZT09PWIubmFtZTtpZihbIk5hTiIsIlVuZGVmaW5lZCIsIk51bGwiXS5pbmNsdWRlcyhjKSlyZXR1cm4hMDtpZigiTnVtYmVyIj09PWMpcmV0dXJuIE9iamVjdC5pcygtMCxhKSE9PU9iamVjdC5pcygtMCxiKT8hMTphLnRvU3RyaW5nKCk9PT1iLnRvU3RyaW5nKCk7aWYoWyJTdHJpbmciLCJCb29sZWFuIl0uaW5jbHVkZXMoYykpcmV0dXJuIGEudG9TdHJpbmcoKT09PQpiLnRvU3RyaW5nKCk7aWYoIkFycmF5Ij09PWMpe2M9QXJyYXkuZnJvbShhKTtjb25zdCBmPUFycmF5LmZyb20oYik7aWYoYy50b1N0cmluZygpIT09Zi50b1N0cmluZygpKXJldHVybiExO2xldCBnPSEwO2MuZm9yRWFjaCgoaCxrKT0+e2cmJihoPT09ZltrXXx8ZXF1YWxzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoaCxmW2tdKXx8KGc9ITEpKX0pO3JldHVybiBnfXZhciBkPXBhcnNlUmVnZXgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKSxlPXBhcnNlUmVnZXgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiKTtpZihkWzBdKXJldHVybiBlWzBdP2RbMV09PT1lWzFdOiExO2lmKGVbMF0pcmV0dXJuITE7ZD1wYXJzZURhdGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKTtlPXBhcnNlRGF0ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIpOwppZihkWzBdKXJldHVybiBlWzBdP2RbMV09PT1lWzFdOiExO2lmKGVbMF0pcmV0dXJuITE7ZD1wYXJzZUVycm9yJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSk7ZT1wYXJzZUVycm9yJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYik7aWYoZFswXSlyZXR1cm4gZVswXT9kWzBdPT09ZVswXSYmZFsxXT09PWVbMV06ITE7aWYoIlNldCI9PT1jKXJldHVybiBfZXF1YWxzU2V0cyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYik7aWYoIk9iamVjdCI9PT1jKXtjPU9iamVjdC5rZXlzKGEpO2lmKGMubGVuZ3RoIT09T2JqZWN0LmtleXMoYikubGVuZ3RoKXJldHVybiExO2xldCBmPSEwO2MuZm9yRWFjaChnPT57aWYoZil7Y29uc3QgaD1hW2ddO2c9YltnXTtoPT09Z3x8ZXF1YWxzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoaCxnKXx8KGY9ITEpfX0pOwpyZXR1cm4gZn1yZXR1cm4hMX1mdW5jdGlvbiBpbmNsdWRlcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGM9PmluY2x1ZGVzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTtpZigic3RyaW5nIj09PXR5cGVvZiBiKXJldHVybiBiLmluY2x1ZGVzKGEpO2lmKCFiKXRocm93IG5ldyBUeXBlRXJyb3IoYENhbm5vdCByZWFkIHByb3BlcnR5IFwnaW5kZXhPZlwnIG9mICR7Yn1gKTtyZXR1cm4gaXNBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIpPy0xPF9pbmRleE9mJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKTohMX0KY2xhc3MgX1NldCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpze2NvbnN0cnVjdG9yKCl7dGhpcy5zZXQ9bmV3IFNldDt0aGlzLml0ZW1zPXt9fWNoZWNrVW5pcXVlbmVzcyhhKXt2YXIgYj10eXBlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSk7cmV0dXJuWyJOdWxsIiwiVW5kZWZpbmVkIiwiTmFOIl0uaW5jbHVkZXMoYik/YiBpbiB0aGlzLml0ZW1zPyExOnRoaXMuaXRlbXNbYl09ITA6WyJPYmplY3QiLCJBcnJheSJdLmluY2x1ZGVzKGIpP2IgaW4gdGhpcy5pdGVtcz8tMT09PV9pbmRleE9mJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSx0aGlzLml0ZW1zW2JdKT8odGhpcy5pdGVtc1tiXS5wdXNoKGEpLCEwKTohMToodGhpcy5pdGVtc1tiXT1bYV0sITApOihiPXRoaXMuc2V0LnNpemUsdGhpcy5zZXQuYWRkKGEpLHRoaXMuc2V0LnNpemUhPT1iKX19CmZ1bmN0aW9uIHVuaXEkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtjb25zdCBiPW5ldyBfU2V0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMsYz1bXTthLmZvckVhY2goZD0+e2IuY2hlY2tVbmlxdWVuZXNzKGQpJiZjLnB1c2goZCl9KTtyZXR1cm4gY31mdW5jdGlvbiBkaWZmZXJlbmNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+ZGlmZmVyZW5jZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6dW5pcSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpLmZpbHRlcihjPT4haW5jbHVkZXMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjLGIpKX0KZnVuY3Rpb24gZGlzc29jJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZD0+ZGlzc29jJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxkKTtpZihudWxsPT09Ynx8dm9pZCAwPT09YilyZXR1cm57fTtjb25zdCBjPXt9O2Zvcihjb25zdCBkIGluIGIpY1tkXT1iW2RdO2RlbGV0ZSBjW2FdO3JldHVybiBjfWZ1bmN0aW9uIGRpdmlkZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9PmRpdmlkZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6YS9ifQpmdW5jdGlvbiBkcm9wJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+ZHJvcCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6Yi5zbGljZSgwPGE/YTowKX1mdW5jdGlvbiBkcm9wTGFzdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9PmRyb3BMYXN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTowPGE/Yi5zbGljZSgwLC1hKTpiLnNsaWNlKCl9CmZ1bmN0aW9uIGRyb3BMYXN0V2hpbGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBnPT5kcm9wTGFzdFdoaWxlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxnKTtpZigwPT09Yi5sZW5ndGgpcmV0dXJuIGI7Y29uc3QgYz1pc0FycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYik7aWYoImZ1bmN0aW9uIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKGAncHJlZGljYXRlJyBpcyBmcm9tIHdyb25nIHR5cGUgJHt0eXBlb2YgYX1gKTtpZighYyYmInN0cmluZyIhPT10eXBlb2YgYil0aHJvdyBFcnJvcihgJ2l0ZXJhYmxlJyBpcyBmcm9tIHdyb25nIHR5cGUgJHt0eXBlb2YgYn1gKTtsZXQgZD0hMTtjb25zdCBlPVtdO2xldCBmPWIubGVuZ3RoO2Zvcig7MDxmOylmLS0sZHx8ITEhPT1hKGJbZl0pP2QmJmUucHVzaChiW2ZdKToKKGQ9ITAsZS5wdXNoKGJbZl0pKTtyZXR1cm4gYz9lLnJldmVyc2UoKTplLnJldmVyc2UoKS5qb2luKCIiKX1mdW5jdGlvbiBkcm9wUmVwZWF0cyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe2lmKCFpc0FycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSkpdGhyb3cgRXJyb3IoYCR7YX0gaXMgbm90IGEgbGlzdGApO2NvbnN0IGI9W107YS5yZWR1Y2UoKGMsZCk9PntlcXVhbHMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjLGQpfHxiLnB1c2goZCk7cmV0dXJuIGR9LHZvaWQgMCk7cmV0dXJuIGJ9CmZ1bmN0aW9uIGRyb3BSZXBlYXRzV2l0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGQ9PmRyb3BSZXBlYXRzV2l0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZCk7aWYoIWlzQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiKSl0aHJvdyBFcnJvcihgJHtifSBpcyBub3QgYSBsaXN0YCk7Y29uc3QgYz1bXTtiLnJlZHVjZSgoZCxlKT0+e2lmKHZvaWQgMD09PWQpcmV0dXJuIGMucHVzaChlKSxlO2EoZCxlKXx8Yy5wdXNoKGUpO3JldHVybiBlfSx2b2lkIDApO3JldHVybiBjfQpmdW5jdGlvbiBkcm9wV2hpbGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBnPT5kcm9wV2hpbGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGcpO2NvbnN0IGM9aXNBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIpO2lmKCFjJiYic3RyaW5nIiE9PXR5cGVvZiBiKXRocm93IEVycm9yKCJgaXRlcmFibGVgIGlzIG5laXRoZXIgbGlzdCBub3IgYSBzdHJpbmciKTtsZXQgZD0hMTtjb25zdCBlPVtdO2xldCBmPS0xO2Zvcig7ZisrPGIubGVuZ3RoLTE7KWQ/ZS5wdXNoKGJbZl0pOmEoYltmXSl8fChkfHwoZD0hMCksZS5wdXNoKGJbZl0pKTtyZXR1cm4gYz9lOmUuam9pbigiIil9CmZ1bmN0aW9uIGVpdGhlciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9PmVpdGhlciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6KC4uLmMpPT4hKCFhKC4uLmMpJiYhYiguLi5jKSl9CmZ1bmN0aW9uIGVuZHNXaXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZT0+ZW5kc1dpdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGUpO2lmKCJzdHJpbmciPT09dHlwZW9mIGIpcmV0dXJuIGIuZW5kc1dpdGgoYSk7aWYoIWlzQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKSlyZXR1cm4hMTtjb25zdCBjPWIubGVuZ3RoLWEubGVuZ3RoO2xldCBkPSEwO3JldHVybiBhLmZpbHRlcigoZSxmKT0+e2lmKCFkKXJldHVybiExOyhlPWVxdWFscyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGUsYltmK2NdKSl8fChkPSExKTtyZXR1cm4gZX0pLmxlbmd0aD09PWEubGVuZ3RofQpmdW5jdGlvbiBwcm9wJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gYz0+cHJvcCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk7aWYoYilyZXR1cm4gYlthXX1mdW5jdGlvbiBlcVByb3BzRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIsYyl7cmV0dXJuIGVxdWFscyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKHByb3AkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpLHByb3AkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpKX1jb25zdCBlcVByb3BzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM9Y3VycnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhlcVByb3BzRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyk7CmZ1bmN0aW9uIGV2b2x2ZUFycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gbWFwQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcygoYyxkKT0+IkZ1bmN0aW9uIj09PXR5cGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhW2RdKT9hW2RdKGMpOmMsYiwhMCl9CmZ1bmN0aW9uIGV2b2x2ZU9iamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIG1hcE9iamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKChjLGQpPT57aWYoIk9iamVjdCI9PT10eXBlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYykpe2NvbnN0IGU9dHlwZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGFbZF0pO3JldHVybiJGdW5jdGlvbiI9PT1lP2FbZF0oYyk6Ik9iamVjdCI9PT1lP2V2b2x2ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGFbZF0sYyk6Y31yZXR1cm4iRnVuY3Rpb24iPT09dHlwZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGFbZF0pP2FbZF0oYyk6Y30sYil9CmZ1bmN0aW9uIGV2b2x2ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGU9PmV2b2x2ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZSk7Y29uc3QgYz10eXBlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSksZD10eXBlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYik7aWYoZCE9PWMpdGhyb3cgRXJyb3IoIml0ZXJhYmxlVHlwZSAhPT0gcnVsZXNUeXBlIik7aWYoIVsiT2JqZWN0IiwiQXJyYXkiXS5pbmNsdWRlcyhjKSl0aHJvdyBFcnJvcihgJ2l0ZXJhYmxlJyBhbmQgJ3J1bGVzJyBhcmUgZnJvbSB3cm9uZyB0eXBlICR7Y31gKTtyZXR1cm4iT2JqZWN0Ij09PWQ/ZXZvbHZlT2JqZWN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKTpldm9sdmVBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsCmIpfWZ1bmN0aW9uIEYkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcygpe3JldHVybiExfWZ1bmN0aW9uIGZpbHRlck9iamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7Y29uc3QgYz17fTtmb3IoY29uc3QgZCBpbiBiKWEoYltkXSxkLGIpJiYoY1tkXT1iW2RdKTtyZXR1cm4gY31mdW5jdGlvbiBmaWx0ZXJBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjPSExKXtsZXQgZD0wO2NvbnN0IGU9Yi5sZW5ndGgsZj1bXTtmb3IoO2Q8ZTspKGM/YShiW2RdLGQpOmEoYltkXSkpJiZmLnB1c2goYltkXSksZCsrO3JldHVybiBmfQpmdW5jdGlvbiBmaWx0ZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBjPT5maWx0ZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpO2lmKCFiKXRocm93IEVycm9yKCJJbmNvcnJlY3QgaXRlcmFibGUgaW5wdXQiKTtyZXR1cm4gaXNBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIpP2ZpbHRlckFycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiLCExKTpmaWx0ZXJPYmplY3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpfQpmdW5jdGlvbiBmaW5kJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZT0+ZmluZCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZSk7bGV0IGM9MDtjb25zdCBkPWIubGVuZ3RoO2Zvcig7YzxkOyl7Y29uc3QgZT1iW2NdO2lmKGEoZSkpcmV0dXJuIGU7YysrfX1mdW5jdGlvbiBmaW5kSW5kZXgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBlPT5maW5kSW5kZXgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGUpO2NvbnN0IGM9Yi5sZW5ndGg7bGV0IGQ9LTE7Zm9yKDsrK2Q8YzspaWYoYShiW2RdKSlyZXR1cm4gZDtyZXR1cm4tMX0KZnVuY3Rpb24gZmluZExhc3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBkPT5maW5kTGFzdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZCk7bGV0IGM9Yi5sZW5ndGg7Zm9yKDswPD0tLWM7KWlmKGEoYltjXSkpcmV0dXJuIGJbY119ZnVuY3Rpb24gZmluZExhc3RJbmRleCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGQ9PmZpbmRMYXN0SW5kZXgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGQpO2xldCBjPWIubGVuZ3RoO2Zvcig7MDw9LS1jOylpZihhKGJbY10pKXJldHVybiBjO3JldHVybi0xfQpmdW5jdGlvbiBmbGF0dGVuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtiPXZvaWQgMD09PWI/W106Yjtmb3IobGV0IGM9MDtjPGEubGVuZ3RoO2MrKylpc0FycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYVtjXSk/ZmxhdHRlbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGFbY10sYik6Yi5wdXNoKGFbY10pO3JldHVybiBifQpmdW5jdGlvbiBmbGlwRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4oLi4uYik9PntpZigxPT09Yi5sZW5ndGgpcmV0dXJuIGM9PmEoYyxiWzBdKTtpZigyPT09Yi5sZW5ndGgpcmV0dXJuIGEoYlsxXSxiWzBdKTtpZigzPT09Yi5sZW5ndGgpcmV0dXJuIGEoYlsxXSxiWzBdLGJbMl0pO2lmKDQ9PT1iLmxlbmd0aClyZXR1cm4gYShiWzFdLGJbMF0sYlsyXSxiWzNdKTt0aHJvdyBFcnJvcigiUi5mbGlwIGRvZXNuJ3Qgd29yayB3aXRoIGFyaXR5ID4gNCIpO319ZnVuY3Rpb24gZmxpcCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe3JldHVybiBmbGlwRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKX0KZnVuY3Rpb24gZm9yRWFjaCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGU9PmZvckVhY2gkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGUpO2lmKHZvaWQgMCE9PWIpe2lmKGlzQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiKSlmb3IodmFyIGM9MCxkPWIubGVuZ3RoO2M8ZDspYShiW2NdKSxjKys7ZWxzZXtjPTA7ZD1rZXlzJDEkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiKTtjb25zdCBlPWQubGVuZ3RoO2Zvcig7YzxlOyl7Y29uc3QgZj1kW2NdO2EoYltmXSxmLGIpO2MrK319cmV0dXJuIGJ9fQpmdW5jdGlvbiBmcm9tUGFpcnMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtjb25zdCBiPXt9O2EuZm9yRWFjaCgoW2MsZF0pPT5iW2NdPWQpO3JldHVybiBifWZ1bmN0aW9uIGdyb3VwQnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBkPT5ncm91cEJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxkKTtjb25zdCBjPXt9O2ZvcihsZXQgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXtjb25zdCBlPWJbZF0sZj1hKGUpO2NbZl18fChjW2ZdPVtdKTtjW2ZdLnB1c2goZSl9cmV0dXJuIGN9CmZ1bmN0aW9uIGdyb3VwV2l0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoIWlzQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJsaXN0LnJlZHVjZSBpcyBub3QgYSBmdW5jdGlvbiIpO2NvbnN0IGM9Y2xvbmVMaXN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYik7aWYoMT09PWIubGVuZ3RoKXJldHVybltjXTtjb25zdCBkPVtdO2xldCBlPVtdO2MucmVkdWNlKChmLGcsaCk9PntpZigwPT09aClyZXR1cm4gZztjb25zdCBrPWEoZixnKSxsPTA9PT1lLmxlbmd0aDtoPWg9PT1iLmxlbmd0aC0xO2lmKGspcmV0dXJuIGwmJmUucHVzaChmKSxlLnB1c2goZyksaCYmZC5wdXNoKGUpLGc7aWYobClyZXR1cm4gZC5wdXNoKFtmXSksaCYmZC5wdXNoKFtnXSksZztkLnB1c2goZSk7aCYmZC5wdXNoKFtnXSk7ZT1bXTtyZXR1cm4gZ30sCnZvaWQgMCk7cmV0dXJuIGR9ZnVuY3Rpb24gaGFzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+aGFzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTpiP2IuaGFzT3duUHJvcGVydHkoYSk6ITF9ZnVuY3Rpb24gY3JlYXRlUGF0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYj0iLiIpe3JldHVybiJzdHJpbmciPT09dHlwZW9mIGE/YS5zcGxpdChiKTphfQpmdW5jdGlvbiBwYXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZj0+cGF0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZik7aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpe2Zvcih2YXIgYz1iLGQ9MCxlPWNyZWF0ZVBhdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKTtkPGUubGVuZ3RoOyl7aWYobnVsbD09PWN8fHZvaWQgMD09PWN8fG51bGw9PT1jW2VbZF1dKXJldHVybjtjPWNbZVtkXV07ZCsrfXJldHVybiBjfX0KZnVuY3Rpb24gaGFzUGF0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9Pmhhc1BhdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOnZvaWQgMCE9PXBhdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpfWZ1bmN0aW9uIGhlYWQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4ic3RyaW5nIj09PXR5cGVvZiBhP2FbMF18fCIiOmFbMF19ZnVuY3Rpb24gX29iamVjdElzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gYT09PWI/MCE9PWF8fDEvYT09PTEvYjphIT09YSYmYiE9PWJ9Y29uc3Qgb2JqZWN0SXMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1PYmplY3QuaXN8fF9vYmplY3RJcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwpmdW5jdGlvbiBpZGVudGljYWwkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5pZGVudGljYWwkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOm9iamVjdElzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKX1mdW5jdGlvbiBpZGVudGl0eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe3JldHVybiBhfWZ1bmN0aW9uIGlmRWxzZUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiLGMpe3JldHVybiguLi5kKT0+ITA9PT0oImJvb2xlYW4iPT09dHlwZW9mIGE/YTphKC4uLmQpKT9iKC4uLmQpOmMoLi4uZCl9CmNvbnN0IGlmRWxzZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzPWN1cnJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoaWZFbHNlRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyksaW5jJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM9YT0+YSsxO2Z1bmN0aW9uIGluZGV4QnlQYXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtjb25zdCBjPXt9O2ZvcihsZXQgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXtjb25zdCBlPWJbZF07Y1twYXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxlKV09ZX1yZXR1cm4gY30KZnVuY3Rpb24gaW5kZXhCeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGQ9PmluZGV4QnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGQpO2lmKCJzdHJpbmciPT09dHlwZW9mIGEpcmV0dXJuIGluZGV4QnlQYXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKTtjb25zdCBjPXt9O2ZvcihsZXQgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXtjb25zdCBlPWJbZF07Y1thKGUpXT1lfXJldHVybiBjfQpmdW5jdGlvbiBpbmRleE9mJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+X2luZGV4T2YkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOl9pbmRleE9mJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKX1mdW5jdGlvbiBiYXNlU2xpY2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIsYyl7bGV0IGQ9LTEse2xlbmd0aDplfT1hO2M9Yz5lP2U6YzswPmMmJihjKz1lKTtlPWI+Yz8wOmMtYj4+PjA7Yj4+Pj0wO2ZvcihjPUFycmF5KGUpOysrZDxlOyljW2RdPWFbZCtiXTtyZXR1cm4gY30KZnVuY3Rpb24gaW5pdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe3JldHVybiJzdHJpbmciPT09dHlwZW9mIGE/YS5zbGljZSgwLC0xKTphLmxlbmd0aD9iYXNlU2xpY2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLDAsLTEpOltdfWZ1bmN0aW9uIGludGVyc2VjdGlvbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9PmludGVyc2VjdGlvbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6ZmlsdGVyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYz0+aW5jbHVkZXMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjLGEpLGIpfQpmdW5jdGlvbiBpbnRlcnNwZXJzZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGY9PmludGVyc3BlcnNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxmKTtsZXQgYz0tMTtjb25zdCBkPWIubGVuZ3RoLGU9W107Zm9yKDsrK2M8ZDspYz09PWQtMT9lLnB1c2goYltjXSk6ZS5wdXNoKGJbY10sYSk7cmV0dXJuIGV9ZnVuY3Rpb24gaXMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5pcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6bnVsbCE9YiYmYi5jb25zdHJ1Y3Rvcj09PWF8fGIgaW5zdGFuY2VvZiBhfQpmdW5jdGlvbiBpc0VtcHR5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7Y29uc3QgYj10eXBlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSk7cmV0dXJuWyJVbmRlZmluZWQiLCJOYU4iLCJOdW1iZXIiLCJOdWxsIl0uaW5jbHVkZXMoYik/ITE6YT8iT2JqZWN0Ij09PWI/MD09PU9iamVjdC5rZXlzKGEpLmxlbmd0aDoiQXJyYXkiPT09Yj8wPT09YS5sZW5ndGg6ITE6ITB9ZnVuY3Rpb24gaXNOaWwkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4gdm9pZCAwPT09YXx8bnVsbD09PWF9CmZ1bmN0aW9uIGpvaW4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5qb2luJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTpiLmpvaW4oYSl9ZnVuY3Rpb24ganV4dCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe3JldHVybiguLi5iKT0+YS5tYXAoYz0+YyguLi5iKSl9ZnVuY3Rpb24ga2V5cyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe3JldHVybiBPYmplY3Qua2V5cyhhKX1mdW5jdGlvbiBsYXN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuInN0cmluZyI9PT10eXBlb2YgYT9hW2EubGVuZ3RoLTFdfHwiIjphW2EubGVuZ3RoLTFdfQpmdW5jdGlvbiBsYXN0SW5kZXhPZiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9Pl9sYXN0SW5kZXhPZiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6X2xhc3RJbmRleE9mJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKX1mdW5jdGlvbiBsZW5ndGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4gaXNBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpfHwic3RyaW5nIj09PXR5cGVvZiBhP2EubGVuZ3RoOk5hTn0KZnVuY3Rpb24gbGVucyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIGZ1bmN0aW9uKGMpe3JldHVybiBmdW5jdGlvbihkKXtyZXR1cm4gYyhhKGQpKS5tYXAoZT0+YihlLGQpKX19fWZ1bmN0aW9uIG50aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGQ9Pm50aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZCk7Y29uc3QgYz0wPmE/Yi5sZW5ndGgrYTphO3JldHVybiJbb2JqZWN0IFN0cmluZ10iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP2IuY2hhckF0KGMpOmJbY119CmZ1bmN0aW9uIHVwZGF0ZUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiLGMpe2M9Y2xvbmVMaXN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYyk7cmV0dXJuLTE9PT1hP2MuZmlsbChiLGEpOmMuZmlsbChiLGEsYSsxKX1jb25zdCB1cGRhdGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKHVwZGF0ZUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpOwpmdW5jdGlvbiBsZW5zSW5kZXgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4gbGVucyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKG50aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpLHVwZGF0ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpKX1mdW5jdGlvbiBsZW5zUGF0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe3JldHVybiBsZW5zJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMocGF0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpLGFzc29jUGF0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpKX0KZnVuY3Rpb24gbGVuc1Byb3AkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4gbGVucyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKHByb3AkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKSxhc3NvYyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpKX1mdW5jdGlvbiBtYXRjaCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGQ9Pm1hdGNoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxkKTtjb25zdCBjPWIubWF0Y2goYSk7cmV0dXJuIG51bGw9PT1jP1tdOmN9CmZ1bmN0aW9uIG1hdGhNb2QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5tYXRoTW9kJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTohaXNJbnRlZ2VyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl8fCFpc0ludGVnZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiKXx8MT5iP05hTjooYSViK2IpJWJ9ZnVuY3Rpb24gbWF4QnlGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtyZXR1cm4gYShjKT5hKGIpP2M6Yn1jb25zdCBtYXhCeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzPWN1cnJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMobWF4QnlGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKTsKZnVuY3Rpb24gc3VtJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuIGEucmVkdWNlKChiLGMpPT5iK2MsMCl9ZnVuY3Rpb24gbWVhbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe3JldHVybiBzdW0kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKS9hLmxlbmd0aH1mdW5jdGlvbiBtZWRpYW4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXt2YXIgYj1hLmxlbmd0aDtpZigwPT09YilyZXR1cm4gTmFOO2NvbnN0IGM9Mi1iJTI7Yj0oYi1jKS8yO3JldHVybiBtZWFuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSwwKS5zb3J0KChkLGUpPT5kPT09ZT8wOmQ8ZT8tMToxKS5zbGljZShiLGIrYykpfQpmdW5jdGlvbiBtZXJnZVJpZ2h0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+bWVyZ2VSaWdodCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6T2JqZWN0LmFzc2lnbih7fSxhfHx7fSxifHx7fSl9ZnVuY3Rpb24gbWVyZ2VBbGwkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtsZXQgYj17fTttYXAkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjPT57Yj1tZXJnZVJpZ2h0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYixjKX0sYSk7cmV0dXJuIGJ9CmZ1bmN0aW9uIG1lcmdlRGVlcFJpZ2h0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZD0+bWVyZ2VEZWVwUmlnaHQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGQpO2NvbnN0IGM9Y2xvbmUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKTtPYmplY3Qua2V5cyhiKS5mb3JFYWNoKGQ9PnsiT2JqZWN0Ij09PXR5cGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiW2RdKT8iT2JqZWN0Ij09PXR5cGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhW2RdKT9jW2RdPW1lcmdlRGVlcFJpZ2h0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYVtkXSxiW2RdKTpjW2RdPWJbZF06Y1tkXT1iW2RdfSk7cmV0dXJuIGN9CmZ1bmN0aW9uIG1lcmdlTGVmdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9Pm1lcmdlTGVmdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6bWVyZ2VSaWdodCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIsYSl9ZnVuY3Rpb24gbWVyZ2VXaXRoRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIsYyl7Y29uc3QgZD17fTtPYmplY3Qua2V5cyhiKS5mb3JFYWNoKGU9PntkW2VdPXZvaWQgMD09PWNbZV0/YltlXTphKGJbZV0sY1tlXSl9KTtPYmplY3Qua2V5cyhjKS5mb3JFYWNoKGU9Pnt2b2lkIDA9PT1kW2VdJiYoZFtlXT12b2lkIDA9PT1iW2VdP2NbZV06YShiW2VdLGNbZV0pKX0pO3JldHVybiBkfQpjb25zdCBtZXJnZVdpdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKG1lcmdlV2l0aEZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpO2Z1bmN0aW9uIG1pbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9Pm1pbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6YjxhP2I6YX1mdW5jdGlvbiBtaW5CeUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiLGMpe3JldHVybiBhKGMpPGEoYik/YzpifWNvbnN0IG1pbkJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM9Y3VycnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhtaW5CeUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpOwpmdW5jdGlvbiBvd25LZXlzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXt2YXIgYz1PYmplY3Qua2V5cyhhKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgZD1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGEpO2ImJihkPWQuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEsZSkuZW51bWVyYWJsZX0pKTtjLnB1c2guYXBwbHkoYyxkKX1yZXR1cm4gY30KZnVuY3Rpb24gX29iamVjdFNwcmVhZDIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtmb3IodmFyIGI9MTtiPGFyZ3VtZW50cy5sZW5ndGg7YisrKXt2YXIgYz1udWxsIT1hcmd1bWVudHNbYl0/YXJndW1lbnRzW2JdOnt9O2IlMj9vd25LZXlzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoT2JqZWN0KGMpLCEwKS5mb3JFYWNoKGZ1bmN0aW9uKGQpe19kZWZpbmVQcm9wZXJ0eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZCxjW2RdKX0pOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGEsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoYykpOm93bktleXMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhPYmplY3QoYykpLmZvckVhY2goZnVuY3Rpb24oZCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsCmQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihjLGQpKX0pfXJldHVybiBhfWZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtiIGluIGE/T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7dmFsdWU6YyxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOmFbYl09YztyZXR1cm4gYX1mdW5jdGlvbiBpc0l0ZXJhYmxlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuIEFycmF5LmlzQXJyYXkoYSl8fCJPYmplY3QiPT09dHlwZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpfQpmdW5jdGlvbiBtb2RpZnlGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtyZXR1cm4gaXNJdGVyYWJsZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGMpJiZ2b2lkIDAhPT1jW2FdP2lzQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjKT91cGRhdGVGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYihjW2FdKSxjKTpfb2JqZWN0U3ByZWFkMiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKF9vYmplY3RTcHJlYWQyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoe30sYykse30se1thXTpiKGNbYV0pfSk6Y31jb25zdCBtb2RpZnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKG1vZGlmeUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpOwpmdW5jdGlvbiBtb2RpZnlQYXRoRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIsYyl7YT1jcmVhdGVQYXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSk7aWYoMT09PWEubGVuZ3RoKXJldHVybiBfb2JqZWN0U3ByZWFkMiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKF9vYmplY3RTcHJlYWQyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoe30sYykse30se1thWzBdXTpiKGNbYVswXV0pfSk7aWYodm9pZCAwPT09cGF0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYykpcmV0dXJuIGM7Yj1tb2RpZnlQYXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSwxKSxiLGNbYVswXV0pO3JldHVybiBiPT09Y1thWzBdXT9jOmFzc29jJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYVswXSwKYixjKX1jb25zdCBtb2RpZnlQYXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM9Y3VycnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhtb2RpZnlQYXRoRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyk7ZnVuY3Rpb24gbW9kdWxvJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+bW9kdWxvJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTphJWJ9CmZ1bmN0aW9uIG1vdmVGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtpZigwPmF8fDA+Yil0aHJvdyBFcnJvcigiUmFtYmRhLm1vdmUgZG9lcyBub3Qgc3VwcG9ydCBuZWdhdGl2ZSBpbmRleGVzIik7aWYoYT5jLmxlbmd0aC0xfHxiPmMubGVuZ3RoLTEpcmV0dXJuIGM7Y29uc3QgZD1jbG9uZUxpc3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjKTtkW2FdPWNbYl07ZFtiXT1jW2FdO3JldHVybiBkfWNvbnN0IG1vdmUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKG1vdmVGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKTsKZnVuY3Rpb24gbXVsdGlwbHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5tdWx0aXBseSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6YSpifWZ1bmN0aW9uIG5lZ2F0ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe3JldHVybi1hfWZ1bmN0aW9uIG5vbmUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBjPT5ub25lJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTtmb3IobGV0IGM9MDtjPGIubGVuZ3RoO2MrKylpZihhKGJbY10pKXJldHVybiExO3JldHVybiEwfQpmdW5jdGlvbiBub3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4hYX1mdW5jdGlvbiBvYmpPZiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9Pm9iak9mJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTp7W2FdOmJ9fWZ1bmN0aW9uIG9mJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuW2FdfQpmdW5jdGlvbiBvbWl0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZT0+b21pdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZSk7aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpe3ZhciBjPWNyZWF0ZVBhdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLCIsIiksZD17fTtmb3IoY29uc3QgZSBpbiBiKWMuaW5jbHVkZXMoZSl8fChkW2VdPWJbZV0pO3JldHVybiBkfX0KZnVuY3Rpb24gb24kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIsYyxkKXtyZXR1cm4gMz09PWFyZ3VtZW50cy5sZW5ndGg/ZT0+b24kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIsYyxlKToyPT09YXJndW1lbnRzLmxlbmd0aD8oZSxmKT0+b24kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIsZSxmKTphKGIoYyksYihkKSl9ZnVuY3Rpb24gb25jZUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtsZXQgYztyZXR1cm4gZnVuY3Rpb24oKXthJiYoYz1hLmFwcGx5KGJ8fHRoaXMsYXJndW1lbnRzKSxhPW51bGwpO3JldHVybiBjfX0KZnVuY3Rpb24gb25jZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpe2NvbnN0IGM9b25jZUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKTtyZXR1cm4gY3VycnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjKX1yZXR1cm4gb25jZUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKX1mdW5jdGlvbiBvciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9Pm9yJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTphfHxifWNvbnN0IElkZW50aXR5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM9YT0+KHt4OmEsbWFwOmI9PklkZW50aXR5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYihhKSl9KTsKZnVuY3Rpb24gb3ZlckZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiLGMpe3JldHVybiBhKGQ9PklkZW50aXR5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYihkKSkpKGMpLnh9Y29uc3Qgb3ZlciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzPWN1cnJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMob3ZlckZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpOwpmdW5jdGlvbiBwYXJ0aWFsJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSwuLi5iKXtjb25zdCBjPWEubGVuZ3RoO3JldHVybiguLi5kKT0+Yi5sZW5ndGgrZC5sZW5ndGg+PWM/YSguLi5iLC4uLmQpOnBhcnRpYWwkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLC4uLlsuLi5iLC4uLmRdKX1mdW5jdGlvbiBwYXJ0aWFsT2JqZWN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gYz0+YShtZXJnZURlZXBSaWdodCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGMsYikpfQpmdW5jdGlvbiBwYXJ0aXRpb25PYmplY3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2NvbnN0IGM9e30sZD17fTtPYmplY3QuZW50cmllcyhiKS5mb3JFYWNoKChbZSxmXSk9PnthKGYsZSk/Y1tlXT1mOmRbZV09Zn0pO3JldHVybltjLGRdfWZ1bmN0aW9uIHBhcnRpdGlvbkFycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiLGM9ITEpe2NvbnN0IGQ9W10sZT1bXTtsZXQgZj0tMTtmb3IoO2YrKzxiLmxlbmd0aC0xOykoYz9hKGJbZl0sZik6YShiW2ZdKSk/ZC5wdXNoKGJbZl0pOmUucHVzaChiW2ZdKTtyZXR1cm5bZCxlXX0KZnVuY3Rpb24gcGFydGl0aW9uJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+cGFydGl0aW9uJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTppc0FycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYik/cGFydGl0aW9uQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpOnBhcnRpdGlvbk9iamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil9CmZ1bmN0aW9uIHBhdGhFcUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiLGMpe3JldHVybiBlcXVhbHMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhwYXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKSxiKX1jb25zdCBwYXRoRXEkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKHBhdGhFcUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpOwpmdW5jdGlvbiBwYXRoT3JGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtyZXR1cm4gZGVmYXVsdFRvJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxwYXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYixjKSl9Y29uc3QgcGF0aE9yJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM9Y3VycnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhwYXRoT3JGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKTsKZnVuY3Rpb24gcGF0aHMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5wYXRocyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6YS5tYXAoYz0+cGF0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGMsYikpfQpmdW5jdGlvbiBwaWNrJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZj0+cGljayQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZik7aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpe2Zvcih2YXIgYz1jcmVhdGVQYXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSwiLCIpLGQ9e30sZT0wO2U8Yy5sZW5ndGg7KWNbZV1pbiBiJiYoZFtjW2VdXT1iW2NbZV1dKSxlKys7cmV0dXJuIGR9fQpmdW5jdGlvbiBwaWNrQWxsJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZj0+cGlja0FsbCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZik7aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpe2Zvcih2YXIgYz1jcmVhdGVQYXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSwiLCIpLGQ9e30sZT0wO2U8Yy5sZW5ndGg7KWRbY1tlXV09Y1tlXWluIGI/YltjW2VdXTp2b2lkIDAsZSsrO3JldHVybiBkfX0KZnVuY3Rpb24gcGx1Y2skJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBkPT5wbHVjayQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZCk7Y29uc3QgYz1bXTttYXAkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhkPT57dm9pZCAwIT09ZFthXSYmYy5wdXNoKGRbYV0pfSxiKTtyZXR1cm4gY31mdW5jdGlvbiBwcmVwZW5kJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+cHJlcGVuZCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6InN0cmluZyI9PT10eXBlb2YgYj9bYV0uY29uY2F0KGIuc3BsaXQoIiIpKTpbYV0uY29uY2F0KGIpfQpjb25zdCBwcm9kdWN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM9cmVkdWNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMobXVsdGlwbHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcywxKTtmdW5jdGlvbiBwcm9wRXFGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtyZXR1cm4gYz9lcXVhbHMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiLHByb3AkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpKTohMX1jb25zdCBwcm9wRXEkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKHByb3BFcUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpOwpmdW5jdGlvbiBwcm9wSXNGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtyZXR1cm4gaXMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGNbYl0pfWNvbnN0IHByb3BJcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzPWN1cnJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMocHJvcElzRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyk7ZnVuY3Rpb24gcHJvcE9yRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIsYyl7cmV0dXJuIGM/ZGVmYXVsdFRvJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjW2JdKTphfWNvbnN0IHByb3BPciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzPWN1cnJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMocHJvcE9yRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyk7CmZ1bmN0aW9uIHByb3BzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gYz0+cHJvcHMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpO2lmKCFpc0FycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSkpdGhyb3cgRXJyb3IoInByb3BzVG9QaWNrIGlzIG5vdCBhIGxpc3QiKTtyZXR1cm4gbWFwQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjPT5iW2NdLGEpfWZ1bmN0aW9uIHByb3BTYXRpc2ZpZXNGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtyZXR1cm4gYShwcm9wJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYixjKSl9CmNvbnN0IHByb3BTYXRpc2ZpZXMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKHByb3BTYXRpc2ZpZXNGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKTsKZnVuY3Rpb24gcmFuZ2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBlPT5yYW5nZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZSk7aWYoTnVtYmVyLmlzTmFOKE51bWJlcihhKSl8fE51bWJlci5pc05hTihOdW1iZXIoYikpKXRocm93IG5ldyBUeXBlRXJyb3IoIkJvdGggYXJndW1lbnRzIHRvIHJhbmdlIG11c3QgYmUgbnVtYmVycyIpO2lmKGI8YSlyZXR1cm5bXTtjb25zdCBjPWItYSxkPUFycmF5KGMpO2ZvcihsZXQgZT0wO2U8YztlKyspZFtlXT1hK2U7cmV0dXJuIGR9CmZ1bmN0aW9uIHJlamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9PnJlamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6ZmlsdGVyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYz0+IWEoYyksYil9ZnVuY3Rpb24gcmVwZWF0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+cmVwZWF0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTpBcnJheShiKS5maWxsKGEpfWZ1bmN0aW9uIHJlcGxhY2VGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtyZXR1cm4gYy5yZXBsYWNlKGEsYil9CmNvbnN0IHJlcGxhY2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKHJlcGxhY2VGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKTtmdW5jdGlvbiByZXZlcnNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuInN0cmluZyI9PT10eXBlb2YgYT9hLnNwbGl0KCIiKS5yZXZlcnNlKCkuam9pbigiIik6YS5zbGljZSgpLnJldmVyc2UoKX1mdW5jdGlvbiBzZXRGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtyZXR1cm4gb3ZlciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYWx3YXlzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYiksYyl9CmNvbnN0IHNldCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzPWN1cnJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoc2V0Rm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyk7ZnVuY3Rpb24gc2xpY2VGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtyZXR1cm4gYy5zbGljZShhLGIpfWNvbnN0IHNsaWNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM9Y3VycnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhzbGljZUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpOwpmdW5jdGlvbiBzb3J0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+c29ydCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6Y2xvbmVMaXN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYikuc29ydChhKX1mdW5jdGlvbiBzb3J0QnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5zb3J0QnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOmNsb25lTGlzdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIpLnNvcnQoKGMsZCk9PntjPWEoYyk7ZD1hKGQpO3JldHVybiBjPT09ZD8wOmM8ZD8tMToxfSl9CmZ1bmN0aW9uIHNwbGl0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/Yz0+c3BsaXQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOmIuc3BsaXQoYSl9ZnVuY3Rpb24gbWF5YmUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIsYyl7Yj1hJiYiRnVuY3Rpb24iPT09dHlwZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIpP2IoKTpiO2M9YXx8IkZ1bmN0aW9uIiE9PXR5cGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjKT9jOmMoKTtyZXR1cm4gYT9iOmN9CmZ1bmN0aW9uIHRha2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT50YWtlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTowPmE/Yi5zbGljZSgpOiJzdHJpbmciPT09dHlwZW9mIGI/Yi5zbGljZSgwLGEpOmJhc2VTbGljZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIsMCxhKX0KZnVuY3Rpb24gc3BsaXRBdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGQ9PnNwbGl0QXQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGQpO2lmKCFiKXRocm93IG5ldyBUeXBlRXJyb3IoYENhbm5vdCByZWFkIHByb3BlcnR5ICdzbGljZScgb2YgJHtifWApO2lmKCFpc0FycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYikmJiJzdHJpbmciIT09dHlwZW9mIGIpcmV0dXJuW1tdLFtdXTtjb25zdCBjPW1heWJlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoMD5hLDA+Yi5sZW5ndGgrYT8wOmIubGVuZ3RoK2EsYSk7cmV0dXJuW3Rha2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjLGIpLGRyb3AkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjLApiKV19ZnVuY3Rpb24gc3BsaXRFdmVyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGU9PnNwbGl0RXZlcnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGUpO2lmKDE+YSl0aHJvdyBFcnJvcigiRmlyc3QgYXJndW1lbnQgdG8gc3BsaXRFdmVyeSBtdXN0IGJlIGEgcG9zaXRpdmUgaW50ZWdlciIpO2NvbnN0IGM9W107bGV0IGQ9MDtmb3IoO2Q8Yi5sZW5ndGg7KWMucHVzaChiLnNsaWNlKGQsZCs9YSkpO3JldHVybiBjfQpmdW5jdGlvbiBzcGxpdFdoZW4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBnPT5zcGxpdFdoZW4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGcpO2lmKCFiKXRocm93IG5ldyBUeXBlRXJyb3IoYENhbm5vdCByZWFkIHByb3BlcnR5ICdsZW5ndGgnIG9mICR7Yn1gKTtjb25zdCBjPVtdLGQ9W107bGV0IGU9ITEsZj0tMTtmb3IoO2YrKzxiLmxlbmd0aC0xOyllP2QucHVzaChiW2ZdKTphKGJbZl0pPyhkLnB1c2goYltmXSksZT0hMCk6Yy5wdXNoKGJbZl0pO3JldHVybltjLGRdfQpmdW5jdGlvbiBzdGFydHNXaXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZD0+c3RhcnRzV2l0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZCk7aWYoInN0cmluZyI9PT10eXBlb2YgYilyZXR1cm4gYi5zdGFydHNXaXRoKGEpO2lmKCFpc0FycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSkpcmV0dXJuITE7bGV0IGM9ITA7cmV0dXJuIGEuZmlsdGVyKChkLGUpPT57aWYoIWMpcmV0dXJuITE7KGQ9ZXF1YWxzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoZCxiW2VdKSl8fChjPSExKTtyZXR1cm4gZH0pLmxlbmd0aD09PWEubGVuZ3RofQpmdW5jdGlvbiBzdWJ0cmFjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9PnN1YnRyYWN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTphLWJ9CmZ1bmN0aW9uIHN5bW1ldHJpY0RpZmZlcmVuY2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT5zeW1tZXRyaWNEaWZmZXJlbmNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTpjb25jYXQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhmaWx0ZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjPT4haW5jbHVkZXMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhjLGIpLGEpLGZpbHRlciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGM9PiFpbmNsdWRlcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGMsYSksYikpfQpmdW5jdGlvbiBUJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoKXtyZXR1cm4hMH1mdW5jdGlvbiB0YWlsJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuIGRyb3AkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcygxLGEpfQpmdW5jdGlvbiB0YWtlTGFzdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGU9PnRha2VMYXN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxlKTtjb25zdCBjPWIubGVuZ3RoO2lmKDA+YSlyZXR1cm4gYi5zbGljZSgpO2xldCBkPWE+Yz9jOmE7cmV0dXJuInN0cmluZyI9PT10eXBlb2YgYj9iLnNsaWNlKGMtZCk6YmFzZVNsaWNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYixjLWQsYyl9CmZ1bmN0aW9uIHRha2VMYXN0V2hpbGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBmPT50YWtlTGFzdFdoaWxlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxmKTtpZigwPT09Yi5sZW5ndGgpcmV0dXJuIGI7bGV0IGM9ITE7Y29uc3QgZD1bXTtsZXQgZT1iLmxlbmd0aDtmb3IoOyFjfHwwPT09ZTspZS0tLCExPT09YShiW2VdKT9jPSEwOmN8fGQucHVzaChiW2VdKTtyZXR1cm4gaXNBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIpP2QucmV2ZXJzZSgpOmQucmV2ZXJzZSgpLmpvaW4oIiIpfQpmdW5jdGlvbiB0YWtlV2hpbGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBnPT50YWtlV2hpbGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGcpO2NvbnN0IGM9aXNBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGIpO2lmKCFjJiYic3RyaW5nIiE9PXR5cGVvZiBiKXRocm93IEVycm9yKCJgaXRlcmFibGVgIGlzIG5laXRoZXIgbGlzdCBub3IgYSBzdHJpbmciKTtsZXQgZD0hMDtjb25zdCBlPVtdO2xldCBmPS0xO2Zvcig7ZisrPGIubGVuZ3RoLTE7KWEoYltmXSk/ZCYmZS5wdXNoKGJbZl0pOmQmJihkPSExKTtyZXR1cm4gYz9lOmUuam9pbigiIil9CmZ1bmN0aW9uIHRhcCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGM9PnRhcCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk7YShiKTtyZXR1cm4gYn1mdW5jdGlvbiB0ZXN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gYz0+dGVzdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk7aWYoInN0cmluZyI9PT10eXBlb2YgYSl0aHJvdyBuZXcgVHlwZUVycm9yKGBcdTIwMTh0ZXN0XHUyMDE5IHJlcXVpcmVzIGEgdmFsdWUgb2YgdHlwZSBSZWdFeHAgYXMgaXRzIGZpcnN0IGFyZ3VtZW50OyByZWNlaXZlZCAiJHthfSJgKTtyZXR1cm4tMSE9PWIuc2VhcmNoKGEpfQpmdW5jdGlvbiB0aW1lcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGM9PnRpbWVzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTtpZighaXNJbnRlZ2VyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYil8fDA+Yil0aHJvdyBuZXcgUmFuZ2VFcnJvcigibiBtdXN0IGJlIGFuIGludGVnZXIiKTtyZXR1cm4gbWFwJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxyYW5nZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKDAsYikpfWZ1bmN0aW9uIHRvTG93ZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4gYS50b0xvd2VyQ2FzZSgpfQpmdW5jdGlvbiB0b1BhaXJzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuIE9iamVjdC5lbnRyaWVzKGEpfWZ1bmN0aW9uIHRvU3RyaW5nJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuIGEudG9TdHJpbmcoKX1mdW5jdGlvbiB0b1VwcGVyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuIGEudG9VcHBlckNhc2UoKX1mdW5jdGlvbiB0cmFuc3Bvc2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4gYS5yZWR1Y2UoKGIsYyk9PntjLmZvckVhY2goKGQsZSk9PmlzQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiW2VdKT9iW2VdLnB1c2goZCk6Yi5wdXNoKFtkXSkpO3JldHVybiBifSxbXSl9CmZ1bmN0aW9uIHRyaW0kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKXtyZXR1cm4gYS50cmltKCl9Y29uc3QgaXNGdW5jdGlvbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzPWE9PlsiUHJvbWlzZSIsIkZ1bmN0aW9uIl0uaW5jbHVkZXModHlwZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpKTsKZnVuY3Rpb24gdHJ5Q2F0Y2gkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKCFpc0Z1bmN0aW9uJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSkpdGhyb3cgRXJyb3IoYFIudHJ5Q2F0Y2ggfCBmbiAnJHthfSdgKTtjb25zdCBjPWlzRnVuY3Rpb24kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiKTtyZXR1cm4oLi4uZCk9Pnt0cnl7cmV0dXJuIGEoLi4uZCl9Y2F0Y2goZSl7cmV0dXJuIGM/YihlLC4uLmQpOmJ9fX1mdW5jdGlvbiB1bmFwcGx5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSl7cmV0dXJuIGZ1bmN0aW9uKC4uLmIpe3JldHVybiBhLmNhbGwodGhpcyxiKX19CmZ1bmN0aW9uIHVuaW9uJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZD0+dW5pb24kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGQpO2NvbnN0IGM9Y2xvbmVMaXN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSk7Yi5mb3JFYWNoKGQ9PntpbmNsdWRlcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGQsYSl8fGMucHVzaChkKX0pO3JldHVybiBjfQpmdW5jdGlvbiB1bmlxQnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBkPT51bmlxQnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGQpO2NvbnN0IGM9bmV3IFNldDtyZXR1cm4gYi5maWx0ZXIoZD0+e2lmKGMuaGFzKGEoZCkpKXJldHVybiExO2MuYWRkKGEoZCkpO3JldHVybiEwfSl9ZnVuY3Rpb24gaW5jbHVkZXNXaXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiLGMpe2xldCBkPSExLGU9LTE7Zm9yKDsrK2U8Yy5sZW5ndGgmJiFkOylhKGIsY1tlXSkmJihkPSEwKTtyZXR1cm4gZH0KZnVuY3Rpb24gdW5pcVdpdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe2lmKDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBlPT51bmlxV2l0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZSk7bGV0IGM9LTE7Y29uc3QgZD1bXTtmb3IoOysrYzxiLmxlbmd0aDspe2NvbnN0IGU9YltjXTtpbmNsdWRlc1dpdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGUsZCl8fGQucHVzaChlKX1yZXR1cm4gZH1mdW5jdGlvbiB1bmxlc3MkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT51bmxlc3MkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOmM9PmEoYyk/YzpiKGMpfQpmdW5jdGlvbiB1bndpbmQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT51bndpbmQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOmlzQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiW2FdKT9tYXBBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGM9Pl9vYmplY3RTcHJlYWQyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoX29iamVjdFNwcmVhZDIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyh7fSxiKSx7fSx7W2FdOmN9KSxiW2FdKTpbYl19CmZ1bmN0aW9uIHZhbHVlcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpe3JldHVybiJPYmplY3QiIT09dHlwZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEpP1tdOk9iamVjdC52YWx1ZXMoYSl9Y29uc3QgQ29uc3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcz1hPT4oe3g6YSxtYXA6Yj0+Q29uc3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhKX0pO2Z1bmN0aW9uIHZpZXckJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT52aWV3JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxjKTphKENvbnN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpKGIpLnh9CmZ1bmN0aW9uIHdoZW5GbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYixjKXtyZXR1cm4gYShjKT9iKGMpOmN9Y29uc3Qgd2hlbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzPWN1cnJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMod2hlbkZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpO2Z1bmN0aW9uIHdoZXJlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZih2b2lkIDA9PT1iKXJldHVybiBkPT53aGVyZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsZCk7bGV0IGM9ITA7Zm9yKGNvbnN0IGQgaW4gYSl7aWYoIWMpY29udGludWU7Y29uc3QgZT1hW2RdKGJbZF0pO2MmJiExPT09ZSYmKGM9ITEpfXJldHVybiBjfQpmdW5jdGlvbiB3aGVyZUFueSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYodm9pZCAwPT09YilyZXR1cm4gYz0+d2hlcmVBbnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpO2Zvcihjb25zdCBjIGluIGEpaWYoYVtjXShiW2NdKSlyZXR1cm4hMDtyZXR1cm4hMX0KZnVuY3Rpb24gd2hlcmVFcSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGQ9PndoZXJlRXEkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGQpO2NvbnN0IGM9ZmlsdGVyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoKGQsZSk9PmVxdWFscyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGQsYltlXSksYSk7cmV0dXJuIE9iamVjdC5rZXlzKGMpLmxlbmd0aD09PU9iamVjdC5rZXlzKGEpLmxlbmd0aH0KZnVuY3Rpb24gd2l0aG91dCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIHZvaWQgMD09PWI/Yz0+d2l0aG91dCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6cmVkdWNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoKGMsZCk9Pi0xPF9pbmRleE9mJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoZCxhKT9jOmMuY29uY2F0KGQpLFtdLGIpfWZ1bmN0aW9uIHhvciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2M9PnhvciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGEsYyk6ISFhJiYhYnx8ISFiJiYhYX0KZnVuY3Rpb24gemlwJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxiKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZT0+emlwJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYSxlKTtjb25zdCBjPVtdLGQ9TWF0aC5taW4oYS5sZW5ndGgsYi5sZW5ndGgpO2ZvcihsZXQgZT0wO2U8ZDtlKyspY1tlXT1bYVtlXSxiW2VdXTtyZXR1cm4gY31mdW5jdGlvbiB6aXBPYmokJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9jPT56aXBPYmokJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGMpOnRha2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiLmxlbmd0aCxhKS5yZWR1Y2UoKGMsZCxlKT0+e2NbZF09YltlXTtyZXR1cm4gY30se30pfQpmdW5jdGlvbiB6aXBXaXRoRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhhLGIsYyl7cmV0dXJuIHRha2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhiLmxlbmd0aD5jLmxlbmd0aD9jLmxlbmd0aDpiLmxlbmd0aCxiKS5tYXAoKGQsZSk9PmEoZCxjW2VdKSl9Y29uc3QgemlwV2l0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzPWN1cnJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoemlwV2l0aEZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMpO3ZhciBtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM9e307bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLkY9RiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuVD1UJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLl9fZmluZEhpZ2hlc3RBcml0eT1fX2ZpbmRIaWdoZXN0QXJpdHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuX2FyaXR5PV9hcml0eSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5faW5kZXhPZj1faW5kZXhPZiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5fbGFzdEluZGV4T2Y9X2xhc3RJbmRleE9mJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Cm1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5fcGlwZT1fcGlwZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5hZGQ9YWRkJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmFkanVzdD1hZGp1c3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuYWxsPWFsbCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5hbGxQYXNzPWFsbFBhc3MkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmFsd2F5cz1hbHdheXMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuYW5kPWFuZCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5hbnk9YW55JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmFueVBhc3M9YW55UGFzcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5hcHBlbmQ9YXBwZW5kJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Cm1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5hcHBseT1hcHBseSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5hcHBseVNwZWM9YXBwbHlTcGVjJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmFzc29jPWFzc29jJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmFzc29jUGF0aD1hc3NvY1BhdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuYmluZD1iaW5kJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Cm1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5ib3RoPWJvdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuY2hhaW49Y2hhaW4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuY2xhbXA9Y2xhbXAkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuY2xvbmU9Y2xvbmUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuY29tcGxlbWVudD1jb21wbGVtZW50JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Cm1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5jb21wb3NlPWNvbXBvc2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuY29uY2F0PWNvbmNhdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5jb25kPWNvbmQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuY29udmVyZ2U9Y29udmVyZ2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuY291bnQ9Y291bnQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmNvdW50Qnk9Y291bnRCeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5jdXJyeT1jdXJyeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5jdXJyeU49Y3VycnlOJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmRlYz1kZWMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuZGVmYXVsdFRvPWRlZmF1bHRUbyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuZGlmZmVyZW5jZT1kaWZmZXJlbmNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmRpc3NvYz1kaXNzb2MkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuZGl2aWRlPWRpdmlkZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5kcm9wPWRyb3AkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuZHJvcExhc3Q9ZHJvcExhc3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmRyb3BMYXN0V2hpbGU9ZHJvcExhc3RXaGlsZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5kcm9wUmVwZWF0cz1kcm9wUmVwZWF0cyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5kcm9wUmVwZWF0c1dpdGg9ZHJvcFJlcGVhdHNXaXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmRyb3BXaGlsZT1kcm9wV2hpbGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmVpdGhlcj1laXRoZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuZW5kc1dpdGg9ZW5kc1dpdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuZXFQcm9wcz1lcVByb3BzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmVxdWFscz1lcXVhbHMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuZXZvbHZlPWV2b2x2ZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuZXZvbHZlQXJyYXk9ZXZvbHZlQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuZXZvbHZlT2JqZWN0PWV2b2x2ZU9iamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5maWx0ZXI9ZmlsdGVyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmZpbHRlckFycmF5PWZpbHRlckFycmF5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmZpbHRlck9iamVjdD1maWx0ZXJPYmplY3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmZpbmQ9ZmluZCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5maW5kSW5kZXg9ZmluZEluZGV4JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmZpbmRMYXN0PWZpbmRMYXN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmZpbmRMYXN0SW5kZXg9ZmluZExhc3RJbmRleCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5mbGF0dGVuPWZsYXR0ZW4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmZsaXA9ZmxpcCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5mb3JFYWNoPWZvckVhY2gkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuZnJvbVBhaXJzPWZyb21QYWlycyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5ncm91cEJ5PWdyb3VwQnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuZ3JvdXBXaXRoPWdyb3VwV2l0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuaGFzPWhhcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5oYXNQYXRoPWhhc1BhdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuaGVhZD1oZWFkJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmlkZW50aWNhbD1pZGVudGljYWwkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuaWRlbnRpdHk9aWRlbnRpdHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmlmRWxzZT1pZkVsc2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuaW5jPWluYyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5pbmNsdWRlcz1pbmNsdWRlcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5pbmRleEJ5PWluZGV4QnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuaW5kZXhPZj1pbmRleE9mJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Cm1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5pbml0PWluaXQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuaW50ZXJzZWN0aW9uPWludGVyc2VjdGlvbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5pbnRlcnNwZXJzZT1pbnRlcnNwZXJzZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5pcz1pcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5pc0VtcHR5PWlzRW1wdHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmlzTmlsPWlzTmlsJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmpvaW49am9pbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5qdXh0PWp1eHQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMua2V5cz1rZXlzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLmxhc3Q9bGFzdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubGFzdEluZGV4T2Y9bGFzdEluZGV4T2YkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubGVuZ3RoPWxlbmd0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5sZW5zPWxlbnMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubGVuc0luZGV4PWxlbnNJbmRleCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5sZW5zUGF0aD1sZW5zUGF0aCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubGVuc1Byb3A9bGVuc1Byb3AkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubWFwPW1hcCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5tYXBBcnJheT1tYXBBcnJheSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5tYXBPYmpJbmRleGVkPW1hcE9iamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5tYXBPYmplY3Q9bWFwT2JqZWN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Cm1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5tYXRjaD1tYXRjaCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5tYXRoTW9kPW1hdGhNb2QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubWF4PW1heCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5tYXhCeT1tYXhCeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5tYXhCeUZuPW1heEJ5Rm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLm1lYW49bWVhbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5tZWRpYW49bWVkaWFuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLm1lcmdlPW1lcmdlUmlnaHQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubWVyZ2VBbGw9bWVyZ2VBbGwkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubWVyZ2VEZWVwUmlnaHQ9bWVyZ2VEZWVwUmlnaHQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLm1lcmdlTGVmdD1tZXJnZUxlZnQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubWVyZ2VSaWdodD1tZXJnZVJpZ2h0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLm1lcmdlV2l0aD1tZXJnZVdpdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubWluPW1pbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5taW5CeT1taW5CeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubWluQnlGbj1taW5CeUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLm1vZGlmeT1tb2RpZnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubW9kaWZ5UGF0aD1tb2RpZnlQYXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLm1vZGlmeVBhdGhGbj1tb2RpZnlQYXRoRm4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubW9kdWxvPW1vZHVsbyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubW92ZT1tb3ZlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLm11bHRpcGx5PW11bHRpcGx5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLm5lZ2F0ZT1uZWdhdGUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMubm9uZT1ub25lJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLm5vdD1ub3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLm50aD1udGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMub2JqT2Y9b2JqT2YkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMub2Y9b2YkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMub21pdD1vbWl0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLm9uPW9uJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Cm1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5vbmNlPW9uY2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMub3I9b3IkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMub3Zlcj1vdmVyJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnBhcnRpYWw9cGFydGlhbCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5wYXJ0aWFsT2JqZWN0PXBhcnRpYWxPYmplY3QkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnBhcnRpdGlvbj1wYXJ0aXRpb24kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMucGFydGl0aW9uQXJyYXk9cGFydGl0aW9uQXJyYXkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMucGFydGl0aW9uT2JqZWN0PXBhcnRpdGlvbk9iamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5wYXRoPXBhdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMucGF0aEVxPXBhdGhFcSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMucGF0aE9yPXBhdGhPciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5wYXRocz1wYXRocyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5waWNrPXBpY2skJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMucGlja0FsbD1waWNrQWxsJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnBpcGU9cGlwZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMucGx1Y2s9cGx1Y2skJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMucHJlcGVuZD1wcmVwZW5kJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnByb2R1Y3Q9cHJvZHVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5wcm9wPXByb3AkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMucHJvcEVxPXByb3BFcSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMucHJvcElzPXByb3BJcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5wcm9wT3I9cHJvcE9yJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnByb3BTYXRpc2ZpZXM9cHJvcFNhdGlzZmllcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5wcm9wcz1wcm9wcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5yYW5nZT1yYW5nZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMucmVkdWNlPXJlZHVjZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5yZWR1Y2VGbj1yZWR1Y2VGbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5yZWR1Y2VTdG9wcGVyPXJlZHVjZVN0b3BwZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMucmVqZWN0PXJlamVjdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5yZXBlYXQ9cmVwZWF0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Cm1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5yZXBsYWNlPXJlcGxhY2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMucmV2ZXJzZT1yZXZlcnNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnNldD1zZXQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuc2xpY2U9c2xpY2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuc29ydD1zb3J0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Cm1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5zb3J0Qnk9c29ydEJ5JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnNwbGl0PXNwbGl0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnNwbGl0QXQ9c3BsaXRBdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy5zcGxpdEV2ZXJ5PXNwbGl0RXZlcnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuc3BsaXRXaGVuPXNwbGl0V2hlbiQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuc3RhcnRzV2l0aD1zdGFydHNXaXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnN1YnRyYWN0PXN1YnRyYWN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnN1bT1zdW0kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuc3ltbWV0cmljRGlmZmVyZW5jZT1zeW1tZXRyaWNEaWZmZXJlbmNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnRhaWw9dGFpbCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzOwptb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMudGFrZT10YWtlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnRha2VMYXN0PXRha2VMYXN0JCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnRha2VMYXN0V2hpbGU9dGFrZUxhc3RXaGlsZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy50YWtlV2hpbGU9dGFrZVdoaWxlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnRhcD10YXAkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnRlc3Q9dGVzdCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy50aW1lcz10aW1lcyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy50b0xvd2VyPXRvTG93ZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMudG9QYWlycz10b1BhaXJzJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnRvU3RyaW5nPXRvU3RyaW5nJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Cm1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy50b1VwcGVyPXRvVXBwZXIkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMudHJhbnNwb3NlPXRyYW5zcG9zZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy50cmltPXRyaW0kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMudHJ5Q2F0Y2g9dHJ5Q2F0Y2gkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMudHlwZT10eXBlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Cm1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy51bmFwcGx5PXVuYXBwbHkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMudW5pb249dW5pb24kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMudW5pcT11bmlxJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnVuaXFCeT11bmlxQnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMudW5pcVdpdGg9dW5pcVdpdGgkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnVubGVzcz11bmxlc3MkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMudW53aW5kPXVud2luZCQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy51cGRhdGU9dXBkYXRlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnVwZGF0ZUZuPXVwZGF0ZUZuJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnZhbHVlcz12YWx1ZXMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczsKbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnZpZXc9dmlldyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy53aGVuPXdoZW4kJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMud2hlcmU9d2hlcmUkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMud2hlcmVBbnk9d2hlcmVBbnkkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMud2hlcmVFcT13aGVyZUVxJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Cm1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy53aXRob3V0PXdpdGhvdXQkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMueG9yPXhvciQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzO21vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcy56aXA9emlwJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7bW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzLnppcE9iaj16aXBPYmokJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qczttb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMuemlwV2l0aD16aXBXaXRoJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanM7Y29uc3QgY3NvdW5kU2V0TWlkaUNhbGxiYWNrcyQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0bWlkaT1hPT5iPT57YS5leHBvcnRzLmNzb3VuZFNldE1pZGlDYWxsYmFja3MoYil9LGNzb3VuZEdldE1JRElEZXZMaXN0JCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRtaWRpPWE9PihiLGMpPT57Y29uc3Qge2J1ZmZlcjpkfT1hLndhc2kubWVtb3J5LGU9YS5leHBvcnRzLmNzb3VuZEdldE1JRElEZXZMaXN0KGIsdm9pZCAwLGM/MTowKTtpZigwPT09ZSlyZXR1cm5bXTtjb25zdCBmPXNpemVvZlN0cnVjdCQkbW9kdWxlJHNyYyR1dGlscyRuYXRpdmVfc2l6ZXMoQ1NfTUlESURFVklDRSQkbW9kdWxlJHNyYyRzdHJ1Y3R1cmVzKSxnPWEuZXhwb3J0cy5hbGxvY0NzTWlkaURldmljZVN0cnVjdChlKTthLmV4cG9ydHMuY3NvdW5kR2V0TUlESURldkxpc3QoYixnLGM/MTowKTtjb25zdCBoPW5ldyBVaW50OEFycmF5KGQsZyxmKmUpO2I9cmFuZ2UkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcygwLAplKS5tYXAoaz0+c3RydWN0QnVmZmVyVG9PYmplY3QkJG1vZHVsZSRzcmMkdXRpbHMkc3RydWN0dXJlX2J1ZmZlcl90b19vYmplY3QoQ1NfTUlESURFVklDRSQkbW9kdWxlJHNyYyRzdHJ1Y3R1cmVzLGguc3ViYXJyYXkoaypmLGYpKSk7YS5leHBvcnRzLmZyZWVDc01pZGlEZXZpY2VTdHJ1Y3QoZyk7cmV0dXJuIGJ9O2Nzb3VuZEdldE1JRElEZXZMaXN0JCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRtaWRpLnRvU3RyaW5nPSgpPT4iZ2V0TUlESURldkxpc3QgPSBhc3luYyAoaXNPdXRwdXQpID0+IE9iamVjdDsiOwpjb25zdCBjc291bmRHZXRSdE1pZGlOYW1lJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRtaWRpPWE9PmI9Pnt2YXIge2J1ZmZlcjpjfT1hLndhc2kubWVtb3J5O2I9YS5leHBvcnRzLmdldFJ0TWlkaU5hbWUoYik7Yz1uZXcgVWludDhBcnJheShjLGIsMTI4KTtyZXR1cm4gdHJpbU51bGwkJG1vZHVsZSRzcmMkdXRpbHMkdHJpbV9udWxsKHVpbnQyU3RyaW5nJCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnMoYykpfHwiIn07Y3NvdW5kR2V0UnRNaWRpTmFtZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0bWlkaS50b1N0cmluZz0oKT0+ImdldFJ0TWlkaU5hbWUgPSBhc3luYyAoKSA9PiBTdHJpbmc7IjsKY29uc3QgY3NvdW5kR2V0TWlkaU91dEZpbGVOYW1lJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRtaWRpPWE9PmI9Pnt2YXIge2J1ZmZlcjpjfT1hLndhc2kubWVtb3J5O2I9YS5leHBvcnRzLmdldE1pZGlPdXRGaWxlTmFtZShiKTtjPW5ldyBVaW50OEFycmF5KGMsYiwxMjgpO2ImJjA8Yi5sZW5ndGgmJmZyZWVTdHJpbmdQdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYik7cmV0dXJuIHRyaW1OdWxsJCRtb2R1bGUkc3JjJHV0aWxzJHRyaW1fbnVsbCh1aW50MlN0cmluZyQkbW9kdWxlJHNyYyR1dGlscyR0ZXh0X2VuY29kZXJzKGMpKXx8IiJ9LF9pc1JlcXVlc3RpbmdSdE1pZGlJbnB1dCQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0bWlkaT1hPT5iPT5hLmV4cG9ydHMuaXNSZXF1ZXN0aW5nUnRNaWRpSW5wdXQoYiksY3NvdW5kUHVzaE1pZGlNZXNzYWdlJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRtaWRpPWE9PihiLGMsZCxlKT0+e2EuZXhwb3J0cy5wdXNoTWlkaU1lc3NhZ2UoYiwKYyxkLGUpfTtjc291bmRQdXNoTWlkaU1lc3NhZ2UkJG1vZHVsZSRzcmMkbW9kdWxlcyRydG1pZGkudG9TdHJpbmc9KCk9PiJtaWRpTWVzc2FnZSA9IGFzeW5jIChzdGF0dXMsIGRhdGExLCBkYXRhMikgPT4gdW5kZWZpbmVkOyI7dmFyIG1vZHVsZSRzcmMkbW9kdWxlcyRydG1pZGk9e307bW9kdWxlJHNyYyRtb2R1bGVzJHJ0bWlkaS5faXNSZXF1ZXN0aW5nUnRNaWRpSW5wdXQ9X2lzUmVxdWVzdGluZ1J0TWlkaUlucHV0JCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRtaWRpO21vZHVsZSRzcmMkbW9kdWxlcyRydG1pZGkuY3NvdW5kR2V0TUlESURldkxpc3Q9Y3NvdW5kR2V0TUlESURldkxpc3QkJG1vZHVsZSRzcmMkbW9kdWxlcyRydG1pZGk7bW9kdWxlJHNyYyRtb2R1bGVzJHJ0bWlkaS5jc291bmRHZXRNaWRpT3V0RmlsZU5hbWU9Y3NvdW5kR2V0TWlkaU91dEZpbGVOYW1lJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRtaWRpOwptb2R1bGUkc3JjJG1vZHVsZXMkcnRtaWRpLmNzb3VuZEdldFJ0TWlkaU5hbWU9Y3NvdW5kR2V0UnRNaWRpTmFtZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0bWlkaTttb2R1bGUkc3JjJG1vZHVsZXMkcnRtaWRpLmNzb3VuZFB1c2hNaWRpTWVzc2FnZT1jc291bmRQdXNoTWlkaU1lc3NhZ2UkJG1vZHVsZSRzcmMkbW9kdWxlcyRydG1pZGk7bW9kdWxlJHNyYyRtb2R1bGVzJHJ0bWlkaS5jc291bmRTZXRNaWRpQ2FsbGJhY2tzPWNzb3VuZFNldE1pZGlDYWxsYmFja3MkJG1vZHVsZSRzcmMkbW9kdWxlcyRydG1pZGk7Y29uc3QgY3NvdW5kSW5wdXRNZXNzYWdlJCRtb2R1bGUkc3JjJG1vZHVsZXMkY29udHJvbF9ldmVudHM9YT0+KGIsYyk9PntjPXN0cmluZzJwdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYyk7Yj1hLmV4cG9ydHMuY3NvdW5kSW5wdXRNZXNzYWdlKGIsYyk7ZnJlZVN0cmluZ1B0ciQkbW9kdWxlJHNyYyR1dGlscyRzdHJpbmdfcG9pbnRlcnMoYSxjKTtyZXR1cm4gYn07Y3NvdW5kSW5wdXRNZXNzYWdlJCRtb2R1bGUkc3JjJG1vZHVsZXMkY29udHJvbF9ldmVudHMudG9TdHJpbmc9KCk9PiJpbnB1dE1lc3NhZ2UgPSBhc3luYyAoc2NvcmVFdmVudCkgPT4gTnVtYmVyOyI7CmNvbnN0IGNzb3VuZElucHV0TWVzc2FnZUFzeW5jJCRtb2R1bGUkc3JjJG1vZHVsZXMkY29udHJvbF9ldmVudHM9YT0+KGIsYyk9PntjPXN0cmluZzJwdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYyk7Yj1hLmV4cG9ydHMuY3NvdW5kSW5wdXRNZXNzYWdlQXN5bmMoYixjKTtmcmVlU3RyaW5nUHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycyhhLGMpO3JldHVybiBifTtjc291bmRJbnB1dE1lc3NhZ2VBc3luYyQkbW9kdWxlJHNyYyRtb2R1bGVzJGNvbnRyb2xfZXZlbnRzLnRvU3RyaW5nPSgpPT4iaW5wdXRNZXNzYWdlQXN5bmMgPSBhc3luYyAoc2NvcmVFdmVudCkgPT4gTnVtYmVyOyI7CmNvbnN0IGNzb3VuZEdldENvbnRyb2xDaGFubmVsJCRtb2R1bGUkc3JjJG1vZHVsZXMkY29udHJvbF9ldmVudHM9YT0+KGIsYyk9PntjPXN0cmluZzJwdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYyk7Yj1hLmV4cG9ydHMuY3NvdW5kR2V0Q29udHJvbENoYW5uZWxXYXNpKGIsYyk7ZnJlZVN0cmluZ1B0ciQkbW9kdWxlJHNyYyR1dGlscyRzdHJpbmdfcG9pbnRlcnMoYSxjKTtyZXR1cm4gYn07Y3NvdW5kR2V0Q29udHJvbENoYW5uZWwkJG1vZHVsZSRzcmMkbW9kdWxlcyRjb250cm9sX2V2ZW50cy50b1N0cmluZz0oKT0+ImdldENvbnRyb2xDaGFubmVsID0gYXN5bmMgKGNoYW5uZWxOYW1lKSA9PiBOdW1iZXI7IjsKY29uc3QgY3NvdW5kU2V0Q29udHJvbENoYW5uZWwkJG1vZHVsZSRzcmMkbW9kdWxlcyRjb250cm9sX2V2ZW50cz1hPT4oYixjLGQpPT57Yz1zdHJpbmcycHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycyhhLGMpO2EuZXhwb3J0cy5jc291bmRTZXRDb250cm9sQ2hhbm5lbChiLGMsZCk7ZnJlZVN0cmluZ1B0ciQkbW9kdWxlJHNyYyR1dGlscyRzdHJpbmdfcG9pbnRlcnMoYSxjKX07Y3NvdW5kU2V0Q29udHJvbENoYW5uZWwkJG1vZHVsZSRzcmMkbW9kdWxlcyRjb250cm9sX2V2ZW50cy50b1N0cmluZz0oKT0+InNldENvbnRyb2xDaGFubmVsID0gYXN5bmMgKGNoYW5uZWxOYW1lLCB2YWx1ZSkgPT4gdm9pZDsiOwpjb25zdCBjc291bmRHZXRTdHJpbmdDaGFubmVsJCRtb2R1bGUkc3JjJG1vZHVsZXMkY29udHJvbF9ldmVudHM9YT0+KGIsYyk9PntjPXN0cmluZzJwdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYyk7Yj1hLmV4cG9ydHMuY3NvdW5kR2V0U3RyaW5nQ2hhbm5lbFdhc2koYixjKTtjb25zdCBkPXB0cjJzdHJpbmckJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYik7ZnJlZVN0cmluZ1B0ciQkbW9kdWxlJHNyYyR1dGlscyRzdHJpbmdfcG9pbnRlcnMoYSxjKTtmcmVlU3RyaW5nUHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycyhhLGIpO3JldHVybiBkfTtjc291bmRHZXRTdHJpbmdDaGFubmVsJCRtb2R1bGUkc3JjJG1vZHVsZXMkY29udHJvbF9ldmVudHMudG9TdHJpbmc9KCk9PiJnZXRTdHJpbmdDaGFubmVsID0gYXN5bmMgKGNoYW5uZWxOYW1lKSA9PiBTdHJpbmc7IjsKY29uc3QgY3NvdW5kU2V0U3RyaW5nQ2hhbm5lbCQkbW9kdWxlJHNyYyRtb2R1bGVzJGNvbnRyb2xfZXZlbnRzPWE9PihiLGMsZCk9PntjPXN0cmluZzJwdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYyk7ZD1zdHJpbmcycHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycyhhLGQpO2EuZXhwb3J0cy5jc291bmRTZXRTdHJpbmdDaGFubmVsKGIsYyxkKTtmcmVlU3RyaW5nUHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycyhhLGMpO2ZyZWVTdHJpbmdQdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsZCl9O2Nzb3VuZFNldFN0cmluZ0NoYW5uZWwkJG1vZHVsZSRzcmMkbW9kdWxlcyRjb250cm9sX2V2ZW50cy50b1N0cmluZz0oKT0+InNldFN0cmluZ0NoYW5uZWwgPSBhc3luYyAoY2hhbm5lbE5hbWUsIHZhbHVlKSA9PiB2b2lkOyI7dmFyIG1vZHVsZSRzcmMkbW9kdWxlcyRjb250cm9sX2V2ZW50cz17fTsKbW9kdWxlJHNyYyRtb2R1bGVzJGNvbnRyb2xfZXZlbnRzLmNzb3VuZEdldENvbnRyb2xDaGFubmVsPWNzb3VuZEdldENvbnRyb2xDaGFubmVsJCRtb2R1bGUkc3JjJG1vZHVsZXMkY29udHJvbF9ldmVudHM7bW9kdWxlJHNyYyRtb2R1bGVzJGNvbnRyb2xfZXZlbnRzLmNzb3VuZEdldFN0cmluZ0NoYW5uZWw9Y3NvdW5kR2V0U3RyaW5nQ2hhbm5lbCQkbW9kdWxlJHNyYyRtb2R1bGVzJGNvbnRyb2xfZXZlbnRzO21vZHVsZSRzcmMkbW9kdWxlcyRjb250cm9sX2V2ZW50cy5jc291bmRJbnB1dE1lc3NhZ2U9Y3NvdW5kSW5wdXRNZXNzYWdlJCRtb2R1bGUkc3JjJG1vZHVsZXMkY29udHJvbF9ldmVudHM7bW9kdWxlJHNyYyRtb2R1bGVzJGNvbnRyb2xfZXZlbnRzLmNzb3VuZElucHV0TWVzc2FnZUFzeW5jPWNzb3VuZElucHV0TWVzc2FnZUFzeW5jJCRtb2R1bGUkc3JjJG1vZHVsZXMkY29udHJvbF9ldmVudHM7Cm1vZHVsZSRzcmMkbW9kdWxlcyRjb250cm9sX2V2ZW50cy5jc291bmRTZXRDb250cm9sQ2hhbm5lbD1jc291bmRTZXRDb250cm9sQ2hhbm5lbCQkbW9kdWxlJHNyYyRtb2R1bGVzJGNvbnRyb2xfZXZlbnRzO21vZHVsZSRzcmMkbW9kdWxlcyRjb250cm9sX2V2ZW50cy5jc291bmRTZXRTdHJpbmdDaGFubmVsPWNzb3VuZFNldFN0cmluZ0NoYW5uZWwkJG1vZHVsZSRzcmMkbW9kdWxlcyRjb250cm9sX2V2ZW50cztjb25zdCBjc291bmRHZXRPdXRwdXROYW1lJCRtb2R1bGUkc3JjJG1vZHVsZXMkZ2VuZXJhbF9pbz1hPT5iPT57dmFyIHtidWZmZXI6Y309YS53YXNpLm1lbW9yeTtiPWEuZXhwb3J0cy5jc291bmRHZXRPdXRwdXROYW1lKGIpO2M9bmV3IFVpbnQ4QXJyYXkoYyxiLDY0KTtyZXR1cm4gdHJpbU51bGwkJG1vZHVsZSRzcmMkdXRpbHMkdHJpbV9udWxsKHVpbnQyU3RyaW5nJCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnMoYykpfHwiIn07Y3NvdW5kR2V0T3V0cHV0TmFtZSQkbW9kdWxlJHNyYyRtb2R1bGVzJGdlbmVyYWxfaW8udG9TdHJpbmc9KCk9PiJnZXRPdXRwdXROYW1lID0gYXN5bmMgKCkgPT4gU3RyaW5nOyI7CmNvbnN0IGNzb3VuZEdldElucHV0TmFtZSQkbW9kdWxlJHNyYyRtb2R1bGVzJGdlbmVyYWxfaW89YT0+Yj0+e3ZhciB7YnVmZmVyOmN9PWEud2FzaS5tZW1vcnk7Yj1hLmV4cG9ydHMuY3NvdW5kR2V0SW5wdXROYW1lKGIpO2M9bmV3IFVpbnQ4QXJyYXkoYyxiLDY0KTtyZXR1cm4gdHJpbU51bGwkJG1vZHVsZSRzcmMkdXRpbHMkdHJpbV9udWxsKHVpbnQyU3RyaW5nJCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnMoYykpfHwiIn07Y3NvdW5kR2V0SW5wdXROYW1lJCRtb2R1bGUkc3JjJG1vZHVsZXMkZ2VuZXJhbF9pby50b1N0cmluZz0oKT0+ImdldElucHV0TmFtZSA9IGFzeW5jIChjc291bmQpID0+IFN0cmluZzsiO3ZhciBtb2R1bGUkc3JjJG1vZHVsZXMkZ2VuZXJhbF9pbz17fTttb2R1bGUkc3JjJG1vZHVsZXMkZ2VuZXJhbF9pby5jc291bmRHZXRJbnB1dE5hbWU9Y3NvdW5kR2V0SW5wdXROYW1lJCRtb2R1bGUkc3JjJG1vZHVsZXMkZ2VuZXJhbF9pbzsKbW9kdWxlJHNyYyRtb2R1bGVzJGdlbmVyYWxfaW8uY3NvdW5kR2V0T3V0cHV0TmFtZT1jc291bmRHZXRPdXRwdXROYW1lJCRtb2R1bGUkc3JjJG1vZHVsZXMkZ2VuZXJhbF9pbztjb25zdCBjc291bmRBcHBlbmRFbnYkJG1vZHVsZSRzcmMkbW9kdWxlcyRleHRyYT1hPT4oYixjLGQpPT57Yz1zdHJpbmcycHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycyhhLGMpO2Q9c3RyaW5nMnB0ciQkbW9kdWxlJHNyYyR1dGlscyRzdHJpbmdfcG9pbnRlcnMoYSxkKTtiPWEuZXhwb3J0cy5jc291bmRBcHBlbmRFbnYoYixjLGQpO2ZyZWVTdHJpbmdQdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYyk7ZnJlZVN0cmluZ1B0ciQkbW9kdWxlJHNyYyR1dGlscyRzdHJpbmdfcG9pbnRlcnMoYSxkKTtyZXR1cm4gYn07Y3NvdW5kQXBwZW5kRW52JCRtb2R1bGUkc3JjJG1vZHVsZXMkZXh0cmEudG9TdHJpbmc9KCk9PiJhcHBlbmRFbnYgPSBhc3luYyAoY3NvdW5kLCB2YXJpYWJsZSwgdmFsdWUpID0+IE51bWJlcjsiO2NvbnN0IGNzb3VuZFNob3VsZERhZW1vbml6ZSQkbW9kdWxlJHNyYyRtb2R1bGVzJGV4dHJhPWE9PmI9PmEuZXhwb3J0cy5jc291bmRTaG91bGREYWVtb25pemUoYik7CnZhciBtb2R1bGUkc3JjJG1vZHVsZXMkZXh0cmE9e307bW9kdWxlJHNyYyRtb2R1bGVzJGV4dHJhLmNzb3VuZEFwcGVuZEVudj1jc291bmRBcHBlbmRFbnYkJG1vZHVsZSRzcmMkbW9kdWxlcyRleHRyYTttb2R1bGUkc3JjJG1vZHVsZXMkZXh0cmEuY3NvdW5kU2hvdWxkRGFlbW9uaXplPWNzb3VuZFNob3VsZERhZW1vbml6ZSQkbW9kdWxlJHNyYyRtb2R1bGVzJGV4dHJhO2NvbnN0IGNzb3VuZElzU2NvcmVQZW5kaW5nJCRtb2R1bGUkc3JjJG1vZHVsZXMkc2NvcmVfaGFuZGxpbmc9YT0+Yj0+YS5leHBvcnRzLmNzb3VuZElzU2NvcmVQZW5kaW5nKGIpO2Nzb3VuZElzU2NvcmVQZW5kaW5nJCRtb2R1bGUkc3JjJG1vZHVsZXMkc2NvcmVfaGFuZGxpbmcudG9TdHJpbmc9KCk9PiJpc1Njb3JlUGVuZGluZyA9IGFzeW5jICgpID0+IE51bWJlcjsiO2NvbnN0IGNzb3VuZFNldFNjb3JlUGVuZGluZyQkbW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nPWE9PihiLGMpPT5hLmV4cG9ydHMuY3NvdW5kU2V0U2NvcmVQZW5kaW5nKGIsYyk7Y3NvdW5kU2V0U2NvcmVQZW5kaW5nJCRtb2R1bGUkc3JjJG1vZHVsZXMkc2NvcmVfaGFuZGxpbmcudG9TdHJpbmc9KCk9PiJzZXRTY29yZVBlbmRpbmcgPSBhc3luYyAocGVuZGluZykgPT4gTnVtYmVyOyI7CmNvbnN0IGNzb3VuZFJlYWRTY29yZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nPWE9PihiLGMpPT57Yz1zdHJpbmcycHRyJCRtb2R1bGUkc3JjJHV0aWxzJHN0cmluZ19wb2ludGVycyhhLGMpO2I9YS5leHBvcnRzLmNzb3VuZFJlYWRTY29yZShiLGMpO2ZyZWVTdHJpbmdQdHIkJG1vZHVsZSRzcmMkdXRpbHMkc3RyaW5nX3BvaW50ZXJzKGEsYyk7cmV0dXJuIGJ9O2Nzb3VuZFJlYWRTY29yZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nLnRvU3RyaW5nPSgpPT4icmVhZFNjb3JlID0gYXN5bmMgKHNjb3JlKSA9PiBOdW1iZXI7Ijtjb25zdCBjc291bmRHZXRTY29yZVRpbWUkJG1vZHVsZSRzcmMkbW9kdWxlcyRzY29yZV9oYW5kbGluZz1hPT5iPT5hLmV4cG9ydHMuY3NvdW5kR2V0U2NvcmVUaW1lKGIpO2Nzb3VuZEdldFNjb3JlVGltZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nLnRvU3RyaW5nPSgpPT4iZ2V0U2NvcmVUaW1lID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7CmNvbnN0IGNzb3VuZEdldFNjb3JlT2Zmc2V0U2Vjb25kcyQkbW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nPWE9PmI9PmEuZXhwb3J0cy5jc291bmRHZXRTY29yZU9mZnNldFNlY29uZHMoYik7Y3NvdW5kR2V0U2NvcmVPZmZzZXRTZWNvbmRzJCRtb2R1bGUkc3JjJG1vZHVsZXMkc2NvcmVfaGFuZGxpbmcudG9TdHJpbmc9KCk9PiJnZXRTY29yZU9mZnNldFNlY29uZHMgPSBhc3luYyAoKSA9PiBOdW1iZXI7Ijtjb25zdCBjc291bmRTZXRTY29yZU9mZnNldFNlY29uZHMkJG1vZHVsZSRzcmMkbW9kdWxlcyRzY29yZV9oYW5kbGluZz1hPT4oYixjKT0+YS5leHBvcnRzLmNzb3VuZFNldFNjb3JlT2Zmc2V0U2Vjb25kcyhiLGMpO2Nzb3VuZFNldFNjb3JlT2Zmc2V0U2Vjb25kcyQkbW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nLnRvU3RyaW5nPSgpPT4ic2V0U2NvcmVPZmZzZXRTZWNvbmRzID0gYXN5bmMgKCkgPT4gTnVtYmVyOyI7CmNvbnN0IGNzb3VuZFJld2luZFNjb3JlJCRtb2R1bGUkc3JjJG1vZHVsZXMkc2NvcmVfaGFuZGxpbmc9YT0+Yj0+YS5leHBvcnRzLmNzb3VuZFJld2luZFNjb3JlKGIpO2Nzb3VuZFJld2luZFNjb3JlJCRtb2R1bGUkc3JjJG1vZHVsZXMkc2NvcmVfaGFuZGxpbmcudG9TdHJpbmc9KCk9PiJyZXdpbmRTY29yZSA9IGFzeW5jICgpID0+IHVuZGVmaW5lZDsiO3ZhciBtb2R1bGUkc3JjJG1vZHVsZXMkc2NvcmVfaGFuZGxpbmc9e307bW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nLmNzb3VuZEdldFNjb3JlT2Zmc2V0U2Vjb25kcz1jc291bmRHZXRTY29yZU9mZnNldFNlY29uZHMkJG1vZHVsZSRzcmMkbW9kdWxlcyRzY29yZV9oYW5kbGluZzttb2R1bGUkc3JjJG1vZHVsZXMkc2NvcmVfaGFuZGxpbmcuY3NvdW5kR2V0U2NvcmVUaW1lPWNzb3VuZEdldFNjb3JlVGltZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nOwptb2R1bGUkc3JjJG1vZHVsZXMkc2NvcmVfaGFuZGxpbmcuY3NvdW5kSXNTY29yZVBlbmRpbmc9Y3NvdW5kSXNTY29yZVBlbmRpbmckJG1vZHVsZSRzcmMkbW9kdWxlcyRzY29yZV9oYW5kbGluZzttb2R1bGUkc3JjJG1vZHVsZXMkc2NvcmVfaGFuZGxpbmcuY3NvdW5kUmVhZFNjb3JlPWNzb3VuZFJlYWRTY29yZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nO21vZHVsZSRzcmMkbW9kdWxlcyRzY29yZV9oYW5kbGluZy5jc291bmRSZXdpbmRTY29yZT1jc291bmRSZXdpbmRTY29yZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nO21vZHVsZSRzcmMkbW9kdWxlcyRzY29yZV9oYW5kbGluZy5jc291bmRTZXRTY29yZU9mZnNldFNlY29uZHM9Y3NvdW5kU2V0U2NvcmVPZmZzZXRTZWNvbmRzJCRtb2R1bGUkc3JjJG1vZHVsZXMkc2NvcmVfaGFuZGxpbmc7bW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nLmNzb3VuZFNldFNjb3JlUGVuZGluZz1jc291bmRTZXRTY29yZVBlbmRpbmckJG1vZHVsZSRzcmMkbW9kdWxlcyRzY29yZV9oYW5kbGluZztjb25zdCBjc291bmRUYWJsZUxlbmd0aCQkbW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlPWE9PihiLGMpPT5hLmV4cG9ydHMuY3NvdW5kVGFibGVMZW5ndGgoYixjKTtjc291bmRUYWJsZUxlbmd0aCQkbW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlLnRvU3RyaW5nPSgpPT4idGFibGVMZW5ndGggPSBhc3luYyAodGFibGVOdW0pID0+IE51bWJlcjsiO2NvbnN0IGNzb3VuZFRhYmxlR2V0JCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGU9YT0+KGIsYyxkKT0+YS5leHBvcnRzLmNzb3VuZFRhYmxlR2V0KGIsYyxkKTtjc291bmRUYWJsZUdldCQkbW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlLnRvU3RyaW5nPSgpPT4idGFibGVHZXQgPSBhc3luYyAodGFibGVOdW0sIHRhYmxlSW5kZXgpID0+IE51bWJlcjsiO2NvbnN0IGNzb3VuZFRhYmxlU2V0JCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGU9YT0+KGIsYyxkLGUpPT5hLmV4cG9ydHMuY3NvdW5kVGFibGVTZXQoYixjLGQsZSk7CmNzb3VuZFRhYmxlU2V0JCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGUudG9TdHJpbmc9KCk9PiJ0YWJsZVNldCA9IGFzeW5jICh0YWJsZU51bSwgdGFibGVJbmRleCwgdmFsdWUpID0+IHVuZGVmaW5lZDsiO2NvbnN0IGNzb3VuZFRhYmxlQ29weUluJCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGU9YT0+KGIsYyxkKT0+e2NvbnN0IGU9YS5leHBvcnRzLmFsbG9jRmxvYXRBcnJheShkLmxlbmd0aCk7KG5ldyBGbG9hdDY0QXJyYXkoYS53YXNpLm1lbW9yeS5idWZmZXIsZSxkLmxlbmd0aCkpLnNldChkKTthLmV4cG9ydHMuY3NvdW5kVGFibGVDb3B5SW4oYixjLGUpO2EuZXhwb3J0cy5mcmVlRmxvYXRBcnJheU1lbShlKX07Y3NvdW5kVGFibGVDb3B5SW4kJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZS50b1N0cmluZz0oKT0+InRhYmxlQ29weUluID0gYXN5bmMgKHRhYmxlTnVtLCBmbG9hdDY0QXJyYXkpID0+IHVuZGVmaW5lZDsiOwpjb25zdCBjc291bmRUYWJsZUNvcHlPdXQkJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZT1hPT4oYixjKT0+e3ZhciBkPWEuZXhwb3J0cy5jc291bmRUYWJsZUxlbmd0aChiLGMpO2lmKDA8ZCl7Y29uc3QgZT1hLmV4cG9ydHMuYWxsb2NGbG9hdEFycmF5KGQpO2EuZXhwb3J0cy5jc291bmRUYWJsZUNvcHlPdXQoYixjLGUpOyh7YnVmZmVyOmJ9PWEud2FzaS5tZW1vcnkpO2Q9bmV3IEZsb2F0NjRBcnJheShiLGUsZCk7YS5leHBvcnRzLmZyZWVGbG9hdEFycmF5TWVtKGUpO3JldHVybiBGbG9hdDY0QXJyYXkuZnJvbShkKX19O2Nzb3VuZFRhYmxlQ29weU91dCQkbW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlLnRvU3RyaW5nPSgpPT4idGFibGVDb3B5T3V0ID0gYXN5bmMgKHRhYmxlTnVtKSA9PiA/RmxvYXQ2NEFycmF5OyI7Y29uc3QgY3NvdW5kR2V0VGFibGUkJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZT1jc291bmRUYWJsZUNvcHlPdXQkJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZTsKY3NvdW5kVGFibGVDb3B5T3V0JCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGUudG9TdHJpbmc9Y3NvdW5kVGFibGVDb3B5T3V0JCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGUudG9TdHJpbmc7Y29uc3QgY3NvdW5kR2V0VGFibGVBcmdzJCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGU9YT0+KGIsYyk9Pntjb25zdCBkPWEuZXhwb3J0cy5hbGxvY0Zsb2F0QXJyYXkoMTAyNCk7YS5leHBvcnRzLmNzb3VuZEdldFRhYmxlQXJncyhiLGQsYyk7KHtidWZmZXI6Yn09YS53YXNpLm1lbW9yeSk7Yj1uZXcgRmxvYXQ2NEFycmF5KGIsZCwxMDI0KTthLmV4cG9ydHMuZnJlZUZsb2F0QXJyYXlNZW0oZCk7cmV0dXJuIGJ9O2Nzb3VuZEdldFRhYmxlQXJncyQkbW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlLnRvU3RyaW5nPSgpPT4iZ2V0VGFibGVBcmdzID0gYXN5bmMgKHRhYmxlTnVtKSA9PiA/RmxvYXQ2NEFycmF5OyI7CmNvbnN0IGNzb3VuZElzTmFtZWRHRU4kJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZT1hPT4oYixjKT0+YS5leHBvcnRzLmNzb3VuZElzTmFtZWRHRU4oYixjKTtjc291bmRJc05hbWVkR0VOJCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGUudG9TdHJpbmc9KCk9PiJpc05hbWVkR0VOID0gYXN5bmMgKHRhYmxlTnVtKSA9PiBudW1iZXI7Ijtjb25zdCBjc291bmRHZXROYW1lZEdFTiQkbW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlPWE9PihiLGMpPT57dmFyIGQ9YS5leHBvcnRzLmNzb3VuZElzTmFtZWRHRU4oYixjKTtpZigwPGQpe2NvbnN0IGU9YS5leHBvcnRzLmFsbG9jU3RyaW5nTWVtKGQpO2EuZXhwb3J0cy5jc291bmRHZXROYW1lZEdFTihiLGUsYyxkKTsoe2J1ZmZlcjpifT1hLndhc2kubWVtb3J5KTtkPW5ldyBVaW50OEFycmF5KGIsZSxkKTtyZXR1cm4gdWludDJTdHJpbmckJG1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVycyhkKX19Owpjc291bmRHZXROYW1lZEdFTiQkbW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlLnRvU3RyaW5nPSgpPT4iZ2V0TmFtZWRHRU4gPSBhc3luYyAodGFibGVOdW0pID0+ID9zdHJpbmc7Ijt2YXIgbW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlPXt9O21vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZS5jc291bmRHZXROYW1lZEdFTj1jc291bmRHZXROYW1lZEdFTiQkbW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlO21vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZS5jc291bmRHZXRUYWJsZT1jc291bmRUYWJsZUNvcHlPdXQkJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZTttb2R1bGUkc3JjJG1vZHVsZXMkdGFibGUuY3NvdW5kR2V0VGFibGVBcmdzPWNzb3VuZEdldFRhYmxlQXJncyQkbW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlO21vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZS5jc291bmRJc05hbWVkR0VOPWNzb3VuZElzTmFtZWRHRU4kJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZTsKbW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlLmNzb3VuZFRhYmxlQ29weUluPWNzb3VuZFRhYmxlQ29weUluJCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGU7bW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlLmNzb3VuZFRhYmxlQ29weU91dD1jc291bmRUYWJsZUNvcHlPdXQkJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZTttb2R1bGUkc3JjJG1vZHVsZXMkdGFibGUuY3NvdW5kVGFibGVHZXQ9Y3NvdW5kVGFibGVHZXQkJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZTttb2R1bGUkc3JjJG1vZHVsZXMkdGFibGUuY3NvdW5kVGFibGVMZW5ndGg9Y3NvdW5kVGFibGVMZW5ndGgkJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZTttb2R1bGUkc3JjJG1vZHVsZXMkdGFibGUuY3NvdW5kVGFibGVTZXQ9Y3NvdW5kVGFibGVTZXQkJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZTtmdW5jdGlvbiB3cml0ZUZpbGUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3b3JrZXJfZnMoYSl7cmV0dXJuKGIsYyxkKT0+e2I9InN0cmluZyI9PT10eXBlb2YgZD9lbmNvZGVyJCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnMuZW5jb2RlKGQpOmQ7YS53YXNpLndyaXRlRmlsZShjLGIpfX13cml0ZUZpbGUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3b3JrZXJfZnMudG9TdHJpbmc9KCk9PiJhc3luYyAocGF0aCwgZGF0YSkgPT4gdm9pZCI7ZnVuY3Rpb24gYXBwZW5kRmlsZSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdvcmtlcl9mcyhhKXtyZXR1cm4oYixjLGQpPT57Yj0ic3RyaW5nIj09PXR5cGVvZiBkP2VuY29kZXIkJG1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVycy5lbmNvZGUoZCk6ZDthLndhc2kuYXBwZW5kRmlsZShjLGIpfX1hcHBlbmRGaWxlJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd29ya2VyX2ZzLnRvU3RyaW5nPSgpPT4iYXN5bmMgKHBhdGgsIGRhdGEpID0+IHZvaWQiOwpmdW5jdGlvbiByZWFkRmlsZSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdvcmtlcl9mcyhhKXtyZXR1cm4oYixjKT0+YS53YXNpLnJlYWRGaWxlKGMpfXJlYWRGaWxlJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd29ya2VyX2ZzLnRvU3RyaW5nPSgpPT4iYXN5bmMgKHBhdGgpID0+ID9VaW50OEFycmF5IjtmdW5jdGlvbiB1bmxpbmskJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3b3JrZXJfZnMoYSl7cmV0dXJuKGIsYyk9PmEud2FzaS51bmxpbmsoYyl9dW5saW5rJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd29ya2VyX2ZzLnRvU3RyaW5nPSgpPT4iYXN5bmMgKHBhdGgpID0+IHZvaWQiO2Z1bmN0aW9uIHJlYWRkaXIkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3b3JrZXJfZnMoYSl7cmV0dXJuKGIsYyk9PmEud2FzaS5yZWFkZGlyKGMpfXJlYWRkaXIkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3b3JrZXJfZnMudG9TdHJpbmc9KCk9PiJhc3luYyAocGF0aCkgPT4gc3RyaW5nW10iOwpmdW5jdGlvbiBta2RpciQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdvcmtlcl9mcyhhKXtyZXR1cm4oYixjKT0+YS53YXNpLm1rZGlyKGMpfW1rZGlyJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd29ya2VyX2ZzLnRvU3RyaW5nPSgpPT4iYXN5bmMgKHBhdGgpID0+IHZvaWQiO3ZhciBtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd29ya2VyX2ZzPXt9O21vZHVsZSRzcmMkZmlsZXN5c3RlbSR3b3JrZXJfZnMuYXBwZW5kRmlsZT1hcHBlbmRGaWxlJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd29ya2VyX2ZzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSR3b3JrZXJfZnMubWtkaXI9bWtkaXIkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3b3JrZXJfZnM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdvcmtlcl9mcy5yZWFkRmlsZT1yZWFkRmlsZSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdvcmtlcl9mczttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd29ya2VyX2ZzLnJlYWRkaXI9cmVhZGRpciQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdvcmtlcl9mczsKbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdvcmtlcl9mcy51bmxpbms9dW5saW5rJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd29ya2VyX2ZzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSR3b3JrZXJfZnMud3JpdGVGaWxlPXdyaXRlRmlsZSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdvcmtlcl9mcztjb25zdCBhcGkkJG1vZHVsZSRzcmMkbGliY3NvdW5kPXtjc291bmRDcmVhdGU6Y3NvdW5kQ3JlYXRlJCRtb2R1bGUkc3JjJG1vZHVsZXMkaW5zdGFudGlhdGlvbixjc291bmREZXN0cm95OmNzb3VuZERlc3Ryb3kkJG1vZHVsZSRzcmMkbW9kdWxlcyRpbnN0YW50aWF0aW9uLGNzb3VuZEdldEFQSVZlcnNpb246Y3NvdW5kR2V0QVBJVmVyc2lvbiQkbW9kdWxlJHNyYyRtb2R1bGVzJGluc3RhbnRpYXRpb24sY3NvdW5kR2V0VmVyc2lvbjpjc291bmRHZXRWZXJzaW9uJCRtb2R1bGUkc3JjJG1vZHVsZXMkaW5zdGFudGlhdGlvbixjc291bmRJbml0aWFsaXplOmNzb3VuZEluaXRpYWxpemUkJG1vZHVsZSRzcmMkbW9kdWxlcyRpbnN0YW50aWF0aW9uLGNzb3VuZFBhcnNlT3JjOmNzb3VuZFBhcnNlT3JjJCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2UsY3NvdW5kQ29tcGlsZVRyZWU6Y3NvdW5kQ29tcGlsZVRyZWUkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZSxjc291bmRDb21waWxlT3JjOmNzb3VuZENvbXBpbGVPcmMkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZSwKY3NvdW5kRXZhbENvZGU6Y3NvdW5kRXZhbENvZGUkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZSxjc291bmRTdGFydDpjc291bmRTdGFydCQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLGNzb3VuZENvbXBpbGVDc2Q6Y3NvdW5kQ29tcGlsZUNzZCQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLGNzb3VuZENvbXBpbGVDc2RUZXh0OmNzb3VuZENvbXBpbGVDc2RUZXh0JCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2UsY3NvdW5kUGVyZm9ybTpjc291bmRQZXJmb3JtJCRtb2R1bGUkc3JjJG1vZHVsZXMkcGVyZm9ybWFuY2UsY3NvdW5kUGVyZm9ybUtzbXBzOmNzb3VuZFBlcmZvcm1Lc21wcyQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLGNzb3VuZFBlcmZvcm1CdWZmZXI6Y3NvdW5kUGVyZm9ybUJ1ZmZlciQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLGNzb3VuZFN0b3A6Y3NvdW5kU3RvcCQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLApjc291bmRDbGVhbnVwOmNzb3VuZENsZWFudXAkJG1vZHVsZSRzcmMkbW9kdWxlcyRwZXJmb3JtYW5jZSxjc291bmRSZXNldDpjc291bmRSZXNldCQkbW9kdWxlJHNyYyRtb2R1bGVzJHBlcmZvcm1hbmNlLGNzb3VuZEdldFNyOmNzb3VuZEdldFNyJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcyxjc291bmRHZXRLcjpjc291bmRHZXRLciQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMsY3NvdW5kR2V0S3NtcHM6Y3NvdW5kR2V0S3NtcHMkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLGNzb3VuZEdldE5jaG5sczpjc291bmRHZXROY2hubHMkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLGNzb3VuZEdldE5jaG5sc0lucHV0OmNzb3VuZEdldE5jaG5sc0lucHV0JCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcyxjc291bmRHZXQwZEJGUzpjc291bmRHZXQwZEJGUyQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMsY3NvdW5kR2V0QTQ6Y3NvdW5kR2V0QTQkJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLApjc291bmRHZXRDdXJyZW50VGltZVNhbXBsZXM6Y3NvdW5kR2V0Q3VycmVudFRpbWVTYW1wbGVzJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcyxjc291bmRHZXRTaXplT2ZNWUZMVDpjc291bmRHZXRTaXplT2ZNWUZMVCQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMsY3NvdW5kU2V0T3B0aW9uOmNzb3VuZFNldE9wdGlvbiQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMsY3NvdW5kU2V0UGFyYW1zOmNzb3VuZFNldFBhcmFtcyQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMsY3NvdW5kR2V0UGFyYW1zOmNzb3VuZEdldFBhcmFtcyQkbW9kdWxlJHNyYyRtb2R1bGVzJGF0dHJpYnV0ZXMsY3NvdW5kR2V0RGVidWc6Y3NvdW5kR2V0RGVidWckJG1vZHVsZSRzcmMkbW9kdWxlcyRhdHRyaWJ1dGVzLGNzb3VuZFNldERlYnVnOmNzb3VuZFNldERlYnVnJCRtb2R1bGUkc3JjJG1vZHVsZXMkYXR0cmlidXRlcyxjc291bmRHZXRJbnB1dEJ1ZmZlclNpemU6Y3NvdW5kR2V0SW5wdXRCdWZmZXJTaXplJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpbywKY3NvdW5kR2V0T3V0cHV0QnVmZmVyU2l6ZTpjc291bmRHZXRPdXRwdXRCdWZmZXJTaXplJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpbyxjc291bmRHZXRJbnB1dEJ1ZmZlcjpjc291bmRHZXRJbnB1dEJ1ZmZlciQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0YXVkaW8sY3NvdW5kR2V0T3V0cHV0QnVmZmVyOmNzb3VuZEdldE91dHB1dEJ1ZmZlciQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0YXVkaW8sY3NvdW5kR2V0U3Bpbjpjc291bmRHZXRTcGluJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRhdWRpbyxjc291bmRHZXRTcG91dDpjc291bmRHZXRTcG91dCQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0YXVkaW8sY3NvdW5kR2V0TUlESURldkxpc3Q6Y3NvdW5kR2V0TUlESURldkxpc3QkJG1vZHVsZSRzcmMkbW9kdWxlcyRydG1pZGksY3NvdW5kU2V0TWlkaUNhbGxiYWNrczpjc291bmRTZXRNaWRpQ2FsbGJhY2tzJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRtaWRpLGNzb3VuZEdldFJ0TWlkaU5hbWU6Y3NvdW5kR2V0UnRNaWRpTmFtZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0bWlkaSwKY3NvdW5kR2V0TWlkaU91dEZpbGVOYW1lOmNzb3VuZEdldE1pZGlPdXRGaWxlTmFtZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHJ0bWlkaSxjc291bmRQdXNoTWlkaU1lc3NhZ2U6Y3NvdW5kUHVzaE1pZGlNZXNzYWdlJCRtb2R1bGUkc3JjJG1vZHVsZXMkcnRtaWRpLF9pc1JlcXVlc3RpbmdSdE1pZGlJbnB1dDpfaXNSZXF1ZXN0aW5nUnRNaWRpSW5wdXQkJG1vZHVsZSRzcmMkbW9kdWxlcyRydG1pZGksY3NvdW5kSW5wdXRNZXNzYWdlOmNzb3VuZElucHV0TWVzc2FnZSQkbW9kdWxlJHNyYyRtb2R1bGVzJGNvbnRyb2xfZXZlbnRzLGNzb3VuZElucHV0TWVzc2FnZUFzeW5jOmNzb3VuZElucHV0TWVzc2FnZUFzeW5jJCRtb2R1bGUkc3JjJG1vZHVsZXMkY29udHJvbF9ldmVudHMsY3NvdW5kR2V0Q29udHJvbENoYW5uZWw6Y3NvdW5kR2V0Q29udHJvbENoYW5uZWwkJG1vZHVsZSRzcmMkbW9kdWxlcyRjb250cm9sX2V2ZW50cyxjc291bmRTZXRDb250cm9sQ2hhbm5lbDpjc291bmRTZXRDb250cm9sQ2hhbm5lbCQkbW9kdWxlJHNyYyRtb2R1bGVzJGNvbnRyb2xfZXZlbnRzLApjc291bmRHZXRTdHJpbmdDaGFubmVsOmNzb3VuZEdldFN0cmluZ0NoYW5uZWwkJG1vZHVsZSRzcmMkbW9kdWxlcyRjb250cm9sX2V2ZW50cyxjc291bmRTZXRTdHJpbmdDaGFubmVsOmNzb3VuZFNldFN0cmluZ0NoYW5uZWwkJG1vZHVsZSRzcmMkbW9kdWxlcyRjb250cm9sX2V2ZW50cyxjc291bmRHZXRJbnB1dE5hbWU6Y3NvdW5kR2V0SW5wdXROYW1lJCRtb2R1bGUkc3JjJG1vZHVsZXMkZ2VuZXJhbF9pbyxjc291bmRHZXRPdXRwdXROYW1lOmNzb3VuZEdldE91dHB1dE5hbWUkJG1vZHVsZSRzcmMkbW9kdWxlcyRnZW5lcmFsX2lvLGNzb3VuZEFwcGVuZEVudjpjc291bmRBcHBlbmRFbnYkJG1vZHVsZSRzcmMkbW9kdWxlcyRleHRyYSxjc291bmRTaG91bGREYWVtb25pemU6Y3NvdW5kU2hvdWxkRGFlbW9uaXplJCRtb2R1bGUkc3JjJG1vZHVsZXMkZXh0cmEsY3NvdW5kSXNTY29yZVBlbmRpbmc6Y3NvdW5kSXNTY29yZVBlbmRpbmckJG1vZHVsZSRzcmMkbW9kdWxlcyRzY29yZV9oYW5kbGluZywKY3NvdW5kU2V0U2NvcmVQZW5kaW5nOmNzb3VuZFNldFNjb3JlUGVuZGluZyQkbW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nLGNzb3VuZFJlYWRTY29yZTpjc291bmRSZWFkU2NvcmUkJG1vZHVsZSRzcmMkbW9kdWxlcyRzY29yZV9oYW5kbGluZyxjc291bmRHZXRTY29yZVRpbWU6Y3NvdW5kR2V0U2NvcmVUaW1lJCRtb2R1bGUkc3JjJG1vZHVsZXMkc2NvcmVfaGFuZGxpbmcsY3NvdW5kR2V0U2NvcmVPZmZzZXRTZWNvbmRzOmNzb3VuZEdldFNjb3JlT2Zmc2V0U2Vjb25kcyQkbW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nLGNzb3VuZFNldFNjb3JlT2Zmc2V0U2Vjb25kczpjc291bmRTZXRTY29yZU9mZnNldFNlY29uZHMkJG1vZHVsZSRzcmMkbW9kdWxlcyRzY29yZV9oYW5kbGluZyxjc291bmRSZXdpbmRTY29yZTpjc291bmRSZXdpbmRTY29yZSQkbW9kdWxlJHNyYyRtb2R1bGVzJHNjb3JlX2hhbmRsaW5nLGNzb3VuZFRhYmxlTGVuZ3RoOmNzb3VuZFRhYmxlTGVuZ3RoJCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGUsCmNzb3VuZFRhYmxlR2V0OmNzb3VuZFRhYmxlR2V0JCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGUsY3NvdW5kVGFibGVTZXQ6Y3NvdW5kVGFibGVTZXQkJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZSxjc291bmRUYWJsZUNvcHlJbjpjc291bmRUYWJsZUNvcHlJbiQkbW9kdWxlJHNyYyRtb2R1bGVzJHRhYmxlLGNzb3VuZFRhYmxlQ29weU91dDpjc291bmRUYWJsZUNvcHlPdXQkJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZSxjc291bmRHZXRUYWJsZTpjc291bmRUYWJsZUNvcHlPdXQkJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZSxjc291bmRHZXRUYWJsZUFyZ3M6Y3NvdW5kR2V0VGFibGVBcmdzJCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGUsY3NvdW5kSXNOYW1lZEdFTjpjc291bmRJc05hbWVkR0VOJCRtb2R1bGUkc3JjJG1vZHVsZXMkdGFibGUsY3NvdW5kR2V0TmFtZWRHRU46Y3NvdW5kR2V0TmFtZWRHRU4kJG1vZHVsZSRzcmMkbW9kdWxlcyR0YWJsZSxmczptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd29ya2VyX2ZzfTsKdmFyICRqc2NvbXBEZWZhdWx0RXhwb3J0JCRtb2R1bGUkc3JjJGxpYmNzb3VuZD1mdW5jdGlvbihhKXtyZXR1cm4gbWVyZ2VBbGwkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhbcmVkdWNlJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoKGIsYyk9PmFzc29jJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoYyxhcGkkJG1vZHVsZSRzcmMkbGliY3NvdW5kW2NdKGEpLGIpLHt9LGtleXMkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcyhkaXNzb2MkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcygiZnMiKShhcGkkJG1vZHVsZSRzcmMkbGliY3NvdW5kKSkpLHJlZHVjZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKChiLGMpPT5hc3NvYyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGMsCmFwaSQkbW9kdWxlJHNyYyRsaWJjc291bmQuZnNbY10oYSksYikse30sa2V5cyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3b3JrZXJfZnMpKV0pfSxtb2R1bGUkc3JjJGxpYmNzb3VuZD17fTttb2R1bGUkc3JjJGxpYmNzb3VuZC5hcGk9YXBpJCRtb2R1bGUkc3JjJGxpYmNzb3VuZDttb2R1bGUkc3JjJGxpYmNzb3VuZC5kZWZhdWx0PSRqc2NvbXBEZWZhdWx0RXhwb3J0JCRtb2R1bGUkc3JjJGxpYmNzb3VuZDtjb25zdCBkbGluaXQkJG1vZHVsZSRzcmMkZGxpbml0PShhLGIsYyxkKT0+e2lmKGIuZXhwb3J0cy5jc291bmRNb2R1bGVJbml0KXt2YXIgZT1uZXcgV2ViQXNzZW1ibHkuR2xvYmFsKHt2YWx1ZToiaTMyIixtdXRhYmxlOiEwfSwwKSxmPW5ldyBXZWJBc3NlbWJseS5HbG9iYWwoe3ZhbHVlOiJpMzIiLG11dGFibGU6ITB9LDApLGc9bmV3IFdlYkFzc2VtYmx5Lkdsb2JhbCh7dmFsdWU6ImkzMiIsbXV0YWJsZTohMH0sMCk7Y29uc3QgaD1uZXcgV2ViQXNzZW1ibHkuR2xvYmFsKHt2YWx1ZToiaTMyIixtdXRhYmxlOiEwfSwwKTtsZXQgaz1jLmxlbmd0aDsiZnVuY3Rpb24iPT09dHlwZW9mIGIuZXhwb3J0cy5jc291bmRNb2R1bGVDcmVhdGUmJihjLmdyb3coMSksZS52YWx1ZT1rLGMuc2V0KGssYi5leHBvcnRzLmNzb3VuZE1vZHVsZUNyZWF0ZSksays9MSk7ImZ1bmN0aW9uIj09PXR5cGVvZiBiLmV4cG9ydHMuY3NvdW5kTW9kdWxlSW5pdCYmKGMuZ3JvdygxKSxmLnZhbHVlPWssYy5zZXQoaywKYi5leHBvcnRzLmNzb3VuZE1vZHVsZUluaXQpLGsrPTEpOyJmdW5jdGlvbiI9PT10eXBlb2YgYi5leHBvcnRzLmNzb3VuZE1vZHVsZURlc3Ryb3kmJihjLmdyb3coMSksZy52YWx1ZT1rLGMuc2V0KGssYi5leHBvcnRzLmNzb3VuZE1vZHVsZURlc3Ryb3kpLGsrPTEpOyJmdW5jdGlvbiI9PT10eXBlb2YgYi5leHBvcnRzLmNzb3VuZE1vZHVsZUVycm9yQ29kZVRvU3RyaW5nJiYoYy5ncm93KDEpLGgudmFsdWU9ayxjLnNldChrLGIuZXhwb3J0cy5jc291bmRNb2R1bGVFcnJvckNvZGVUb1N0cmluZykpO2EuZXhwb3J0cy5jc291bmRXYXNpTG9hZFBsdWdpbihkLGUsZixnLGgpfWVsc2UgYi5leHBvcnRzLmNzb3VuZF9vcGNvZGVfaW5pdHx8Yi5leHBvcnRzLmNzb3VuZF9mZ2VuX2luaXQ/KGU9bmV3IFdlYkFzc2VtYmx5Lkdsb2JhbCh7dmFsdWU6ImkzMiIsbXV0YWJsZTohMH0sMCksZj1uZXcgV2ViQXNzZW1ibHkuR2xvYmFsKHt2YWx1ZToiaTMyIixtdXRhYmxlOiEwfSwwKSxnPWMubGVuZ3RoLAoiZnVuY3Rpb24iPT09dHlwZW9mIGIuZXhwb3J0cy5jc291bmRfb3Bjb2RlX2luaXQmJihlLnZhbHVlPWcsYy5ncm93KDEpLGMuc2V0KGcsYi5leHBvcnRzLmNzb3VuZF9vcGNvZGVfaW5pdCksZys9MSksImZ1bmN0aW9uIj09PXR5cGVvZiBiLmV4cG9ydHMuY3NvdW5kX2ZnZW5faW5pdCYmKGYudmFsdWU9ZyxjLmdyb3coMSksYy5zZXQoZyxiLmV4cG9ydHMuY3NvdW5kX2ZnZW5faW5pdCkpLGEuZXhwb3J0cy5jc291bmRXYXNpTG9hZE9wY29kZUxpYnJhcnkoZCxmLGUpKTpjb25zb2xlLmVycm9yKCJQbHVnaW4gZG9lc24ndCBleHBvcnQgbmVjZWNjYXJ5IGZ1bmN0aW9ucyB0byBxdWFsaXR5IGFzIGNzb3VuZCBwbHVnaW4uIil9O3ZhciBtb2R1bGUkc3JjJGRsaW5pdD17fTttb2R1bGUkc3JjJGRsaW5pdC5kbGluaXQ9ZGxpbml0JCRtb2R1bGUkc3JjJGRsaW5pdDt2b2lkIDAhPT1nb29nLmdsb2JhbCYmKGdvb2cuZ2xvYmFsPXt9KTtnb29nLmdsb2JhbC5CaWdJbnR8fChnb29nLmdsb2JhbC5CaWdJbnQ9dm9pZCAwPT09QmlnSW50P051bWJlcjpCaWdJbnQpOwpjb25zdCBXQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTAsV0FTSV9FMkJJRyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0xLFdBU0lfRUFDQ0VTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTIsV0FTSV9FQUREUklOVVNFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTMsV0FTSV9FQUREUk5PVEFWQUlMJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTQsV0FTSV9FQUZOT1NVUFBPUlQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9NSxXQVNJX0VBR0FJTiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz02LFdBU0lfRUFMUkVBRFkkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9NyxXQVNJX0VCQURGJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTgsV0FTSV9FQkFETVNHJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTksV0FTSV9FQlVTWSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0KMTAsV0FTSV9FQ0FOQ0VMRUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MTEsV0FTSV9FQ0hJTEQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MTIsV0FTSV9FQ09OTkFCT1JURUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MTMsV0FTSV9FQ09OTlJFRlVTRUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MTQsV0FTSV9FQ09OTlJFU0VUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTE1LFdBU0lfRURFQURMSyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0xNixXQVNJX0VERVNUQUREUlJFUSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0xNyxXQVNJX0VET00kJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MTgsV0FTSV9FRFFVT1QkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MTksV0FTSV9FRVhJU1QkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9CjIwLFdBU0lfRUZBVUxUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTIxLFdBU0lfRUZCSUckJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MjIsV0FTSV9FSE9TVFVOUkVBQ0gkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MjMsV0FTSV9FSURSTSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0yNCxXQVNJX0VJTFNFUSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0yNSxXQVNJX0VJTlBST0dSRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTI2LFdBU0lfRUlOVFIkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MjcsV0FTSV9FSU5WQUwkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MjgsV0FTSV9FSU8kJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MjksV0FTSV9FSVNDT05OJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTMwLFdBU0lfRUlTRElSJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPQozMSxXQVNJX0VMT09QJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTMyLFdBU0lfRU1GSUxFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTMzLFdBU0lfRU1MSU5LJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTM0LFdBU0lfRU1TR1NJWkUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MzUsV0FTSV9FTVVMVElIT1AkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MzYsV0FTSV9FTkFNRVRPT0xPTkckJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MzcsV0FTSV9FTkVURE9XTiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0zOCxXQVNJX0VORVRSRVNFVCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0zOSxXQVNJX0VORVRVTlJFQUNIJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTQwLFdBU0lfRU5GSUxFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTQxLApXQVNJX0VOT0JVRlMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9NDIsV0FTSV9FTk9ERVYkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9NDMsV0FTSV9FTk9FTlQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9NDQsV0FTSV9FTk9FWEVDJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTQ1LFdBU0lfRU5PTENLJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTQ2LFdBU0lfRU5PTElOSyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz00NyxXQVNJX0VOT01FTSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz00OCxXQVNJX0VOT01TRyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz00OSxXQVNJX0VOT1BST1RPT1BUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTUwLFdBU0lfRU5PU1BDJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTUxLFdBU0lfRU5PU1lTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPQo1MixXQVNJX0VOT1RDT05OJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTUzLFdBU0lfRU5PVERJUiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz01NCxXQVNJX0VOT1RFTVBUWSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz01NSxXQVNJX0VOT1RSRUNPVkVSQUJMRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz01NixXQVNJX0VOT1RTT0NLJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTU3LFdBU0lfRU5PVFNVUCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz01OCxXQVNJX0VOT1RUWSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz01OSxXQVNJX0VOWElPJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTYwLFdBU0lfRU9WRVJGTE9XJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTYxLFdBU0lfRU9XTkVSREVBRCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0KNjIsV0FTSV9FUEVSTSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz02MyxXQVNJX0VQSVBFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTY0LFdBU0lfRVBST1RPJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTY1LFdBU0lfRVBST1RPTk9TVVBQT1JUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTY2LFdBU0lfRVBST1RPVFlQRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz02NyxXQVNJX0VSQU5HRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz02OCxXQVNJX0VST0ZTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTY5LFdBU0lfRVNQSVBFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTcwLFdBU0lfRVNSQ0gkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9NzEsV0FTSV9FU1RBTEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9NzIsV0FTSV9FVElNRURPVVQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9CjczLFdBU0lfRVRYVEJTWSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz03NCxXQVNJX0VYREVWJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTc1LFdBU0lfRU5PVENBUEFCTEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9NzYsV0FTSV9TSUdBQlJUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTAsV0FTSV9TSUdBTFJNJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTEsV0FTSV9TSUdCVVMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MixXQVNJX1NJR0NITEQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MyxXQVNJX1NJR0NPTlQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9NCxXQVNJX1NJR0ZQRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz01LFdBU0lfU0lHSFVQJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTYsV0FTSV9TSUdJTEwkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9CjcsV0FTSV9TSUdJTlQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9OCxXQVNJX1NJR0tJTEwkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9OSxXQVNJX1NJR1BJUEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MTAsV0FTSV9TSUdRVUlUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTExLFdBU0lfU0lHU0VHViQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0xMixXQVNJX1NJR1NUT1AkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MTMsV0FTSV9TSUdURVJNJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTE0LFdBU0lfU0lHVFJBUCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0xNSxXQVNJX1NJR1RTVFAkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MTYsV0FTSV9TSUdUVElOJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTE3LFdBU0lfU0lHVFRPVSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0KMTgsV0FTSV9TSUdVUkckJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MTksV0FTSV9TSUdVU1IxJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTIwLFdBU0lfU0lHVVNSMiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0yMSxXQVNJX1NJR1ZUQUxSTSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0yMixXQVNJX1NJR1hDUFUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MjMsV0FTSV9TSUdYRlNaJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTI0LFdBU0lfRklMRVRZUEVfVU5LTk9XTiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0wLFdBU0lfRklMRVRZUEVfQkxPQ0tfREVWSUNFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTEsV0FTSV9GSUxFVFlQRV9DSEFSQUNURVJfREVWSUNFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTIsV0FTSV9GSUxFVFlQRV9ESVJFQ1RPUlkkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9CjMsV0FTSV9GSUxFVFlQRV9SRUdVTEFSX0ZJTEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9NCxXQVNJX0ZJTEVUWVBFX1NPQ0tFVF9ER1JBTSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz01LFdBU0lfRklMRVRZUEVfU09DS0VUX1NUUkVBTSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz02LFdBU0lfRklMRVRZUEVfU1lNQk9MSUNfTElOSyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz03LFdBU0lfRkRGTEFHX0FQUEVORCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0xLFdBU0lfRkRGTEFHX0RTWU5DJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTIsV0FTSV9GREZMQUdfTk9OQkxPQ0skJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9NCxXQVNJX0ZERkxBR19SU1lOQyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz04LFdBU0lfRkRGTEFHX1NZTkMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9CjE2LFdBU0lfUklHSFRfRkRfREFUQVNZTkMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9Z29vZy5nbG9iYWwuQmlnSW50KDEpLFdBU0lfUklHSFRfRkRfUkVBRCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1nb29nLmdsb2JhbC5CaWdJbnQoMiksV0FTSV9SSUdIVF9GRF9TRUVLJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPWdvb2cuZ2xvYmFsLkJpZ0ludCg0KSxXQVNJX1JJR0hUX0ZEX0ZEU1RBVF9TRVRfRkxBR1MkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9Z29vZy5nbG9iYWwuQmlnSW50KDgpLFdBU0lfUklHSFRfRkRfU1lOQyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1nb29nLmdsb2JhbC5CaWdJbnQoMTYpLFdBU0lfUklHSFRfRkRfVEVMTCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1nb29nLmdsb2JhbC5CaWdJbnQoMzIpLFdBU0lfUklHSFRfRkRfV1JJVEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9Cmdvb2cuZ2xvYmFsLkJpZ0ludCg2NCksV0FTSV9SSUdIVF9GRF9BRFZJU0UkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9Z29vZy5nbG9iYWwuQmlnSW50KDEyOCksV0FTSV9SSUdIVF9GRF9BTExPQ0FURSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1nb29nLmdsb2JhbC5CaWdJbnQoMjU2KSxXQVNJX1JJR0hUX1BBVEhfQ1JFQVRFX0RJUkVDVE9SWSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1nb29nLmdsb2JhbC5CaWdJbnQoNTEyKSxXQVNJX1JJR0hUX1BBVEhfQ1JFQVRFX0ZJTEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9Z29vZy5nbG9iYWwuQmlnSW50KDEwMjQpLFdBU0lfUklHSFRfUEFUSF9MSU5LX1NPVVJDRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1nb29nLmdsb2JhbC5CaWdJbnQoMjA0OCksV0FTSV9SSUdIVF9QQVRIX0xJTktfVEFSR0VUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPQpnb29nLmdsb2JhbC5CaWdJbnQoNDA5NiksV0FTSV9SSUdIVF9QQVRIX09QRU4kJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9Z29vZy5nbG9iYWwuQmlnSW50KDgxOTIpLFdBU0lfUklHSFRfRkRfUkVBRERJUiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1nb29nLmdsb2JhbC5CaWdJbnQoMTYzODQpLFdBU0lfUklHSFRfUEFUSF9SRUFETElOSyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1nb29nLmdsb2JhbC5CaWdJbnQoMzI3NjgpLFdBU0lfUklHSFRfUEFUSF9SRU5BTUVfU09VUkNFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPWdvb2cuZ2xvYmFsLkJpZ0ludCg2NTUzNiksV0FTSV9SSUdIVF9QQVRIX1JFTkFNRV9UQVJHRVQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9Z29vZy5nbG9iYWwuQmlnSW50KDEzMTA3MiksV0FTSV9SSUdIVF9QQVRIX0ZJTEVTVEFUX0dFVCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0KZ29vZy5nbG9iYWwuQmlnSW50KDI2MjE0NCksV0FTSV9SSUdIVF9QQVRIX0ZJTEVTVEFUX1NFVF9TSVpFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPWdvb2cuZ2xvYmFsLkJpZ0ludCg1MjQyODgpLFdBU0lfUklHSFRfUEFUSF9GSUxFU1RBVF9TRVRfVElNRVMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9Z29vZy5nbG9iYWwuQmlnSW50KDEwNDg1NzYpLFdBU0lfUklHSFRfRkRfRklMRVNUQVRfR0VUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPWdvb2cuZ2xvYmFsLkJpZ0ludCgyMDk3MTUyKSxXQVNJX1JJR0hUX0ZEX0ZJTEVTVEFUX1NFVF9TSVpFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPWdvb2cuZ2xvYmFsLkJpZ0ludCg0MTk0MzA0KSxXQVNJX1JJR0hUX0ZEX0ZJTEVTVEFUX1NFVF9USU1FUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1nb29nLmdsb2JhbC5CaWdJbnQoODM4ODYwOCksV0FTSV9SSUdIVF9QQVRIX1NZTUxJTkskJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9Cmdvb2cuZ2xvYmFsLkJpZ0ludCgxNjc3NzIxNiksV0FTSV9SSUdIVF9QQVRIX1JFTU9WRV9ESVJFQ1RPUlkkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9Z29vZy5nbG9iYWwuQmlnSW50KDMzNTU0NDMyKSxXQVNJX1JJR0hUX1BBVEhfVU5MSU5LX0ZJTEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9Z29vZy5nbG9iYWwuQmlnSW50KDY3MTA4ODY0KSxXQVNJX1JJR0hUX1BPTExfRkRfUkVBRFdSSVRFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPWdvb2cuZ2xvYmFsLkJpZ0ludCgxMzQyMTc3MjgpLFdBU0lfUklHSFRfU09DS19TSFVURE9XTiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1nb29nLmdsb2JhbC5CaWdJbnQoMjY4NDM1NDU2KSxSSUdIVFNfQUxMJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPVdBU0lfUklHSFRfRkRfREFUQVNZTkMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9SRUFEJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfApXQVNJX1JJR0hUX0ZEX1NFRUskJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9GRFNUQVRfU0VUX0ZMQUdTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfRkRfU1lOQyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX0ZEX1RFTEwkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9XUklURSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX0ZEX0FEVklTRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX0ZEX0FMTE9DQVRFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfUEFUSF9DUkVBVEVfRElSRUNUT1JZJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfUEFUSF9DUkVBVEVfRklMRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3wKV0FTSV9SSUdIVF9QQVRIX0xJTktfU09VUkNFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfUEFUSF9MSU5LX1RBUkdFVCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX1BBVEhfT1BFTiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX0ZEX1JFQURESVIkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9QQVRIX1JFQURMSU5LJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfUEFUSF9SRU5BTUVfU09VUkNFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfUEFUSF9SRU5BTUVfVEFSR0VUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfUEFUSF9GSUxFU1RBVF9HRVQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9QQVRIX0ZJTEVTVEFUX1NFVF9TSVpFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfApXQVNJX1JJR0hUX1BBVEhfRklMRVNUQVRfU0VUX1RJTUVTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfRkRfRklMRVNUQVRfR0VUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfRkRfRklMRVNUQVRfU0VUX1RJTUVTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfRkRfRklMRVNUQVRfU0VUX1NJWkUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9QQVRIX1NZTUxJTkskJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9QQVRIX1VOTElOS19GSUxFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfUEFUSF9SRU1PVkVfRElSRUNUT1JZJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfUE9MTF9GRF9SRUFEV1JJVEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8CldBU0lfUklHSFRfU09DS19TSFVURE9XTiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cyxSSUdIVFNfQkxPQ0tfREVWSUNFX0JBU0UkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9UklHSFRTX0FMTCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cyxSSUdIVFNfQkxPQ0tfREVWSUNFX0lOSEVSSVRJTkckJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9UklHSFRTX0FMTCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cyxSSUdIVFNfQ0hBUkFDVEVSX0RFVklDRV9CQVNFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPVJJR0hUU19BTEwkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMsUklHSFRTX0NIQVJBQ1RFUl9ERVZJQ0VfSU5IRVJJVElORyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1SSUdIVFNfQUxMJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLFJJR0hUU19SRUdVTEFSX0ZJTEVfQkFTRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0KV0FTSV9SSUdIVF9GRF9EQVRBU1lOQyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX0ZEX1JFQUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9TRUVLJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfRkRfRkRTVEFUX1NFVF9GTEFHUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX0ZEX1NZTkMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9URUxMJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfRkRfV1JJVEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9BRFZJU0UkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9BTExPQ0FURSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX0ZEX0ZJTEVTVEFUX0dFVCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3wKV0FTSV9SSUdIVF9GRF9GSUxFU1RBVF9TRVRfU0laRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX0ZEX0ZJTEVTVEFUX1NFVF9USU1FUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX1BPTExfRkRfUkVBRFdSSVRFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLFJJR0hUU19SRUdVTEFSX0ZJTEVfSU5IRVJJVElORyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1nb29nLmdsb2JhbC5CaWdJbnQoMCksUklHSFRTX0RJUkVDVE9SWV9CQVNFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPVdBU0lfUklHSFRfRkRfRkRTVEFUX1NFVF9GTEFHUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX0ZEX1NZTkMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9BRFZJU0UkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8CldBU0lfUklHSFRfUEFUSF9DUkVBVEVfRElSRUNUT1JZJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfUEFUSF9DUkVBVEVfRklMRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX1BBVEhfTElOS19TT1VSQ0UkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9QQVRIX0xJTktfVEFSR0VUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfUEFUSF9PUEVOJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfRkRfUkVBRERJUiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX1BBVEhfUkVBRExJTkskJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9QQVRIX1JFTkFNRV9TT1VSQ0UkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9QQVRIX1JFTkFNRV9UQVJHRVQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8CldBU0lfUklHSFRfUEFUSF9GSUxFU1RBVF9HRVQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9QQVRIX0ZJTEVTVEFUX1NFVF9TSVpFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfUEFUSF9GSUxFU1RBVF9TRVRfVElNRVMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9GSUxFU1RBVF9HRVQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9GSUxFU1RBVF9TRVRfVElNRVMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9QQVRIX1NZTUxJTkskJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9QQVRIX1VOTElOS19GSUxFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfUEFUSF9SRU1PVkVfRElSRUNUT1JZJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfApXQVNJX1JJR0hUX1BPTExfRkRfUkVBRFdSSVRFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLFJJR0hUU19ESVJFQ1RPUllfSU5IRVJJVElORyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1SSUdIVFNfRElSRUNUT1JZX0JBU0UkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8UklHSFRTX1JFR1VMQVJfRklMRV9CQVNFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLFJJR0hUU19TT0NLRVRfQkFTRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1XQVNJX1JJR0hUX0ZEX1JFQUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9GRFNUQVRfU0VUX0ZMQUdTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfRkRfV1JJVEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9GSUxFU1RBVF9HRVQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8CldBU0lfUklHSFRfUE9MTF9GRF9SRUFEV1JJVEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9TT0NLX1NIVVRET1dOJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLFJJR0hUU19TT0NLRVRfSU5IRVJJVElORyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1SSUdIVFNfQUxMJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLFJJR0hUU19UVFlfQkFTRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz1XQVNJX1JJR0hUX0ZEX1JFQUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9GRFNUQVRfU0VUX0ZMQUdTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfFdBU0lfUklHSFRfRkRfV1JJVEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9GRF9GSUxFU1RBVF9HRVQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN8V0FTSV9SSUdIVF9QT0xMX0ZEX1JFQURXUklURSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cywKUklHSFRTX1RUWV9JTkhFUklUSU5HJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPWdvb2cuZ2xvYmFsLkJpZ0ludCgwKSxXQVNJX0NMT0NLX1JFQUxUSU1FJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTAsV0FTSV9DTE9DS19NT05PVE9OSUMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MSxXQVNJX0NMT0NLX1BST0NFU1NfQ1BVVElNRV9JRCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0yLFdBU0lfQ0xPQ0tfVEhSRUFEX0NQVVRJTUVfSUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MyxXQVNJX0VWRU5UVFlQRV9DTE9DSyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0wLFdBU0lfRVZFTlRUWVBFX0ZEX1JFQUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MSxXQVNJX0VWRU5UVFlQRV9GRF9XUklURSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0yLFdBU0lfRklMRVNUQVRfU0VUX0FUSU0kJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9CjEsV0FTSV9GSUxFU1RBVF9TRVRfQVRJTV9OT1ckJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MixXQVNJX0ZJTEVTVEFUX1NFVF9NVElNJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTQsV0FTSV9GSUxFU1RBVF9TRVRfTVRJTV9OT1ckJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9OCxXQVNJX09fQ1JFQVQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9MSxXQVNJX09fRElSRUNUT1JZJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTIsV0FTSV9PX0VYQ0wkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9NCxXQVNJX09fVFJVTkMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9OCxXQVNJX1BSRU9QRU5UWVBFX0RJUiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cz0wLFdBU0lfRElSQ09PS0lFX1NUQVJUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTAsV0FTSV9TVERJTl9GSUxFTk8kJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9CjAsV0FTSV9TVERPVVRfRklMRU5PJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTEsV0FTSV9TVERFUlJfRklMRU5PJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTIsV0FTSV9XSEVOQ0VfU0VUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTAsV0FTSV9XSEVOQ0VfQ1VSJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTEsV0FTSV9XSEVOQ0VfRU5EJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzPTI7dmFyIG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM9e307bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5SSUdIVFNfQUxMPVJJR0hUU19BTEwkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5SSUdIVFNfQkxPQ0tfREVWSUNFX0JBU0U9UklHSFRTX0FMTCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czsKbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5SSUdIVFNfQkxPQ0tfREVWSUNFX0lOSEVSSVRJTkc9UklHSFRTX0FMTCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLlJJR0hUU19DSEFSQUNURVJfREVWSUNFX0JBU0U9UklHSFRTX0FMTCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLlJJR0hUU19DSEFSQUNURVJfREVWSUNFX0lOSEVSSVRJTkc9UklHSFRTX0FMTCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLlJJR0hUU19ESVJFQ1RPUllfQkFTRT1SSUdIVFNfRElSRUNUT1JZX0JBU0UkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5SSUdIVFNfRElSRUNUT1JZX0lOSEVSSVRJTkc9UklHSFRTX0RJUkVDVE9SWV9JTkhFUklUSU5HJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLlJJR0hUU19SRUdVTEFSX0ZJTEVfQkFTRT1SSUdIVFNfUkVHVUxBUl9GSUxFX0JBU0UkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5SSUdIVFNfUkVHVUxBUl9GSUxFX0lOSEVSSVRJTkc9UklHSFRTX1JFR1VMQVJfRklMRV9JTkhFUklUSU5HJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuUklHSFRTX1NPQ0tFVF9CQVNFPVJJR0hUU19TT0NLRVRfQkFTRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLlJJR0hUU19TT0NLRVRfSU5IRVJJVElORz1SSUdIVFNfQUxMJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuUklHSFRTX1RUWV9CQVNFPVJJR0hUU19UVFlfQkFTRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czsKbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5SSUdIVFNfVFRZX0lOSEVSSVRJTkc9UklHSFRTX1RUWV9JTkhFUklUSU5HJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9DTE9DS19NT05PVE9OSUM9V0FTSV9DTE9DS19NT05PVE9OSUMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0NMT0NLX1BST0NFU1NfQ1BVVElNRV9JRD1XQVNJX0NMT0NLX1BST0NFU1NfQ1BVVElNRV9JRCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfQ0xPQ0tfUkVBTFRJTUU9V0FTSV9DTE9DS19SRUFMVElNRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czsKbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0NMT0NLX1RIUkVBRF9DUFVUSU1FX0lEPVdBU0lfQ0xPQ0tfVEhSRUFEX0NQVVRJTUVfSUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0RJUkNPT0tJRV9TVEFSVD1XQVNJX0RJUkNPT0tJRV9TVEFSVCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRTJCSUc9V0FTSV9FMkJJRyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRUFDQ0VTPVdBU0lfRUFDQ0VTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FQUREUklOVVNFPVdBU0lfRUFERFJJTlVTRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czsKbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VBRERSTk9UQVZBSUw9V0FTSV9FQUREUk5PVEFWQUlMJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FQUZOT1NVUFBPUlQ9V0FTSV9FQUZOT1NVUFBPUlQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VBR0FJTj1XQVNJX0VBR0FJTiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRUFMUkVBRFk9V0FTSV9FQUxSRUFEWSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRUJBREY9V0FTSV9FQkFERiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czsKbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VCQURNU0c9V0FTSV9FQkFETVNHJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FQlVTWT1XQVNJX0VCVVNZJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FQ0FOQ0VMRUQ9V0FTSV9FQ0FOQ0VMRUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VDSElMRD1XQVNJX0VDSElMRCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRUNPTk5BQk9SVEVEPVdBU0lfRUNPTk5BQk9SVEVEJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRUNPTk5SRUZVU0VEPVdBU0lfRUNPTk5SRUZVU0VEJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FQ09OTlJFU0VUPVdBU0lfRUNPTk5SRVNFVCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRURFQURMSz1XQVNJX0VERUFETEskJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VERVNUQUREUlJFUT1XQVNJX0VERVNUQUREUlJFUSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRURPTT1XQVNJX0VET00kJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7Cm1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FRFFVT1Q9V0FTSV9FRFFVT1QkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VFWElTVD1XQVNJX0VFWElTVCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRUZBVUxUPVdBU0lfRUZBVUxUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FRkJJRz1XQVNJX0VGQklHJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FSE9TVFVOUkVBQ0g9V0FTSV9FSE9TVFVOUkVBQ0gkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VJRFJNPVdBU0lfRUlEUk0kJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7Cm1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FSUxTRVE9V0FTSV9FSUxTRVEkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VJTlBST0dSRVNTPVdBU0lfRUlOUFJPR1JFU1MkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VJTlRSPVdBU0lfRUlOVFIkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VJTlZBTD1XQVNJX0VJTlZBTCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRUlPPVdBU0lfRUlPJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FSVNDT05OPVdBU0lfRUlTQ09OTiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czsKbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VJU0RJUj1XQVNJX0VJU0RJUiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRUxPT1A9V0FTSV9FTE9PUCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU1GSUxFPVdBU0lfRU1GSUxFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FTUxJTks9V0FTSV9FTUxJTkskJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VNU0dTSVpFPVdBU0lfRU1TR1NJWkUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VNVUxUSUhPUD1XQVNJX0VNVUxUSUhPUCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czsKbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VOQU1FVE9PTE9ORz1XQVNJX0VOQU1FVE9PTE9ORyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU5FVERPV049V0FTSV9FTkVURE9XTiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU5FVFJFU0VUPVdBU0lfRU5FVFJFU0VUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FTkVUVU5SRUFDSD1XQVNJX0VORVRVTlJFQUNIJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FTkZJTEU9V0FTSV9FTkZJTEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7Cm1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FTk9CVUZTPVdBU0lfRU5PQlVGUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU5PREVWPVdBU0lfRU5PREVWJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FTk9FTlQ9V0FTSV9FTk9FTlQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VOT0VYRUM9V0FTSV9FTk9FWEVDJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FTk9MQ0s9V0FTSV9FTk9MQ0skJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VOT0xJTks9V0FTSV9FTk9MSU5LJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU5PTUVNPVdBU0lfRU5PTUVNJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FTk9NU0c9V0FTSV9FTk9NU0ckJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VOT1BST1RPT1BUPVdBU0lfRU5PUFJPVE9PUFQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VOT1NQQz1XQVNJX0VOT1NQQyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU5PU1lTPVdBU0lfRU5PU1lTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU5PVENBUEFCTEU9V0FTSV9FTk9UQ0FQQUJMRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU5PVENPTk49V0FTSV9FTk9UQ09OTiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU5PVERJUj1XQVNJX0VOT1RESVIkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VOT1RFTVBUWT1XQVNJX0VOT1RFTVBUWSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU5PVFJFQ09WRVJBQkxFPVdBU0lfRU5PVFJFQ09WRVJBQkxFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU5PVFNPQ0s9V0FTSV9FTk9UU09DSyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU5PVFNVUD1XQVNJX0VOT1RTVVAkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VOT1RUWT1XQVNJX0VOT1RUWSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU5YSU89V0FTSV9FTlhJTyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU9WRVJGTE9XPVdBU0lfRU9WRVJGTE9XJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRU9XTkVSREVBRD1XQVNJX0VPV05FUkRFQUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VQRVJNPVdBU0lfRVBFUk0kJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VQSVBFPVdBU0lfRVBJUEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VQUk9UTz1XQVNJX0VQUk9UTyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRVBST1RPTk9TVVBQT1JUPVdBU0lfRVBST1RPTk9TVVBQT1JUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRVBST1RPVFlQRT1XQVNJX0VQUk9UT1RZUEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VSQU5HRT1XQVNJX0VSQU5HRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRVJPRlM9V0FTSV9FUk9GUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRVNQSVBFPVdBU0lfRVNQSVBFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FU1JDSD1XQVNJX0VTUkNIJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FU1RBTEU9V0FTSV9FU1RBTEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7Cm1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FU1VDQ0VTUz1XQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FVElNRURPVVQ9V0FTSV9FVElNRURPVVQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VUWFRCU1k9V0FTSV9FVFhUQlNZJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FVkVOVFRZUEVfQ0xPQ0s9V0FTSV9FVkVOVFRZUEVfQ0xPQ0skJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VWRU5UVFlQRV9GRF9SRUFEPVdBU0lfRVZFTlRUWVBFX0ZEX1JFQUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7Cm1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9FVkVOVFRZUEVfRkRfV1JJVEU9V0FTSV9FVkVOVFRZUEVfRkRfV1JJVEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0VYREVWPVdBU0lfRVhERVYkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0ZERkxBR19BUFBFTkQ9V0FTSV9GREZMQUdfQVBQRU5EJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9GREZMQUdfRFNZTkM9V0FTSV9GREZMQUdfRFNZTkMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0ZERkxBR19OT05CTE9DSz1XQVNJX0ZERkxBR19OT05CTE9DSyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czsKbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0ZERkxBR19SU1lOQz1XQVNJX0ZERkxBR19SU1lOQyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRkRGTEFHX1NZTkM9V0FTSV9GREZMQUdfU1lOQyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRklMRVNUQVRfU0VUX0FUSU09V0FTSV9GSUxFU1RBVF9TRVRfQVRJTSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRklMRVNUQVRfU0VUX0FUSU1fTk9XPVdBU0lfRklMRVNUQVRfU0VUX0FUSU1fTk9XJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9GSUxFU1RBVF9TRVRfTVRJTT1XQVNJX0ZJTEVTVEFUX1NFVF9NVElNJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRklMRVNUQVRfU0VUX01USU1fTk9XPVdBU0lfRklMRVNUQVRfU0VUX01USU1fTk9XJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9GSUxFVFlQRV9CTE9DS19ERVZJQ0U9V0FTSV9GSUxFVFlQRV9CTE9DS19ERVZJQ0UkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0ZJTEVUWVBFX0NIQVJBQ1RFUl9ERVZJQ0U9V0FTSV9GSUxFVFlQRV9DSEFSQUNURVJfREVWSUNFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9GSUxFVFlQRV9ESVJFQ1RPUlk9V0FTSV9GSUxFVFlQRV9ESVJFQ1RPUlkkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7Cm1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9GSUxFVFlQRV9SRUdVTEFSX0ZJTEU9V0FTSV9GSUxFVFlQRV9SRUdVTEFSX0ZJTEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0ZJTEVUWVBFX1NPQ0tFVF9ER1JBTT1XQVNJX0ZJTEVUWVBFX1NPQ0tFVF9ER1JBTSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRklMRVRZUEVfU09DS0VUX1NUUkVBTT1XQVNJX0ZJTEVUWVBFX1NPQ0tFVF9TVFJFQU0kJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX0ZJTEVUWVBFX1NZTUJPTElDX0xJTks9V0FTSV9GSUxFVFlQRV9TWU1CT0xJQ19MSU5LJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfRklMRVRZUEVfVU5LTk9XTj1XQVNJX0ZJTEVUWVBFX1VOS05PV04kJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX09fQ1JFQVQ9V0FTSV9PX0NSRUFUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9PX0RJUkVDVE9SWT1XQVNJX09fRElSRUNUT1JZJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9PX0VYQ0w9V0FTSV9PX0VYQ0wkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX09fVFJVTkM9V0FTSV9PX1RSVU5DJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfUFJFT1BFTlRZUEVfRElSPVdBU0lfUFJFT1BFTlRZUEVfRElSJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9SSUdIVF9GRF9BRFZJU0U9V0FTSV9SSUdIVF9GRF9BRFZJU0UkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1JJR0hUX0ZEX0FMTE9DQVRFPVdBU0lfUklHSFRfRkRfQUxMT0NBVEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1JJR0hUX0ZEX0RBVEFTWU5DPVdBU0lfUklHSFRfRkRfREFUQVNZTkMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1JJR0hUX0ZEX0ZEU1RBVF9TRVRfRkxBR1M9V0FTSV9SSUdIVF9GRF9GRFNUQVRfU0VUX0ZMQUdTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfUklHSFRfRkRfRklMRVNUQVRfR0VUPVdBU0lfUklHSFRfRkRfRklMRVNUQVRfR0VUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9SSUdIVF9GRF9GSUxFU1RBVF9TRVRfU0laRT1XQVNJX1JJR0hUX0ZEX0ZJTEVTVEFUX1NFVF9TSVpFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9SSUdIVF9GRF9GSUxFU1RBVF9TRVRfVElNRVM9V0FTSV9SSUdIVF9GRF9GSUxFU1RBVF9TRVRfVElNRVMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1JJR0hUX0ZEX1JFQUQ9V0FTSV9SSUdIVF9GRF9SRUFEJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfUklHSFRfRkRfUkVBRERJUj1XQVNJX1JJR0hUX0ZEX1JFQURESVIkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1JJR0hUX0ZEX1NFRUs9V0FTSV9SSUdIVF9GRF9TRUVLJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9SSUdIVF9GRF9TWU5DPVdBU0lfUklHSFRfRkRfU1lOQyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfUklHSFRfRkRfVEVMTD1XQVNJX1JJR0hUX0ZEX1RFTEwkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1JJR0hUX0ZEX1dSSVRFPVdBU0lfUklHSFRfRkRfV1JJVEUkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7Cm1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9SSUdIVF9QQVRIX0NSRUFURV9ESVJFQ1RPUlk9V0FTSV9SSUdIVF9QQVRIX0NSRUFURV9ESVJFQ1RPUlkkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1JJR0hUX1BBVEhfQ1JFQVRFX0ZJTEU9V0FTSV9SSUdIVF9QQVRIX0NSRUFURV9GSUxFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9SSUdIVF9QQVRIX0ZJTEVTVEFUX0dFVD1XQVNJX1JJR0hUX1BBVEhfRklMRVNUQVRfR0VUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9SSUdIVF9QQVRIX0ZJTEVTVEFUX1NFVF9TSVpFPVdBU0lfUklHSFRfUEFUSF9GSUxFU1RBVF9TRVRfU0laRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czsKbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1JJR0hUX1BBVEhfRklMRVNUQVRfU0VUX1RJTUVTPVdBU0lfUklHSFRfUEFUSF9GSUxFU1RBVF9TRVRfVElNRVMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1JJR0hUX1BBVEhfTElOS19TT1VSQ0U9V0FTSV9SSUdIVF9QQVRIX0xJTktfU09VUkNFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9SSUdIVF9QQVRIX0xJTktfVEFSR0VUPVdBU0lfUklHSFRfUEFUSF9MSU5LX1RBUkdFVCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfUklHSFRfUEFUSF9PUEVOPVdBU0lfUklHSFRfUEFUSF9PUEVOJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfUklHSFRfUEFUSF9SRUFETElOSz1XQVNJX1JJR0hUX1BBVEhfUkVBRExJTkskJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1JJR0hUX1BBVEhfUkVNT1ZFX0RJUkVDVE9SWT1XQVNJX1JJR0hUX1BBVEhfUkVNT1ZFX0RJUkVDVE9SWSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfUklHSFRfUEFUSF9SRU5BTUVfU09VUkNFPVdBU0lfUklHSFRfUEFUSF9SRU5BTUVfU09VUkNFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9SSUdIVF9QQVRIX1JFTkFNRV9UQVJHRVQ9V0FTSV9SSUdIVF9QQVRIX1JFTkFNRV9UQVJHRVQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7Cm1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9SSUdIVF9QQVRIX1NZTUxJTks9V0FTSV9SSUdIVF9QQVRIX1NZTUxJTkskJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1JJR0hUX1BBVEhfVU5MSU5LX0ZJTEU9V0FTSV9SSUdIVF9QQVRIX1VOTElOS19GSUxFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9SSUdIVF9QT0xMX0ZEX1JFQURXUklURT1XQVNJX1JJR0hUX1BPTExfRkRfUkVBRFdSSVRFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9SSUdIVF9TT0NLX1NIVVRET1dOPVdBU0lfUklHSFRfU09DS19TSFVURE9XTiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czsKbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1NJR0FCUlQ9V0FTSV9TSUdBQlJUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9TSUdBTFJNPVdBU0lfU0lHQUxSTSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfU0lHQlVTPVdBU0lfU0lHQlVTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9TSUdDSExEPVdBU0lfU0lHQ0hMRCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfU0lHQ09OVD1XQVNJX1NJR0NPTlQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1NJR0ZQRT1XQVNJX1NJR0ZQRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czsKbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1NJR0hVUD1XQVNJX1NJR0hVUCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfU0lHSUxMPVdBU0lfU0lHSUxMJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9TSUdJTlQ9V0FTSV9TSUdJTlQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1NJR0tJTEw9V0FTSV9TSUdLSUxMJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9TSUdQSVBFPVdBU0lfU0lHUElQRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfU0lHUVVJVD1XQVNJX1NJR1FVSVQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7Cm1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9TSUdTRUdWPVdBU0lfU0lHU0VHViQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfU0lHU1RPUD1XQVNJX1NJR1NUT1AkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1NJR1RFUk09V0FTSV9TSUdURVJNJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9TSUdUUkFQPVdBU0lfU0lHVFJBUCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfU0lHVFNUUD1XQVNJX1NJR1RTVFAkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1NJR1RUSU49V0FTSV9TSUdUVElOJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfU0lHVFRPVT1XQVNJX1NJR1RUT1UkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1NJR1VSRz1XQVNJX1NJR1VSRyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfU0lHVVNSMT1XQVNJX1NJR1VTUjEkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1NJR1VTUjI9V0FTSV9TSUdVU1IyJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9TSUdWVEFMUk09V0FTSV9TSUdWVEFMUk0kJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7Cm1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9TSUdYQ1BVPVdBU0lfU0lHWENQVSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czttb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfU0lHWEZTWj1XQVNJX1NJR1hGU1okJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1NUREVSUl9GSUxFTk89V0FTSV9TVERFUlJfRklMRU5PJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9TVERJTl9GSUxFTk89V0FTSV9TVERJTl9GSUxFTk8kJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1NURE9VVF9GSUxFTk89V0FTSV9TVERPVVRfRklMRU5PJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOwptb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzLldBU0lfV0hFTkNFX0NVUj1XQVNJX1dIRU5DRV9DVVIkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM7bW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cy5XQVNJX1dIRU5DRV9FTkQ9V0FTSV9XSEVOQ0VfRU5EJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO21vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMuV0FTSV9XSEVOQ0VfU0VUPVdBU0lfV0hFTkNFX1NFVCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cztnb29nLmRlYnVnPXt9O2Z1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGRlYnVnJEVycm9yX0RlYnVnRXJyb3IoYSxiKXtpZihFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSlFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLG1vZHVsZSRjb250ZW50cyRnb29nJGRlYnVnJEVycm9yX0RlYnVnRXJyb3IpO2Vsc2V7Y29uc3QgYz1FcnJvcigpLnN0YWNrO2MmJih0aGlzLnN0YWNrPWMpfWEmJih0aGlzLm1lc3NhZ2U9U3RyaW5nKGEpKTt2b2lkIDAhPT1iJiYodGhpcy5jYXVzZT1iKTt0aGlzLnJlcG9ydEVycm9yVG9TZXJ2ZXI9ITB9Z29vZy5pbmhlcml0cyhtb2R1bGUkY29udGVudHMkZ29vZyRkZWJ1ZyRFcnJvcl9EZWJ1Z0Vycm9yLEVycm9yKTttb2R1bGUkY29udGVudHMkZ29vZyRkZWJ1ZyRFcnJvcl9EZWJ1Z0Vycm9yLnByb3RvdHlwZS5uYW1lPSJDdXN0b21FcnJvciI7Z29vZy5kZWJ1Zy5FcnJvcj1tb2R1bGUkY29udGVudHMkZ29vZyRkZWJ1ZyRFcnJvcl9EZWJ1Z0Vycm9yO2dvb2cuZG9tPXt9O2dvb2cuZG9tLk5vZGVUeXBlPXtFTEVNRU5UOjEsQVRUUklCVVRFOjIsVEVYVDozLENEQVRBX1NFQ1RJT046NCxFTlRJVFlfUkVGRVJFTkNFOjUsRU5USVRZOjYsUFJPQ0VTU0lOR19JTlNUUlVDVElPTjo3LENPTU1FTlQ6OCxET0NVTUVOVDo5LERPQ1VNRU5UX1RZUEU6MTAsRE9DVU1FTlRfRlJBR01FTlQ6MTEsTk9UQVRJT046MTJ9O2dvb2cuYXNzZXJ0cz17fTtnb29nLmFzc2VydHMuRU5BQkxFX0FTU0VSVFM9Z29vZy5ERUJVRztmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhc3NlcnRzX0Fzc2VydGlvbkVycm9yKGEsYil7bW9kdWxlJGNvbnRlbnRzJGdvb2ckZGVidWckRXJyb3JfRGVidWdFcnJvci5jYWxsKHRoaXMsbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXNzZXJ0c19zdWJzKGEsYikpO3RoaXMubWVzc2FnZVBhdHRlcm49YX1nb29nLmluaGVyaXRzKG1vZHVsZSRjb250ZW50cyRnb29nJGFzc2VydHNfQXNzZXJ0aW9uRXJyb3IsbW9kdWxlJGNvbnRlbnRzJGdvb2ckZGVidWckRXJyb3JfRGVidWdFcnJvcik7Z29vZy5hc3NlcnRzLkFzc2VydGlvbkVycm9yPW1vZHVsZSRjb250ZW50cyRnb29nJGFzc2VydHNfQXNzZXJ0aW9uRXJyb3I7bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXNzZXJ0c19Bc3NlcnRpb25FcnJvci5wcm90b3R5cGUubmFtZT0iQXNzZXJ0aW9uRXJyb3IiOwpnb29nLmFzc2VydHMuREVGQVVMVF9FUlJPUl9IQU5ETEVSPWZ1bmN0aW9uKGEpe3Rocm93IGE7fTtsZXQgbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXNzZXJ0c19lcnJvckhhbmRsZXJfPWdvb2cuYXNzZXJ0cy5ERUZBVUxUX0VSUk9SX0hBTkRMRVI7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXNzZXJ0c19zdWJzKGEsYil7YT1hLnNwbGl0KCIlcyIpO2xldCBjPSIiO2NvbnN0IGQ9YS5sZW5ndGgtMTtmb3IobGV0IGU9MDtlPGQ7ZSsrKWMrPWFbZV0rKGU8Yi5sZW5ndGg/YltlXToiJXMiKTtyZXR1cm4gYythW2RdfQpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhc3NlcnRzX2RvQXNzZXJ0RmFpbHVyZShhLGIsYyxkKXtsZXQgZT0iQXNzZXJ0aW9uIGZhaWxlZCIsZjtjPyhlKz0iOiAiK2MsZj1kKTphJiYoZSs9IjogIithLGY9Yik7YT1uZXcgbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXNzZXJ0c19Bc3NlcnRpb25FcnJvcigiIitlLGZ8fFtdKTttb2R1bGUkY29udGVudHMkZ29vZyRhc3NlcnRzX2Vycm9ySGFuZGxlcl8oYSl9Z29vZy5hc3NlcnRzLnNldEVycm9ySGFuZGxlcj1mdW5jdGlvbihhKXtnb29nLmFzc2VydHMuRU5BQkxFX0FTU0VSVFMmJihtb2R1bGUkY29udGVudHMkZ29vZyRhc3NlcnRzX2Vycm9ySGFuZGxlcl89YSl9Owpnb29nLmFzc2VydHMuYXNzZXJ0PWZ1bmN0aW9uKGEsYixjKXtnb29nLmFzc2VydHMuRU5BQkxFX0FTU0VSVFMmJiFhJiZtb2R1bGUkY29udGVudHMkZ29vZyRhc3NlcnRzX2RvQXNzZXJ0RmFpbHVyZSgiIixudWxsLGIsQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDIpKTtyZXR1cm4gYX07Z29vZy5hc3NlcnRzLmFzc2VydEV4aXN0cz1mdW5jdGlvbihhLGIsYyl7Z29vZy5hc3NlcnRzLkVOQUJMRV9BU1NFUlRTJiZudWxsPT1hJiZtb2R1bGUkY29udGVudHMkZ29vZyRhc3NlcnRzX2RvQXNzZXJ0RmFpbHVyZSgiRXhwZWN0ZWQgdG8gZXhpc3Q6ICVzLiIsW2FdLGIsQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDIpKTtyZXR1cm4gYX07Cmdvb2cuYXNzZXJ0cy5mYWlsPWZ1bmN0aW9uKGEsYil7Z29vZy5hc3NlcnRzLkVOQUJMRV9BU1NFUlRTJiZtb2R1bGUkY29udGVudHMkZ29vZyRhc3NlcnRzX2Vycm9ySGFuZGxlcl8obmV3IG1vZHVsZSRjb250ZW50cyRnb29nJGFzc2VydHNfQXNzZXJ0aW9uRXJyb3IoIkZhaWx1cmUiKyhhPyI6ICIrYToiIiksQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpKSl9O2dvb2cuYXNzZXJ0cy5hc3NlcnROdW1iZXI9ZnVuY3Rpb24oYSxiLGMpe2dvb2cuYXNzZXJ0cy5FTkFCTEVfQVNTRVJUUyYmIm51bWJlciIhPT10eXBlb2YgYSYmbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXNzZXJ0c19kb0Fzc2VydEZhaWx1cmUoIkV4cGVjdGVkIG51bWJlciBidXQgZ290ICVzOiAlcy4iLFtnb29nLnR5cGVPZihhKSxhXSxiLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywyKSk7cmV0dXJuIGF9Owpnb29nLmFzc2VydHMuYXNzZXJ0U3RyaW5nPWZ1bmN0aW9uKGEsYixjKXtnb29nLmFzc2VydHMuRU5BQkxFX0FTU0VSVFMmJiJzdHJpbmciIT09dHlwZW9mIGEmJm1vZHVsZSRjb250ZW50cyRnb29nJGFzc2VydHNfZG9Bc3NlcnRGYWlsdXJlKCJFeHBlY3RlZCBzdHJpbmcgYnV0IGdvdCAlczogJXMuIixbZ29vZy50eXBlT2YoYSksYV0sYixBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMikpO3JldHVybiBhfTtnb29nLmFzc2VydHMuYXNzZXJ0RnVuY3Rpb249ZnVuY3Rpb24oYSxiLGMpe2dvb2cuYXNzZXJ0cy5FTkFCTEVfQVNTRVJUUyYmImZ1bmN0aW9uIiE9PXR5cGVvZiBhJiZtb2R1bGUkY29udGVudHMkZ29vZyRhc3NlcnRzX2RvQXNzZXJ0RmFpbHVyZSgiRXhwZWN0ZWQgZnVuY3Rpb24gYnV0IGdvdCAlczogJXMuIixbZ29vZy50eXBlT2YoYSksYV0sYixBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMikpO3JldHVybiBhfTsKZ29vZy5hc3NlcnRzLmFzc2VydE9iamVjdD1mdW5jdGlvbihhLGIsYyl7Z29vZy5hc3NlcnRzLkVOQUJMRV9BU1NFUlRTJiYhZ29vZy5pc09iamVjdChhKSYmbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXNzZXJ0c19kb0Fzc2VydEZhaWx1cmUoIkV4cGVjdGVkIG9iamVjdCBidXQgZ290ICVzOiAlcy4iLFtnb29nLnR5cGVPZihhKSxhXSxiLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywyKSk7cmV0dXJuIGF9O2dvb2cuYXNzZXJ0cy5hc3NlcnRBcnJheT1mdW5jdGlvbihhLGIsYyl7Z29vZy5hc3NlcnRzLkVOQUJMRV9BU1NFUlRTJiYhQXJyYXkuaXNBcnJheShhKSYmbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXNzZXJ0c19kb0Fzc2VydEZhaWx1cmUoIkV4cGVjdGVkIGFycmF5IGJ1dCBnb3QgJXM6ICVzLiIsW2dvb2cudHlwZU9mKGEpLGFdLGIsQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDIpKTtyZXR1cm4gYX07Cmdvb2cuYXNzZXJ0cy5hc3NlcnRCb29sZWFuPWZ1bmN0aW9uKGEsYixjKXtnb29nLmFzc2VydHMuRU5BQkxFX0FTU0VSVFMmJiJib29sZWFuIiE9PXR5cGVvZiBhJiZtb2R1bGUkY29udGVudHMkZ29vZyRhc3NlcnRzX2RvQXNzZXJ0RmFpbHVyZSgiRXhwZWN0ZWQgYm9vbGVhbiBidXQgZ290ICVzOiAlcy4iLFtnb29nLnR5cGVPZihhKSxhXSxiLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywyKSk7cmV0dXJuIGF9Owpnb29nLmFzc2VydHMuYXNzZXJ0RWxlbWVudD1mdW5jdGlvbihhLGIsYyl7IWdvb2cuYXNzZXJ0cy5FTkFCTEVfQVNTRVJUU3x8Z29vZy5pc09iamVjdChhKSYmYS5ub2RlVHlwZT09Z29vZy5kb20uTm9kZVR5cGUuRUxFTUVOVHx8bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXNzZXJ0c19kb0Fzc2VydEZhaWx1cmUoIkV4cGVjdGVkIEVsZW1lbnQgYnV0IGdvdCAlczogJXMuIixbZ29vZy50eXBlT2YoYSksYV0sYixBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMikpO3JldHVybiBhfTsKZ29vZy5hc3NlcnRzLmFzc2VydEluc3RhbmNlb2Y9ZnVuY3Rpb24oYSxiLGMsZCl7IWdvb2cuYXNzZXJ0cy5FTkFCTEVfQVNTRVJUU3x8YSBpbnN0YW5jZW9mIGJ8fG1vZHVsZSRjb250ZW50cyRnb29nJGFzc2VydHNfZG9Bc3NlcnRGYWlsdXJlKCJFeHBlY3RlZCBpbnN0YW5jZW9mICVzIGJ1dCBnb3QgJXMuIixbbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXNzZXJ0c19nZXRUeXBlKGIpLG1vZHVsZSRjb250ZW50cyRnb29nJGFzc2VydHNfZ2V0VHlwZShhKV0sYyxBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMykpO3JldHVybiBhfTsKZ29vZy5hc3NlcnRzLmFzc2VydEZpbml0ZT1mdW5jdGlvbihhLGIsYyl7IWdvb2cuYXNzZXJ0cy5FTkFCTEVfQVNTRVJUU3x8Im51bWJlciI9PXR5cGVvZiBhJiZpc0Zpbml0ZShhKXx8bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXNzZXJ0c19kb0Fzc2VydEZhaWx1cmUoIkV4cGVjdGVkICVzIHRvIGJlIGEgZmluaXRlIG51bWJlciBidXQgaXQgaXMgbm90LiIsW2FdLGIsQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDIpKTtyZXR1cm4gYX07CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFzc2VydHNfZ2V0VHlwZShhKXtyZXR1cm4gYSBpbnN0YW5jZW9mIEZ1bmN0aW9uP2EuZGlzcGxheU5hbWV8fGEubmFtZXx8InVua25vd24gdHlwZSBuYW1lIjphIGluc3RhbmNlb2YgT2JqZWN0P2EuY29uc3RydWN0b3IuZGlzcGxheU5hbWV8fGEuY29uc3RydWN0b3IubmFtZXx8T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpOm51bGw9PT1hPyJudWxsIjp0eXBlb2YgYX07Z29vZy5hcnJheT17fTtnb29nLk5BVElWRV9BUlJBWV9QUk9UT1RZUEVTPWdvb2cuVFJVU1RFRF9TSVRFO2NvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X0FTU1VNRV9OQVRJVkVfRlVOQ1RJT05TPTIwMTI8Z29vZy5GRUFUVVJFU0VUX1lFQVI7Z29vZy5hcnJheS5BU1NVTUVfTkFUSVZFX0ZVTkNUSU9OUz1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9BU1NVTUVfTkFUSVZFX0ZVTkNUSU9OUztmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9wZWVrKGEpe3JldHVybiBhW2EubGVuZ3RoLTFdfWdvb2cuYXJyYXkucGVlaz1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9wZWVrO2dvb2cuYXJyYXkubGFzdD1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9wZWVrOwpjb25zdCBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9pbmRleE9mPWdvb2cuTkFUSVZFX0FSUkFZX1BST1RPVFlQRVMmJihtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9BU1NVTUVfTkFUSVZFX0ZVTkNUSU9OU3x8QXJyYXkucHJvdG90eXBlLmluZGV4T2YpP2Z1bmN0aW9uKGEsYixjKXtnb29nLmFzc2VydHMuYXNzZXJ0KG51bGwhPWEubGVuZ3RoKTtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbChhLGIsYyl9OmZ1bmN0aW9uKGEsYixjKXtjPW51bGw9PWM/MDowPmM/TWF0aC5tYXgoMCxhLmxlbmd0aCtjKTpjO2lmKCJzdHJpbmciPT09dHlwZW9mIGEpcmV0dXJuInN0cmluZyIhPT10eXBlb2YgYnx8MSE9Yi5sZW5ndGg/LTE6YS5pbmRleE9mKGIsYyk7Zm9yKDtjPGEubGVuZ3RoO2MrKylpZihjIGluIGEmJmFbY109PT1iKXJldHVybiBjO3JldHVybi0xfTtnb29nLmFycmF5LmluZGV4T2Y9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfaW5kZXhPZjsKY29uc3QgbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfbGFzdEluZGV4T2Y9Z29vZy5OQVRJVkVfQVJSQVlfUFJPVE9UWVBFUyYmKG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X0FTU1VNRV9OQVRJVkVfRlVOQ1RJT05TfHxBcnJheS5wcm90b3R5cGUubGFzdEluZGV4T2YpP2Z1bmN0aW9uKGEsYixjKXtnb29nLmFzc2VydHMuYXNzZXJ0KG51bGwhPWEubGVuZ3RoKTtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmxhc3RJbmRleE9mLmNhbGwoYSxiLG51bGw9PWM/YS5sZW5ndGgtMTpjKX06ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbD09Yz9hLmxlbmd0aC0xOmM7MD5jJiYoYz1NYXRoLm1heCgwLGEubGVuZ3RoK2MpKTtpZigic3RyaW5nIj09PXR5cGVvZiBhKXJldHVybiJzdHJpbmciIT09dHlwZW9mIGJ8fDEhPWIubGVuZ3RoPy0xOmEubGFzdEluZGV4T2YoYixjKTtmb3IoOzA8PWM7Yy0tKWlmKGMgaW4gYSYmYVtjXT09PWIpcmV0dXJuIGM7cmV0dXJuLTF9Owpnb29nLmFycmF5Lmxhc3RJbmRleE9mPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2xhc3RJbmRleE9mO2NvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2ZvckVhY2g9Z29vZy5OQVRJVkVfQVJSQVlfUFJPVE9UWVBFUyYmKG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X0FTU1VNRV9OQVRJVkVfRlVOQ1RJT05TfHxBcnJheS5wcm90b3R5cGUuZm9yRWFjaCk/ZnVuY3Rpb24oYSxiLGMpe2dvb2cuYXNzZXJ0cy5hc3NlcnQobnVsbCE9YS5sZW5ndGgpO0FycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYSxiLGMpfTpmdW5jdGlvbihhLGIsYyl7Y29uc3QgZD1hLmxlbmd0aCxlPSJzdHJpbmciPT09dHlwZW9mIGE/YS5zcGxpdCgiIik6YTtmb3IobGV0IGY9MDtmPGQ7ZisrKWYgaW4gZSYmYi5jYWxsKGMsZVtmXSxmLGEpfTtnb29nLmFycmF5LmZvckVhY2g9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZm9yRWFjaDsKZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZm9yRWFjaFJpZ2h0KGEsYixjKXt2YXIgZD1hLmxlbmd0aDtjb25zdCBlPSJzdHJpbmciPT09dHlwZW9mIGE/YS5zcGxpdCgiIik6YTtmb3IoLS1kOzA8PWQ7LS1kKWQgaW4gZSYmYi5jYWxsKGMsZVtkXSxkLGEpfWdvb2cuYXJyYXkuZm9yRWFjaFJpZ2h0PW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2ZvckVhY2hSaWdodDsKY29uc3QgbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZmlsdGVyPWdvb2cuTkFUSVZFX0FSUkFZX1BST1RPVFlQRVMmJihtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9BU1NVTUVfTkFUSVZFX0ZVTkNUSU9OU3x8QXJyYXkucHJvdG90eXBlLmZpbHRlcik/ZnVuY3Rpb24oYSxiLGMpe2dvb2cuYXNzZXJ0cy5hc3NlcnQobnVsbCE9YS5sZW5ndGgpO3JldHVybiBBcnJheS5wcm90b3R5cGUuZmlsdGVyLmNhbGwoYSxiLGMpfTpmdW5jdGlvbihhLGIsYyl7Y29uc3QgZD1hLmxlbmd0aCxlPVtdO2xldCBmPTA7Y29uc3QgZz0ic3RyaW5nIj09PXR5cGVvZiBhP2Euc3BsaXQoIiIpOmE7Zm9yKGxldCBoPTA7aDxkO2grKylpZihoIGluIGcpe2NvbnN0IGs9Z1toXTtiLmNhbGwoYyxrLGgsYSkmJihlW2YrK109ayl9cmV0dXJuIGV9O2dvb2cuYXJyYXkuZmlsdGVyPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2ZpbHRlcjsKY29uc3QgbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfbWFwPWdvb2cuTkFUSVZFX0FSUkFZX1BST1RPVFlQRVMmJihtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9BU1NVTUVfTkFUSVZFX0ZVTkNUSU9OU3x8QXJyYXkucHJvdG90eXBlLm1hcCk/ZnVuY3Rpb24oYSxiLGMpe2dvb2cuYXNzZXJ0cy5hc3NlcnQobnVsbCE9YS5sZW5ndGgpO3JldHVybiBBcnJheS5wcm90b3R5cGUubWFwLmNhbGwoYSxiLGMpfTpmdW5jdGlvbihhLGIsYyl7Y29uc3QgZD1hLmxlbmd0aCxlPUFycmF5KGQpLGY9InN0cmluZyI9PT10eXBlb2YgYT9hLnNwbGl0KCIiKTphO2ZvcihsZXQgZz0wO2c8ZDtnKyspZyBpbiBmJiYoZVtnXT1iLmNhbGwoYyxmW2ddLGcsYSkpO3JldHVybiBlfTtnb29nLmFycmF5Lm1hcD1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9tYXA7CmNvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3JlZHVjZT1nb29nLk5BVElWRV9BUlJBWV9QUk9UT1RZUEVTJiYobW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfQVNTVU1FX05BVElWRV9GVU5DVElPTlN8fEFycmF5LnByb3RvdHlwZS5yZWR1Y2UpP2Z1bmN0aW9uKGEsYixjLGQpe2dvb2cuYXNzZXJ0cy5hc3NlcnQobnVsbCE9YS5sZW5ndGgpO2QmJihiPWdvb2cuYmluZChiLGQpKTtyZXR1cm4gQXJyYXkucHJvdG90eXBlLnJlZHVjZS5jYWxsKGEsYixjKX06ZnVuY3Rpb24oYSxiLGMsZCl7bGV0IGU9Yzttb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9mb3JFYWNoKGEsZnVuY3Rpb24oZixnKXtlPWIuY2FsbChkLGUsZixnLGEpfSk7cmV0dXJuIGV9O2dvb2cuYXJyYXkucmVkdWNlPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3JlZHVjZTsKY29uc3QgbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfcmVkdWNlUmlnaHQ9Z29vZy5OQVRJVkVfQVJSQVlfUFJPVE9UWVBFUyYmKG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X0FTU1VNRV9OQVRJVkVfRlVOQ1RJT05TfHxBcnJheS5wcm90b3R5cGUucmVkdWNlUmlnaHQpP2Z1bmN0aW9uKGEsYixjLGQpe2dvb2cuYXNzZXJ0cy5hc3NlcnQobnVsbCE9YS5sZW5ndGgpO2dvb2cuYXNzZXJ0cy5hc3NlcnQobnVsbCE9Yik7ZCYmKGI9Z29vZy5iaW5kKGIsZCkpO3JldHVybiBBcnJheS5wcm90b3R5cGUucmVkdWNlUmlnaHQuY2FsbChhLGIsYyl9OmZ1bmN0aW9uKGEsYixjLGQpe2xldCBlPWM7bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZm9yRWFjaFJpZ2h0KGEsZnVuY3Rpb24oZixnKXtlPWIuY2FsbChkLGUsZixnLGEpfSk7cmV0dXJuIGV9O2dvb2cuYXJyYXkucmVkdWNlUmlnaHQ9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfcmVkdWNlUmlnaHQ7CmNvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3NvbWU9Z29vZy5OQVRJVkVfQVJSQVlfUFJPVE9UWVBFUyYmKG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X0FTU1VNRV9OQVRJVkVfRlVOQ1RJT05TfHxBcnJheS5wcm90b3R5cGUuc29tZSk/ZnVuY3Rpb24oYSxiLGMpe2dvb2cuYXNzZXJ0cy5hc3NlcnQobnVsbCE9YS5sZW5ndGgpO3JldHVybiBBcnJheS5wcm90b3R5cGUuc29tZS5jYWxsKGEsYixjKX06ZnVuY3Rpb24oYSxiLGMpe2NvbnN0IGQ9YS5sZW5ndGgsZT0ic3RyaW5nIj09PXR5cGVvZiBhP2Euc3BsaXQoIiIpOmE7Zm9yKGxldCBmPTA7ZjxkO2YrKylpZihmIGluIGUmJmIuY2FsbChjLGVbZl0sZixhKSlyZXR1cm4hMDtyZXR1cm4hMX07Z29vZy5hcnJheS5zb21lPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3NvbWU7CmNvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2V2ZXJ5PWdvb2cuTkFUSVZFX0FSUkFZX1BST1RPVFlQRVMmJihtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9BU1NVTUVfTkFUSVZFX0ZVTkNUSU9OU3x8QXJyYXkucHJvdG90eXBlLmV2ZXJ5KT9mdW5jdGlvbihhLGIsYyl7Z29vZy5hc3NlcnRzLmFzc2VydChudWxsIT1hLmxlbmd0aCk7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5ldmVyeS5jYWxsKGEsYixjKX06ZnVuY3Rpb24oYSxiLGMpe2NvbnN0IGQ9YS5sZW5ndGgsZT0ic3RyaW5nIj09PXR5cGVvZiBhP2Euc3BsaXQoIiIpOmE7Zm9yKGxldCBmPTA7ZjxkO2YrKylpZihmIGluIGUmJiFiLmNhbGwoYyxlW2ZdLGYsYSkpcmV0dXJuITE7cmV0dXJuITB9O2dvb2cuYXJyYXkuZXZlcnk9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZXZlcnk7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2NvdW50KGEsYixjKXtsZXQgZD0wO21vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2ZvckVhY2goYSxmdW5jdGlvbihlLGYsZyl7Yi5jYWxsKGMsZSxmLGcpJiYrK2R9LGMpO3JldHVybiBkfWdvb2cuYXJyYXkuY291bnQ9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfY291bnQ7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZmluZChhLGIsYyl7Yj1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9maW5kSW5kZXgoYSxiLGMpO3JldHVybiAwPmI/bnVsbDoic3RyaW5nIj09PXR5cGVvZiBhP2EuY2hhckF0KGIpOmFbYl19Z29vZy5hcnJheS5maW5kPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2ZpbmQ7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2ZpbmRJbmRleChhLGIsYyl7Y29uc3QgZD1hLmxlbmd0aCxlPSJzdHJpbmciPT09dHlwZW9mIGE/YS5zcGxpdCgiIik6YTtmb3IobGV0IGY9MDtmPGQ7ZisrKWlmKGYgaW4gZSYmYi5jYWxsKGMsZVtmXSxmLGEpKXJldHVybiBmO3JldHVybi0xfWdvb2cuYXJyYXkuZmluZEluZGV4PW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2ZpbmRJbmRleDtmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9maW5kUmlnaHQoYSxiLGMpe2I9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZmluZEluZGV4UmlnaHQoYSxiLGMpO3JldHVybiAwPmI/bnVsbDoic3RyaW5nIj09PXR5cGVvZiBhP2EuY2hhckF0KGIpOmFbYl19Z29vZy5hcnJheS5maW5kUmlnaHQ9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZmluZFJpZ2h0OwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9maW5kSW5kZXhSaWdodChhLGIsYyl7dmFyIGQ9YS5sZW5ndGg7Y29uc3QgZT0ic3RyaW5nIj09PXR5cGVvZiBhP2Euc3BsaXQoIiIpOmE7Zm9yKC0tZDswPD1kO2QtLSlpZihkIGluIGUmJmIuY2FsbChjLGVbZF0sZCxhKSlyZXR1cm4gZDtyZXR1cm4tMX1nb29nLmFycmF5LmZpbmRJbmRleFJpZ2h0PW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2ZpbmRJbmRleFJpZ2h0O2Z1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2NvbnRhaW5zKGEsYil7cmV0dXJuIDA8PW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2luZGV4T2YoYSxiKX1nb29nLmFycmF5LmNvbnRhaW5zPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2NvbnRhaW5zO2Z1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2lzRW1wdHkoYSl7cmV0dXJuIDA9PWEubGVuZ3RofWdvb2cuYXJyYXkuaXNFbXB0eT1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9pc0VtcHR5OwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9jbGVhcihhKXtpZighQXJyYXkuaXNBcnJheShhKSlmb3IobGV0IGI9YS5sZW5ndGgtMTswPD1iO2ItLSlkZWxldGUgYVtiXTthLmxlbmd0aD0wfWdvb2cuYXJyYXkuY2xlYXI9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfY2xlYXI7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfaW5zZXJ0KGEsYil7bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfY29udGFpbnMoYSxiKXx8YS5wdXNoKGIpfWdvb2cuYXJyYXkuaW5zZXJ0PW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2luc2VydDtmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9pbnNlcnRBdChhLGIsYyl7bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfc3BsaWNlKGEsYywwLGIpfWdvb2cuYXJyYXkuaW5zZXJ0QXQ9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfaW5zZXJ0QXQ7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2luc2VydEFycmF5QXQoYSxiLGMpe2dvb2cucGFydGlhbChtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9zcGxpY2UsYSxjLDApLmFwcGx5KG51bGwsYil9Z29vZy5hcnJheS5pbnNlcnRBcnJheUF0PW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2luc2VydEFycmF5QXQ7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfaW5zZXJ0QmVmb3JlKGEsYixjKXtsZXQgZDsyPT1hcmd1bWVudHMubGVuZ3RofHwwPihkPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2luZGV4T2YoYSxjKSk/YS5wdXNoKGIpOm1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2luc2VydEF0KGEsYixkKX1nb29nLmFycmF5Lmluc2VydEJlZm9yZT1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9pbnNlcnRCZWZvcmU7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3JlbW92ZShhLGIpe2I9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfaW5kZXhPZihhLGIpO2xldCBjOyhjPTA8PWIpJiZtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yZW1vdmVBdChhLGIpO3JldHVybiBjfWdvb2cuYXJyYXkucmVtb3ZlPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3JlbW92ZTtmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yZW1vdmVMYXN0KGEsYil7Yj1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9sYXN0SW5kZXhPZihhLGIpO3JldHVybiAwPD1iPyhtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yZW1vdmVBdChhLGIpLCEwKTohMX1nb29nLmFycmF5LnJlbW92ZUxhc3Q9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfcmVtb3ZlTGFzdDsKZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfcmVtb3ZlQXQoYSxiKXtnb29nLmFzc2VydHMuYXNzZXJ0KG51bGwhPWEubGVuZ3RoKTtyZXR1cm4gMT09QXJyYXkucHJvdG90eXBlLnNwbGljZS5jYWxsKGEsYiwxKS5sZW5ndGh9Z29vZy5hcnJheS5yZW1vdmVBdD1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yZW1vdmVBdDtmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yZW1vdmVJZihhLGIsYyl7Yj1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9maW5kSW5kZXgoYSxiLGMpO3JldHVybiAwPD1iPyhtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yZW1vdmVBdChhLGIpLCEwKTohMX1nb29nLmFycmF5LnJlbW92ZUlmPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3JlbW92ZUlmOwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yZW1vdmVBbGxJZihhLGIsYyl7bGV0IGQ9MDttb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9mb3JFYWNoUmlnaHQoYSxmdW5jdGlvbihlLGYpe2IuY2FsbChjLGUsZixhKSYmbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfcmVtb3ZlQXQoYSxmKSYmZCsrfSk7cmV0dXJuIGR9Z29vZy5hcnJheS5yZW1vdmVBbGxJZj1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yZW1vdmVBbGxJZjtmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9jb25jYXQoYSl7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoW10sYXJndW1lbnRzKX1nb29nLmFycmF5LmNvbmNhdD1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9jb25jYXQ7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfam9pbihhKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShbXSxhcmd1bWVudHMpfQpnb29nLmFycmF5LmpvaW49bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfam9pbjtmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV90b0FycmF5KGEpe2NvbnN0IGI9YS5sZW5ndGg7aWYoMDxiKXtjb25zdCBjPUFycmF5KGIpO2ZvcihsZXQgZD0wO2Q8YjtkKyspY1tkXT1hW2RdO3JldHVybiBjfXJldHVybltdfWNvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2Nsb25lPWdvb2cuYXJyYXkudG9BcnJheT1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV90b0FycmF5O2dvb2cuYXJyYXkuY2xvbmU9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfdG9BcnJheTsKZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZXh0ZW5kKGEsYil7Zm9yKGxldCBjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyl7Y29uc3QgZD1hcmd1bWVudHNbY107aWYoZ29vZy5pc0FycmF5TGlrZShkKSl7Y29uc3QgZT1hLmxlbmd0aHx8MCxmPWQubGVuZ3RofHwwO2EubGVuZ3RoPWUrZjtmb3IobGV0IGc9MDtnPGY7ZysrKWFbZStnXT1kW2ddfWVsc2UgYS5wdXNoKGQpfX1nb29nLmFycmF5LmV4dGVuZD1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9leHRlbmQ7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfc3BsaWNlKGEsYixjLGQpe2dvb2cuYXNzZXJ0cy5hc3NlcnQobnVsbCE9YS5sZW5ndGgpO3JldHVybiBBcnJheS5wcm90b3R5cGUuc3BsaWNlLmFwcGx5KGEsbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfc2xpY2UoYXJndW1lbnRzLDEpKX1nb29nLmFycmF5LnNwbGljZT1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9zcGxpY2U7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3NsaWNlKGEsYixjKXtnb29nLmFzc2VydHMuYXNzZXJ0KG51bGwhPWEubGVuZ3RoKTtyZXR1cm4gMj49YXJndW1lbnRzLmxlbmd0aD9BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhLGIpOkFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEsYixjKX1nb29nLmFycmF5LnNsaWNlPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3NsaWNlOwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yZW1vdmVEdXBsaWNhdGVzKGEsYixjKXtiPWJ8fGE7dmFyIGQ9ZnVuY3Rpb24oZyl7cmV0dXJuIGdvb2cuaXNPYmplY3QoZyk/Im8iK2dvb2cuZ2V0VWlkKGcpOih0eXBlb2YgZykuY2hhckF0KDApK2d9O2M9Y3x8ZDtsZXQgZT1kPTA7Y29uc3QgZj17fTtmb3IoO2U8YS5sZW5ndGg7KXtjb25zdCBnPWFbZSsrXSxoPWMoZyk7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGYsaCl8fChmW2hdPSEwLGJbZCsrXT1nKX1iLmxlbmd0aD1kfWdvb2cuYXJyYXkucmVtb3ZlRHVwbGljYXRlcz1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yZW1vdmVEdXBsaWNhdGVzOwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9iaW5hcnlTZWFyY2goYSxiLGMpe3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9iaW5hcnlTZWFyY2hfKGEsY3x8bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZGVmYXVsdENvbXBhcmUsITEsYil9Z29vZy5hcnJheS5iaW5hcnlTZWFyY2g9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfYmluYXJ5U2VhcmNoO2Z1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2JpbmFyeVNlbGVjdChhLGIsYyl7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2JpbmFyeVNlYXJjaF8oYSxiLCEwLHZvaWQgMCxjKX1nb29nLmFycmF5LmJpbmFyeVNlbGVjdD1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9iaW5hcnlTZWxlY3Q7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2JpbmFyeVNlYXJjaF8oYSxiLGMsZCxlKXtsZXQgZj0wLGc9YS5sZW5ndGgsaDtmb3IoO2Y8Zzspe2NvbnN0IGs9ZisoZy1mPj4+MSk7bGV0IGw7bD1jP2IuY2FsbChlLGFba10sayxhKTpiKGQsYVtrXSk7MDxsP2Y9aysxOihnPWssaD0hbCl9cmV0dXJuIGg/ZjotZi0xfWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3NvcnQoYSxiKXthLnNvcnQoYnx8bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZGVmYXVsdENvbXBhcmUpfWdvb2cuYXJyYXkuc29ydD1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9zb3J0OwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9zdGFibGVTb3J0KGEsYil7Y29uc3QgYz1BcnJheShhLmxlbmd0aCk7Zm9yKGxldCBlPTA7ZTxhLmxlbmd0aDtlKyspY1tlXT17aW5kZXg6ZSx2YWx1ZTphW2VdfTtjb25zdCBkPWJ8fG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2RlZmF1bHRDb21wYXJlO21vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3NvcnQoYyxmdW5jdGlvbihlLGYpe3JldHVybiBkKGUudmFsdWUsZi52YWx1ZSl8fGUuaW5kZXgtZi5pbmRleH0pO2ZvcihiPTA7YjxhLmxlbmd0aDtiKyspYVtiXT1jW2JdLnZhbHVlfWdvb2cuYXJyYXkuc3RhYmxlU29ydD1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9zdGFibGVTb3J0OwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9zb3J0QnlLZXkoYSxiLGMpe2NvbnN0IGQ9Y3x8bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZGVmYXVsdENvbXBhcmU7bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfc29ydChhLGZ1bmN0aW9uKGUsZil7cmV0dXJuIGQoYihlKSxiKGYpKX0pfWdvb2cuYXJyYXkuc29ydEJ5S2V5PW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3NvcnRCeUtleTtmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9zb3J0T2JqZWN0c0J5S2V5KGEsYixjKXttb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9zb3J0QnlLZXkoYSxmdW5jdGlvbihkKXtyZXR1cm4gZFtiXX0sYyl9Z29vZy5hcnJheS5zb3J0T2JqZWN0c0J5S2V5PW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3NvcnRPYmplY3RzQnlLZXk7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2lzU29ydGVkKGEsYixjKXtiPWJ8fG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2RlZmF1bHRDb21wYXJlO2ZvcihsZXQgZD0xO2Q8YS5sZW5ndGg7ZCsrKXtjb25zdCBlPWIoYVtkLTFdLGFbZF0pO2lmKDA8ZXx8MD09ZSYmYylyZXR1cm4hMX1yZXR1cm4hMH1nb29nLmFycmF5LmlzU29ydGVkPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2lzU29ydGVkO2Z1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2VxdWFscyhhLGIsYyl7aWYoIWdvb2cuaXNBcnJheUxpa2UoYSl8fCFnb29nLmlzQXJyYXlMaWtlKGIpfHxhLmxlbmd0aCE9Yi5sZW5ndGgpcmV0dXJuITE7Y29uc3QgZD1hLmxlbmd0aDtjPWN8fG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2RlZmF1bHRDb21wYXJlRXF1YWxpdHk7Zm9yKGxldCBlPTA7ZTxkO2UrKylpZighYyhhW2VdLGJbZV0pKXJldHVybiExO3JldHVybiEwfQpnb29nLmFycmF5LmVxdWFscz1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9lcXVhbHM7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfY29tcGFyZTMoYSxiLGMpe2M9Y3x8bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZGVmYXVsdENvbXBhcmU7Y29uc3QgZD1NYXRoLm1pbihhLmxlbmd0aCxiLmxlbmd0aCk7Zm9yKGxldCBlPTA7ZTxkO2UrKyl7Y29uc3QgZj1jKGFbZV0sYltlXSk7aWYoMCE9ZilyZXR1cm4gZn1yZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZGVmYXVsdENvbXBhcmUoYS5sZW5ndGgsYi5sZW5ndGgpfWdvb2cuYXJyYXkuY29tcGFyZTM9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfY29tcGFyZTM7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZGVmYXVsdENvbXBhcmUoYSxiKXtyZXR1cm4gYT5iPzE6YTxiPy0xOjB9Z29vZy5hcnJheS5kZWZhdWx0Q29tcGFyZT1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9kZWZhdWx0Q29tcGFyZTsKZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfaW52ZXJzZURlZmF1bHRDb21wYXJlKGEsYil7cmV0dXJuLW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2RlZmF1bHRDb21wYXJlKGEsYil9Z29vZy5hcnJheS5pbnZlcnNlRGVmYXVsdENvbXBhcmU9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfaW52ZXJzZURlZmF1bHRDb21wYXJlO2Z1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2RlZmF1bHRDb21wYXJlRXF1YWxpdHkoYSxiKXtyZXR1cm4gYT09PWJ9Z29vZy5hcnJheS5kZWZhdWx0Q29tcGFyZUVxdWFsaXR5PW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2RlZmF1bHRDb21wYXJlRXF1YWxpdHk7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2JpbmFyeUluc2VydChhLGIsYyl7Yz1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9iaW5hcnlTZWFyY2goYSxiLGMpO3JldHVybiAwPmM/KG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2luc2VydEF0KGEsYiwtKGMrMSkpLCEwKTohMX1nb29nLmFycmF5LmJpbmFyeUluc2VydD1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9iaW5hcnlJbnNlcnQ7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfYmluYXJ5UmVtb3ZlKGEsYixjKXtiPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2JpbmFyeVNlYXJjaChhLGIsYyk7cmV0dXJuIDA8PWI/bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfcmVtb3ZlQXQoYSxiKTohMX1nb29nLmFycmF5LmJpbmFyeVJlbW92ZT1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9iaW5hcnlSZW1vdmU7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2J1Y2tldChhLGIsYyl7Y29uc3QgZD17fTtmb3IobGV0IGU9MDtlPGEubGVuZ3RoO2UrKyl7Y29uc3QgZj1hW2VdLGc9Yi5jYWxsKGMsZixlLGEpO3ZvaWQgMCE9PWcmJihkW2ddfHwoZFtnXT1bXSkpLnB1c2goZil9cmV0dXJuIGR9Z29vZy5hcnJheS5idWNrZXQ9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfYnVja2V0O2Z1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2J1Y2tldFRvTWFwKGEsYil7Y29uc3QgYz1uZXcgTWFwO2ZvcihsZXQgZD0wO2Q8YS5sZW5ndGg7ZCsrKXtjb25zdCBlPWFbZF0sZj1iKGUsZCxhKTtpZih2b2lkIDAhPT1mKXtsZXQgZz1jLmdldChmKTtnfHwoZz1bXSxjLnNldChmLGcpKTtnLnB1c2goZSl9fXJldHVybiBjfWdvb2cuYXJyYXkuYnVja2V0VG9NYXA9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfYnVja2V0VG9NYXA7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3RvT2JqZWN0KGEsYixjKXtjb25zdCBkPXt9O21vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2ZvckVhY2goYSxmdW5jdGlvbihlLGYpe2RbYi5jYWxsKGMsZSxmLGEpXT1lfSk7cmV0dXJuIGR9Z29vZy5hcnJheS50b09iamVjdD1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV90b09iamVjdDtmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV90b01hcChhLGIpe2NvbnN0IGM9bmV3IE1hcDtmb3IobGV0IGQ9MDtkPGEubGVuZ3RoO2QrKyl7Y29uc3QgZT1hW2RdO2Muc2V0KGIoZSxkLGEpLGUpfXJldHVybiBjfWdvb2cuYXJyYXkudG9NYXA9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfdG9NYXA7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3JhbmdlKGEsYixjKXtjb25zdCBkPVtdO2xldCBlPTAsZj1hO2M9Y3x8MTt2b2lkIDAhPT1iJiYoZT1hLGY9Yik7aWYoMD5jKihmLWUpKXJldHVybltdO2lmKDA8Yylmb3IoYT1lO2E8ZjthKz1jKWQucHVzaChhKTtlbHNlIGZvcihhPWU7YT5mO2ErPWMpZC5wdXNoKGEpO3JldHVybiBkfWdvb2cuYXJyYXkucmFuZ2U9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfcmFuZ2U7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfcmVwZWF0KGEsYil7Y29uc3QgYz1bXTtmb3IobGV0IGQ9MDtkPGI7ZCsrKWNbZF09YTtyZXR1cm4gY31nb29nLmFycmF5LnJlcGVhdD1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yZXBlYXQ7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2ZsYXR0ZW4oYSl7Y29uc3QgYj1bXTtmb3IobGV0IGQ9MDtkPGFyZ3VtZW50cy5sZW5ndGg7ZCsrKXtjb25zdCBlPWFyZ3VtZW50c1tkXTtpZihBcnJheS5pc0FycmF5KGUpKWZvcihsZXQgZj0wO2Y8ZS5sZW5ndGg7Zis9ODE5Mil7dmFyIGM9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfc2xpY2UoZSxmLGYrODE5Mik7Yz1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9mbGF0dGVuLmFwcGx5KG51bGwsYyk7Zm9yKGxldCBnPTA7ZzxjLmxlbmd0aDtnKyspYi5wdXNoKGNbZ10pfWVsc2UgYi5wdXNoKGUpfXJldHVybiBifWdvb2cuYXJyYXkuZmxhdHRlbj1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9mbGF0dGVuOwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yb3RhdGUoYSxiKXtnb29nLmFzc2VydHMuYXNzZXJ0KG51bGwhPWEubGVuZ3RoKTthLmxlbmd0aCYmKGIlPWEubGVuZ3RoLDA8Yj9BcnJheS5wcm90b3R5cGUudW5zaGlmdC5hcHBseShhLGEuc3BsaWNlKC1iLGIpKTowPmImJkFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGEsYS5zcGxpY2UoMCwtYikpKTtyZXR1cm4gYX1nb29nLmFycmF5LnJvdGF0ZT1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9yb3RhdGU7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfbW92ZUl0ZW0oYSxiLGMpe2dvb2cuYXNzZXJ0cy5hc3NlcnQoMDw9YiYmYjxhLmxlbmd0aCk7Z29vZy5hc3NlcnRzLmFzc2VydCgwPD1jJiZjPGEubGVuZ3RoKTtiPUFycmF5LnByb3RvdHlwZS5zcGxpY2UuY2FsbChhLGIsMSk7QXJyYXkucHJvdG90eXBlLnNwbGljZS5jYWxsKGEsYywwLGJbMF0pfWdvb2cuYXJyYXkubW92ZUl0ZW09bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfbW92ZUl0ZW07CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X3ppcChhKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm5bXTtjb25zdCBiPVtdO2xldCBjPWFyZ3VtZW50c1swXS5sZW5ndGg7Zm9yKHZhciBkPTE7ZDxhcmd1bWVudHMubGVuZ3RoO2QrKylhcmd1bWVudHNbZF0ubGVuZ3RoPGMmJihjPWFyZ3VtZW50c1tkXS5sZW5ndGgpO2ZvcihkPTA7ZDxjO2QrKyl7Y29uc3QgZT1bXTtmb3IobGV0IGY9MDtmPGFyZ3VtZW50cy5sZW5ndGg7ZisrKWUucHVzaChhcmd1bWVudHNbZl1bZF0pO2IucHVzaChlKX1yZXR1cm4gYn1nb29nLmFycmF5LnppcD1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV96aXA7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfc2h1ZmZsZShhLGIpe2I9Ynx8TWF0aC5yYW5kb207Zm9yKGxldCBjPWEubGVuZ3RoLTE7MDxjO2MtLSl7Y29uc3QgZD1NYXRoLmZsb29yKGIoKSooYysxKSksZT1hW2NdO2FbY109YVtkXTthW2RdPWV9fQpnb29nLmFycmF5LnNodWZmbGU9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfc2h1ZmZsZTtmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9jb3B5QnlJbmRleChhLGIpe2NvbnN0IGM9W107bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfZm9yRWFjaChiLGZ1bmN0aW9uKGQpe2MucHVzaChhW2RdKX0pO3JldHVybiBjfWdvb2cuYXJyYXkuY29weUJ5SW5kZXg9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfY29weUJ5SW5kZXg7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfY29uY2F0TWFwKGEsYixjKXtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfY29uY2F0LmFwcGx5KFtdLG1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X21hcChhLGIsYykpfWdvb2cuYXJyYXkuY29uY2F0TWFwPW1vZHVsZSRjb250ZW50cyRnb29nJGFycmF5X2NvbmNhdE1hcDtnb29nLmRvbS5hc3NlcnRzPXt9O2dvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNMb2NhdGlvbj1mdW5jdGlvbihhKXtpZihnb29nLmFzc2VydHMuRU5BQkxFX0FTU0VSVFMpe3ZhciBiPWdvb2cuZG9tLmFzc2VydHMuZ2V0V2luZG93XyhhKTtiJiYoIWF8fCEoYSBpbnN0YW5jZW9mIGIuTG9jYXRpb24pJiZhIGluc3RhbmNlb2YgYi5FbGVtZW50KSYmZ29vZy5hc3NlcnRzLmZhaWwoIkFyZ3VtZW50IGlzIG5vdCBhIExvY2F0aW9uIChvciBhIG5vbi1FbGVtZW50IG1vY2spOyBnb3Q6ICVzIixnb29nLmRvbS5hc3NlcnRzLmRlYnVnU3RyaW5nRm9yVHlwZV8oYSkpfXJldHVybiBhfTsKZ29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0VsZW1lbnRUeXBlXz1mdW5jdGlvbihhLGIpe2lmKGdvb2cuYXNzZXJ0cy5FTkFCTEVfQVNTRVJUUyl7dmFyIGM9Z29vZy5kb20uYXNzZXJ0cy5nZXRXaW5kb3dfKGEpO2MmJiJ1bmRlZmluZWQiIT10eXBlb2YgY1tiXSYmKGEmJihhIGluc3RhbmNlb2YgY1tiXXx8IShhIGluc3RhbmNlb2YgYy5Mb2NhdGlvbnx8YSBpbnN0YW5jZW9mIGMuRWxlbWVudCkpfHxnb29nLmFzc2VydHMuZmFpbCgiQXJndW1lbnQgaXMgbm90IGEgJXMgKG9yIGEgbm9uLUVsZW1lbnQsIG5vbi1Mb2NhdGlvbiBtb2NrKTsgZ290OiAlcyIsYixnb29nLmRvbS5hc3NlcnRzLmRlYnVnU3RyaW5nRm9yVHlwZV8oYSkpKX1yZXR1cm4gYX07Z29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0hUTUxBbmNob3JFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVybiBnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzRWxlbWVudFR5cGVfKGEsIkhUTUxBbmNob3JFbGVtZW50Iil9Owpnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzSFRNTEJ1dHRvbkVsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGdvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNFbGVtZW50VHlwZV8oYSwiSFRNTEJ1dHRvbkVsZW1lbnQiKX07Z29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0hUTUxMaW5rRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gZ29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0VsZW1lbnRUeXBlXyhhLCJIVE1MTGlua0VsZW1lbnQiKX07Z29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0hUTUxJbWFnZUVsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGdvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNFbGVtZW50VHlwZV8oYSwiSFRNTEltYWdlRWxlbWVudCIpfTtnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzSFRNTEF1ZGlvRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gZ29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0VsZW1lbnRUeXBlXyhhLCJIVE1MQXVkaW9FbGVtZW50Iil9Owpnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzSFRNTFZpZGVvRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gZ29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0VsZW1lbnRUeXBlXyhhLCJIVE1MVmlkZW9FbGVtZW50Iil9O2dvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNIVE1MSW5wdXRFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVybiBnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzRWxlbWVudFR5cGVfKGEsIkhUTUxJbnB1dEVsZW1lbnQiKX07Z29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0hUTUxUZXh0QXJlYUVsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGdvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNFbGVtZW50VHlwZV8oYSwiSFRNTFRleHRBcmVhRWxlbWVudCIpfTtnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzSFRNTENhbnZhc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGdvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNFbGVtZW50VHlwZV8oYSwiSFRNTENhbnZhc0VsZW1lbnQiKX07Cmdvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNIVE1MRW1iZWRFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVybiBnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzRWxlbWVudFR5cGVfKGEsIkhUTUxFbWJlZEVsZW1lbnQiKX07Z29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0hUTUxGb3JtRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gZ29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0VsZW1lbnRUeXBlXyhhLCJIVE1MRm9ybUVsZW1lbnQiKX07Z29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0hUTUxGcmFtZUVsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGdvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNFbGVtZW50VHlwZV8oYSwiSFRNTEZyYW1lRWxlbWVudCIpfTtnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzSFRNTElGcmFtZUVsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGdvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNFbGVtZW50VHlwZV8oYSwiSFRNTElGcmFtZUVsZW1lbnQiKX07Cmdvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNIVE1MT2JqZWN0RWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gZ29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0VsZW1lbnRUeXBlXyhhLCJIVE1MT2JqZWN0RWxlbWVudCIpfTtnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzSFRNTFNjcmlwdEVsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGdvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNFbGVtZW50VHlwZV8oYSwiSFRNTFNjcmlwdEVsZW1lbnQiKX07Cmdvb2cuZG9tLmFzc2VydHMuZGVidWdTdHJpbmdGb3JUeXBlXz1mdW5jdGlvbihhKXtpZihnb29nLmlzT2JqZWN0KGEpKXRyeXtyZXR1cm4gYS5jb25zdHJ1Y3Rvci5kaXNwbGF5TmFtZXx8YS5jb25zdHJ1Y3Rvci5uYW1lfHxPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYSl9Y2F0Y2goYil7cmV0dXJuIjxvYmplY3QgY291bGQgbm90IGJlIHN0cmluZ2lmaWVkPiJ9ZWxzZSByZXR1cm4gdm9pZCAwPT09YT8idW5kZWZpbmVkIjpudWxsPT09YT8ibnVsbCI6dHlwZW9mIGF9O2dvb2cuZG9tLmFzc2VydHMuZ2V0V2luZG93Xz1mdW5jdGlvbihhKXt0cnl7dmFyIGI9YSYmYS5vd25lckRvY3VtZW50LGM9YiYmKGIuZGVmYXVsdFZpZXd8fGIucGFyZW50V2luZG93KTtjPWN8fGdvb2cuZ2xvYmFsO2lmKGMuRWxlbWVudCYmYy5Mb2NhdGlvbilyZXR1cm4gY31jYXRjaChkKXt9cmV0dXJuIG51bGx9O2dvb2cuZnVuY3Rpb25zPXt9O2dvb2cuZnVuY3Rpb25zLmNvbnN0YW50PWZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBhfX07Z29vZy5mdW5jdGlvbnMuRkFMU0U9ZnVuY3Rpb24oKXtyZXR1cm4hMX07Z29vZy5mdW5jdGlvbnMuVFJVRT1mdW5jdGlvbigpe3JldHVybiEwfTtnb29nLmZ1bmN0aW9ucy5OVUxMPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9O2dvb2cuZnVuY3Rpb25zLlVOREVGSU5FRD1mdW5jdGlvbigpe307Z29vZy5mdW5jdGlvbnMuRU1QVFk9Z29vZy5mdW5jdGlvbnMuVU5ERUZJTkVEO2dvb2cuZnVuY3Rpb25zLmlkZW50aXR5PWZ1bmN0aW9uKGEsYil7cmV0dXJuIGF9O2dvb2cuZnVuY3Rpb25zLmVycm9yPWZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbigpe3Rocm93IEVycm9yKGEpO319O2dvb2cuZnVuY3Rpb25zLmZhaWw9ZnVuY3Rpb24oYSl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhyb3cgYTt9fTsKZ29vZy5mdW5jdGlvbnMubG9jaz1mdW5jdGlvbihhLGIpe2I9Ynx8MDtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gYS5hcHBseSh0aGlzLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywwLGIpKX19O2dvb2cuZnVuY3Rpb25zLm50aD1mdW5jdGlvbihhKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzW2FdfX07Z29vZy5mdW5jdGlvbnMucGFydGlhbFJpZ2h0PWZ1bmN0aW9uKGEsYil7Y29uc3QgYz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSk7cmV0dXJuIGZ1bmN0aW9uKCl7bGV0IGQ9dGhpcztkPT09Z29vZy5nbG9iYWwmJihkPXZvaWQgMCk7Y29uc3QgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO2UucHVzaC5hcHBseShlLGMpO3JldHVybiBhLmFwcGx5KGQsZSl9fTsKZ29vZy5mdW5jdGlvbnMud2l0aFJldHVyblZhbHVlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGdvb2cuZnVuY3Rpb25zLnNlcXVlbmNlKGEsZ29vZy5mdW5jdGlvbnMuY29uc3RhbnQoYikpfTtnb29nLmZ1bmN0aW9ucy5lcXVhbFRvPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGZ1bmN0aW9uKGMpe3JldHVybiBiP2E9PWM6YT09PWN9fTtnb29nLmZ1bmN0aW9ucy5jb21wb3NlPWZ1bmN0aW9uKGEsYil7Y29uc3QgYz1hcmd1bWVudHMsZD1jLmxlbmd0aDtyZXR1cm4gZnVuY3Rpb24oKXtsZXQgZTtkJiYoZT1jW2QtMV0uYXBwbHkodGhpcyxhcmd1bWVudHMpKTtmb3IobGV0IGY9ZC0yOzA8PWY7Zi0tKWU9Y1tmXS5jYWxsKHRoaXMsZSk7cmV0dXJuIGV9fTsKZ29vZy5mdW5jdGlvbnMuc2VxdWVuY2U9ZnVuY3Rpb24oYSl7Y29uc3QgYj1hcmd1bWVudHMsYz1iLmxlbmd0aDtyZXR1cm4gZnVuY3Rpb24oKXtsZXQgZDtmb3IobGV0IGU9MDtlPGM7ZSsrKWQ9YltlXS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIGR9fTtnb29nLmZ1bmN0aW9ucy5hbmQ9ZnVuY3Rpb24oYSl7Y29uc3QgYj1hcmd1bWVudHMsYz1iLmxlbmd0aDtyZXR1cm4gZnVuY3Rpb24oKXtmb3IobGV0IGQ9MDtkPGM7ZCsrKWlmKCFiW2RdLmFwcGx5KHRoaXMsYXJndW1lbnRzKSlyZXR1cm4hMTtyZXR1cm4hMH19O2dvb2cuZnVuY3Rpb25zLm9yPWZ1bmN0aW9uKGEpe2NvbnN0IGI9YXJndW1lbnRzLGM9Yi5sZW5ndGg7cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKGxldCBkPTA7ZDxjO2QrKylpZihiW2RdLmFwcGx5KHRoaXMsYXJndW1lbnRzKSlyZXR1cm4hMDtyZXR1cm4hMX19Owpnb29nLmZ1bmN0aW9ucy5ub3Q9ZnVuY3Rpb24oYSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIWEuYXBwbHkodGhpcyxhcmd1bWVudHMpfX07Z29vZy5mdW5jdGlvbnMuY3JlYXRlPWZ1bmN0aW9uKGEsYil7dmFyIGM9ZnVuY3Rpb24oKXt9O2MucHJvdG90eXBlPWEucHJvdG90eXBlO2M9bmV3IGM7YS5hcHBseShjLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSk7cmV0dXJuIGN9O2dvb2cuZnVuY3Rpb25zLkNBQ0hFX1JFVFVSTl9WQUxVRT0hMDtnb29nLmZ1bmN0aW9ucy5jYWNoZVJldHVyblZhbHVlPWZ1bmN0aW9uKGEpe2xldCBiPSExLGM7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoIWdvb2cuZnVuY3Rpb25zLkNBQ0hFX1JFVFVSTl9WQUxVRSlyZXR1cm4gYSgpO2J8fChjPWEoKSxiPSEwKTtyZXR1cm4gY319O2dvb2cuZnVuY3Rpb25zLm9uY2U9ZnVuY3Rpb24oYSl7bGV0IGI9YTtyZXR1cm4gZnVuY3Rpb24oKXtpZihiKXtjb25zdCBjPWI7Yj1udWxsO2MoKX19fTsKZ29vZy5mdW5jdGlvbnMuZGVib3VuY2U9ZnVuY3Rpb24oYSxiLGMpe2xldCBkPTA7cmV0dXJuIGZ1bmN0aW9uKGUpe2dvb2cuZ2xvYmFsLmNsZWFyVGltZW91dChkKTtjb25zdCBmPWFyZ3VtZW50cztkPWdvb2cuZ2xvYmFsLnNldFRpbWVvdXQoZnVuY3Rpb24oKXthLmFwcGx5KGMsZil9LGIpfX07Z29vZy5mdW5jdGlvbnMudGhyb3R0bGU9ZnVuY3Rpb24oYSxiLGMpe2xldCBkPTAsZT0hMSxmPVtdO2NvbnN0IGc9ZnVuY3Rpb24oKXtkPTA7ZSYmKGU9ITEsaCgpKX0saD1mdW5jdGlvbigpe2Q9Z29vZy5nbG9iYWwuc2V0VGltZW91dChnLGIpO2xldCBrPWY7Zj1bXTthLmFwcGx5KGMsayl9O3JldHVybiBmdW5jdGlvbihrKXtmPWFyZ3VtZW50cztkP2U9ITA6aCgpfX07Cmdvb2cuZnVuY3Rpb25zLnJhdGVMaW1pdD1mdW5jdGlvbihhLGIsYyl7bGV0IGQ9MDtjb25zdCBlPWZ1bmN0aW9uKCl7ZD0wfTtyZXR1cm4gZnVuY3Rpb24oZil7ZHx8KGQ9Z29vZy5nbG9iYWwuc2V0VGltZW91dChlLGIpLGEuYXBwbHkoYyxhcmd1bWVudHMpKX19O2dvb2cuZnVuY3Rpb25zLmlzRnVuY3Rpb249YT0+ImZ1bmN0aW9uIj09PXR5cGVvZiBhO2dvb2cuc3RyaW5nPXt9O2dvb2cuc3RyaW5nLlR5cGVkU3RyaW5nPWZ1bmN0aW9uKCl7fTtnb29nLnN0cmluZy5Db25zdD1mdW5jdGlvbihhLGIpe3RoaXMuc3RyaW5nQ29uc3RWYWx1ZVdpdGhTZWN1cml0eUNvbnRyYWN0X19nb29nU3RyaW5nU2VjdXJpdHlQcml2YXRlXz1hPT09Z29vZy5zdHJpbmcuQ29uc3QuR09PR19TVFJJTkdfQ09OU1RSVUNUT1JfVE9LRU5fUFJJVkFURV8mJmJ8fCIiO3RoaXMuU1RSSU5HX0NPTlNUX1RZUEVfTUFSS0VSX19HT09HX1NUUklOR19TRUNVUklUWV9QUklWQVRFXz1nb29nLnN0cmluZy5Db25zdC5UWVBFX01BUktFUl99O2dvb2cuc3RyaW5nLkNvbnN0LnByb3RvdHlwZS5pbXBsZW1lbnRzR29vZ1N0cmluZ1R5cGVkU3RyaW5nPSEwO2dvb2cuc3RyaW5nLkNvbnN0LnByb3RvdHlwZS5nZXRUeXBlZFN0cmluZ1ZhbHVlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3RyaW5nQ29uc3RWYWx1ZVdpdGhTZWN1cml0eUNvbnRyYWN0X19nb29nU3RyaW5nU2VjdXJpdHlQcml2YXRlX307Cmdvb2cuREVCVUcmJihnb29nLnN0cmluZy5Db25zdC5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iQ29uc3R7Iit0aGlzLnN0cmluZ0NvbnN0VmFsdWVXaXRoU2VjdXJpdHlDb250cmFjdF9fZ29vZ1N0cmluZ1NlY3VyaXR5UHJpdmF0ZV8rIn0ifSk7Z29vZy5zdHJpbmcuQ29uc3QudW53cmFwPWZ1bmN0aW9uKGEpe2lmKGEgaW5zdGFuY2VvZiBnb29nLnN0cmluZy5Db25zdCYmYS5jb25zdHJ1Y3Rvcj09PWdvb2cuc3RyaW5nLkNvbnN0JiZhLlNUUklOR19DT05TVF9UWVBFX01BUktFUl9fR09PR19TVFJJTkdfU0VDVVJJVFlfUFJJVkFURV89PT1nb29nLnN0cmluZy5Db25zdC5UWVBFX01BUktFUl8pcmV0dXJuIGEuc3RyaW5nQ29uc3RWYWx1ZVdpdGhTZWN1cml0eUNvbnRyYWN0X19nb29nU3RyaW5nU2VjdXJpdHlQcml2YXRlXztnb29nLmFzc2VydHMuZmFpbCgiZXhwZWN0ZWQgb2JqZWN0IG9mIHR5cGUgQ29uc3QsIGdvdCAnIithKyInIik7cmV0dXJuInR5cGVfZXJyb3I6Q29uc3QifTsKZ29vZy5zdHJpbmcuQ29uc3QuZnJvbT1mdW5jdGlvbihhKXtyZXR1cm4gbmV3IGdvb2cuc3RyaW5nLkNvbnN0KGdvb2cuc3RyaW5nLkNvbnN0LkdPT0dfU1RSSU5HX0NPTlNUUlVDVE9SX1RPS0VOX1BSSVZBVEVfLGEpfTtnb29nLnN0cmluZy5Db25zdC5UWVBFX01BUktFUl89e307Z29vZy5zdHJpbmcuQ29uc3QuR09PR19TVFJJTkdfQ09OU1RSVUNUT1JfVE9LRU5fUFJJVkFURV89e307Z29vZy5zdHJpbmcuQ29uc3QuRU1QVFk9Z29vZy5zdHJpbmcuQ29uc3QuZnJvbSgiIik7Z29vZy5odG1sPXt9O2dvb2cuaHRtbC50cnVzdGVkdHlwZXM9e307Z29vZy5odG1sLnRydXN0ZWR0eXBlcy5QT0xJQ1lfTkFNRT1nb29nLlRSVVNURURfVFlQRVNfUE9MSUNZX05BTUU/Z29vZy5UUlVTVEVEX1RZUEVTX1BPTElDWV9OQU1FKyIjaHRtbCI6IiI7Z29vZy5odG1sLnRydXN0ZWR0eXBlcy5nZXRQb2xpY3lQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2U9ZnVuY3Rpb24oKXtpZighZ29vZy5odG1sLnRydXN0ZWR0eXBlcy5QT0xJQ1lfTkFNRSlyZXR1cm4gbnVsbDt2b2lkIDA9PT1nb29nLmh0bWwudHJ1c3RlZHR5cGVzLmNhY2hlZFBvbGljeV8mJihnb29nLmh0bWwudHJ1c3RlZHR5cGVzLmNhY2hlZFBvbGljeV89Z29vZy5jcmVhdGVUcnVzdGVkVHlwZXNQb2xpY3koZ29vZy5odG1sLnRydXN0ZWR0eXBlcy5QT0xJQ1lfTkFNRSkpO3JldHVybiBnb29nLmh0bWwudHJ1c3RlZHR5cGVzLmNhY2hlZFBvbGljeV99O2NvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVNjcmlwdF9DT05TVFJVQ1RPUl9UT0tFTl9QUklWQVRFPXt9OwpjbGFzcyBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTY3JpcHRfU2FmZVNjcmlwdHtjb25zdHJ1Y3RvcihhLGIpe3RoaXMucHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlU2FmZVNjcmlwdFdyYXBwZWRWYWx1ZV89Yj09PW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVNjcmlwdF9DT05TVFJVQ1RPUl9UT0tFTl9QUklWQVRFP2E6IiI7dGhpcy5pbXBsZW1lbnRzR29vZ1N0cmluZ1R5cGVkU3RyaW5nPSEwfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMucHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlU2FmZVNjcmlwdFdyYXBwZWRWYWx1ZV8udG9TdHJpbmcoKX1zdGF0aWMgZnJvbUNvbnN0YW50KGEpe2E9Z29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGEpO3JldHVybiAwPT09YS5sZW5ndGg/bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU2NyaXB0X1NhZmVTY3JpcHQuRU1QVFk6bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU2NyaXB0X1NhZmVTY3JpcHQuY3JlYXRlU2FmZVNjcmlwdFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGEpfXN0YXRpYyBmcm9tSnNvbihhKXtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU2NyaXB0X1NhZmVTY3JpcHQuY3JlYXRlU2FmZVNjcmlwdFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVNjcmlwdF9TYWZlU2NyaXB0LnN0cmluZ2lmeV8oYSkpfWdldFR5cGVkU3RyaW5nVmFsdWUoKXtyZXR1cm4gdGhpcy5wcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2VTYWZlU2NyaXB0V3JhcHBlZFZhbHVlXy50b1N0cmluZygpfXN0YXRpYyB1bndyYXAoYSl7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVNjcmlwdF9TYWZlU2NyaXB0LnVud3JhcFRydXN0ZWRTY3JpcHQoYSkudG9TdHJpbmcoKX1zdGF0aWMgdW53cmFwVHJ1c3RlZFNjcmlwdChhKXtpZihhIGluc3RhbmNlb2YKbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU2NyaXB0X1NhZmVTY3JpcHQmJmEuY29uc3RydWN0b3I9PT1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTY3JpcHRfU2FmZVNjcmlwdClyZXR1cm4gYS5wcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2VTYWZlU2NyaXB0V3JhcHBlZFZhbHVlXzsoMCxnb29nLmFzc2VydHMuZmFpbCkoImV4cGVjdGVkIG9iamVjdCBvZiB0eXBlIFNhZmVTY3JpcHQsIGdvdCAnIithKyInIG9mIHR5cGUgIitnb29nLnR5cGVPZihhKSk7cmV0dXJuInR5cGVfZXJyb3I6U2FmZVNjcmlwdCJ9c3RhdGljIHN0cmluZ2lmeV8oYSl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGEpLnJlcGxhY2UoLzwvZywiXFx4M2MiKX1zdGF0aWMgY3JlYXRlU2FmZVNjcmlwdFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGEpe2NvbnN0IGI9Z29vZy5odG1sLnRydXN0ZWR0eXBlcy5nZXRQb2xpY3lQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoKTthPWI/Yi5jcmVhdGVTY3JpcHQoYSk6CmE7cmV0dXJuIG5ldyBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTY3JpcHRfU2FmZVNjcmlwdChhLG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVNjcmlwdF9DT05TVFJVQ1RPUl9UT0tFTl9QUklWQVRFKX19bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU2NyaXB0X1NhZmVTY3JpcHQuRU1QVFk9ZnVuY3Rpb24oKXtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU2NyaXB0X1NhZmVTY3JpcHQuY3JlYXRlU2FmZVNjcmlwdFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKCIiKX0oKTtnb29nLmh0bWwuU2FmZVNjcmlwdD1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTY3JpcHRfU2FmZVNjcmlwdDtnb29nLmZzPXt9O2dvb2cuZnMudXJsPXt9O2dvb2cuZnMudXJsLmNyZWF0ZU9iamVjdFVybD1mdW5jdGlvbihhKXtyZXR1cm4gZ29vZy5mcy51cmwuZ2V0VXJsT2JqZWN0XygpLmNyZWF0ZU9iamVjdFVSTChhKX07Z29vZy5mcy51cmwucmV2b2tlT2JqZWN0VXJsPWZ1bmN0aW9uKGEpe2dvb2cuZnMudXJsLmdldFVybE9iamVjdF8oKS5yZXZva2VPYmplY3RVUkwoYSl9O2dvb2cuZnMudXJsLlVybE9iamVjdF89ZnVuY3Rpb24oKXt9O2dvb2cuZnMudXJsLlVybE9iamVjdF8ucHJvdG90eXBlLmNyZWF0ZU9iamVjdFVSTD1mdW5jdGlvbihhKXt9O2dvb2cuZnMudXJsLlVybE9iamVjdF8ucHJvdG90eXBlLnJldm9rZU9iamVjdFVSTD1mdW5jdGlvbihhKXt9Owpnb29nLmZzLnVybC5nZXRVcmxPYmplY3RfPWZ1bmN0aW9uKCl7Y29uc3QgYT1nb29nLmZzLnVybC5maW5kVXJsT2JqZWN0XygpO2lmKG51bGwhPWEpcmV0dXJuIGE7dGhyb3cgRXJyb3IoIlRoaXMgYnJvd3NlciBkb2Vzbid0IHNlZW0gdG8gc3VwcG9ydCBibG9iIFVSTHMiKTt9O2dvb2cuZnMudXJsLmZpbmRVcmxPYmplY3RfPWZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMCE9PWdvb2cuZ2xvYmFsLlVSTCYmdm9pZCAwIT09Z29vZy5nbG9iYWwuVVJMLmNyZWF0ZU9iamVjdFVSTD9nb29nLmdsb2JhbC5VUkw6dm9pZCAwIT09Z29vZy5nbG9iYWwuY3JlYXRlT2JqZWN0VVJMP2dvb2cuZ2xvYmFsOm51bGx9O2dvb2cuZnMudXJsLmJyb3dzZXJTdXBwb3J0c09iamVjdFVybHM9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbCE9Z29vZy5mcy51cmwuZmluZFVybE9iamVjdF8oKX07Z29vZy5mcy5ibG9iPXt9O2dvb2cuZnMuYmxvYi5nZXRCbG9iPWZ1bmN0aW9uKGEpe3ZhciBiPWdvb2cuZ2xvYmFsLkJsb2JCdWlsZGVyfHxnb29nLmdsb2JhbC5XZWJLaXRCbG9iQnVpbGRlcjtpZih2b2lkIDAhPT1iKXtiPW5ldyBiO2ZvcihsZXQgYz0wO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYi5hcHBlbmQoYXJndW1lbnRzW2NdKTtyZXR1cm4gYi5nZXRCbG9iKCl9cmV0dXJuIGdvb2cuZnMuYmxvYi5nZXRCbG9iV2l0aFByb3BlcnRpZXMoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSl9Owpnb29nLmZzLmJsb2IuZ2V0QmxvYldpdGhQcm9wZXJ0aWVzPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1nb29nLmdsb2JhbC5CbG9iQnVpbGRlcnx8Z29vZy5nbG9iYWwuV2ViS2l0QmxvYkJ1aWxkZXI7aWYodm9pZCAwIT09ZCl7ZD1uZXcgZDtmb3IobGV0IGU9MDtlPGEubGVuZ3RoO2UrKylkLmFwcGVuZChhW2VdLGMpO3JldHVybiBkLmdldEJsb2IoYil9aWYodm9pZCAwIT09Z29vZy5nbG9iYWwuQmxvYilyZXR1cm4gZD17fSxiJiYoZC50eXBlPWIpLGMmJihkLmVuZGluZ3M9YyksbmV3IEJsb2IoYSxkKTt0aHJvdyBFcnJvcigiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc2VlbSB0byBzdXBwb3J0IGNyZWF0aW5nIEJsb2JzIik7fTtnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsPWNsYXNze2NvbnN0cnVjdG9yKGEsYil7dGhpcy5wcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2VUcnVzdGVkUmVzb3VyY2VVcmxXcmFwcGVkVmFsdWVfPWI9PT1nb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLkNPTlNUUlVDVE9SX1RPS0VOX1BSSVZBVEVfP2E6IiJ9dG9TdHJpbmcoKXtyZXR1cm4gdGhpcy5wcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2VUcnVzdGVkUmVzb3VyY2VVcmxXcmFwcGVkVmFsdWVfKyIifX07Z29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC5wcm90b3R5cGUuaW1wbGVtZW50c0dvb2dTdHJpbmdUeXBlZFN0cmluZz0hMDtnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLnByb3RvdHlwZS5nZXRUeXBlZFN0cmluZ1ZhbHVlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlVHJ1c3RlZFJlc291cmNlVXJsV3JhcHBlZFZhbHVlXy50b1N0cmluZygpfTsKZ29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC5wcm90b3R5cGUuY2xvbmVXaXRoUGFyYW1zPWZ1bmN0aW9uKGEsYil7dmFyIGM9Z29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC51bndyYXAodGhpcyk7Yz1nb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLlVSTF9QQVJBTV9QQVJTRVJfLmV4ZWMoYyk7dmFyIGQ9Y1szXXx8IiI7cmV0dXJuIGdvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwuY3JlYXRlVHJ1c3RlZFJlc291cmNlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoY1sxXStnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLnN0cmluZ2lmeVBhcmFtc18oIj8iLGNbMl18fCIiLGEpK2dvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwuc3RyaW5naWZ5UGFyYW1zXygiIyIsZCxiKSl9O2dvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwudW53cmFwPWZ1bmN0aW9uKGEpe3JldHVybiBnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLnVud3JhcFRydXN0ZWRTY3JpcHRVUkwoYSkudG9TdHJpbmcoKX07Cmdvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwudW53cmFwVHJ1c3RlZFNjcmlwdFVSTD1mdW5jdGlvbihhKXtpZihhIGluc3RhbmNlb2YgZ29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybCYmYS5jb25zdHJ1Y3Rvcj09PWdvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwpcmV0dXJuIGEucHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlVHJ1c3RlZFJlc291cmNlVXJsV3JhcHBlZFZhbHVlXztnb29nLmFzc2VydHMuZmFpbCgiZXhwZWN0ZWQgb2JqZWN0IG9mIHR5cGUgVHJ1c3RlZFJlc291cmNlVXJsLCBnb3QgJyIrYSsiJyBvZiB0eXBlICIrZ29vZy50eXBlT2YoYSkpO3JldHVybiJ0eXBlX2Vycm9yOlRydXN0ZWRSZXNvdXJjZVVybCJ9Owpnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLmZvcm1hdD1mdW5jdGlvbihhLGIpe3ZhciBjPWdvb2cuc3RyaW5nLkNvbnN0LnVud3JhcChhKTtpZighZ29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC5CQVNFX1VSTF8udGVzdChjKSl0aHJvdyBFcnJvcigiSW52YWxpZCBUcnVzdGVkUmVzb3VyY2VVcmwgZm9ybWF0OiAiK2MpO2E9Yy5yZXBsYWNlKGdvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwuRk9STUFUX01BUktFUl8sZnVuY3Rpb24oZCxlKXtpZighT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsZSkpdGhyb3cgRXJyb3IoJ0ZvdW5kIG1hcmtlciwgIicrZSsnIiwgaW4gZm9ybWF0IHN0cmluZywgIicrYysnIiwgYnV0IG5vIHZhbGlkIGxhYmVsIG1hcHBpbmcgZm91bmQgaW4gYXJnczogJytKU09OLnN0cmluZ2lmeShiKSk7ZD1iW2VdO3JldHVybiBkIGluc3RhbmNlb2YgZ29vZy5zdHJpbmcuQ29uc3Q/Z29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGQpOgplbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKGQpKX0pO3JldHVybiBnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLmNyZWF0ZVRydXN0ZWRSZXNvdXJjZVVybFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGEpfTtnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLkZPUk1BVF9NQVJLRVJfPS8leyhcdyspfS9nO2dvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwuQkFTRV9VUkxfPVJlZ0V4cCgiXigoaHR0cHM6KT8vL1swLTlhLXouOltcXF0tXSsvfC9bXi9cXFxcXXxbXjovXFxcXCVdKy98W146L1xcXFwlXSpbPyNdfGFib3V0OmJsYW5rIykiLCJpIik7Z29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC5VUkxfUEFSQU1fUEFSU0VSXz0vXihbXj8jXSopKFw/W14jXSopPygjW1xzXFNdKik/LzsKZ29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC5mb3JtYXRXaXRoUGFyYW1zPWZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiBnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLmZvcm1hdChhLGIpLmNsb25lV2l0aFBhcmFtcyhjLGQpfTtnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLmZyb21Db25zdGFudD1mdW5jdGlvbihhKXtyZXR1cm4gZ29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC5jcmVhdGVUcnVzdGVkUmVzb3VyY2VVcmxTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShnb29nLnN0cmluZy5Db25zdC51bndyYXAoYSkpfTtnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLmZyb21Db25zdGFudHM9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPSIiLGM9MDtjPGEubGVuZ3RoO2MrKyliKz1nb29nLnN0cmluZy5Db25zdC51bndyYXAoYVtjXSk7cmV0dXJuIGdvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwuY3JlYXRlVHJ1c3RlZFJlc291cmNlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoYil9Owpnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLmZyb21TYWZlU2NyaXB0PWZ1bmN0aW9uKGEpe2E9Z29vZy5mcy5ibG9iLmdldEJsb2JXaXRoUHJvcGVydGllcyhbbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU2NyaXB0X1NhZmVTY3JpcHQudW53cmFwKGEpXSwidGV4dC9qYXZhc2NyaXB0Iik7YT1nb29nLmZzLnVybC5jcmVhdGVPYmplY3RVcmwoYSk7cmV0dXJuIGdvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwuY3JlYXRlVHJ1c3RlZFJlc291cmNlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoYSl9O2dvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwuQ09OU1RSVUNUT1JfVE9LRU5fUFJJVkFURV89e307Cmdvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwuY3JlYXRlVHJ1c3RlZFJlc291cmNlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2U9ZnVuY3Rpb24oYSl7Y29uc3QgYj1nb29nLmh0bWwudHJ1c3RlZHR5cGVzLmdldFBvbGljeVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZSgpO2E9Yj9iLmNyZWF0ZVNjcmlwdFVSTChhKTphO3JldHVybiBuZXcgZ29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybChhLGdvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwuQ09OU1RSVUNUT1JfVE9LRU5fUFJJVkFURV8pfTsKZ29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC5zdHJpbmdpZnlQYXJhbXNfPWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1jKXJldHVybiBiO2lmKCJzdHJpbmciPT09dHlwZW9mIGMpcmV0dXJuIGM/YStlbmNvZGVVUklDb21wb25lbnQoYyk6IiI7Zm9yKHZhciBkIGluIGMpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGMsZCkpe3ZhciBlPWNbZF07ZT1BcnJheS5pc0FycmF5KGUpP2U6W2VdO2Zvcih2YXIgZj0wO2Y8ZS5sZW5ndGg7ZisrKXt2YXIgZz1lW2ZdO251bGwhPWcmJihifHwoYj1hKSxiKz0oYi5sZW5ndGg+YS5sZW5ndGg/IiYiOiIiKStlbmNvZGVVUklDb21wb25lbnQoZCkrIj0iK2VuY29kZVVSSUNvbXBvbmVudChTdHJpbmcoZykpKX19cmV0dXJuIGJ9O2dvb2cuc3RyaW5nLmludGVybmFsPXt9O2dvb2cuc3RyaW5nLmludGVybmFsLnN0YXJ0c1dpdGg9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gMD09YS5sYXN0SW5kZXhPZihiLDApfTtnb29nLnN0cmluZy5pbnRlcm5hbC5lbmRzV2l0aD1mdW5jdGlvbihhLGIpe2NvbnN0IGM9YS5sZW5ndGgtYi5sZW5ndGg7cmV0dXJuIDA8PWMmJmEuaW5kZXhPZihiLGMpPT1jfTtnb29nLnN0cmluZy5pbnRlcm5hbC5jYXNlSW5zZW5zaXRpdmVTdGFydHNXaXRoPWZ1bmN0aW9uKGEsYil7cmV0dXJuIDA9PWdvb2cuc3RyaW5nLmludGVybmFsLmNhc2VJbnNlbnNpdGl2ZUNvbXBhcmUoYixhLnNsaWNlKDAsYi5sZW5ndGgpKX07Z29vZy5zdHJpbmcuaW50ZXJuYWwuY2FzZUluc2Vuc2l0aXZlRW5kc1dpdGg9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gMD09Z29vZy5zdHJpbmcuaW50ZXJuYWwuY2FzZUluc2Vuc2l0aXZlQ29tcGFyZShiLGEuc2xpY2UoYS5sZW5ndGgtYi5sZW5ndGgpKX07Cmdvb2cuc3RyaW5nLmludGVybmFsLmNhc2VJbnNlbnNpdGl2ZUVxdWFscz1mdW5jdGlvbihhLGIpe3JldHVybiBhLnRvTG93ZXJDYXNlKCk9PWIudG9Mb3dlckNhc2UoKX07Z29vZy5zdHJpbmcuaW50ZXJuYWwuaXNFbXB0eU9yV2hpdGVzcGFjZT1mdW5jdGlvbihhKXtyZXR1cm4vXltcc1x4YTBdKiQvLnRlc3QoYSl9O2dvb2cuc3RyaW5nLmludGVybmFsLnRyaW09Z29vZy5UUlVTVEVEX1NJVEUmJlN0cmluZy5wcm90b3R5cGUudHJpbT9mdW5jdGlvbihhKXtyZXR1cm4gYS50cmltKCl9OmZ1bmN0aW9uKGEpe3JldHVybi9eW1xzXHhhMF0qKFtcc1xTXSo/KVtcc1x4YTBdKiQvLmV4ZWMoYSlbMV19O2dvb2cuc3RyaW5nLmludGVybmFsLmNhc2VJbnNlbnNpdGl2ZUNvbXBhcmU9ZnVuY3Rpb24oYSxiKXthPVN0cmluZyhhKS50b0xvd2VyQ2FzZSgpO2I9U3RyaW5nKGIpLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGE8Yj8tMTphPT1iPzA6MX07Cmdvb2cuc3RyaW5nLmludGVybmFsLm5ld0xpbmVUb0JyPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGEucmVwbGFjZSgvKFxyXG58XHJ8XG4pL2csYj8iPGJyIC8+IjoiPGJyPiIpfTsKZ29vZy5zdHJpbmcuaW50ZXJuYWwuaHRtbEVzY2FwZT1mdW5jdGlvbihhLGIpe2lmKGIpYT1hLnJlcGxhY2UoZ29vZy5zdHJpbmcuaW50ZXJuYWwuQU1QX1JFXywiJmFtcDsiKS5yZXBsYWNlKGdvb2cuc3RyaW5nLmludGVybmFsLkxUX1JFXywiJmx0OyIpLnJlcGxhY2UoZ29vZy5zdHJpbmcuaW50ZXJuYWwuR1RfUkVfLCImZ3Q7IikucmVwbGFjZShnb29nLnN0cmluZy5pbnRlcm5hbC5RVU9UX1JFXywiJnF1b3Q7IikucmVwbGFjZShnb29nLnN0cmluZy5pbnRlcm5hbC5TSU5HTEVfUVVPVEVfUkVfLCImIzM5OyIpLnJlcGxhY2UoZ29vZy5zdHJpbmcuaW50ZXJuYWwuTlVMTF9SRV8sIiYjMDsiKTtlbHNle2lmKCFnb29nLnN0cmluZy5pbnRlcm5hbC5BTExfUkVfLnRlc3QoYSkpcmV0dXJuIGE7LTEhPWEuaW5kZXhPZigiJiIpJiYoYT1hLnJlcGxhY2UoZ29vZy5zdHJpbmcuaW50ZXJuYWwuQU1QX1JFXywiJmFtcDsiKSk7LTEhPWEuaW5kZXhPZigiPCIpJiYoYT1hLnJlcGxhY2UoZ29vZy5zdHJpbmcuaW50ZXJuYWwuTFRfUkVfLAoiJmx0OyIpKTstMSE9YS5pbmRleE9mKCI+IikmJihhPWEucmVwbGFjZShnb29nLnN0cmluZy5pbnRlcm5hbC5HVF9SRV8sIiZndDsiKSk7LTEhPWEuaW5kZXhPZignIicpJiYoYT1hLnJlcGxhY2UoZ29vZy5zdHJpbmcuaW50ZXJuYWwuUVVPVF9SRV8sIiZxdW90OyIpKTstMSE9YS5pbmRleE9mKCInIikmJihhPWEucmVwbGFjZShnb29nLnN0cmluZy5pbnRlcm5hbC5TSU5HTEVfUVVPVEVfUkVfLCImIzM5OyIpKTstMSE9YS5pbmRleE9mKCJceDAwIikmJihhPWEucmVwbGFjZShnb29nLnN0cmluZy5pbnRlcm5hbC5OVUxMX1JFXywiJiMwOyIpKX1yZXR1cm4gYX07Z29vZy5zdHJpbmcuaW50ZXJuYWwuQU1QX1JFXz0vJi9nO2dvb2cuc3RyaW5nLmludGVybmFsLkxUX1JFXz0vPC9nO2dvb2cuc3RyaW5nLmludGVybmFsLkdUX1JFXz0vPi9nO2dvb2cuc3RyaW5nLmludGVybmFsLlFVT1RfUkVfPS8iL2c7Z29vZy5zdHJpbmcuaW50ZXJuYWwuU0lOR0xFX1FVT1RFX1JFXz0vJy9nOwpnb29nLnN0cmluZy5pbnRlcm5hbC5OVUxMX1JFXz0vXHgwMC9nO2dvb2cuc3RyaW5nLmludGVybmFsLkFMTF9SRV89L1tceDAwJjw+IiddLztnb29nLnN0cmluZy5pbnRlcm5hbC53aGl0ZXNwYWNlRXNjYXBlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGdvb2cuc3RyaW5nLmludGVybmFsLm5ld0xpbmVUb0JyKGEucmVwbGFjZSgvICAvZywiICYjMTYwOyIpLGIpfTtnb29nLnN0cmluZy5pbnRlcm5hbC5jb250YWlucz1mdW5jdGlvbihhLGIpe3JldHVybi0xIT1hLmluZGV4T2YoYil9O2dvb2cuc3RyaW5nLmludGVybmFsLmNhc2VJbnNlbnNpdGl2ZUNvbnRhaW5zPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGdvb2cuc3RyaW5nLmludGVybmFsLmNvbnRhaW5zKGEudG9Mb3dlckNhc2UoKSxiLnRvTG93ZXJDYXNlKCkpfTsKZ29vZy5zdHJpbmcuaW50ZXJuYWwuY29tcGFyZVZlcnNpb25zPWZ1bmN0aW9uKGEsYil7dmFyIGM9MDthPWdvb2cuc3RyaW5nLmludGVybmFsLnRyaW0oU3RyaW5nKGEpKS5zcGxpdCgiLiIpO2I9Z29vZy5zdHJpbmcuaW50ZXJuYWwudHJpbShTdHJpbmcoYikpLnNwbGl0KCIuIik7Y29uc3QgZD1NYXRoLm1heChhLmxlbmd0aCxiLmxlbmd0aCk7Zm9yKGxldCBnPTA7MD09YyYmZzxkO2crKyl7dmFyIGU9YVtnXXx8IiIsZj1iW2ddfHwiIjtkb3tlPS8oXGQqKShcRCopKC4qKS8uZXhlYyhlKXx8WyIiLCIiLCIiLCIiXTtmPS8oXGQqKShcRCopKC4qKS8uZXhlYyhmKXx8WyIiLCIiLCIiLCIiXTtpZigwPT1lWzBdLmxlbmd0aCYmMD09ZlswXS5sZW5ndGgpYnJlYWs7Yz0wPT1lWzFdLmxlbmd0aD8wOnBhcnNlSW50KGVbMV0sMTApO2NvbnN0IGg9MD09ZlsxXS5sZW5ndGg/MDpwYXJzZUludChmWzFdLDEwKTtjPWdvb2cuc3RyaW5nLmludGVybmFsLmNvbXBhcmVFbGVtZW50c18oYyxoKXx8Cmdvb2cuc3RyaW5nLmludGVybmFsLmNvbXBhcmVFbGVtZW50c18oMD09ZVsyXS5sZW5ndGgsMD09ZlsyXS5sZW5ndGgpfHxnb29nLnN0cmluZy5pbnRlcm5hbC5jb21wYXJlRWxlbWVudHNfKGVbMl0sZlsyXSk7ZT1lWzNdO2Y9ZlszXX13aGlsZSgwPT1jKX1yZXR1cm4gY307Z29vZy5zdHJpbmcuaW50ZXJuYWwuY29tcGFyZUVsZW1lbnRzXz1mdW5jdGlvbihhLGIpe3JldHVybiBhPGI/LTE6YT5iPzE6MH07Z29vZy5odG1sLlNhZmVVcmw9Y2xhc3N7Y29uc3RydWN0b3IoYSxiKXt0aGlzLnByaXZhdGVEb05vdEFjY2Vzc09yRWxzZVNhZmVVcmxXcmFwcGVkVmFsdWVfPWI9PT1nb29nLmh0bWwuU2FmZVVybC5DT05TVFJVQ1RPUl9UT0tFTl9QUklWQVRFXz9hOiIifXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMucHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlU2FmZVVybFdyYXBwZWRWYWx1ZV8udG9TdHJpbmcoKX19O2dvb2cuaHRtbC5TYWZlVXJsLklOTk9DVU9VU19TVFJJTkc9ImFib3V0OmludmFsaWQjekNsb3N1cmV6Ijtnb29nLmh0bWwuU2FmZVVybC5wcm90b3R5cGUuaW1wbGVtZW50c0dvb2dTdHJpbmdUeXBlZFN0cmluZz0hMDtnb29nLmh0bWwuU2FmZVVybC5wcm90b3R5cGUuZ2V0VHlwZWRTdHJpbmdWYWx1ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnByaXZhdGVEb05vdEFjY2Vzc09yRWxzZVNhZmVVcmxXcmFwcGVkVmFsdWVfLnRvU3RyaW5nKCl9Owpnb29nLmh0bWwuU2FmZVVybC51bndyYXA9ZnVuY3Rpb24oYSl7aWYoYSBpbnN0YW5jZW9mIGdvb2cuaHRtbC5TYWZlVXJsJiZhLmNvbnN0cnVjdG9yPT09Z29vZy5odG1sLlNhZmVVcmwpcmV0dXJuIGEucHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlU2FmZVVybFdyYXBwZWRWYWx1ZV87Z29vZy5hc3NlcnRzLmZhaWwoImV4cGVjdGVkIG9iamVjdCBvZiB0eXBlIFNhZmVVcmwsIGdvdCAnIithKyInIG9mIHR5cGUgIitnb29nLnR5cGVPZihhKSk7cmV0dXJuInR5cGVfZXJyb3I6U2FmZVVybCJ9O2dvb2cuaHRtbC5TYWZlVXJsLmZyb21Db25zdGFudD1mdW5jdGlvbihhKXtyZXR1cm4gZ29vZy5odG1sLlNhZmVVcmwuY3JlYXRlU2FmZVVybFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGdvb2cuc3RyaW5nLkNvbnN0LnVud3JhcChhKSl9Owpnb29nLmh0bWwuU0FGRV9NSU1FX1RZUEVfUEFUVEVSTl89UmVnRXhwKCdeKD86YXVkaW8vKD86M2dwcDJ8M2dwcHxhYWN8TDE2fG1pZGl8bXAzfG1wNHxtcGVnfG9nYXxvZ2d8b3B1c3x4LW00YXx4LW1hdHJvc2thfHgtd2F2fHdhdnx3ZWJtKXxmb250L1xcdyt8aW1hZ2UvKD86Ym1wfGdpZnxqcGVnfGpwZ3xwbmd8dGlmZnx3ZWJwfHgtaWNvbnxoZWljfGhlaWYpfHZpZGVvLyg/Om1wZWd8bXA0fG9nZ3x3ZWJtfHF1aWNrdGltZXx4LW1hdHJvc2thKSkoPzo7XFx3Kz0oPzpcXHcrfCJbXFx3Oyw9IF0rIikpKiQnLCJpIik7Z29vZy5odG1sLlNhZmVVcmwuaXNTYWZlTWltZVR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuIGdvb2cuaHRtbC5TQUZFX01JTUVfVFlQRV9QQVRURVJOXy50ZXN0KGEpfTsKZ29vZy5odG1sLlNhZmVVcmwuZnJvbUJsb2I9ZnVuY3Rpb24oYSl7YT1nb29nLmh0bWwuU2FmZVVybC5pc1NhZmVNaW1lVHlwZShhLnR5cGUpP2dvb2cuZnMudXJsLmNyZWF0ZU9iamVjdFVybChhKTpnb29nLmh0bWwuU2FmZVVybC5JTk5PQ1VPVVNfU1RSSU5HO3JldHVybiBnb29nLmh0bWwuU2FmZVVybC5jcmVhdGVTYWZlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoYSl9O2dvb2cuaHRtbC5TYWZlVXJsLnJldm9rZU9iamVjdFVybD1mdW5jdGlvbihhKXthPWEuZ2V0VHlwZWRTdHJpbmdWYWx1ZSgpO2EhPT1nb29nLmh0bWwuU2FmZVVybC5JTk5PQ1VPVVNfU1RSSU5HJiZnb29nLmZzLnVybC5yZXZva2VPYmplY3RVcmwoYSl9Owpnb29nLmh0bWwuU2FmZVVybC5mcm9tTWVkaWFTb3VyY2U9ZnVuY3Rpb24oYSl7Z29vZy5hc3NlcnRzLmFzc2VydCgiTWVkaWFTb3VyY2UiaW4gZ29vZy5nbG9iYWwsIk5vIHN1cHBvcnQgZm9yIE1lZGlhU291cmNlIik7YT1hIGluc3RhbmNlb2YgTWVkaWFTb3VyY2U/Z29vZy5mcy51cmwuY3JlYXRlT2JqZWN0VXJsKGEpOmdvb2cuaHRtbC5TYWZlVXJsLklOTk9DVU9VU19TVFJJTkc7cmV0dXJuIGdvb2cuaHRtbC5TYWZlVXJsLmNyZWF0ZVNhZmVVcmxTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShhKX07Z29vZy5odG1sLkRBVEFfVVJMX1BBVFRFUk5fPS9eZGF0YTooLiopO2Jhc2U2NCxbYS16MC05K1wvXSs9KiQvaTsKZ29vZy5odG1sLlNhZmVVcmwudHJ5RnJvbURhdGFVcmw9ZnVuY3Rpb24oYSl7YT1TdHJpbmcoYSk7YT1hLnJlcGxhY2UoLyglMEF8JTBEKS9nLCIiKTtyZXR1cm4gYS5tYXRjaChnb29nLmh0bWwuREFUQV9VUkxfUEFUVEVSTl8pP2dvb2cuaHRtbC5TYWZlVXJsLmNyZWF0ZVNhZmVVcmxTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShhKTpudWxsfTtnb29nLmh0bWwuU2FmZVVybC5mcm9tRGF0YVVybD1mdW5jdGlvbihhKXtyZXR1cm4gZ29vZy5odG1sLlNhZmVVcmwudHJ5RnJvbURhdGFVcmwoYSl8fGdvb2cuaHRtbC5TYWZlVXJsLklOTk9DVU9VU19VUkx9O2dvb2cuaHRtbC5TYWZlVXJsLmZyb21UZWxVcmw9ZnVuY3Rpb24oYSl7Z29vZy5zdHJpbmcuaW50ZXJuYWwuY2FzZUluc2Vuc2l0aXZlU3RhcnRzV2l0aChhLCJ0ZWw6Iil8fChhPWdvb2cuaHRtbC5TYWZlVXJsLklOTk9DVU9VU19TVFJJTkcpO3JldHVybiBnb29nLmh0bWwuU2FmZVVybC5jcmVhdGVTYWZlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoYSl9Owpnb29nLmh0bWwuU0lQX1VSTF9QQVRURVJOXz1SZWdFeHAoIl5zaXBbc10/OlsrYS16MC05Xy4hJCUmJypcXC89XmB7fH1+LV0rQChbYS16MC05LV0rXFwuKStbYS16MC05XXsyLDYzfSQiLCJpIik7Z29vZy5odG1sLlNhZmVVcmwuZnJvbVNpcFVybD1mdW5jdGlvbihhKXtnb29nLmh0bWwuU0lQX1VSTF9QQVRURVJOXy50ZXN0KGRlY29kZVVSSUNvbXBvbmVudChhKSl8fChhPWdvb2cuaHRtbC5TYWZlVXJsLklOTk9DVU9VU19TVFJJTkcpO3JldHVybiBnb29nLmh0bWwuU2FmZVVybC5jcmVhdGVTYWZlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoYSl9O2dvb2cuaHRtbC5TYWZlVXJsLmZyb21GYWNlYm9va01lc3NlbmdlclVybD1mdW5jdGlvbihhKXtnb29nLnN0cmluZy5pbnRlcm5hbC5jYXNlSW5zZW5zaXRpdmVTdGFydHNXaXRoKGEsImZiLW1lc3NlbmdlcjovL3NoYXJlIil8fChhPWdvb2cuaHRtbC5TYWZlVXJsLklOTk9DVU9VU19TVFJJTkcpO3JldHVybiBnb29nLmh0bWwuU2FmZVVybC5jcmVhdGVTYWZlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoYSl9Owpnb29nLmh0bWwuU2FmZVVybC5mcm9tV2hhdHNBcHBVcmw9ZnVuY3Rpb24oYSl7Z29vZy5zdHJpbmcuaW50ZXJuYWwuY2FzZUluc2Vuc2l0aXZlU3RhcnRzV2l0aChhLCJ3aGF0c2FwcDovL3NlbmQiKXx8KGE9Z29vZy5odG1sLlNhZmVVcmwuSU5OT0NVT1VTX1NUUklORyk7cmV0dXJuIGdvb2cuaHRtbC5TYWZlVXJsLmNyZWF0ZVNhZmVVcmxTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShhKX07Z29vZy5odG1sLlNhZmVVcmwuZnJvbVNtc1VybD1mdW5jdGlvbihhKXtnb29nLnN0cmluZy5pbnRlcm5hbC5jYXNlSW5zZW5zaXRpdmVTdGFydHNXaXRoKGEsInNtczoiKSYmZ29vZy5odG1sLlNhZmVVcmwuaXNTbXNVcmxCb2R5VmFsaWRfKGEpfHwoYT1nb29nLmh0bWwuU2FmZVVybC5JTk5PQ1VPVVNfU1RSSU5HKTtyZXR1cm4gZ29vZy5odG1sLlNhZmVVcmwuY3JlYXRlU2FmZVVybFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGEpfTsKZ29vZy5odG1sLlNhZmVVcmwuaXNTbXNVcmxCb2R5VmFsaWRfPWZ1bmN0aW9uKGEpe3ZhciBiPWEuaW5kZXhPZigiIyIpOzA8YiYmKGE9YS5zdWJzdHJpbmcoMCxiKSk7Yj1hLm1hdGNoKC9bPyZdYm9keT0vZ2kpO2lmKCFiKXJldHVybiEwO2lmKDE8Yi5sZW5ndGgpcmV0dXJuITE7YT1hLm1hdGNoKC9bPyZdYm9keT0oW14mXSopLylbMV07aWYoIWEpcmV0dXJuITA7dHJ5e2RlY29kZVVSSUNvbXBvbmVudChhKX1jYXRjaChjKXtyZXR1cm4hMX1yZXR1cm4vXig/OlthLXowLTlcLV8ufl18JVswLTlhLWZdezJ9KSskL2kudGVzdChhKX07Z29vZy5odG1sLlNhZmVVcmwuZnJvbVNzaFVybD1mdW5jdGlvbihhKXtnb29nLnN0cmluZy5pbnRlcm5hbC5jYXNlSW5zZW5zaXRpdmVTdGFydHNXaXRoKGEsInNzaDovLyIpfHwoYT1nb29nLmh0bWwuU2FmZVVybC5JTk5PQ1VPVVNfU1RSSU5HKTtyZXR1cm4gZ29vZy5odG1sLlNhZmVVcmwuY3JlYXRlU2FmZVVybFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGEpfTsKZ29vZy5odG1sLlNhZmVVcmwuc2FuaXRpemVDaHJvbWVFeHRlbnNpb25Vcmw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZ29vZy5odG1sLlNhZmVVcmwuc2FuaXRpemVFeHRlbnNpb25VcmxfKC9eY2hyb21lLWV4dGVuc2lvbjpcL1wvKFteXC9dKylcLy8sYSxiKX07Z29vZy5odG1sLlNhZmVVcmwuc2FuaXRpemVGaXJlZm94RXh0ZW5zaW9uVXJsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGdvb2cuaHRtbC5TYWZlVXJsLnNhbml0aXplRXh0ZW5zaW9uVXJsXygvXm1vei1leHRlbnNpb246XC9cLyhbXlwvXSspXC8vLGEsYil9O2dvb2cuaHRtbC5TYWZlVXJsLnNhbml0aXplRWRnZUV4dGVuc2lvblVybD1mdW5jdGlvbihhLGIpe3JldHVybiBnb29nLmh0bWwuU2FmZVVybC5zYW5pdGl6ZUV4dGVuc2lvblVybF8oL15tcy1icm93c2VyLWV4dGVuc2lvbjpcL1wvKFteXC9dKylcLy8sYSxiKX07Cmdvb2cuaHRtbC5TYWZlVXJsLnNhbml0aXplRXh0ZW5zaW9uVXJsXz1mdW5jdGlvbihhLGIsYyl7KGE9YS5leGVjKGIpKT8oYT1hWzFdLC0xPT0oYyBpbnN0YW5jZW9mIGdvb2cuc3RyaW5nLkNvbnN0P1tnb29nLnN0cmluZy5Db25zdC51bndyYXAoYyldOmMubWFwKGZ1bmN0aW9uKGQpe3JldHVybiBnb29nLnN0cmluZy5Db25zdC51bndyYXAoZCl9KSkuaW5kZXhPZihhKSYmKGI9Z29vZy5odG1sLlNhZmVVcmwuSU5OT0NVT1VTX1NUUklORykpOmI9Z29vZy5odG1sLlNhZmVVcmwuSU5OT0NVT1VTX1NUUklORztyZXR1cm4gZ29vZy5odG1sLlNhZmVVcmwuY3JlYXRlU2FmZVVybFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGIpfTtnb29nLmh0bWwuU2FmZVVybC5mcm9tVHJ1c3RlZFJlc291cmNlVXJsPWZ1bmN0aW9uKGEpe3JldHVybiBnb29nLmh0bWwuU2FmZVVybC5jcmVhdGVTYWZlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoZ29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC51bndyYXAoYSkpfTsKZ29vZy5odG1sLlNBRkVfVVJMX1BBVFRFUk5fPS9eKD86KD86aHR0cHM/fG1haWx0b3xmdHApOnxbXjovPyNdKig/OlsvPyNdfCQpKS9pO2dvb2cuaHRtbC5TYWZlVXJsLlNBRkVfVVJMX1BBVFRFUk49Z29vZy5odG1sLlNBRkVfVVJMX1BBVFRFUk5fO2dvb2cuaHRtbC5TYWZlVXJsLnRyeVNhbml0aXplPWZ1bmN0aW9uKGEpe2lmKGEgaW5zdGFuY2VvZiBnb29nLmh0bWwuU2FmZVVybClyZXR1cm4gYTthPSJvYmplY3QiPT10eXBlb2YgYSYmYS5pbXBsZW1lbnRzR29vZ1N0cmluZ1R5cGVkU3RyaW5nP2EuZ2V0VHlwZWRTdHJpbmdWYWx1ZSgpOlN0cmluZyhhKTtyZXR1cm4gZ29vZy5odG1sLlNBRkVfVVJMX1BBVFRFUk5fLnRlc3QoYSk/Z29vZy5odG1sLlNhZmVVcmwuY3JlYXRlU2FmZVVybFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGEpOmdvb2cuaHRtbC5TYWZlVXJsLnRyeUZyb21EYXRhVXJsKGEpfTsKZ29vZy5odG1sLlNhZmVVcmwuc2FuaXRpemU9ZnVuY3Rpb24oYSl7cmV0dXJuIGdvb2cuaHRtbC5TYWZlVXJsLnRyeVNhbml0aXplKGEpfHxnb29nLmh0bWwuU2FmZVVybC5JTk5PQ1VPVVNfVVJMfTsKZ29vZy5odG1sLlNhZmVVcmwuc2FuaXRpemVBc3NlcnRVbmNoYW5nZWQ9ZnVuY3Rpb24oYSxiKXtpZihhIGluc3RhbmNlb2YgZ29vZy5odG1sLlNhZmVVcmwpcmV0dXJuIGE7YT0ib2JqZWN0Ij09dHlwZW9mIGEmJmEuaW1wbGVtZW50c0dvb2dTdHJpbmdUeXBlZFN0cmluZz9hLmdldFR5cGVkU3RyaW5nVmFsdWUoKTpTdHJpbmcoYSk7aWYoYiYmL15kYXRhOi9pLnRlc3QoYSkmJihiPWdvb2cuaHRtbC5TYWZlVXJsLmZyb21EYXRhVXJsKGEpLGIuZ2V0VHlwZWRTdHJpbmdWYWx1ZSgpPT1hKSlyZXR1cm4gYjtnb29nLmFzc2VydHMuYXNzZXJ0KGdvb2cuaHRtbC5TQUZFX1VSTF9QQVRURVJOXy50ZXN0KGEpLCIlcyBkb2VzIG5vdCBtYXRjaCB0aGUgc2FmZSBVUkwgcGF0dGVybiIsYSl8fChhPWdvb2cuaHRtbC5TYWZlVXJsLklOTk9DVU9VU19TVFJJTkcpO3JldHVybiBnb29nLmh0bWwuU2FmZVVybC5jcmVhdGVTYWZlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoYSl9Owpnb29nLmh0bWwuU2FmZVVybC5DT05TVFJVQ1RPUl9UT0tFTl9QUklWQVRFXz17fTtnb29nLmh0bWwuU2FmZVVybC5jcmVhdGVTYWZlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIG5ldyBnb29nLmh0bWwuU2FmZVVybChhLGdvb2cuaHRtbC5TYWZlVXJsLkNPTlNUUlVDVE9SX1RPS0VOX1BSSVZBVEVfKX07Z29vZy5odG1sLlNhZmVVcmwuSU5OT0NVT1VTX1VSTD1nb29nLmh0bWwuU2FmZVVybC5jcmVhdGVTYWZlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoZ29vZy5odG1sLlNhZmVVcmwuSU5OT0NVT1VTX1NUUklORyk7Z29vZy5odG1sLlNhZmVVcmwuQUJPVVRfQkxBTks9Z29vZy5odG1sLlNhZmVVcmwuY3JlYXRlU2FmZVVybFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKCJhYm91dDpibGFuayIpO2NvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX0NPTlNUUlVDVE9SX1RPS0VOX1BSSVZBVEU9e307CmNsYXNzIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX1NhZmVTdHlsZXtjb25zdHJ1Y3RvcihhLGIpe3RoaXMucHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlU2FmZVN0eWxlV3JhcHBlZFZhbHVlXz1iPT09bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfQ09OU1RSVUNUT1JfVE9LRU5fUFJJVkFURT9hOiIiO3RoaXMuaW1wbGVtZW50c0dvb2dTdHJpbmdUeXBlZFN0cmluZz0hMH1zdGF0aWMgZnJvbUNvbnN0YW50KGEpe2E9Z29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGEpO2lmKDA9PT1hLmxlbmd0aClyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfU2FmZVN0eWxlLkVNUFRZOygwLGdvb2cuYXNzZXJ0cy5hc3NlcnQpKCgwLGdvb2cuc3RyaW5nLmludGVybmFsLmVuZHNXaXRoKShhLCI7IiksYExhc3QgY2hhcmFjdGVyIG9mIHN0eWxlIHN0cmluZyBpcyBub3QgJzsnOiAke2F9YCk7KDAsZ29vZy5hc3NlcnRzLmFzc2VydCkoKDAsZ29vZy5zdHJpbmcuaW50ZXJuYWwuY29udGFpbnMpKGEsCiI6IiksIlN0eWxlIHN0cmluZyBtdXN0IGNvbnRhaW4gYXQgbGVhc3Qgb25lICc6JywgdG8gc3BlY2lmeSBhIFwibmFtZTogdmFsdWVcIiBwYWlyOiAiK2EpO3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9TYWZlU3R5bGUuY3JlYXRlU2FmZVN0eWxlU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoYSl9Z2V0VHlwZWRTdHJpbmdWYWx1ZSgpe3JldHVybiB0aGlzLnByaXZhdGVEb05vdEFjY2Vzc09yRWxzZVNhZmVTdHlsZVdyYXBwZWRWYWx1ZV99dG9TdHJpbmcoKXtyZXR1cm4gdGhpcy5wcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2VTYWZlU3R5bGVXcmFwcGVkVmFsdWVfLnRvU3RyaW5nKCl9c3RhdGljIHVud3JhcChhKXtpZihhIGluc3RhbmNlb2YgbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfU2FmZVN0eWxlJiZhLmNvbnN0cnVjdG9yPT09bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfU2FmZVN0eWxlKXJldHVybiBhLnByaXZhdGVEb05vdEFjY2Vzc09yRWxzZVNhZmVTdHlsZVdyYXBwZWRWYWx1ZV87CigwLGdvb2cuYXNzZXJ0cy5mYWlsKShgZXhwZWN0ZWQgb2JqZWN0IG9mIHR5cGUgU2FmZVN0eWxlLCBnb3QgJyR7YX1gKyInIG9mIHR5cGUgIitnb29nLnR5cGVPZihhKSk7cmV0dXJuInR5cGVfZXJyb3I6U2FmZVN0eWxlIn1zdGF0aWMgY3JlYXRlU2FmZVN0eWxlU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoYSl7cmV0dXJuIG5ldyBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9TYWZlU3R5bGUoYSxtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9DT05TVFJVQ1RPUl9UT0tFTl9QUklWQVRFKX1zdGF0aWMgY3JlYXRlKGEpe2xldCBiPSIiO2ZvcihsZXQgYyBpbiBhKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLGMpKXtpZighL15bLV9hLXpBLVowLTldKyQvLnRlc3QoYykpdGhyb3cgRXJyb3IoYE5hbWUgYWxsb3dzIG9ubHkgWy1fYS16QS1aMC05XSwgZ290OiAke2N9YCk7bGV0IGQ9YVtjXTtudWxsIT1kJiYKKGQ9QXJyYXkuaXNBcnJheShkKT9kLm1hcChtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9zYW5pdGl6ZVByb3BlcnR5VmFsdWUpLmpvaW4oIiAiKTptb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9zYW5pdGl6ZVByb3BlcnR5VmFsdWUoZCksYis9YCR7Y306JHtkfTtgKX1yZXR1cm4gYj9tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9TYWZlU3R5bGUuY3JlYXRlU2FmZVN0eWxlU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoYik6bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfU2FmZVN0eWxlLkVNUFRZfXN0YXRpYyBjb25jYXQoYSl7bGV0IGI9IiI7Y29uc3QgYz1kPT57QXJyYXkuaXNBcnJheShkKT9kLmZvckVhY2goYyk6Yis9bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfU2FmZVN0eWxlLnVud3JhcChkKX07QXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChhcmd1bWVudHMsYyk7CnJldHVybiBiP21vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX1NhZmVTdHlsZS5jcmVhdGVTYWZlU3R5bGVTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShiKTptb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9TYWZlU3R5bGUuRU1QVFl9fW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX1NhZmVTdHlsZS5FTVBUWT1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9TYWZlU3R5bGUuY3JlYXRlU2FmZVN0eWxlU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoIiIpO21vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX1NhZmVTdHlsZS5JTk5PQ1VPVVNfU1RSSU5HPSJ6Q2xvc3VyZXoiOwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9zYW5pdGl6ZVByb3BlcnR5VmFsdWUoYSl7aWYoYSBpbnN0YW5jZW9mIGdvb2cuaHRtbC5TYWZlVXJsKXJldHVybid1cmwoIicrZ29vZy5odG1sLlNhZmVVcmwudW53cmFwKGEpLnJlcGxhY2UoLzwvZywiJTNjIikucmVwbGFjZSgvW1xcIl0vZywiXFwkJiIpKyciKSc7YT1hIGluc3RhbmNlb2YgZ29vZy5zdHJpbmcuQ29uc3Q/Z29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGEpOm1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX3Nhbml0aXplUHJvcGVydHlWYWx1ZVN0cmluZyhTdHJpbmcoYSkpO2lmKC9bezt9XS8udGVzdChhKSl0aHJvdyBuZXcgbW9kdWxlJGNvbnRlbnRzJGdvb2ckYXNzZXJ0c19Bc3NlcnRpb25FcnJvcigiVmFsdWUgZG9lcyBub3QgYWxsb3cgW3s7fV0sIGdvdDogJXMuIixbYV0pO3JldHVybiBhfQpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9zYW5pdGl6ZVByb3BlcnR5VmFsdWVTdHJpbmcoYSl7Y29uc3QgYj1hLnJlcGxhY2UobW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfRlVOQ1RJT05TX1JFLCIkMSIpLnJlcGxhY2UobW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfRlVOQ1RJT05TX1JFLCIkMSIpLnJlcGxhY2UobW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfVVJMX1JFLCJ1cmwiKTtpZihtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9WQUxVRV9SRS50ZXN0KGIpKXtpZihtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9DT01NRU5UX1JFLnRlc3QoYSkpcmV0dXJuKDAsZ29vZy5hc3NlcnRzLmZhaWwpKGBTdHJpbmcgdmFsdWUgZGlzYWxsb3dzIGNvbW1lbnRzLCBnb3Q6ICR7YX1gKSxtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9TYWZlU3R5bGUuSU5OT0NVT1VTX1NUUklORzsKaWYoIW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX2hhc0JhbGFuY2VkUXVvdGVzKGEpKXJldHVybigwLGdvb2cuYXNzZXJ0cy5mYWlsKShgU3RyaW5nIHZhbHVlIHJlcXVpcmVzIGJhbGFuY2VkIHF1b3RlcywgZ290OiAke2F9YCksbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfU2FmZVN0eWxlLklOTk9DVU9VU19TVFJJTkc7aWYoIW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX2hhc0JhbGFuY2VkU3F1YXJlQnJhY2tldHMoYSkpcmV0dXJuKDAsZ29vZy5hc3NlcnRzLmZhaWwpKCJTdHJpbmcgdmFsdWUgcmVxdWlyZXMgYmFsYW5jZWQgc3F1YXJlIGJyYWNrZXRzIGFuZCBvbmUgaWRlbnRpZmllciBwZXIgcGFpciBvZiBicmFja2V0cywgZ290OiAiK2EpLG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX1NhZmVTdHlsZS5JTk5PQ1VPVVNfU1RSSU5HfWVsc2UgcmV0dXJuKDAsZ29vZy5hc3NlcnRzLmZhaWwpKGBTdHJpbmcgdmFsdWUgYWxsb3dzIG9ubHkgJHttb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9WQUxVRV9BTExPV0VEX0NIQVJTfWArCiIgYW5kIHNpbXBsZSBmdW5jdGlvbnMsIGdvdDogIithKSxtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9TYWZlU3R5bGUuSU5OT0NVT1VTX1NUUklORztyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfc2FuaXRpemVVcmwoYSl9ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfaGFzQmFsYW5jZWRRdW90ZXMoYSl7bGV0IGI9ITAsYz0hMDtmb3IobGV0IGQ9MDtkPGEubGVuZ3RoO2QrKyl7Y29uc3QgZT1hLmNoYXJBdChkKTsiJyI9PWUmJmM/Yj0hYjonIic9PWUmJmImJihjPSFjKX1yZXR1cm4gYiYmY30KZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfaGFzQmFsYW5jZWRTcXVhcmVCcmFja2V0cyhhKXtsZXQgYj0hMDtjb25zdCBjPS9eWy1fYS16QS1aMC05XSQvO2ZvcihsZXQgZD0wO2Q8YS5sZW5ndGg7ZCsrKXtjb25zdCBlPWEuY2hhckF0KGQpO2lmKCJdIj09ZSl7aWYoYilyZXR1cm4hMTtiPSEwfWVsc2UgaWYoIlsiPT1lKXtpZighYilyZXR1cm4hMTtiPSExfWVsc2UgaWYoIWImJiFjLnRlc3QoZSkpcmV0dXJuITF9cmV0dXJuIGJ9CmNvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX1ZBTFVFX0FMTE9XRURfQ0hBUlM9IlstLC5cIiclXyEjLyBhLXpBLVowLTlcXFtcXF1dIixtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9WQUxVRV9SRT1uZXcgUmVnRXhwKGBeJHttb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9WQUxVRV9BTExPV0VEX0NIQVJTfStcJGApLG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX1VSTF9SRT1SZWdFeHAoIlxcYih1cmxcXChbIFx0XG5dKikoJ1sgLSYoLVxcW1xcXS1+XSonfFwiWyAhIy1cXFtcXF0tfl0qXCJ8WyEjLSYqLVxcW1xcXS1+XSopKFsgXHRcbl0qXFwpKSIsImciKSxtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9BTExPV0VEX0ZVTkNUSU9OUz0iY2FsYyBjdWJpYy1iZXppZXIgZml0LWNvbnRlbnQgaHNsIGhzbGEgbGluZWFyLWdyYWRpZW50IG1hdHJpeCBtaW5tYXggcmFkaWFsLWdyYWRpZW50IHJlcGVhdCByZ2IgcmdiYSAocm90YXRlfHNjYWxlfHRyYW5zbGF0ZSkoWHxZfFp8M2QpPyBzdGVwcyB2YXIiLnNwbGl0KCIgIiksCm1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX0ZVTkNUSU9OU19SRT1uZXcgUmVnRXhwKCJcXGIoIittb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9BTExPV0VEX0ZVTkNUSU9OUy5qb2luKCJ8IikrIilcXChbLSsqLzAtOWEtekEtWi4lI1xcW1xcXSwgXStcXCkiLCJnIiksbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfQ09NTUVOVF9SRT0vXC9cKi87ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfc2FuaXRpemVVcmwoYSl7cmV0dXJuIGEucmVwbGFjZShtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9VUkxfUkUsKGIsYyxkLGUpPT57bGV0IGY9IiI7ZD1kLnJlcGxhY2UoL14oWyciXSkoLiopXDEkLywoZyxoLGspPT57Zj1oO3JldHVybiBrfSk7Yj1nb29nLmh0bWwuU2FmZVVybC5zYW5pdGl6ZShkKS5nZXRUeXBlZFN0cmluZ1ZhbHVlKCk7cmV0dXJuIGMrZitiK2YrZX0pfQpnb29nLmh0bWwuU2FmZVN0eWxlPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX1NhZmVTdHlsZTtnb29nLm9iamVjdD17fTtmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfZm9yRWFjaChhLGIsYyl7Zm9yKGNvbnN0IGQgaW4gYSliLmNhbGwoYyxhW2RdLGQsYSl9ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2ZpbHRlcihhLGIsYyl7Y29uc3QgZD17fTtmb3IoY29uc3QgZSBpbiBhKWIuY2FsbChjLGFbZV0sZSxhKSYmKGRbZV09YVtlXSk7cmV0dXJuIGR9ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X21hcChhLGIsYyl7Y29uc3QgZD17fTtmb3IoY29uc3QgZSBpbiBhKWRbZV09Yi5jYWxsKGMsYVtlXSxlLGEpO3JldHVybiBkfWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9zb21lKGEsYixjKXtmb3IoY29uc3QgZCBpbiBhKWlmKGIuY2FsbChjLGFbZF0sZCxhKSlyZXR1cm4hMDtyZXR1cm4hMX0KZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2V2ZXJ5KGEsYixjKXtmb3IoY29uc3QgZCBpbiBhKWlmKCFiLmNhbGwoYyxhW2RdLGQsYSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2dldENvdW50KGEpe2xldCBiPTA7Zm9yKGNvbnN0IGMgaW4gYSliKys7cmV0dXJuIGJ9ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2dldEFueUtleShhKXtmb3IoY29uc3QgYiBpbiBhKXJldHVybiBifWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9nZXRBbnlWYWx1ZShhKXtmb3IoY29uc3QgYiBpbiBhKXJldHVybiBhW2JdfWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9jb250YWlucyhhLGIpe3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfY29udGFpbnNWYWx1ZShhLGIpfQpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfZ2V0VmFsdWVzKGEpe2NvbnN0IGI9W107bGV0IGM9MDtmb3IoY29uc3QgZCBpbiBhKWJbYysrXT1hW2RdO3JldHVybiBifWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9nZXRLZXlzKGEpe2NvbnN0IGI9W107bGV0IGM9MDtmb3IoY29uc3QgZCBpbiBhKWJbYysrXT1kO3JldHVybiBifWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9nZXRWYWx1ZUJ5S2V5cyhhLGIpe3ZhciBjPWdvb2cuaXNBcnJheUxpa2UoYik7Y29uc3QgZD1jP2I6YXJndW1lbnRzO2ZvcihjPWM/MDoxO2M8ZC5sZW5ndGg7YysrKXtpZihudWxsPT1hKXJldHVybjthPWFbZFtjXV19cmV0dXJuIGF9ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2NvbnRhaW5zS2V5KGEsYil7cmV0dXJuIG51bGwhPT1hJiZiIGluIGF9CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9jb250YWluc1ZhbHVlKGEsYil7Zm9yKGNvbnN0IGMgaW4gYSlpZihhW2NdPT1iKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9maW5kS2V5KGEsYixjKXtmb3IoY29uc3QgZCBpbiBhKWlmKGIuY2FsbChjLGFbZF0sZCxhKSlyZXR1cm4gZH1mdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfZmluZFZhbHVlKGEsYixjKXtyZXR1cm4oYj1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfZmluZEtleShhLGIsYykpJiZhW2JdfWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9pc0VtcHR5KGEpe2Zvcihjb25zdCBiIGluIGEpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2NsZWFyKGEpe2Zvcihjb25zdCBiIGluIGEpZGVsZXRlIGFbYl19CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9yZW1vdmUoYSxiKXtsZXQgYzsoYz1iIGluIGEpJiZkZWxldGUgYVtiXTtyZXR1cm4gY31mdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfYWRkKGEsYixjKXtpZihudWxsIT09YSYmYiBpbiBhKXRocm93IEVycm9yKGBUaGUgb2JqZWN0IGFscmVhZHkgY29udGFpbnMgdGhlIGtleSAiJHtifSJgKTttb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3Rfc2V0KGEsYixjKX1mdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfZ2V0KGEsYixjKXtyZXR1cm4gbnVsbCE9PWEmJmIgaW4gYT9hW2JdOmN9ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X3NldChhLGIsYyl7YVtiXT1jfWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9zZXRJZlVuZGVmaW5lZChhLGIsYyl7cmV0dXJuIGIgaW4gYT9hW2JdOmFbYl09Y30KZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X3NldFdpdGhSZXR1cm5WYWx1ZUlmTm90U2V0KGEsYixjKXtpZihiIGluIGEpcmV0dXJuIGFbYl07Yz1jKCk7cmV0dXJuIGFbYl09Y31mdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfZXF1YWxzKGEsYil7Zm9yKGNvbnN0IGMgaW4gYSlpZighKGMgaW4gYil8fGFbY10hPT1iW2NdKXJldHVybiExO2Zvcihjb25zdCBjIGluIGIpaWYoIShjIGluIGEpKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9jbG9uZShhKXtjb25zdCBiPXt9O2Zvcihjb25zdCBjIGluIGEpYltjXT1hW2NdO3JldHVybiBifQpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfdW5zYWZlQ2xvbmUoYSl7aWYoIWF8fCJvYmplY3QiIT09dHlwZW9mIGEpcmV0dXJuIGE7aWYoImZ1bmN0aW9uIj09PXR5cGVvZiBhLmNsb25lKXJldHVybiBhLmNsb25lKCk7aWYoInVuZGVmaW5lZCIhPT10eXBlb2YgTWFwJiZhIGluc3RhbmNlb2YgTWFwKXJldHVybiBuZXcgTWFwKGEpO2lmKCJ1bmRlZmluZWQiIT09dHlwZW9mIFNldCYmYSBpbnN0YW5jZW9mIFNldClyZXR1cm4gbmV3IFNldChhKTtpZihhIGluc3RhbmNlb2YgRGF0ZSlyZXR1cm4gbmV3IERhdGUoYS5nZXRUaW1lKCkpO2NvbnN0IGI9QXJyYXkuaXNBcnJheShhKT9bXToiZnVuY3Rpb24iIT09dHlwZW9mIEFycmF5QnVmZmVyfHwiZnVuY3Rpb24iIT09dHlwZW9mIEFycmF5QnVmZmVyLmlzVmlld3x8IUFycmF5QnVmZmVyLmlzVmlldyhhKXx8YSBpbnN0YW5jZW9mIERhdGFWaWV3P3t9Om5ldyBhLmNvbnN0cnVjdG9yKGEubGVuZ3RoKTtmb3IoY29uc3QgYyBpbiBhKWJbY109Cm1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF91bnNhZmVDbG9uZShhW2NdKTtyZXR1cm4gYn1mdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfdHJhbnNwb3NlKGEpe2NvbnN0IGI9e307Zm9yKGNvbnN0IGMgaW4gYSliW2FbY11dPWM7cmV0dXJuIGJ9Y29uc3QgbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X1BST1RPVFlQRV9GSUVMRFM9ImNvbnN0cnVjdG9yIGhhc093blByb3BlcnR5IGlzUHJvdG90eXBlT2YgcHJvcGVydHlJc0VudW1lcmFibGUgdG9Mb2NhbGVTdHJpbmcgdG9TdHJpbmcgdmFsdWVPZiIuc3BsaXQoIiAiKTsKZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2V4dGVuZChhLGIpe2xldCBjLGQ7Zm9yKGxldCBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl7ZD1hcmd1bWVudHNbZV07Zm9yKGMgaW4gZClhW2NdPWRbY107Zm9yKGxldCBmPTA7Zjxtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfUFJPVE9UWVBFX0ZJRUxEUy5sZW5ndGg7ZisrKWM9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X1BST1RPVFlQRV9GSUVMRFNbZl0sT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGQsYykmJihhW2NdPWRbY10pfX0KZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2NyZWF0ZShhKXtjb25zdCBiPWFyZ3VtZW50cy5sZW5ndGg7aWYoMT09YiYmQXJyYXkuaXNBcnJheShhcmd1bWVudHNbMF0pKXJldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfY3JlYXRlLmFwcGx5KG51bGwsYXJndW1lbnRzWzBdKTtpZihiJTIpdGhyb3cgRXJyb3IoIlVuZXZlbiBudW1iZXIgb2YgYXJndW1lbnRzIik7Y29uc3QgYz17fTtmb3IobGV0IGQ9MDtkPGI7ZCs9MiljW2FyZ3VtZW50c1tkXV09YXJndW1lbnRzW2QrMV07cmV0dXJuIGN9CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9jcmVhdGVTZXQoYSl7Y29uc3QgYj1hcmd1bWVudHMubGVuZ3RoO2lmKDE9PWImJkFycmF5LmlzQXJyYXkoYXJndW1lbnRzWzBdKSlyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2NyZWF0ZVNldC5hcHBseShudWxsLGFyZ3VtZW50c1swXSk7Y29uc3QgYz17fTtmb3IobGV0IGQ9MDtkPGI7ZCsrKWNbYXJndW1lbnRzW2RdXT0hMDtyZXR1cm4gY31mdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfY3JlYXRlSW1tdXRhYmxlVmlldyhhKXtsZXQgYj1hO09iamVjdC5pc0Zyb3plbiYmIU9iamVjdC5pc0Zyb3plbihhKSYmKGI9T2JqZWN0LmNyZWF0ZShhKSxPYmplY3QuZnJlZXplKGIpKTtyZXR1cm4gYn1mdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfaXNJbW11dGFibGVWaWV3KGEpe3JldHVybiEhT2JqZWN0LmlzRnJvemVuJiZPYmplY3QuaXNGcm96ZW4oYSl9CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9nZXRBbGxQcm9wZXJ0eU5hbWVzKGEsYixjKXtpZighYSlyZXR1cm5bXTtpZighT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXN8fCFPYmplY3QuZ2V0UHJvdG90eXBlT2YpcmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9nZXRLZXlzKGEpO2NvbnN0IGQ9e307Zm9yKDthJiYoYSE9PU9iamVjdC5wcm90b3R5cGV8fGIpJiYoYSE9PUZ1bmN0aW9uLnByb3RvdHlwZXx8Yyk7KXtjb25zdCBlPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGEpO2ZvcihsZXQgZj0wO2Y8ZS5sZW5ndGg7ZisrKWRbZVtmXV09ITA7YT1PYmplY3QuZ2V0UHJvdG90eXBlT2YoYSl9cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9nZXRLZXlzKGQpfQpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfZ2V0U3VwZXJDbGFzcyhhKXtyZXR1cm4oYT1PYmplY3QuZ2V0UHJvdG90eXBlT2YoYS5wcm90b3R5cGUpKSYmYS5jb25zdHJ1Y3Rvcn1nb29nLm9iamVjdC5hZGQ9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2FkZDtnb29nLm9iamVjdC5jbGVhcj1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfY2xlYXI7Z29vZy5vYmplY3QuY2xvbmU9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2Nsb25lO2dvb2cub2JqZWN0LmNvbnRhaW5zPW1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9jb250YWlucztnb29nLm9iamVjdC5jb250YWluc0tleT1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfY29udGFpbnNLZXk7Z29vZy5vYmplY3QuY29udGFpbnNWYWx1ZT1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfY29udGFpbnNWYWx1ZTtnb29nLm9iamVjdC5jcmVhdGU9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2NyZWF0ZTsKZ29vZy5vYmplY3QuY3JlYXRlSW1tdXRhYmxlVmlldz1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfY3JlYXRlSW1tdXRhYmxlVmlldztnb29nLm9iamVjdC5jcmVhdGVTZXQ9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2NyZWF0ZVNldDtnb29nLm9iamVjdC5lcXVhbHM9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2VxdWFscztnb29nLm9iamVjdC5ldmVyeT1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfZXZlcnk7Z29vZy5vYmplY3QuZXh0ZW5kPW1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9leHRlbmQ7Z29vZy5vYmplY3QuZmlsdGVyPW1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9maWx0ZXI7Z29vZy5vYmplY3QuZmluZEtleT1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfZmluZEtleTtnb29nLm9iamVjdC5maW5kVmFsdWU9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2ZpbmRWYWx1ZTtnb29nLm9iamVjdC5mb3JFYWNoPW1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9mb3JFYWNoOwpnb29nLm9iamVjdC5nZXQ9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2dldDtnb29nLm9iamVjdC5nZXRBbGxQcm9wZXJ0eU5hbWVzPW1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9nZXRBbGxQcm9wZXJ0eU5hbWVzO2dvb2cub2JqZWN0LmdldEFueUtleT1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfZ2V0QW55S2V5O2dvb2cub2JqZWN0LmdldEFueVZhbHVlPW1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9nZXRBbnlWYWx1ZTtnb29nLm9iamVjdC5nZXRDb3VudD1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfZ2V0Q291bnQ7Z29vZy5vYmplY3QuZ2V0S2V5cz1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfZ2V0S2V5cztnb29nLm9iamVjdC5nZXRTdXBlckNsYXNzPW1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9nZXRTdXBlckNsYXNzO2dvb2cub2JqZWN0LmdldFZhbHVlQnlLZXlzPW1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9nZXRWYWx1ZUJ5S2V5czsKZ29vZy5vYmplY3QuZ2V0VmFsdWVzPW1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9nZXRWYWx1ZXM7Z29vZy5vYmplY3QuaXNFbXB0eT1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfaXNFbXB0eTtnb29nLm9iamVjdC5pc0ltbXV0YWJsZVZpZXc9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X2lzSW1tdXRhYmxlVmlldztnb29nLm9iamVjdC5tYXA9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X21hcDtnb29nLm9iamVjdC5yZW1vdmU9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X3JlbW92ZTtnb29nLm9iamVjdC5zZXQ9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X3NldDtnb29nLm9iamVjdC5zZXRJZlVuZGVmaW5lZD1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3Rfc2V0SWZVbmRlZmluZWQ7Z29vZy5vYmplY3Quc2V0V2l0aFJldHVyblZhbHVlSWZOb3RTZXQ9bW9kdWxlJGNvbnRlbnRzJGdvb2ckb2JqZWN0X3NldFdpdGhSZXR1cm5WYWx1ZUlmTm90U2V0Owpnb29nLm9iamVjdC5zb21lPW1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9zb21lO2dvb2cub2JqZWN0LnRyYW5zcG9zZT1tb2R1bGUkY29udGVudHMkZ29vZyRvYmplY3RfdHJhbnNwb3NlO2dvb2cub2JqZWN0LnVuc2FmZUNsb25lPW1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF91bnNhZmVDbG9uZTtjb25zdCBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZVNoZWV0X0NPTlNUUlVDVE9SX1RPS0VOX1BSSVZBVEU9e307CmNsYXNzIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlU2hlZXRfU2FmZVN0eWxlU2hlZXR7Y29uc3RydWN0b3IoYSxiKXt0aGlzLnByaXZhdGVEb05vdEFjY2Vzc09yRWxzZVNhZmVTdHlsZVNoZWV0V3JhcHBlZFZhbHVlXz1iPT09bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVTaGVldF9DT05TVFJVQ1RPUl9UT0tFTl9QUklWQVRFP2E6IiI7dGhpcy5pbXBsZW1lbnRzR29vZ1N0cmluZ1R5cGVkU3RyaW5nPSEwfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMucHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlU2FmZVN0eWxlU2hlZXRXcmFwcGVkVmFsdWVfLnRvU3RyaW5nKCl9c3RhdGljIGNyZWF0ZVJ1bGUoYSxiKXtpZigoMCxnb29nLnN0cmluZy5pbnRlcm5hbC5jb250YWlucykoYSwiPCIpKXRocm93IEVycm9yKGBTZWxlY3RvciBkb2VzIG5vdCBhbGxvdyAnPCcsIGdvdDogJHthfWApO2NvbnN0IGM9YS5yZXBsYWNlKC8oJ3wiKSgoPyFcMSlbXlxyXG5cZlxcXXxcXFtcc1xTXSkqXDEvZywKIiIpO2lmKCEvXlstX2EtekEtWjAtOSMuOiogLD4rfltcXSgpPV4kfF0rJC8udGVzdChjKSl0aHJvdyBFcnJvcigiU2VsZWN0b3IgYWxsb3dzIG9ubHkgWy1fYS16QS1aMC05Iy46KiAsPit+W1xcXSgpPV4kfF0gYW5kIHN0cmluZ3MsIGdvdDogIithKTtpZighbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVTaGVldF9TYWZlU3R5bGVTaGVldC5oYXNCYWxhbmNlZEJyYWNrZXRzXyhjKSl0aHJvdyBFcnJvcigiKCkgYW5kIFtdIGluIHNlbGVjdG9yIG11c3QgYmUgYmFsYW5jZWQsIGdvdDogIithKTtiIGluc3RhbmNlb2YgbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfU2FmZVN0eWxlfHwoYj1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZV9TYWZlU3R5bGUuY3JlYXRlKGIpKTthPWAke2F9e2ArbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfU2FmZVN0eWxlLnVud3JhcChiKS5yZXBsYWNlKC88L2csIlxcM0MgIikrIn0iOwpyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVTaGVldF9TYWZlU3R5bGVTaGVldC5jcmVhdGVTYWZlU3R5bGVTaGVldFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGEpfXN0YXRpYyBoYXNCYWxhbmNlZEJyYWNrZXRzXyhhKXtjb25zdCBiPXsiKCI6IikiLCJbIjoiXSJ9LGM9W107Zm9yKGxldCBkPTA7ZDxhLmxlbmd0aDtkKyspe2NvbnN0IGU9YVtkXTtpZihiW2VdKWMucHVzaChiW2VdKTtlbHNlIGlmKG1vZHVsZSRjb250ZW50cyRnb29nJG9iamVjdF9jb250YWlucyhiLGUpJiZjLnBvcCgpIT1lKXJldHVybiExfXJldHVybiAwPT1jLmxlbmd0aH1zdGF0aWMgY29uY2F0KGEpe2xldCBiPSIiO2NvbnN0IGM9ZD0+e0FycmF5LmlzQXJyYXkoZCk/ZC5mb3JFYWNoKGMpOmIrPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlU2hlZXRfU2FmZVN0eWxlU2hlZXQudW53cmFwKGQpfTtBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGFyZ3VtZW50cywKYyk7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlU2hlZXRfU2FmZVN0eWxlU2hlZXQuY3JlYXRlU2FmZVN0eWxlU2hlZXRTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShiKX1zdGF0aWMgZnJvbUNvbnN0YW50KGEpe2E9Z29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGEpO2lmKDA9PT1hLmxlbmd0aClyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVTaGVldF9TYWZlU3R5bGVTaGVldC5FTVBUWTsoMCxnb29nLmFzc2VydHMuYXNzZXJ0KSghKDAsZ29vZy5zdHJpbmcuaW50ZXJuYWwuY29udGFpbnMpKGEsIjwiKSxgRm9yYmlkZGVuICc8JyBjaGFyYWN0ZXIgaW4gc3R5bGUgc2hlZXQgc3RyaW5nOiAke2F9YCk7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlU2hlZXRfU2FmZVN0eWxlU2hlZXQuY3JlYXRlU2FmZVN0eWxlU2hlZXRTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShhKX1nZXRUeXBlZFN0cmluZ1ZhbHVlKCl7cmV0dXJuIHRoaXMucHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlU2FmZVN0eWxlU2hlZXRXcmFwcGVkVmFsdWVffXN0YXRpYyB1bndyYXAoYSl7aWYoYSBpbnN0YW5jZW9mCm1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlU2hlZXRfU2FmZVN0eWxlU2hlZXQmJmEuY29uc3RydWN0b3I9PT1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZVNoZWV0X1NhZmVTdHlsZVNoZWV0KXJldHVybiBhLnByaXZhdGVEb05vdEFjY2Vzc09yRWxzZVNhZmVTdHlsZVNoZWV0V3JhcHBlZFZhbHVlXzsoMCxnb29nLmFzc2VydHMuZmFpbCkoImV4cGVjdGVkIG9iamVjdCBvZiB0eXBlIFNhZmVTdHlsZVNoZWV0LCBnb3QgJyIrYSsiJyBvZiB0eXBlICIrZ29vZy50eXBlT2YoYSkpO3JldHVybiJ0eXBlX2Vycm9yOlNhZmVTdHlsZVNoZWV0In1zdGF0aWMgY3JlYXRlU2FmZVN0eWxlU2hlZXRTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShhKXtyZXR1cm4gbmV3IG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlU2hlZXRfU2FmZVN0eWxlU2hlZXQoYSxtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZVNoZWV0X0NPTlNUUlVDVE9SX1RPS0VOX1BSSVZBVEUpfX0KbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVTaGVldF9TYWZlU3R5bGVTaGVldC5FTVBUWT1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZVNoZWV0X1NhZmVTdHlsZVNoZWV0LmNyZWF0ZVNhZmVTdHlsZVNoZWV0U2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoIiIpO2dvb2cuaHRtbC5TYWZlU3R5bGVTaGVldD1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVTdHlsZVNoZWV0X1NhZmVTdHlsZVNoZWV0O2dvb2cuZG9tLkh0bWxFbGVtZW50PWZ1bmN0aW9uKCl7fTtnb29nLmRvbS5UYWdOYW1lPWNsYXNze3N0YXRpYyBjYXN0KGEsYil7cmV0dXJuIGF9Y29uc3RydWN0b3IoKXt9dG9TdHJpbmcoKXt9fTtnb29nLmRvbS5UYWdOYW1lLkE9IkEiO2dvb2cuZG9tLlRhZ05hbWUuQUJCUj0iQUJCUiI7Z29vZy5kb20uVGFnTmFtZS5BQ1JPTllNPSJBQ1JPTllNIjtnb29nLmRvbS5UYWdOYW1lLkFERFJFU1M9IkFERFJFU1MiO2dvb2cuZG9tLlRhZ05hbWUuQVBQTEVUPSJBUFBMRVQiO2dvb2cuZG9tLlRhZ05hbWUuQVJFQT0iQVJFQSI7Z29vZy5kb20uVGFnTmFtZS5BUlRJQ0xFPSJBUlRJQ0xFIjtnb29nLmRvbS5UYWdOYW1lLkFTSURFPSJBU0lERSI7Z29vZy5kb20uVGFnTmFtZS5BVURJTz0iQVVESU8iO2dvb2cuZG9tLlRhZ05hbWUuQj0iQiI7Z29vZy5kb20uVGFnTmFtZS5CQVNFPSJCQVNFIjtnb29nLmRvbS5UYWdOYW1lLkJBU0VGT05UPSJCQVNFRk9OVCI7Z29vZy5kb20uVGFnTmFtZS5CREk9IkJESSI7Z29vZy5kb20uVGFnTmFtZS5CRE89IkJETyI7Cmdvb2cuZG9tLlRhZ05hbWUuQklHPSJCSUciO2dvb2cuZG9tLlRhZ05hbWUuQkxPQ0tRVU9URT0iQkxPQ0tRVU9URSI7Z29vZy5kb20uVGFnTmFtZS5CT0RZPSJCT0RZIjtnb29nLmRvbS5UYWdOYW1lLkJSPSJCUiI7Z29vZy5kb20uVGFnTmFtZS5CVVRUT049IkJVVFRPTiI7Z29vZy5kb20uVGFnTmFtZS5DQU5WQVM9IkNBTlZBUyI7Z29vZy5kb20uVGFnTmFtZS5DQVBUSU9OPSJDQVBUSU9OIjtnb29nLmRvbS5UYWdOYW1lLkNFTlRFUj0iQ0VOVEVSIjtnb29nLmRvbS5UYWdOYW1lLkNJVEU9IkNJVEUiO2dvb2cuZG9tLlRhZ05hbWUuQ09ERT0iQ09ERSI7Z29vZy5kb20uVGFnTmFtZS5DT0w9IkNPTCI7Z29vZy5kb20uVGFnTmFtZS5DT0xHUk9VUD0iQ09MR1JPVVAiO2dvb2cuZG9tLlRhZ05hbWUuQ09NTUFORD0iQ09NTUFORCI7Z29vZy5kb20uVGFnTmFtZS5EQVRBPSJEQVRBIjtnb29nLmRvbS5UYWdOYW1lLkRBVEFMSVNUPSJEQVRBTElTVCI7Z29vZy5kb20uVGFnTmFtZS5ERD0iREQiOwpnb29nLmRvbS5UYWdOYW1lLkRFTD0iREVMIjtnb29nLmRvbS5UYWdOYW1lLkRFVEFJTFM9IkRFVEFJTFMiO2dvb2cuZG9tLlRhZ05hbWUuREZOPSJERk4iO2dvb2cuZG9tLlRhZ05hbWUuRElBTE9HPSJESUFMT0ciO2dvb2cuZG9tLlRhZ05hbWUuRElSPSJESVIiO2dvb2cuZG9tLlRhZ05hbWUuRElWPSJESVYiO2dvb2cuZG9tLlRhZ05hbWUuREw9IkRMIjtnb29nLmRvbS5UYWdOYW1lLkRUPSJEVCI7Z29vZy5kb20uVGFnTmFtZS5FTT0iRU0iO2dvb2cuZG9tLlRhZ05hbWUuRU1CRUQ9IkVNQkVEIjtnb29nLmRvbS5UYWdOYW1lLkZJRUxEU0VUPSJGSUVMRFNFVCI7Z29vZy5kb20uVGFnTmFtZS5GSUdDQVBUSU9OPSJGSUdDQVBUSU9OIjtnb29nLmRvbS5UYWdOYW1lLkZJR1VSRT0iRklHVVJFIjtnb29nLmRvbS5UYWdOYW1lLkZPTlQ9IkZPTlQiO2dvb2cuZG9tLlRhZ05hbWUuRk9PVEVSPSJGT09URVIiO2dvb2cuZG9tLlRhZ05hbWUuRk9STT0iRk9STSI7Cmdvb2cuZG9tLlRhZ05hbWUuRlJBTUU9IkZSQU1FIjtnb29nLmRvbS5UYWdOYW1lLkZSQU1FU0VUPSJGUkFNRVNFVCI7Z29vZy5kb20uVGFnTmFtZS5IMT0iSDEiO2dvb2cuZG9tLlRhZ05hbWUuSDI9IkgyIjtnb29nLmRvbS5UYWdOYW1lLkgzPSJIMyI7Z29vZy5kb20uVGFnTmFtZS5IND0iSDQiO2dvb2cuZG9tLlRhZ05hbWUuSDU9Ikg1Ijtnb29nLmRvbS5UYWdOYW1lLkg2PSJINiI7Z29vZy5kb20uVGFnTmFtZS5IRUFEPSJIRUFEIjtnb29nLmRvbS5UYWdOYW1lLkhFQURFUj0iSEVBREVSIjtnb29nLmRvbS5UYWdOYW1lLkhHUk9VUD0iSEdST1VQIjtnb29nLmRvbS5UYWdOYW1lLkhSPSJIUiI7Z29vZy5kb20uVGFnTmFtZS5IVE1MPSJIVE1MIjtnb29nLmRvbS5UYWdOYW1lLkk9IkkiO2dvb2cuZG9tLlRhZ05hbWUuSUZSQU1FPSJJRlJBTUUiO2dvb2cuZG9tLlRhZ05hbWUuSU1HPSJJTUciO2dvb2cuZG9tLlRhZ05hbWUuSU5QVVQ9IklOUFVUIjsKZ29vZy5kb20uVGFnTmFtZS5JTlM9IklOUyI7Z29vZy5kb20uVGFnTmFtZS5JU0lOREVYPSJJU0lOREVYIjtnb29nLmRvbS5UYWdOYW1lLktCRD0iS0JEIjtnb29nLmRvbS5UYWdOYW1lLktFWUdFTj0iS0VZR0VOIjtnb29nLmRvbS5UYWdOYW1lLkxBQkVMPSJMQUJFTCI7Z29vZy5kb20uVGFnTmFtZS5MRUdFTkQ9IkxFR0VORCI7Z29vZy5kb20uVGFnTmFtZS5MST0iTEkiO2dvb2cuZG9tLlRhZ05hbWUuTElOSz0iTElOSyI7Z29vZy5kb20uVGFnTmFtZS5NQUlOPSJNQUlOIjtnb29nLmRvbS5UYWdOYW1lLk1BUD0iTUFQIjtnb29nLmRvbS5UYWdOYW1lLk1BUks9Ik1BUksiO2dvb2cuZG9tLlRhZ05hbWUuTUFUSD0iTUFUSCI7Z29vZy5kb20uVGFnTmFtZS5NRU5VPSJNRU5VIjtnb29nLmRvbS5UYWdOYW1lLk1FTlVJVEVNPSJNRU5VSVRFTSI7Z29vZy5kb20uVGFnTmFtZS5NRVRBPSJNRVRBIjtnb29nLmRvbS5UYWdOYW1lLk1FVEVSPSJNRVRFUiI7Cmdvb2cuZG9tLlRhZ05hbWUuTkFWPSJOQVYiO2dvb2cuZG9tLlRhZ05hbWUuTk9GUkFNRVM9Ik5PRlJBTUVTIjtnb29nLmRvbS5UYWdOYW1lLk5PU0NSSVBUPSJOT1NDUklQVCI7Z29vZy5kb20uVGFnTmFtZS5PQkpFQ1Q9Ik9CSkVDVCI7Z29vZy5kb20uVGFnTmFtZS5PTD0iT0wiO2dvb2cuZG9tLlRhZ05hbWUuT1BUR1JPVVA9Ik9QVEdST1VQIjtnb29nLmRvbS5UYWdOYW1lLk9QVElPTj0iT1BUSU9OIjtnb29nLmRvbS5UYWdOYW1lLk9VVFBVVD0iT1VUUFVUIjtnb29nLmRvbS5UYWdOYW1lLlA9IlAiO2dvb2cuZG9tLlRhZ05hbWUuUEFSQU09IlBBUkFNIjtnb29nLmRvbS5UYWdOYW1lLlBJQ1RVUkU9IlBJQ1RVUkUiO2dvb2cuZG9tLlRhZ05hbWUuUFJFPSJQUkUiO2dvb2cuZG9tLlRhZ05hbWUuUFJPR1JFU1M9IlBST0dSRVNTIjtnb29nLmRvbS5UYWdOYW1lLlE9IlEiO2dvb2cuZG9tLlRhZ05hbWUuUlA9IlJQIjtnb29nLmRvbS5UYWdOYW1lLlJUPSJSVCI7Cmdvb2cuZG9tLlRhZ05hbWUuUlRDPSJSVEMiO2dvb2cuZG9tLlRhZ05hbWUuUlVCWT0iUlVCWSI7Z29vZy5kb20uVGFnTmFtZS5TPSJTIjtnb29nLmRvbS5UYWdOYW1lLlNBTVA9IlNBTVAiO2dvb2cuZG9tLlRhZ05hbWUuU0NSSVBUPSJTQ1JJUFQiO2dvb2cuZG9tLlRhZ05hbWUuU0VDVElPTj0iU0VDVElPTiI7Z29vZy5kb20uVGFnTmFtZS5TRUxFQ1Q9IlNFTEVDVCI7Z29vZy5kb20uVGFnTmFtZS5TTUFMTD0iU01BTEwiO2dvb2cuZG9tLlRhZ05hbWUuU09VUkNFPSJTT1VSQ0UiO2dvb2cuZG9tLlRhZ05hbWUuU1BBTj0iU1BBTiI7Z29vZy5kb20uVGFnTmFtZS5TVFJJS0U9IlNUUklLRSI7Z29vZy5kb20uVGFnTmFtZS5TVFJPTkc9IlNUUk9ORyI7Z29vZy5kb20uVGFnTmFtZS5TVFlMRT0iU1RZTEUiO2dvb2cuZG9tLlRhZ05hbWUuU1VCPSJTVUIiO2dvb2cuZG9tLlRhZ05hbWUuU1VNTUFSWT0iU1VNTUFSWSI7Z29vZy5kb20uVGFnTmFtZS5TVVA9IlNVUCI7Cmdvb2cuZG9tLlRhZ05hbWUuU1ZHPSJTVkciO2dvb2cuZG9tLlRhZ05hbWUuVEFCTEU9IlRBQkxFIjtnb29nLmRvbS5UYWdOYW1lLlRCT0RZPSJUQk9EWSI7Z29vZy5kb20uVGFnTmFtZS5URD0iVEQiO2dvb2cuZG9tLlRhZ05hbWUuVEVNUExBVEU9IlRFTVBMQVRFIjtnb29nLmRvbS5UYWdOYW1lLlRFWFRBUkVBPSJURVhUQVJFQSI7Z29vZy5kb20uVGFnTmFtZS5URk9PVD0iVEZPT1QiO2dvb2cuZG9tLlRhZ05hbWUuVEg9IlRIIjtnb29nLmRvbS5UYWdOYW1lLlRIRUFEPSJUSEVBRCI7Z29vZy5kb20uVGFnTmFtZS5USU1FPSJUSU1FIjtnb29nLmRvbS5UYWdOYW1lLlRJVExFPSJUSVRMRSI7Z29vZy5kb20uVGFnTmFtZS5UUj0iVFIiO2dvb2cuZG9tLlRhZ05hbWUuVFJBQ0s9IlRSQUNLIjtnb29nLmRvbS5UYWdOYW1lLlRUPSJUVCI7Z29vZy5kb20uVGFnTmFtZS5VPSJVIjtnb29nLmRvbS5UYWdOYW1lLlVMPSJVTCI7Z29vZy5kb20uVGFnTmFtZS5WQVI9IlZBUiI7Cmdvb2cuZG9tLlRhZ05hbWUuVklERU89IlZJREVPIjtnb29nLmRvbS5UYWdOYW1lLldCUj0iV0JSIjtnb29nLmxhYnM9e307Z29vZy5sYWJzLnVzZXJBZ2VudD17fTtjb25zdCBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudF9VU0VfQ0xJRU5UX0hJTlRTX09WRVJSSURFPSIiLG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50X1VTRV9DTElFTlRfSElOVFM9ITE7bGV0IG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50X2ZvcmNlQ2xpZW50SGludHNJblRlc3RzPSExO2dvb2cubGFicy51c2VyQWdlbnQuc2V0VXNlQ2xpZW50SGludHNGb3JUZXN0aW5nPWE9Pnttb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudF9mb3JjZUNsaWVudEhpbnRzSW5UZXN0cz1hfTsKY29uc3QgbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnRfdXNlQ2xpZW50SGludHNSdW50aW1lT3ZlcnJpZGU9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnRfVVNFX0NMSUVOVF9ISU5UU19PVkVSUklERT8hIWdvb2cuZ2V0T2JqZWN0QnlOYW1lKG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50X1VTRV9DTElFTlRfSElOVFNfT1ZFUlJJREUpOiExO2dvb2cubGFicy51c2VyQWdlbnQudXNlQ2xpZW50SGludHM9KCk9Pm1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50X1VTRV9DTElFTlRfSElOVFN8fG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50X3VzZUNsaWVudEhpbnRzUnVudGltZU92ZXJyaWRlfHxtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudF9mb3JjZUNsaWVudEhpbnRzSW5UZXN0cztnb29nLmxhYnMudXNlckFnZW50LnV0aWw9e307Y29uc3QgbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9BU1NVTUVfQ0xJRU5UX0hJTlRTX1NVUFBPUlQ9ITE7ZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9nZXROYXRpdmVVc2VyQWdlbnRTdHJpbmcoKXt2YXIgYT1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX2dldE5hdmlnYXRvcigpO3JldHVybiBhJiYoYT1hLnVzZXJBZ2VudCk/YToiIn1mdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX2dldE5hdGl2ZVVzZXJBZ2VudERhdGEoKXtjb25zdCBhPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0TmF2aWdhdG9yKCk7cmV0dXJuIGE/YS51c2VyQWdlbnREYXRhfHxudWxsOm51bGx9CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0TmF2aWdhdG9yKCl7cmV0dXJuIGdvb2cuZ2xvYmFsLm5hdmlnYXRvcn1sZXQgbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF91c2VyQWdlbnRJbnRlcm5hbD1udWxsLG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfdXNlckFnZW50RGF0YUludGVybmFsPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0TmF0aXZlVXNlckFnZW50RGF0YSgpOwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX3NldFVzZXJBZ2VudChhKXttb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX3VzZXJBZ2VudEludGVybmFsPSJzdHJpbmciPT09dHlwZW9mIGE/YTptb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX2dldE5hdGl2ZVVzZXJBZ2VudFN0cmluZygpfWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0VXNlckFnZW50KCl7cmV0dXJuIG51bGw9PW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfdXNlckFnZW50SW50ZXJuYWw/bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9nZXROYXRpdmVVc2VyQWdlbnRTdHJpbmcoKTptb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX3VzZXJBZ2VudEludGVybmFsfQpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX3NldFVzZXJBZ2VudERhdGEoYSl7bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF91c2VyQWdlbnREYXRhSW50ZXJuYWw9YX1mdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX3Jlc2V0VXNlckFnZW50RGF0YSgpe21vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfdXNlckFnZW50RGF0YUludGVybmFsPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0TmF0aXZlVXNlckFnZW50RGF0YSgpfWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0VXNlckFnZW50RGF0YSgpe3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX3VzZXJBZ2VudERhdGFJbnRlcm5hbH0KZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9tYXRjaFVzZXJBZ2VudERhdGFCcmFuZChhKXtpZighKDAsZ29vZy5sYWJzLnVzZXJBZ2VudC51c2VDbGllbnRIaW50cykoKSlyZXR1cm4hMTtjb25zdCBiPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0VXNlckFnZW50RGF0YSgpO3JldHVybiBiP2IuYnJhbmRzLnNvbWUoKHticmFuZDpjfSk9PmMmJigwLGdvb2cuc3RyaW5nLmludGVybmFsLmNvbnRhaW5zKShjLGEpKTohMX1mdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX21hdGNoVXNlckFnZW50KGEpe2NvbnN0IGI9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9nZXRVc2VyQWdlbnQoKTtyZXR1cm4oMCxnb29nLnN0cmluZy5pbnRlcm5hbC5jb250YWlucykoYixhKX0KZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9tYXRjaFVzZXJBZ2VudElnbm9yZUNhc2UoYSl7Y29uc3QgYj1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX2dldFVzZXJBZ2VudCgpO3JldHVybigwLGdvb2cuc3RyaW5nLmludGVybmFsLmNhc2VJbnNlbnNpdGl2ZUNvbnRhaW5zKShiLGEpfWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZXh0cmFjdFZlcnNpb25UdXBsZXMoYSl7Y29uc3QgYj1SZWdFeHAoIihbQS1aXVtcXHcgXSspLyhbXlxcc10rKVxccyooPzpcXCgoLio/KVxcKSk/IiwiZyIpLGM9W107bGV0IGQ7Zm9yKDtkPWIuZXhlYyhhKTspYy5wdXNoKFtkWzFdLGRbMl0sZFszXXx8dm9pZCAwXSk7cmV0dXJuIGN9Z29vZy5sYWJzLnVzZXJBZ2VudC51dGlsLkFTU1VNRV9DTElFTlRfSElOVFNfU1VQUE9SVD1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX0FTU1VNRV9DTElFTlRfSElOVFNfU1VQUE9SVDsKZ29vZy5sYWJzLnVzZXJBZ2VudC51dGlsLmV4dHJhY3RWZXJzaW9uVHVwbGVzPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZXh0cmFjdFZlcnNpb25UdXBsZXM7Z29vZy5sYWJzLnVzZXJBZ2VudC51dGlsLmdldE5hdGl2ZVVzZXJBZ2VudFN0cmluZz1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX2dldE5hdGl2ZVVzZXJBZ2VudFN0cmluZztnb29nLmxhYnMudXNlckFnZW50LnV0aWwuZ2V0VXNlckFnZW50PW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0VXNlckFnZW50O2dvb2cubGFicy51c2VyQWdlbnQudXRpbC5nZXRVc2VyQWdlbnREYXRhPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0VXNlckFnZW50RGF0YTtnb29nLmxhYnMudXNlckFnZW50LnV0aWwubWF0Y2hVc2VyQWdlbnQ9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9tYXRjaFVzZXJBZ2VudDsKZ29vZy5sYWJzLnVzZXJBZ2VudC51dGlsLm1hdGNoVXNlckFnZW50RGF0YUJyYW5kPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfbWF0Y2hVc2VyQWdlbnREYXRhQnJhbmQ7Z29vZy5sYWJzLnVzZXJBZ2VudC51dGlsLm1hdGNoVXNlckFnZW50SWdub3JlQ2FzZT1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX21hdGNoVXNlckFnZW50SWdub3JlQ2FzZTtnb29nLmxhYnMudXNlckFnZW50LnV0aWwucmVzZXRVc2VyQWdlbnREYXRhPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfcmVzZXRVc2VyQWdlbnREYXRhO2dvb2cubGFicy51c2VyQWdlbnQudXRpbC5zZXRVc2VyQWdlbnQ9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9zZXRVc2VyQWdlbnQ7Z29vZy5sYWJzLnVzZXJBZ2VudC51dGlsLnNldFVzZXJBZ2VudERhdGE9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9zZXRVc2VyQWdlbnREYXRhO3ZhciBtb2R1bGUkZXhwb3J0cyRnb29nJGxhYnMkdXNlckFnZW50JGhpZ2hFbnRyb3B5JGhpZ2hFbnRyb3B5VmFsdWU9e0FzeW5jVmFsdWU6Y2xhc3N7Z2V0SWZMb2FkZWQoKXt9bG9hZCgpe319LEhpZ2hFbnRyb3B5VmFsdWU6Y2xhc3N7Y29uc3RydWN0b3IoYSl7dGhpcy5rZXlfPWE7dGhpcy5wcm9taXNlXz10aGlzLnZhbHVlXz12b2lkIDA7dGhpcy5wZW5kaW5nXz0hMX1nZXRJZkxvYWRlZCgpe2lmKG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0VXNlckFnZW50RGF0YSgpKXJldHVybiB0aGlzLnZhbHVlX31hc3luYyBsb2FkKCl7Y29uc3QgYT1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX2dldFVzZXJBZ2VudERhdGEoKTtpZihhKXJldHVybiB0aGlzLnByb21pc2VffHwodGhpcy5wZW5kaW5nXz0hMCx0aGlzLnByb21pc2VfPShhc3luYygpPT57dHJ5e3JldHVybiB0aGlzLnZhbHVlXz0oYXdhaXQgYS5nZXRIaWdoRW50cm9weVZhbHVlcyhbdGhpcy5rZXlfXSkpW3RoaXMua2V5X119ZmluYWxseXt0aGlzLnBlbmRpbmdfPQohMX19KSgpKSxhd2FpdCB0aGlzLnByb21pc2VffXJlc2V0Rm9yVGVzdGluZygpe2lmKHRoaXMucGVuZGluZ18pdGhyb3cgRXJyb3IoIlVuc2FmZSBjYWxsIHRvIHJlc2V0Rm9yVGVzdGluZyIpO3RoaXMudmFsdWVfPXRoaXMucHJvbWlzZV89dm9pZCAwO3RoaXMucGVuZGluZ189ITF9fSxWZXJzaW9uOmNsYXNze2NvbnN0cnVjdG9yKGEpe3RoaXMudmVyc2lvblN0cmluZ189YX10b1ZlcnNpb25TdHJpbmdGb3JMb2dnaW5nKCl7cmV0dXJuIHRoaXMudmVyc2lvblN0cmluZ199aXNBdExlYXN0KGEpe3JldHVybiAwPD0oMCxnb29nLnN0cmluZy5pbnRlcm5hbC5jb21wYXJlVmVyc2lvbnMpKHRoaXMudmVyc2lvblN0cmluZ18sYSl9fX07dmFyIG1vZHVsZSRleHBvcnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkaGlnaEVudHJvcHkkaGlnaEVudHJvcHlEYXRhPXt9O21vZHVsZSRleHBvcnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkaGlnaEVudHJvcHkkaGlnaEVudHJvcHlEYXRhLmZ1bGxWZXJzaW9uTGlzdD1uZXcgbW9kdWxlJGV4cG9ydHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRoaWdoRW50cm9weSRoaWdoRW50cm9weVZhbHVlLkhpZ2hFbnRyb3B5VmFsdWUoImZ1bGxWZXJzaW9uTGlzdCIpO21vZHVsZSRleHBvcnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkaGlnaEVudHJvcHkkaGlnaEVudHJvcHlEYXRhLnBsYXRmb3JtVmVyc2lvbj1uZXcgbW9kdWxlJGV4cG9ydHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRoaWdoRW50cm9weSRoaWdoRW50cm9weVZhbHVlLkhpZ2hFbnRyb3B5VmFsdWUoInBsYXRmb3JtVmVyc2lvbiIpO2dvb2cubGFicy51c2VyQWdlbnQuYnJvd3Nlcj17fTtjb25zdCBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX0JyYW5kPXtBTkRST0lEX0JST1dTRVI6IkFuZHJvaWQgQnJvd3NlciIsQ0hST01JVU06IkNocm9taXVtIixFREdFOiJNaWNyb3NvZnQgRWRnZSIsRklSRUZPWDoiRmlyZWZveCIsSUU6IkludGVybmV0IEV4cGxvcmVyIixPUEVSQToiT3BlcmEiLFNBRkFSSToiU2FmYXJpIixTSUxLOiJTaWxrIn07Z29vZy5sYWJzLnVzZXJBZ2VudC5icm93c2VyLkJyYW5kPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfQnJhbmQ7CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfdXNlVXNlckFnZW50RGF0YUJyYW5kKGE9ITEpe2lmKG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfQVNTVU1FX0NMSUVOVF9ISU5UU19TVVBQT1JUKXJldHVybiEwO2lmKCFhJiYhKDAsZ29vZy5sYWJzLnVzZXJBZ2VudC51c2VDbGllbnRIaW50cykoKSlyZXR1cm4hMTthPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0VXNlckFnZW50RGF0YSgpO3JldHVybiEhYSYmMDxhLmJyYW5kcy5sZW5ndGh9CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfaGFzRnVsbFZlcnNpb25MaXN0KCl7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfaXNBdExlYXN0KG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfQnJhbmQuQ0hST01JVU0sOTgpfWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hPcGVyYSgpe3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX3VzZVVzZXJBZ2VudERhdGFCcmFuZCgpPyExOm1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfbWF0Y2hVc2VyQWdlbnQoIk9wZXJhIil9CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hJRSgpe3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX3VzZVVzZXJBZ2VudERhdGFCcmFuZCgpPyExOm1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfbWF0Y2hVc2VyQWdlbnQoIlRyaWRlbnQiKXx8bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9tYXRjaFVzZXJBZ2VudCgiTVNJRSIpfWZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hFZGdlSHRtbCgpe3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX3VzZVVzZXJBZ2VudERhdGFCcmFuZCgpPyExOm1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfbWF0Y2hVc2VyQWdlbnQoIkVkZ2UiKX0KZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaEVkZ2VDaHJvbWl1bSgpe3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX3VzZVVzZXJBZ2VudERhdGFCcmFuZCgpP21vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfbWF0Y2hVc2VyQWdlbnREYXRhQnJhbmQobW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9CcmFuZC5FREdFKTptb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX21hdGNoVXNlckFnZW50KCJFZGcvIil9CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hPcGVyYUNocm9taXVtKCl7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfdXNlVXNlckFnZW50RGF0YUJyYW5kKCk/bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9tYXRjaFVzZXJBZ2VudERhdGFCcmFuZChtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX0JyYW5kLk9QRVJBKTptb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX21hdGNoVXNlckFnZW50KCJPUFIiKX0KZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaEZpcmVmb3goKXtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9tYXRjaFVzZXJBZ2VudCgiRmlyZWZveCIpfHxtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX21hdGNoVXNlckFnZW50KCJGeGlPUyIpfQpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoU2FmYXJpKCl7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfbWF0Y2hVc2VyQWdlbnQoIlNhZmFyaSIpJiYhKG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hDaHJvbWUoKXx8bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaENvYXN0KCl8fG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hPcGVyYSgpfHxtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoRWRnZUh0bWwoKXx8bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaEVkZ2VDaHJvbWl1bSgpfHxtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoT3BlcmFDaHJvbWl1bSgpfHwKbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaEZpcmVmb3goKXx8bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9pc1NpbGsoKXx8bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9tYXRjaFVzZXJBZ2VudCgiQW5kcm9pZCIpKX1mdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoQ29hc3QoKXtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl91c2VVc2VyQWdlbnREYXRhQnJhbmQoKT8hMTptb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX21hdGNoVXNlckFnZW50KCJDb2FzdCIpfQpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoSW9zV2Vidmlldygpe3JldHVybihtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX21hdGNoVXNlckFnZW50KCJpUGFkIil8fG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfbWF0Y2hVc2VyQWdlbnQoImlQaG9uZSIpKSYmIW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hTYWZhcmkoKSYmIW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hDaHJvbWUoKSYmIW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hDb2FzdCgpJiYhbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaEZpcmVmb3goKSYmbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9tYXRjaFVzZXJBZ2VudCgiQXBwbGVXZWJLaXQiKX0KZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaENocm9tZSgpe3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX3VzZVVzZXJBZ2VudERhdGFCcmFuZCgpP21vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfbWF0Y2hVc2VyQWdlbnREYXRhQnJhbmQobW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9CcmFuZC5DSFJPTUlVTSk6KG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfbWF0Y2hVc2VyQWdlbnQoIkNocm9tZSIpfHxtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX21hdGNoVXNlckFnZW50KCJDcmlPUyIpKSYmIW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hFZGdlSHRtbCgpfHxtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2lzU2lsaygpfQpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoQW5kcm9pZEJyb3dzZXIoKXtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9tYXRjaFVzZXJBZ2VudCgiQW5kcm9pZCIpJiYhKG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hDaHJvbWUoKXx8bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaEZpcmVmb3goKXx8bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaE9wZXJhKCl8fG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfaXNTaWxrKCkpfWNvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfaXNPcGVyYT1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoT3BlcmE7Cmdvb2cubGFicy51c2VyQWdlbnQuYnJvd3Nlci5pc09wZXJhPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hPcGVyYTtjb25zdCBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2lzSUU9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaElFO2dvb2cubGFicy51c2VyQWdlbnQuYnJvd3Nlci5pc0lFPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hJRTtjb25zdCBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2lzRWRnZT1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoRWRnZUh0bWw7Z29vZy5sYWJzLnVzZXJBZ2VudC5icm93c2VyLmlzRWRnZT1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoRWRnZUh0bWw7CmNvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfaXNFZGdlQ2hyb21pdW09bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaEVkZ2VDaHJvbWl1bTtnb29nLmxhYnMudXNlckFnZW50LmJyb3dzZXIuaXNFZGdlQ2hyb21pdW09bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaEVkZ2VDaHJvbWl1bTtjb25zdCBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2lzT3BlcmFDaHJvbWl1bT1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoT3BlcmFDaHJvbWl1bTtnb29nLmxhYnMudXNlckFnZW50LmJyb3dzZXIuaXNPcGVyYUNocm9taXVtPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hPcGVyYUNocm9taXVtOwpjb25zdCBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2lzRmlyZWZveD1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoRmlyZWZveDtnb29nLmxhYnMudXNlckFnZW50LmJyb3dzZXIuaXNGaXJlZm94PW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hGaXJlZm94O2NvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfaXNTYWZhcmk9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaFNhZmFyaTtnb29nLmxhYnMudXNlckFnZW50LmJyb3dzZXIuaXNTYWZhcmk9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaFNhZmFyaTtjb25zdCBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2lzQ29hc3Q9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaENvYXN0Owpnb29nLmxhYnMudXNlckFnZW50LmJyb3dzZXIuaXNDb2FzdD1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoQ29hc3Q7Y29uc3QgbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9pc0lvc1dlYnZpZXc9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaElvc1dlYnZpZXc7Z29vZy5sYWJzLnVzZXJBZ2VudC5icm93c2VyLmlzSW9zV2Vidmlldz1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoSW9zV2Vidmlldztjb25zdCBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2lzQ2hyb21lPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hDaHJvbWU7Z29vZy5sYWJzLnVzZXJBZ2VudC5icm93c2VyLmlzQ2hyb21lPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hDaHJvbWU7CmNvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfaXNBbmRyb2lkQnJvd3Nlcj1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoQW5kcm9pZEJyb3dzZXI7Z29vZy5sYWJzLnVzZXJBZ2VudC5icm93c2VyLmlzQW5kcm9pZEJyb3dzZXI9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaEFuZHJvaWRCcm93c2VyO2Z1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfaXNTaWxrKCl7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfbWF0Y2hVc2VyQWdlbnQoIlNpbGsiKX1nb29nLmxhYnMudXNlckFnZW50LmJyb3dzZXIuaXNTaWxrPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfaXNTaWxrOwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2NyZWF0ZVZlcnNpb25NYXAoYSl7Y29uc3QgYj17fTthLmZvckVhY2goYz0+e2JbY1swXV09Y1sxXX0pO3JldHVybiBjPT5iW2MuZmluZChkPT5kIGluIGIpXXx8IiJ9CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfZ2V0VmVyc2lvbigpe3ZhciBhPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0VXNlckFnZW50KCk7aWYobW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaElFKCkpcmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfZ2V0SUVWZXJzaW9uKGEpO2E9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9leHRyYWN0VmVyc2lvblR1cGxlcyhhKTtjb25zdCBiPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfY3JlYXRlVmVyc2lvbk1hcChhKTtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaE9wZXJhKCk/YihbIlZlcnNpb24iLCJPcGVyYSJdKTptb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoRWRnZUh0bWwoKT8KYihbIkVkZ2UiXSk6bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaEVkZ2VDaHJvbWl1bSgpP2IoWyJFZGciXSk6bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9pc1NpbGsoKT9iKFsiU2lsayJdKTptb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoQ2hyb21lKCk/YihbIkNocm9tZSIsIkNyaU9TIiwiSGVhZGxlc3NDaHJvbWUiXSk6KGE9YVsyXSkmJmFbMV18fCIifWdvb2cubGFicy51c2VyQWdlbnQuYnJvd3Nlci5nZXRWZXJzaW9uPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfZ2V0VmVyc2lvbjsKZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9pc1ZlcnNpb25PckhpZ2hlcihhKXtyZXR1cm4gMDw9KDAsZ29vZy5zdHJpbmcuaW50ZXJuYWwuY29tcGFyZVZlcnNpb25zKShtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2dldFZlcnNpb24oKSxhKX1nb29nLmxhYnMudXNlckFnZW50LmJyb3dzZXIuaXNWZXJzaW9uT3JIaWdoZXI9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9pc1ZlcnNpb25PckhpZ2hlcjsKZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9nZXRJRVZlcnNpb24oYSl7dmFyIGI9L3J2OiAqKFtcZFwuXSopLy5leGVjKGEpO2lmKGImJmJbMV0pcmV0dXJuIGJbMV07Yj0iIjtjb25zdCBjPS9NU0lFICsoW1xkXC5dKykvLmV4ZWMoYSk7aWYoYyYmY1sxXSlpZihhPS9UcmlkZW50XC8oXGQuXGQpLy5leGVjKGEpLCI3LjAiPT1jWzFdKWlmKGEmJmFbMV0pc3dpdGNoKGFbMV0pe2Nhc2UgIjQuMCI6Yj0iOC4wIjticmVhaztjYXNlICI1LjAiOmI9IjkuMCI7YnJlYWs7Y2FzZSAiNi4wIjpiPSIxMC4wIjticmVhaztjYXNlICI3LjAiOmI9IjExLjAifWVsc2UgYj0iNy4wIjtlbHNlIGI9Y1sxXTtyZXR1cm4gYn0KZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9nZXRGdWxsVmVyc2lvbkZyb21Vc2VyQWdlbnRTdHJpbmcoYSl7dmFyIGI9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkdXRpbF9nZXRVc2VyQWdlbnQoKTtpZihhPT09bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9CcmFuZC5JRSlyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaElFKCk/bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9nZXRJRVZlcnNpb24oYik6IiI7Yj1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX2V4dHJhY3RWZXJzaW9uVHVwbGVzKGIpO2NvbnN0IGM9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9jcmVhdGVWZXJzaW9uTWFwKGIpO3N3aXRjaChhKXtjYXNlIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfQnJhbmQuT1BFUkE6aWYobW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaE9wZXJhKCkpcmV0dXJuIGMoWyJWZXJzaW9uIiwKIk9wZXJhIl0pO2lmKG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hPcGVyYUNocm9taXVtKCkpcmV0dXJuIGMoWyJPUFIiXSk7YnJlYWs7Y2FzZSBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX0JyYW5kLkVER0U6aWYobW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaEVkZ2VIdG1sKCkpcmV0dXJuIGMoWyJFZGdlIl0pO2lmKG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hFZGdlQ2hyb21pdW0oKSlyZXR1cm4gYyhbIkVkZyJdKTticmVhaztjYXNlIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfQnJhbmQuQ0hST01JVU06aWYobW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaENocm9tZSgpKXJldHVybiBjKFsiQ2hyb21lIiwiQ3JpT1MiLCJIZWFkbGVzc0Nocm9tZSJdKX1yZXR1cm4gYT09PQptb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX0JyYW5kLkZJUkVGT1gmJm1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hGaXJlZm94KCl8fGE9PT1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX0JyYW5kLlNBRkFSSSYmbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9tYXRjaFNhZmFyaSgpfHxhPT09bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9CcmFuZC5BTkRST0lEX0JST1dTRVImJm1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hBbmRyb2lkQnJvd3NlcigpfHxhPT09bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9CcmFuZC5TSUxLJiZtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2lzU2lsaygpPyhhPWJbMl0pJiYKYVsxXXx8IiI6IiJ9CmZ1bmN0aW9uIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfdmVyc2lvbk9mXyhhKXtpZihtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX3VzZVVzZXJBZ2VudERhdGFCcmFuZCgpJiZhIT09bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9CcmFuZC5TSUxLKXt2YXIgYj1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX2dldFVzZXJBZ2VudERhdGEoKS5icmFuZHMuZmluZCgoe2JyYW5kOmN9KT0+Yz09PWEpO2lmKCFifHwhYi52ZXJzaW9uKXJldHVybiBOYU47Yj1iLnZlcnNpb24uc3BsaXQoIi4iKX1lbHNle2I9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9nZXRGdWxsVmVyc2lvbkZyb21Vc2VyQWdlbnRTdHJpbmcoYSk7aWYoIiI9PT1iKXJldHVybiBOYU47Yj1iLnNwbGl0KCIuIil9cmV0dXJuIDA9PT1iLmxlbmd0aD9OYU46TnVtYmVyKGJbMF0pfQpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2lzQXRMZWFzdChhLGIpeygwLGdvb2cuYXNzZXJ0cy5hc3NlcnQpKE1hdGguZmxvb3IoYik9PT1iLCJNYWpvciB2ZXJzaW9uIG11c3QgYmUgYW4gaW50ZWdlciIpO3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX3ZlcnNpb25PZl8oYSk+PWJ9Z29vZy5sYWJzLnVzZXJBZ2VudC5icm93c2VyLmlzQXRMZWFzdD1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2lzQXRMZWFzdDsKZnVuY3Rpb24gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9pc0F0TW9zdChhLGIpeygwLGdvb2cuYXNzZXJ0cy5hc3NlcnQpKE1hdGguZmxvb3IoYik9PT1iLCJNYWpvciB2ZXJzaW9uIG11c3QgYmUgYW4gaW50ZWdlciIpO3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX3ZlcnNpb25PZl8oYSk8PWJ9Z29vZy5sYWJzLnVzZXJBZ2VudC5icm93c2VyLmlzQXRNb3N0PW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfaXNBdE1vc3Q7CmNsYXNzIG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfSGlnaEVudHJvcHlCcmFuZFZlcnNpb257Y29uc3RydWN0b3IoYSxiLGMpe3RoaXMuYnJhbmRfPWE7dGhpcy52ZXJzaW9uXz1uZXcgbW9kdWxlJGV4cG9ydHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRoaWdoRW50cm9weSRoaWdoRW50cm9weVZhbHVlLlZlcnNpb24oYyk7dGhpcy51c2VVYWNoXz1ifWdldElmTG9hZGVkKCl7aWYodGhpcy51c2VVYWNoXyl7dmFyIGE9bW9kdWxlJGV4cG9ydHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRoaWdoRW50cm9weSRoaWdoRW50cm9weURhdGEuZnVsbFZlcnNpb25MaXN0LmdldElmTG9hZGVkKCk7aWYodm9pZCAwIT09YSlyZXR1cm4gYT1hLmZpbmQoKHticmFuZDpifSk9PnRoaXMuYnJhbmRfPT09YiksKDAsZ29vZy5hc3NlcnRzLmFzc2VydEV4aXN0cykoYSksbmV3IG1vZHVsZSRleHBvcnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkaGlnaEVudHJvcHkkaGlnaEVudHJvcHlWYWx1ZS5WZXJzaW9uKGEudmVyc2lvbil9aWYobW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9wcmVVYWNoSGFzTG9hZGVkKXJldHVybiB0aGlzLnZlcnNpb25ffWFzeW5jIGxvYWQoKXtpZih0aGlzLnVzZVVhY2hfKXt2YXIgYT0KYXdhaXQgbW9kdWxlJGV4cG9ydHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRoaWdoRW50cm9weSRoaWdoRW50cm9weURhdGEuZnVsbFZlcnNpb25MaXN0LmxvYWQoKTtpZih2b2lkIDAhPT1hKXJldHVybiBhPWEuZmluZCgoe2JyYW5kOmJ9KT0+dGhpcy5icmFuZF89PT1iKSwoMCxnb29nLmFzc2VydHMuYXNzZXJ0RXhpc3RzKShhKSxuZXcgbW9kdWxlJGV4cG9ydHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRoaWdoRW50cm9weSRoaWdoRW50cm9weVZhbHVlLlZlcnNpb24oYS52ZXJzaW9uKX1lbHNlIGF3YWl0IDA7bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9wcmVVYWNoSGFzTG9hZGVkPSEwO3JldHVybiB0aGlzLnZlcnNpb25ffX1sZXQgbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9wcmVVYWNoSGFzTG9hZGVkPSExOwphc3luYyBmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2xvYWRGdWxsVmVyc2lvbnMoKXttb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX3VzZVVzZXJBZ2VudERhdGFCcmFuZCghMCkmJmF3YWl0IG1vZHVsZSRleHBvcnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkaGlnaEVudHJvcHkkaGlnaEVudHJvcHlEYXRhLmZ1bGxWZXJzaW9uTGlzdC5sb2FkKCk7bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9wcmVVYWNoSGFzTG9hZGVkPSEwfWdvb2cubGFicy51c2VyQWdlbnQuYnJvd3Nlci5sb2FkRnVsbFZlcnNpb25zPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbG9hZEZ1bGxWZXJzaW9uczsKZ29vZy5sYWJzLnVzZXJBZ2VudC5icm93c2VyLnJlc2V0Rm9yVGVzdGluZz0oKT0+e21vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfcHJlVWFjaEhhc0xvYWRlZD0hMTttb2R1bGUkZXhwb3J0cyRnb29nJGxhYnMkdXNlckFnZW50JGhpZ2hFbnRyb3B5JGhpZ2hFbnRyb3B5RGF0YS5mdWxsVmVyc2lvbkxpc3QucmVzZXRGb3JUZXN0aW5nKCl9OwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2Z1bGxWZXJzaW9uT2YoYSl7bGV0IGI9IiI7bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9oYXNGdWxsVmVyc2lvbkxpc3QoKXx8KGI9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9nZXRGdWxsVmVyc2lvbkZyb21Vc2VyQWdlbnRTdHJpbmcoYSkpO2NvbnN0IGM9YSE9PW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfQnJhbmQuU0lMSyYmbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl91c2VVc2VyQWdlbnREYXRhQnJhbmQoITApO2lmKGMpe2lmKCFtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCR1dGlsX2dldFVzZXJBZ2VudERhdGEoKS5icmFuZHMuZmluZCgoe2JyYW5kOmR9KT0+ZD09PWEpKXJldHVybn1lbHNlIGlmKCIiPT09YilyZXR1cm47cmV0dXJuIG5ldyBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX0hpZ2hFbnRyb3B5QnJhbmRWZXJzaW9uKGEsCmMsYil9Z29vZy5sYWJzLnVzZXJBZ2VudC5icm93c2VyLmZ1bGxWZXJzaW9uT2Y9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9mdWxsVmVyc2lvbk9mOwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2dldFZlcnNpb25TdHJpbmdGb3JMb2dnaW5nKGEpe2lmKG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfdXNlVXNlckFnZW50RGF0YUJyYW5kKCEwKSl7dmFyIGI9bW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9mdWxsVmVyc2lvbk9mKGEpO2lmKGIpe2lmKGI9Yi5nZXRJZkxvYWRlZCgpKXJldHVybiBiLnRvVmVyc2lvblN0cmluZ0ZvckxvZ2dpbmcoKTtiPW1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JHV0aWxfZ2V0VXNlckFnZW50RGF0YSgpLmJyYW5kcy5maW5kKCh7YnJhbmQ6Y30pPT5jPT09YSk7KDAsZ29vZy5hc3NlcnRzLmFzc2VydEV4aXN0cykoYik7cmV0dXJuIGIudmVyc2lvbn1yZXR1cm4iIn1yZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckbGFicyR1c2VyQWdlbnQkYnJvd3Nlcl9nZXRGdWxsVmVyc2lvbkZyb21Vc2VyQWdlbnRTdHJpbmcoYSl9Cmdvb2cubGFicy51c2VyQWdlbnQuYnJvd3Nlci5nZXRWZXJzaW9uU3RyaW5nRm9yTG9nZ2luZz1tb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX2dldFZlcnNpb25TdHJpbmdGb3JMb2dnaW5nO2dvb2cuZG9tLnRhZ3M9e307Z29vZy5kb20udGFncy5WT0lEX1RBR1NfPXthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGNvbW1hbmQ6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH07Z29vZy5kb20udGFncy5pc1ZvaWRUYWc9ZnVuY3Rpb24oYSl7cmV0dXJuITA9PT1nb29nLmRvbS50YWdzLlZPSURfVEFHU19bYV19O2NvbnN0IG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfQ09OU1RSVUNUT1JfVE9LRU5fUFJJVkFURT17fTsKY2xhc3MgbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbHtjb25zdHJ1Y3RvcihhLGIpe3RoaXMucHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlU2FmZUh0bWxXcmFwcGVkVmFsdWVfPWI9PT1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX0NPTlNUUlVDVE9SX1RPS0VOX1BSSVZBVEU/YToiIjt0aGlzLmltcGxlbWVudHNHb29nU3RyaW5nVHlwZWRTdHJpbmc9ITB9Z2V0VHlwZWRTdHJpbmdWYWx1ZSgpe3JldHVybiB0aGlzLnByaXZhdGVEb05vdEFjY2Vzc09yRWxzZVNhZmVIdG1sV3JhcHBlZFZhbHVlXy50b1N0cmluZygpfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMucHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlU2FmZUh0bWxXcmFwcGVkVmFsdWVfLnRvU3RyaW5nKCl9c3RhdGljIHVud3JhcChhKXtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC51bndyYXBUcnVzdGVkSFRNTChhKS50b1N0cmluZygpfXN0YXRpYyB1bndyYXBUcnVzdGVkSFRNTChhKXtpZihhIGluc3RhbmNlb2YgbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbCYmCmEuY29uc3RydWN0b3I9PT1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sKXJldHVybiBhLnByaXZhdGVEb05vdEFjY2Vzc09yRWxzZVNhZmVIdG1sV3JhcHBlZFZhbHVlXztnb29nLmFzc2VydHMuZmFpbChgZXhwZWN0ZWQgb2JqZWN0IG9mIHR5cGUgU2FmZUh0bWwsIGdvdCAnJHthfScgb2YgdHlwZSBgK2dvb2cudHlwZU9mKGEpKTtyZXR1cm4idHlwZV9lcnJvcjpTYWZlSHRtbCJ9c3RhdGljIGh0bWxFc2NhcGUoYSl7aWYoYSBpbnN0YW5jZW9mIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwpcmV0dXJuIGE7YT0ib2JqZWN0Ij09dHlwZW9mIGEmJmEuaW1wbGVtZW50c0dvb2dTdHJpbmdUeXBlZFN0cmluZz9hLmdldFR5cGVkU3RyaW5nVmFsdWUoKTpTdHJpbmcoYSk7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuY3JlYXRlU2FmZUh0bWxTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShnb29nLnN0cmluZy5pbnRlcm5hbC5odG1sRXNjYXBlKGEpKX1zdGF0aWMgaHRtbEVzY2FwZVByZXNlcnZpbmdOZXdsaW5lcyhhKXtpZihhIGluc3RhbmNlb2YKbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbClyZXR1cm4gYTthPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuaHRtbEVzY2FwZShhKTtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5jcmVhdGVTYWZlSHRtbFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGdvb2cuc3RyaW5nLmludGVybmFsLm5ld0xpbmVUb0JyKG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwudW53cmFwKGEpKSl9c3RhdGljIGh0bWxFc2NhcGVQcmVzZXJ2aW5nTmV3bGluZXNBbmRTcGFjZXMoYSl7aWYoYSBpbnN0YW5jZW9mIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwpcmV0dXJuIGE7YT1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLmh0bWxFc2NhcGUoYSk7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuY3JlYXRlU2FmZUh0bWxTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShnb29nLnN0cmluZy5pbnRlcm5hbC53aGl0ZXNwYWNlRXNjYXBlKG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwudW53cmFwKGEpKSl9c3RhdGljIGNvbW1lbnQoYSl7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuY3JlYXRlU2FmZUh0bWxTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZSgiXHgzYyEtLSIrCmdvb2cuc3RyaW5nLmludGVybmFsLmh0bWxFc2NhcGUoYSkrIi0tXHgzZSIpfXN0YXRpYyBjcmVhdGUoYSxiLGMpe21vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwudmVyaWZ5VGFnTmFtZShTdHJpbmcoYSkpO3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLmNyZWF0ZVNhZmVIdG1sVGFnU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoU3RyaW5nKGEpLGIsYyl9c3RhdGljIHZlcmlmeVRhZ05hbWUoYSl7aWYoIW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfVkFMSURfTkFNRVNfSU5fVEFHLnRlc3QoYSkpdGhyb3cgRXJyb3IobW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5FTkFCTEVfRVJST1JfTUVTU0FHRVM/YEludmFsaWQgdGFnIG5hbWUgPCR7YX0+LmA6IiIpO2lmKGEudG9VcHBlckNhc2UoKWluIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfTk9UX0FMTE9XRURfVEFHX05BTUVTKXRocm93IEVycm9yKG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuRU5BQkxFX0VSUk9SX01FU1NBR0VTPwpgVGFnIG5hbWUgPCR7YX0+IGlzIG5vdCBhbGxvd2VkIGZvciBTYWZlSHRtbC5gOiIiKTt9c3RhdGljIGNyZWF0ZUlmcmFtZShhLGIsYyxkKXthJiZnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLnVud3JhcChhKTtjb25zdCBlPXt9O2Uuc3JjPWF8fG51bGw7ZS5zcmNkb2M9YiYmbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC51bndyYXAoYik7YT1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLmNvbWJpbmVBdHRyaWJ1dGVzKGUse3NhbmRib3g6IiJ9LGMpO3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLmNyZWF0ZVNhZmVIdG1sVGFnU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoImlmcmFtZSIsYSxkKX1zdGF0aWMgY3JlYXRlU2FuZGJveElmcmFtZShhLGIsYyxkKXtpZighbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5jYW5Vc2VTYW5kYm94SWZyYW1lKCkpdGhyb3cgRXJyb3IobW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5FTkFCTEVfRVJST1JfTUVTU0FHRVM/CiJUaGUgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHNhbmRib3hlZCBpZnJhbWVzLiI6IiIpO2NvbnN0IGU9e307ZS5zcmM9YT9nb29nLmh0bWwuU2FmZVVybC51bndyYXAoZ29vZy5odG1sLlNhZmVVcmwuc2FuaXRpemUoYSkpOm51bGw7ZS5zcmNkb2M9Ynx8bnVsbDtlLnNhbmRib3g9IiI7YT1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLmNvbWJpbmVBdHRyaWJ1dGVzKGUse30sYyk7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuY3JlYXRlU2FmZUh0bWxUYWdTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZSgiaWZyYW1lIixhLGQpfXN0YXRpYyBjYW5Vc2VTYW5kYm94SWZyYW1lKCl7cmV0dXJuIGdvb2cuZ2xvYmFsLkhUTUxJRnJhbWVFbGVtZW50JiYic2FuZGJveCJpbiBnb29nLmdsb2JhbC5IVE1MSUZyYW1lRWxlbWVudC5wcm90b3R5cGV9c3RhdGljIGNyZWF0ZVNjcmlwdFNyYyhhLGIpe2dvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwudW53cmFwKGEpOwphPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuY29tYmluZUF0dHJpYnV0ZXMoe3NyYzphfSx7fSxiKTtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5jcmVhdGVTYWZlSHRtbFRhZ1NlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKCJzY3JpcHQiLGEpfXN0YXRpYyBjcmVhdGVTY3JpcHQoYSxiKXtmb3IodmFyIGMgaW4gYilpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYixjKSl7dmFyIGQ9Yy50b0xvd2VyQ2FzZSgpO2lmKCJsYW5ndWFnZSI9PWR8fCJzcmMiPT1kfHwidGV4dCI9PWQpdGhyb3cgRXJyb3IobW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5FTkFCTEVfRVJST1JfTUVTU0FHRVM/YENhbm5vdCBzZXQgIiR7ZH0iIGF0dHJpYnV0ZWA6IiIpO31jPSIiO2E9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfY29uY2F0KGEpO2ZvcihkPTA7ZDwKYS5sZW5ndGg7ZCsrKWMrPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVNjcmlwdF9TYWZlU2NyaXB0LnVud3JhcChhW2RdKTthPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuY3JlYXRlU2FmZUh0bWxTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShjKTtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5jcmVhdGVTYWZlSHRtbFRhZ1NlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKCJzY3JpcHQiLGIsYSl9c3RhdGljIGNyZWF0ZVN0eWxlKGEsYil7Yj1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLmNvbWJpbmVBdHRyaWJ1dGVzKHt0eXBlOiJ0ZXh0L2NzcyJ9LHt9LGIpO2xldCBjPSIiO2E9bW9kdWxlJGNvbnRlbnRzJGdvb2ckYXJyYXlfY29uY2F0KGEpO2ZvcihsZXQgZD0wO2Q8YS5sZW5ndGg7ZCsrKWMrPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlU2hlZXRfU2FmZVN0eWxlU2hlZXQudW53cmFwKGFbZF0pOwphPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuY3JlYXRlU2FmZUh0bWxTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShjKTtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5jcmVhdGVTYWZlSHRtbFRhZ1NlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKCJzdHlsZSIsYixhKX1zdGF0aWMgY3JlYXRlTWV0YVJlZnJlc2goYSxiKXthPWdvb2cuaHRtbC5TYWZlVXJsLnVud3JhcChnb29nLmh0bWwuU2FmZVVybC5zYW5pdGl6ZShhKSk7KG1vZHVsZSRjb250ZW50cyRnb29nJGxhYnMkdXNlckFnZW50JGJyb3dzZXJfbWF0Y2hJRSgpfHxtb2R1bGUkY29udGVudHMkZ29vZyRsYWJzJHVzZXJBZ2VudCRicm93c2VyX21hdGNoRWRnZUh0bWwoKSkmJmdvb2cuc3RyaW5nLmludGVybmFsLmNvbnRhaW5zKGEsIjsiKSYmKGE9IiciK2EucmVwbGFjZSgvJy9nLCIlMjciKSsiJyIpO3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLmNyZWF0ZVNhZmVIdG1sVGFnU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoIm1ldGEiLAp7Imh0dHAtZXF1aXYiOiJyZWZyZXNoIixjb250ZW50OihifHwwKSsiOyB1cmw9IithfSl9c3RhdGljIGpvaW4oYSxiKXthPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuaHRtbEVzY2FwZShhKTtjb25zdCBjPVtdLGQ9ZT0+e0FycmF5LmlzQXJyYXkoZSk/ZS5mb3JFYWNoKGQpOihlPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuaHRtbEVzY2FwZShlKSxjLnB1c2gobW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC51bndyYXAoZSkpKX07Yi5mb3JFYWNoKGQpO3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLmNyZWF0ZVNhZmVIdG1sU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoYy5qb2luKG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwudW53cmFwKGEpKSl9c3RhdGljIGNvbmNhdChhKXtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5qb2luKG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuRU1QVFksCkFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykpfXN0YXRpYyBjcmVhdGVTYWZlSHRtbFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGEpe2NvbnN0IGI9Z29vZy5odG1sLnRydXN0ZWR0eXBlcy5nZXRQb2xpY3lQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoKTthPWI/Yi5jcmVhdGVIVE1MKGEpOmE7cmV0dXJuIG5ldyBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sKGEsbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9DT05TVFJVQ1RPUl9UT0tFTl9QUklWQVRFKX1zdGF0aWMgY3JlYXRlU2FmZUh0bWxUYWdTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShhLGIsYyl7Yj1gPCR7YX1gK21vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuc3RyaW5naWZ5QXR0cmlidXRlcyhhLGIpO251bGw9PWM/Yz1bXTpBcnJheS5pc0FycmF5KGMpfHwoYz1bY10pO2dvb2cuZG9tLnRhZ3MuaXNWb2lkVGFnKGEudG9Mb3dlckNhc2UoKSk/Cihnb29nLmFzc2VydHMuYXNzZXJ0KCFjLmxlbmd0aCxgVm9pZCB0YWcgPCR7YX0+IGRvZXMgbm90IGFsbG93IGNvbnRlbnQuYCksYis9Ij4iKTooYz1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLmNvbmNhdChjKSxiKz0iPiIrbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC51bndyYXAoYykrIjwvIithKyI+Iik7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuY3JlYXRlU2FmZUh0bWxTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShiKX1zdGF0aWMgc3RyaW5naWZ5QXR0cmlidXRlcyhhLGIpe2xldCBjPSIiO2lmKGIpZm9yKGxldCBkIGluIGIpaWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsZCkpe2lmKCFtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1ZBTElEX05BTUVTX0lOX1RBRy50ZXN0KGQpKXRocm93IEVycm9yKG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuRU5BQkxFX0VSUk9SX01FU1NBR0VTPwpgSW52YWxpZCBhdHRyaWJ1dGUgbmFtZSAiJHtkfSIuYDoiIik7Y29uc3QgZT1iW2RdO251bGwhPWUmJihjKz0iICIrbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9nZXRBdHRyTmFtZUFuZFZhbHVlKGEsZCxlKSl9cmV0dXJuIGN9c3RhdGljIGNvbWJpbmVBdHRyaWJ1dGVzKGEsYixjKXtjb25zdCBkPXt9O2Zvcih2YXIgZSBpbiBhKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLGUpJiYoZ29vZy5hc3NlcnRzLmFzc2VydChlLnRvTG93ZXJDYXNlKCk9PWUsIk11c3QgYmUgbG93ZXIgY2FzZSIpLGRbZV09YVtlXSk7Zm9yKGNvbnN0IGYgaW4gYilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYixmKSYmKGdvb2cuYXNzZXJ0cy5hc3NlcnQoZi50b0xvd2VyQ2FzZSgpPT1mLCJNdXN0IGJlIGxvd2VyIGNhc2UiKSxkW2ZdPWJbZl0pO2lmKGMpZm9yKGNvbnN0IGYgaW4gYylpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYywKZikpe2U9Zi50b0xvd2VyQ2FzZSgpO2lmKGUgaW4gYSl0aHJvdyBFcnJvcihtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLkVOQUJMRV9FUlJPUl9NRVNTQUdFUz9gQ2Fubm90IG92ZXJyaWRlICIke2V9IiBhdHRyaWJ1dGUsIGdvdCAiYCtmKyciIHdpdGggdmFsdWUgIicrY1tmXSsnIic6IiIpO2UgaW4gYiYmZGVsZXRlIGRbZV07ZFtmXT1jW2ZdfXJldHVybiBkfX1tb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLkVOQUJMRV9FUlJPUl9NRVNTQUdFUz1nb29nLkRFQlVHO21vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuU1VQUE9SVF9TVFlMRV9BVFRSSUJVVEU9ITA7bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5mcm9tPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuaHRtbEVzY2FwZTsKY29uc3QgbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9WQUxJRF9OQU1FU19JTl9UQUc9L15bYS16QS1aMC05LV0rJC8sbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9VUkxfQVRUUklCVVRFUz17YWN0aW9uOiEwLGNpdGU6ITAsZGF0YTohMCxmb3JtYWN0aW9uOiEwLGhyZWY6ITAsbWFuaWZlc3Q6ITAscG9zdGVyOiEwLHNyYzohMH0sbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9OT1RfQUxMT1dFRF9UQUdfTkFNRVM9e1tnb29nLmRvbS5UYWdOYW1lLkFQUExFVF06ITAsW2dvb2cuZG9tLlRhZ05hbWUuQkFTRV06ITAsW2dvb2cuZG9tLlRhZ05hbWUuRU1CRURdOiEwLFtnb29nLmRvbS5UYWdOYW1lLklGUkFNRV06ITAsW2dvb2cuZG9tLlRhZ05hbWUuTElOS106ITAsW2dvb2cuZG9tLlRhZ05hbWUuTUFUSF06ITAsW2dvb2cuZG9tLlRhZ05hbWUuTUVUQV06ITAsW2dvb2cuZG9tLlRhZ05hbWUuT0JKRUNUXTohMCxbZ29vZy5kb20uVGFnTmFtZS5TQ1JJUFRdOiEwLApbZ29vZy5kb20uVGFnTmFtZS5TVFlMRV06ITAsW2dvb2cuZG9tLlRhZ05hbWUuU1ZHXTohMCxbZ29vZy5kb20uVGFnTmFtZS5URU1QTEFURV06ITB9OwpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX2dldEF0dHJOYW1lQW5kVmFsdWUoYSxiLGMpe2lmKGMgaW5zdGFuY2VvZiBnb29nLnN0cmluZy5Db25zdCljPWdvb2cuc3RyaW5nLkNvbnN0LnVud3JhcChjKTtlbHNlIGlmKCJzdHlsZSI9PWIudG9Mb3dlckNhc2UoKSlpZihtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLlNVUFBPUlRfU1RZTEVfQVRUUklCVVRFKWM9bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9nZXRTdHlsZVZhbHVlKGMpO2Vsc2UgdGhyb3cgRXJyb3IobW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5FTkFCTEVfRVJST1JfTUVTU0FHRVM/J0F0dHJpYnV0ZSAic3R5bGUiIG5vdCBzdXBwb3J0ZWQuJzoiIik7ZWxzZXtpZigvXm9uL2kudGVzdChiKSl0aHJvdyBFcnJvcihtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLkVOQUJMRV9FUlJPUl9NRVNTQUdFUz8KYEF0dHJpYnV0ZSAiJHtifWArJyIgcmVxdWlyZXMgZ29vZy5zdHJpbmcuQ29uc3QgdmFsdWUsICInK2MrJyIgZ2l2ZW4uJzoiIik7aWYoYi50b0xvd2VyQ2FzZSgpaW4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9VUkxfQVRUUklCVVRFUylpZihjIGluc3RhbmNlb2YgZ29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybCljPWdvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwudW53cmFwKGMpO2Vsc2UgaWYoYyBpbnN0YW5jZW9mIGdvb2cuaHRtbC5TYWZlVXJsKWM9Z29vZy5odG1sLlNhZmVVcmwudW53cmFwKGMpO2Vsc2UgaWYoInN0cmluZyI9PT10eXBlb2YgYyljPWdvb2cuaHRtbC5TYWZlVXJsLnNhbml0aXplKGMpLmdldFR5cGVkU3RyaW5nVmFsdWUoKTtlbHNlIHRocm93IEVycm9yKG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuRU5BQkxFX0VSUk9SX01FU1NBR0VTP2BBdHRyaWJ1dGUgIiR7Yn0iIG9uIHRhZyAiJHthfWArJyIgcmVxdWlyZXMgZ29vZy5odG1sLlNhZmVVcmwsIGdvb2cuc3RyaW5nLkNvbnN0LCBvciBzdHJpbmcsIHZhbHVlICInKwpjKyciIGdpdmVuLic6IiIpO31jLmltcGxlbWVudHNHb29nU3RyaW5nVHlwZWRTdHJpbmcmJihjPWMuZ2V0VHlwZWRTdHJpbmdWYWx1ZSgpKTtnb29nLmFzc2VydHMuYXNzZXJ0KCJzdHJpbmciPT09dHlwZW9mIGN8fCJudW1iZXIiPT09dHlwZW9mIGMsIlN0cmluZyBvciBudW1iZXIgdmFsdWUgZXhwZWN0ZWQsIGdvdCAiK3R5cGVvZiBjKyIgd2l0aCB2YWx1ZTogIitjKTtyZXR1cm5gJHtifT0iYCtnb29nLnN0cmluZy5pbnRlcm5hbC5odG1sRXNjYXBlKFN0cmluZyhjKSkrJyInfQpmdW5jdGlvbiBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX2dldFN0eWxlVmFsdWUoYSl7aWYoIWdvb2cuaXNPYmplY3QoYSkpdGhyb3cgRXJyb3IobW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5FTkFCTEVfRVJST1JfTUVTU0FHRVM/J1RoZSAic3R5bGUiIGF0dHJpYnV0ZSByZXF1aXJlcyBnb29nLmh0bWwuU2FmZVN0eWxlIG9yIG1hcCBvZiBzdHlsZSBwcm9wZXJ0aWVzLCAnK3R5cGVvZiBhKyIgZ2l2ZW46ICIrYToiIik7YSBpbnN0YW5jZW9mIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX1NhZmVTdHlsZXx8KGE9bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU3R5bGVfU2FmZVN0eWxlLmNyZWF0ZShhKSk7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX1NhZmVTdHlsZS51bndyYXAoYSl9Cm1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuRE9DVFlQRV9IVE1MPWZ1bmN0aW9uKCl7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuY3JlYXRlU2FmZUh0bWxTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZSgiPCFET0NUWVBFIGh0bWw+Iil9KCk7bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5FTVBUWT1uZXcgbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbChnb29nLmdsb2JhbC50cnVzdGVkVHlwZXMmJmdvb2cuZ2xvYmFsLnRydXN0ZWRUeXBlcy5lbXB0eUhUTUx8fCIiLG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfQ09OU1RSVUNUT1JfVE9LRU5fUFJJVkFURSk7bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5CUj1mdW5jdGlvbigpe3JldHVybiBtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLmNyZWF0ZVNhZmVIdG1sU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoIjxicj4iKX0oKTsKZ29vZy5odG1sLlNhZmVIdG1sPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWw7Z29vZy5odG1sLnVuY2hlY2tlZGNvbnZlcnNpb25zPXt9O2dvb2cuaHRtbC51bmNoZWNrZWRjb252ZXJzaW9ucy5zYWZlSHRtbEZyb21TdHJpbmdLbm93blRvU2F0aXNmeVR5cGVDb250cmFjdD1mdW5jdGlvbihhLGIpe2dvb2cuYXNzZXJ0cy5hc3NlcnRTdHJpbmcoZ29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGEpLCJtdXN0IHByb3ZpZGUganVzdGlmaWNhdGlvbiIpO2dvb2cuYXNzZXJ0cy5hc3NlcnQoIWdvb2cuc3RyaW5nLmludGVybmFsLmlzRW1wdHlPcldoaXRlc3BhY2UoZ29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGEpKSwibXVzdCBwcm92aWRlIG5vbi1lbXB0eSBqdXN0aWZpY2F0aW9uIik7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwuY3JlYXRlU2FmZUh0bWxTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShiKX07Cmdvb2cuaHRtbC51bmNoZWNrZWRjb252ZXJzaW9ucy5zYWZlU2NyaXB0RnJvbVN0cmluZ0tub3duVG9TYXRpc2Z5VHlwZUNvbnRyYWN0PWZ1bmN0aW9uKGEsYil7Z29vZy5hc3NlcnRzLmFzc2VydFN0cmluZyhnb29nLnN0cmluZy5Db25zdC51bndyYXAoYSksIm11c3QgcHJvdmlkZSBqdXN0aWZpY2F0aW9uIik7Z29vZy5hc3NlcnRzLmFzc2VydCghZ29vZy5zdHJpbmcuaW50ZXJuYWwuaXNFbXB0eU9yV2hpdGVzcGFjZShnb29nLnN0cmluZy5Db25zdC51bndyYXAoYSkpLCJtdXN0IHByb3ZpZGUgbm9uLWVtcHR5IGp1c3RpZmljYXRpb24iKTtyZXR1cm4gbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlU2NyaXB0X1NhZmVTY3JpcHQuY3JlYXRlU2FmZVNjcmlwdFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGIpfTsKZ29vZy5odG1sLnVuY2hlY2tlZGNvbnZlcnNpb25zLnNhZmVTdHlsZUZyb21TdHJpbmdLbm93blRvU2F0aXNmeVR5cGVDb250cmFjdD1mdW5jdGlvbihhLGIpe2dvb2cuYXNzZXJ0cy5hc3NlcnRTdHJpbmcoZ29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGEpLCJtdXN0IHByb3ZpZGUganVzdGlmaWNhdGlvbiIpO2dvb2cuYXNzZXJ0cy5hc3NlcnQoIWdvb2cuc3RyaW5nLmludGVybmFsLmlzRW1wdHlPcldoaXRlc3BhY2UoZ29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGEpKSwibXVzdCBwcm92aWRlIG5vbi1lbXB0eSBqdXN0aWZpY2F0aW9uIik7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX1NhZmVTdHlsZS5jcmVhdGVTYWZlU3R5bGVTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShiKX07Cmdvb2cuaHRtbC51bmNoZWNrZWRjb252ZXJzaW9ucy5zYWZlU3R5bGVTaGVldEZyb21TdHJpbmdLbm93blRvU2F0aXNmeVR5cGVDb250cmFjdD1mdW5jdGlvbihhLGIpe2dvb2cuYXNzZXJ0cy5hc3NlcnRTdHJpbmcoZ29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGEpLCJtdXN0IHByb3ZpZGUganVzdGlmaWNhdGlvbiIpO2dvb2cuYXNzZXJ0cy5hc3NlcnQoIWdvb2cuc3RyaW5nLmludGVybmFsLmlzRW1wdHlPcldoaXRlc3BhY2UoZ29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGEpKSwibXVzdCBwcm92aWRlIG5vbi1lbXB0eSBqdXN0aWZpY2F0aW9uIik7cmV0dXJuIG1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlU2hlZXRfU2FmZVN0eWxlU2hlZXQuY3JlYXRlU2FmZVN0eWxlU2hlZXRTZWN1cml0eVByaXZhdGVEb05vdEFjY2Vzc09yRWxzZShiKX07Cmdvb2cuaHRtbC51bmNoZWNrZWRjb252ZXJzaW9ucy5zYWZlVXJsRnJvbVN0cmluZ0tub3duVG9TYXRpc2Z5VHlwZUNvbnRyYWN0PWZ1bmN0aW9uKGEsYil7Z29vZy5hc3NlcnRzLmFzc2VydFN0cmluZyhnb29nLnN0cmluZy5Db25zdC51bndyYXAoYSksIm11c3QgcHJvdmlkZSBqdXN0aWZpY2F0aW9uIik7Z29vZy5hc3NlcnRzLmFzc2VydCghZ29vZy5zdHJpbmcuaW50ZXJuYWwuaXNFbXB0eU9yV2hpdGVzcGFjZShnb29nLnN0cmluZy5Db25zdC51bndyYXAoYSkpLCJtdXN0IHByb3ZpZGUgbm9uLWVtcHR5IGp1c3RpZmljYXRpb24iKTtyZXR1cm4gZ29vZy5odG1sLlNhZmVVcmwuY3JlYXRlU2FmZVVybFNlY3VyaXR5UHJpdmF0ZURvTm90QWNjZXNzT3JFbHNlKGIpfTsKZ29vZy5odG1sLnVuY2hlY2tlZGNvbnZlcnNpb25zLnRydXN0ZWRSZXNvdXJjZVVybEZyb21TdHJpbmdLbm93blRvU2F0aXNmeVR5cGVDb250cmFjdD1mdW5jdGlvbihhLGIpe2dvb2cuYXNzZXJ0cy5hc3NlcnRTdHJpbmcoZ29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGEpLCJtdXN0IHByb3ZpZGUganVzdGlmaWNhdGlvbiIpO2dvb2cuYXNzZXJ0cy5hc3NlcnQoIWdvb2cuc3RyaW5nLmludGVybmFsLmlzRW1wdHlPcldoaXRlc3BhY2UoZ29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGEpKSwibXVzdCBwcm92aWRlIG5vbi1lbXB0eSBqdXN0aWZpY2F0aW9uIik7cmV0dXJuIGdvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwuY3JlYXRlVHJ1c3RlZFJlc291cmNlVXJsU2VjdXJpdHlQcml2YXRlRG9Ob3RBY2Nlc3NPckVsc2UoYil9O2dvb2cuZG9tLnNhZmU9e307Z29vZy5kb20uc2FmZS5JbnNlcnRBZGphY2VudEh0bWxQb3NpdGlvbj17QUZURVJCRUdJTjoiYWZ0ZXJiZWdpbiIsQUZURVJFTkQ6ImFmdGVyZW5kIixCRUZPUkVCRUdJTjoiYmVmb3JlYmVnaW4iLEJFRk9SRUVORDoiYmVmb3JlZW5kIn07Z29vZy5kb20uc2FmZS5pbnNlcnRBZGphY2VudEh0bWw9ZnVuY3Rpb24oYSxiLGMpe2EuaW5zZXJ0QWRqYWNlbnRIVE1MKGIsbW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC51bndyYXBUcnVzdGVkSFRNTChjKSl9O2dvb2cuZG9tLnNhZmUuU0VUX0lOTkVSX0hUTUxfRElTQUxMT1dFRF9UQUdTXz17TUFUSDohMCxTQ1JJUFQ6ITAsU1RZTEU6ITAsU1ZHOiEwLFRFTVBMQVRFOiEwfTsKZ29vZy5kb20uc2FmZS5pc0lubmVySHRtbENsZWFudXBSZWN1cnNpdmVfPWdvb2cuZnVuY3Rpb25zLmNhY2hlUmV0dXJuVmFsdWUoZnVuY3Rpb24oKXtpZihnb29nLkRFQlVHJiYidW5kZWZpbmVkIj09PXR5cGVvZiBkb2N1bWVudClyZXR1cm4hMTt2YXIgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSxiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2IuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikpO2EuYXBwZW5kQ2hpbGQoYik7aWYoZ29vZy5ERUJVRyYmIWEuZmlyc3RDaGlsZClyZXR1cm4hMTtiPWEuZmlyc3RDaGlsZC5maXJzdENoaWxkO2EuaW5uZXJIVE1MPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwudW53cmFwVHJ1c3RlZEhUTUwobW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC5FTVBUWSk7cmV0dXJuIWIucGFyZW50RWxlbWVudH0pOwpnb29nLmRvbS5zYWZlLnVuc2FmZVNldElubmVySHRtbERvTm90VXNlT3JFbHNlPWZ1bmN0aW9uKGEsYil7aWYoZ29vZy5kb20uc2FmZS5pc0lubmVySHRtbENsZWFudXBSZWN1cnNpdmVfKCkpZm9yKDthLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmxhc3RDaGlsZCk7YS5pbm5lckhUTUw9bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC51bndyYXBUcnVzdGVkSFRNTChiKX07Cmdvb2cuZG9tLnNhZmUuc2V0SW5uZXJIdG1sPWZ1bmN0aW9uKGEsYil7aWYoZ29vZy5hc3NlcnRzLkVOQUJMRV9BU1NFUlRTJiZhLnRhZ05hbWUpe3ZhciBjPWEudGFnTmFtZS50b1VwcGVyQ2FzZSgpO2lmKGdvb2cuZG9tLnNhZmUuU0VUX0lOTkVSX0hUTUxfRElTQUxMT1dFRF9UQUdTX1tjXSl0aHJvdyBFcnJvcigiZ29vZy5kb20uc2FmZS5zZXRJbm5lckh0bWwgY2Fubm90IGJlIHVzZWQgdG8gc2V0IGNvbnRlbnQgb2YgIithLnRhZ05hbWUrIi4iKTt9Z29vZy5kb20uc2FmZS51bnNhZmVTZXRJbm5lckh0bWxEb05vdFVzZU9yRWxzZShhLGIpfTsKZ29vZy5kb20uc2FmZS5zZXRJbm5lckh0bWxGcm9tQ29uc3RhbnQ9ZnVuY3Rpb24oYSxiKXtnb29nLmRvbS5zYWZlLnNldElubmVySHRtbChhLGdvb2cuaHRtbC51bmNoZWNrZWRjb252ZXJzaW9ucy5zYWZlSHRtbEZyb21TdHJpbmdLbm93blRvU2F0aXNmeVR5cGVDb250cmFjdChnb29nLnN0cmluZy5Db25zdC5mcm9tKCJDb25zdGFudCBIVE1MIHRvIGJlIGltbWVkaWF0ZWxseSB1c2VkLiIpLGdvb2cuc3RyaW5nLkNvbnN0LnVud3JhcChiKSkpfTtnb29nLmRvbS5zYWZlLnNldE91dGVySHRtbD1mdW5jdGlvbihhLGIpe2Eub3V0ZXJIVE1MPW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZUh0bWxfU2FmZUh0bWwudW53cmFwVHJ1c3RlZEhUTUwoYil9Owpnb29nLmRvbS5zYWZlLnNldEZvcm1FbGVtZW50QWN0aW9uPWZ1bmN0aW9uKGEsYil7Yj1iIGluc3RhbmNlb2YgZ29vZy5odG1sLlNhZmVVcmw/Yjpnb29nLmh0bWwuU2FmZVVybC5zYW5pdGl6ZUFzc2VydFVuY2hhbmdlZChiKTtnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzSFRNTEZvcm1FbGVtZW50KGEpLmFjdGlvbj1nb29nLmh0bWwuU2FmZVVybC51bndyYXAoYil9O2dvb2cuZG9tLnNhZmUuc2V0QnV0dG9uRm9ybUFjdGlvbj1mdW5jdGlvbihhLGIpe2I9YiBpbnN0YW5jZW9mIGdvb2cuaHRtbC5TYWZlVXJsP2I6Z29vZy5odG1sLlNhZmVVcmwuc2FuaXRpemVBc3NlcnRVbmNoYW5nZWQoYik7Z29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0hUTUxCdXR0b25FbGVtZW50KGEpLmZvcm1BY3Rpb249Z29vZy5odG1sLlNhZmVVcmwudW53cmFwKGIpfTsKZ29vZy5kb20uc2FmZS5zZXRJbnB1dEZvcm1BY3Rpb249ZnVuY3Rpb24oYSxiKXtiPWIgaW5zdGFuY2VvZiBnb29nLmh0bWwuU2FmZVVybD9iOmdvb2cuaHRtbC5TYWZlVXJsLnNhbml0aXplQXNzZXJ0VW5jaGFuZ2VkKGIpO2dvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNIVE1MSW5wdXRFbGVtZW50KGEpLmZvcm1BY3Rpb249Z29vZy5odG1sLlNhZmVVcmwudW53cmFwKGIpfTtnb29nLmRvbS5zYWZlLnNldFN0eWxlPWZ1bmN0aW9uKGEsYil7YS5zdHlsZS5jc3NUZXh0PW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVN0eWxlX1NhZmVTdHlsZS51bndyYXAoYil9O2dvb2cuZG9tLnNhZmUuZG9jdW1lbnRXcml0ZT1mdW5jdGlvbihhLGIpe2Eud3JpdGUobW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC51bndyYXBUcnVzdGVkSFRNTChiKSl9Owpnb29nLmRvbS5zYWZlLnNldEFuY2hvckhyZWY9ZnVuY3Rpb24oYSxiKXtnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzSFRNTEFuY2hvckVsZW1lbnQoYSk7Yj1iIGluc3RhbmNlb2YgZ29vZy5odG1sLlNhZmVVcmw/Yjpnb29nLmh0bWwuU2FmZVVybC5zYW5pdGl6ZUFzc2VydFVuY2hhbmdlZChiKTthLmhyZWY9Z29vZy5odG1sLlNhZmVVcmwudW53cmFwKGIpfTtnb29nLmRvbS5zYWZlLnNldEF1ZGlvU3JjPWZ1bmN0aW9uKGEsYil7Z29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0hUTUxBdWRpb0VsZW1lbnQoYSk7aWYoIShiIGluc3RhbmNlb2YgZ29vZy5odG1sLlNhZmVVcmwpKXt2YXIgYz0vXmRhdGE6YXVkaW9cLy9pLnRlc3QoYik7Yj1nb29nLmh0bWwuU2FmZVVybC5zYW5pdGl6ZUFzc2VydFVuY2hhbmdlZChiLGMpfWEuc3JjPWdvb2cuaHRtbC5TYWZlVXJsLnVud3JhcChiKX07Cmdvb2cuZG9tLnNhZmUuc2V0VmlkZW9TcmM9ZnVuY3Rpb24oYSxiKXtnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzSFRNTFZpZGVvRWxlbWVudChhKTtpZighKGIgaW5zdGFuY2VvZiBnb29nLmh0bWwuU2FmZVVybCkpe3ZhciBjPS9eZGF0YTp2aWRlb1wvL2kudGVzdChiKTtiPWdvb2cuaHRtbC5TYWZlVXJsLnNhbml0aXplQXNzZXJ0VW5jaGFuZ2VkKGIsYyl9YS5zcmM9Z29vZy5odG1sLlNhZmVVcmwudW53cmFwKGIpfTtnb29nLmRvbS5zYWZlLnNldEVtYmVkU3JjPWZ1bmN0aW9uKGEsYil7Z29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0hUTUxFbWJlZEVsZW1lbnQoYSk7YS5zcmM9Z29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC51bndyYXBUcnVzdGVkU2NyaXB0VVJMKGIpfTtnb29nLmRvbS5zYWZlLnNldEZyYW1lU3JjPWZ1bmN0aW9uKGEsYil7Z29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0hUTUxGcmFtZUVsZW1lbnQoYSk7YS5zcmM9Z29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC51bndyYXAoYil9Owpnb29nLmRvbS5zYWZlLnNldElmcmFtZVNyYz1mdW5jdGlvbihhLGIpe2dvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNIVE1MSUZyYW1lRWxlbWVudChhKTthLnNyYz1nb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLnVud3JhcChiKX07Z29vZy5kb20uc2FmZS5zZXRJZnJhbWVTcmNkb2M9ZnVuY3Rpb24oYSxiKXtnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzSFRNTElGcmFtZUVsZW1lbnQoYSk7YS5zcmNkb2M9bW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC51bndyYXBUcnVzdGVkSFRNTChiKX07Cmdvb2cuZG9tLnNhZmUuc2V0TGlua0hyZWZBbmRSZWw9ZnVuY3Rpb24oYSxiLGMpe2dvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNIVE1MTGlua0VsZW1lbnQoYSk7YS5yZWw9Yztnb29nLnN0cmluZy5pbnRlcm5hbC5jYXNlSW5zZW5zaXRpdmVDb250YWlucyhjLCJzdHlsZXNoZWV0Iik/KGdvb2cuYXNzZXJ0cy5hc3NlcnQoYiBpbnN0YW5jZW9mIGdvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwsJ1VSTCBtdXN0IGJlIFRydXN0ZWRSZXNvdXJjZVVybCBiZWNhdXNlICJyZWwiIGNvbnRhaW5zICJzdHlsZXNoZWV0IicpLGEuaHJlZj1nb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsLnVud3JhcChiKSwoYj1nb29nLmRvbS5zYWZlLmdldFN0eWxlTm9uY2UoYS5vd25lckRvY3VtZW50JiZhLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcpKSYmYS5zZXRBdHRyaWJ1dGUoIm5vbmNlIixiKSk6YS5ocmVmPWIgaW5zdGFuY2VvZiBnb29nLmh0bWwuVHJ1c3RlZFJlc291cmNlVXJsP2dvb2cuaHRtbC5UcnVzdGVkUmVzb3VyY2VVcmwudW53cmFwKGIpOgpiIGluc3RhbmNlb2YgZ29vZy5odG1sLlNhZmVVcmw/Z29vZy5odG1sLlNhZmVVcmwudW53cmFwKGIpOmdvb2cuaHRtbC5TYWZlVXJsLnVud3JhcChnb29nLmh0bWwuU2FmZVVybC5zYW5pdGl6ZUFzc2VydFVuY2hhbmdlZChiKSl9O2dvb2cuZG9tLnNhZmUuc2V0T2JqZWN0RGF0YT1mdW5jdGlvbihhLGIpe2dvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNIVE1MT2JqZWN0RWxlbWVudChhKTthLmRhdGE9Z29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC51bndyYXBUcnVzdGVkU2NyaXB0VVJMKGIpfTtnb29nLmRvbS5zYWZlLnNldFNjcmlwdFNyYz1mdW5jdGlvbihhLGIpe2dvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNIVE1MU2NyaXB0RWxlbWVudChhKTtnb29nLmRvbS5zYWZlLnNldE5vbmNlRm9yU2NyaXB0RWxlbWVudF8oYSk7YS5zcmM9Z29vZy5odG1sLlRydXN0ZWRSZXNvdXJjZVVybC51bndyYXBUcnVzdGVkU2NyaXB0VVJMKGIpfTsKZ29vZy5kb20uc2FmZS5zZXRTY3JpcHRDb250ZW50PWZ1bmN0aW9uKGEsYil7Z29vZy5kb20uYXNzZXJ0cy5hc3NlcnRJc0hUTUxTY3JpcHRFbGVtZW50KGEpO2dvb2cuZG9tLnNhZmUuc2V0Tm9uY2VGb3JTY3JpcHRFbGVtZW50XyhhKTthLnRleHRDb250ZW50PW1vZHVsZSRjb250ZW50cyRnb29nJGh0bWwkU2FmZVNjcmlwdF9TYWZlU2NyaXB0LnVud3JhcFRydXN0ZWRTY3JpcHQoYil9O2dvb2cuZG9tLnNhZmUuc2V0Tm9uY2VGb3JTY3JpcHRFbGVtZW50Xz1mdW5jdGlvbihhKXtjb25zdCBiPWdvb2cuZG9tLnNhZmUuZ2V0U2NyaXB0Tm9uY2UoYS5vd25lckRvY3VtZW50JiZhLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcpO2ImJmEuc2V0QXR0cmlidXRlKCJub25jZSIsYil9Owpnb29nLmRvbS5zYWZlLnNldExvY2F0aW9uSHJlZj1mdW5jdGlvbihhLGIpe2dvb2cuZG9tLmFzc2VydHMuYXNzZXJ0SXNMb2NhdGlvbihhKTtiPWIgaW5zdGFuY2VvZiBnb29nLmh0bWwuU2FmZVVybD9iOmdvb2cuaHRtbC5TYWZlVXJsLnNhbml0aXplQXNzZXJ0VW5jaGFuZ2VkKGIpO2EuaHJlZj1nb29nLmh0bWwuU2FmZVVybC51bndyYXAoYil9O2dvb2cuZG9tLnNhZmUuYXNzaWduTG9jYXRpb249ZnVuY3Rpb24oYSxiKXtnb29nLmRvbS5hc3NlcnRzLmFzc2VydElzTG9jYXRpb24oYSk7Yj1iIGluc3RhbmNlb2YgZ29vZy5odG1sLlNhZmVVcmw/Yjpnb29nLmh0bWwuU2FmZVVybC5zYW5pdGl6ZUFzc2VydFVuY2hhbmdlZChiKTthLmFzc2lnbihnb29nLmh0bWwuU2FmZVVybC51bndyYXAoYikpfTsKZ29vZy5kb20uc2FmZS5yZXBsYWNlTG9jYXRpb249ZnVuY3Rpb24oYSxiKXtiPWIgaW5zdGFuY2VvZiBnb29nLmh0bWwuU2FmZVVybD9iOmdvb2cuaHRtbC5TYWZlVXJsLnNhbml0aXplQXNzZXJ0VW5jaGFuZ2VkKGIpO2EucmVwbGFjZShnb29nLmh0bWwuU2FmZVVybC51bndyYXAoYikpfTtnb29nLmRvbS5zYWZlLm9wZW5JbldpbmRvdz1mdW5jdGlvbihhLGIsYyxkKXthPWEgaW5zdGFuY2VvZiBnb29nLmh0bWwuU2FmZVVybD9hOmdvb2cuaHRtbC5TYWZlVXJsLnNhbml0aXplQXNzZXJ0VW5jaGFuZ2VkKGEpO2I9Ynx8Z29vZy5nbG9iYWw7Yz1jIGluc3RhbmNlb2YgZ29vZy5zdHJpbmcuQ29uc3Q/Z29vZy5zdHJpbmcuQ29uc3QudW53cmFwKGMpOmN8fCIiO3JldHVybiB2b2lkIDAhPT1kP2Iub3Blbihnb29nLmh0bWwuU2FmZVVybC51bndyYXAoYSksYyxkKTpiLm9wZW4oZ29vZy5odG1sLlNhZmVVcmwudW53cmFwKGEpLGMpfTsKZ29vZy5kb20uc2FmZS5wYXJzZUZyb21TdHJpbmdIdG1sPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGdvb2cuZG9tLnNhZmUucGFyc2VGcm9tU3RyaW5nKGEsYiwidGV4dC9odG1sIil9O2dvb2cuZG9tLnNhZmUucGFyc2VGcm9tU3RyaW5nPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYS5wYXJzZUZyb21TdHJpbmcobW9kdWxlJGNvbnRlbnRzJGdvb2ckaHRtbCRTYWZlSHRtbF9TYWZlSHRtbC51bndyYXBUcnVzdGVkSFRNTChiKSxjKX07Cmdvb2cuZG9tLnNhZmUuY3JlYXRlSW1hZ2VGcm9tQmxvYj1mdW5jdGlvbihhKXtpZighL15pbWFnZVwvLiovZy50ZXN0KGEudHlwZSkpdGhyb3cgRXJyb3IoImdvb2cuZG9tLnNhZmUuY3JlYXRlSW1hZ2VGcm9tQmxvYiBvbmx5IGFjY2VwdHMgTUlNRSB0eXBlIGltYWdlLy4qLiIpO3ZhciBiPWdvb2cuZ2xvYmFsLlVSTC5jcmVhdGVPYmplY3RVUkwoYSk7YT1uZXcgZ29vZy5nbG9iYWwuSW1hZ2U7YS5vbmxvYWQ9ZnVuY3Rpb24oKXtnb29nLmdsb2JhbC5VUkwucmV2b2tlT2JqZWN0VVJMKGIpfTthLnNyYz1iO3JldHVybiBhfTtnb29nLmRvbS5zYWZlLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudD1mdW5jdGlvbihhLGIpe3JldHVybiBhLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudChtb2R1bGUkY29udGVudHMkZ29vZyRodG1sJFNhZmVIdG1sX1NhZmVIdG1sLnVud3JhcFRydXN0ZWRIVE1MKGIpKX07Cmdvb2cuZG9tLnNhZmUuZ2V0U2NyaXB0Tm9uY2U9ZnVuY3Rpb24oYSl7cmV0dXJuIGdvb2cuZG9tLnNhZmUuZ2V0Tm9uY2VfKCJzY3JpcHRbbm9uY2VdIixhKX07Z29vZy5kb20uc2FmZS5nZXRTdHlsZU5vbmNlPWZ1bmN0aW9uKGEpe3JldHVybiBnb29nLmRvbS5zYWZlLmdldE5vbmNlXygnc3R5bGVbbm9uY2VdLGxpbmtbcmVsPSJzdHlsZXNoZWV0Il1bbm9uY2VdJyxhKX07Z29vZy5kb20uc2FmZS5OT05DRV9QQVRURVJOXz0vXltcdysvXy1dK1s9XXswLDJ9JC87Z29vZy5kb20uc2FmZS5nZXROb25jZV89ZnVuY3Rpb24oYSxiKXtiPShifHxnb29nLmdsb2JhbCkuZG9jdW1lbnQ7cmV0dXJuIGIucXVlcnlTZWxlY3Rvcj8oYT1iLnF1ZXJ5U2VsZWN0b3IoYSkpJiYoYT1hLm5vbmNlfHxhLmdldEF0dHJpYnV0ZSgibm9uY2UiKSkmJmdvb2cuZG9tLnNhZmUuTk9OQ0VfUEFUVEVSTl8udGVzdChhKT9hOiIiOiIifTtnb29nLnN0cmluZy5ERVRFQ1RfRE9VQkxFX0VTQ0FQSU5HPSExO2dvb2cuc3RyaW5nLkZPUkNFX05PTl9ET01fSFRNTF9VTkVTQ0FQSU5HPSExO2dvb2cuc3RyaW5nLlVuaWNvZGU9e05CU1A6Ilx1MDBhMCIsWkVST19XSURUSF9TUEFDRToiXHUyMDBiIn07Z29vZy5zdHJpbmcuc3RhcnRzV2l0aD1nb29nLnN0cmluZy5pbnRlcm5hbC5zdGFydHNXaXRoO2dvb2cuc3RyaW5nLmVuZHNXaXRoPWdvb2cuc3RyaW5nLmludGVybmFsLmVuZHNXaXRoO2dvb2cuc3RyaW5nLmNhc2VJbnNlbnNpdGl2ZVN0YXJ0c1dpdGg9Z29vZy5zdHJpbmcuaW50ZXJuYWwuY2FzZUluc2Vuc2l0aXZlU3RhcnRzV2l0aDtnb29nLnN0cmluZy5jYXNlSW5zZW5zaXRpdmVFbmRzV2l0aD1nb29nLnN0cmluZy5pbnRlcm5hbC5jYXNlSW5zZW5zaXRpdmVFbmRzV2l0aDtnb29nLnN0cmluZy5jYXNlSW5zZW5zaXRpdmVFcXVhbHM9Z29vZy5zdHJpbmcuaW50ZXJuYWwuY2FzZUluc2Vuc2l0aXZlRXF1YWxzOwpnb29nLnN0cmluZy5zdWJzPWZ1bmN0aW9uKGEsYil7Y29uc3QgYz1hLnNwbGl0KCIlcyIpO2xldCBkPSIiO2NvbnN0IGU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO2Zvcig7ZS5sZW5ndGgmJjE8Yy5sZW5ndGg7KWQrPWMuc2hpZnQoKStlLnNoaWZ0KCk7cmV0dXJuIGQrYy5qb2luKCIlcyIpfTtnb29nLnN0cmluZy5jb2xsYXBzZVdoaXRlc3BhY2U9ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVwbGFjZSgvW1xzXHhhMF0rL2csIiAiKS5yZXBsYWNlKC9eXHMrfFxzKyQvZywiIil9O2dvb2cuc3RyaW5nLmlzRW1wdHlPcldoaXRlc3BhY2U9Z29vZy5zdHJpbmcuaW50ZXJuYWwuaXNFbXB0eU9yV2hpdGVzcGFjZTtnb29nLnN0cmluZy5pc0VtcHR5U3RyaW5nPWZ1bmN0aW9uKGEpe3JldHVybiAwPT1hLmxlbmd0aH07Z29vZy5zdHJpbmcuaXNFbXB0eT1nb29nLnN0cmluZy5pc0VtcHR5T3JXaGl0ZXNwYWNlOwpnb29nLnN0cmluZy5pc0VtcHR5T3JXaGl0ZXNwYWNlU2FmZT1mdW5jdGlvbihhKXtyZXR1cm4gZ29vZy5zdHJpbmcuaXNFbXB0eU9yV2hpdGVzcGFjZShnb29nLnN0cmluZy5tYWtlU2FmZShhKSl9O2dvb2cuc3RyaW5nLmlzRW1wdHlTYWZlPWdvb2cuc3RyaW5nLmlzRW1wdHlPcldoaXRlc3BhY2VTYWZlO2dvb2cuc3RyaW5nLmlzQnJlYWtpbmdXaGl0ZXNwYWNlPWZ1bmN0aW9uKGEpe3JldHVybiEvW15cdFxuXHIgXS8udGVzdChhKX07Z29vZy5zdHJpbmcuaXNBbHBoYT1mdW5jdGlvbihhKXtyZXR1cm4hL1teYS16QS1aXS8udGVzdChhKX07Z29vZy5zdHJpbmcuaXNOdW1lcmljPWZ1bmN0aW9uKGEpe3JldHVybiEvW14wLTldLy50ZXN0KGEpfTtnb29nLnN0cmluZy5pc0FscGhhTnVtZXJpYz1mdW5jdGlvbihhKXtyZXR1cm4hL1teYS16QS1aMC05XS8udGVzdChhKX07Z29vZy5zdHJpbmcuaXNTcGFjZT1mdW5jdGlvbihhKXtyZXR1cm4iICI9PWF9Owpnb29nLnN0cmluZy5pc1VuaWNvZGVDaGFyPWZ1bmN0aW9uKGEpe3JldHVybiAxPT1hLmxlbmd0aCYmIiAiPD1hJiYifiI+PWF8fCJcdTAwODAiPD1hJiYiXHVmZmZkIj49YX07Z29vZy5zdHJpbmcuc3RyaXBOZXdsaW5lcz1mdW5jdGlvbihhKXtyZXR1cm4gYS5yZXBsYWNlKC8oXHJcbnxccnxcbikrL2csIiAiKX07Z29vZy5zdHJpbmcuY2Fub25pY2FsaXplTmV3bGluZXM9ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVwbGFjZSgvKFxyXG58XHJ8XG4pL2csIlxuIil9O2dvb2cuc3RyaW5nLm5vcm1hbGl6ZVdoaXRlc3BhY2U9ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVwbGFjZSgvXHhhMHxccy9nLCIgIil9O2dvb2cuc3RyaW5nLm5vcm1hbGl6ZVNwYWNlcz1mdW5jdGlvbihhKXtyZXR1cm4gYS5yZXBsYWNlKC9ceGEwfFsgXHRdKy9nLCIgIil9Owpnb29nLnN0cmluZy5jb2xsYXBzZUJyZWFraW5nU3BhY2VzPWZ1bmN0aW9uKGEpe3JldHVybiBhLnJlcGxhY2UoL1tcdFxyXG4gXSsvZywiICIpLnJlcGxhY2UoL15bXHRcclxuIF0rfFtcdFxyXG4gXSskL2csIiIpfTtnb29nLnN0cmluZy50cmltPWdvb2cuc3RyaW5nLmludGVybmFsLnRyaW07Z29vZy5zdHJpbmcudHJpbUxlZnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVwbGFjZSgvXltcc1x4YTBdKy8sIiIpfTtnb29nLnN0cmluZy50cmltUmlnaHQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVwbGFjZSgvW1xzXHhhMF0rJC8sIiIpfTtnb29nLnN0cmluZy5jYXNlSW5zZW5zaXRpdmVDb21wYXJlPWdvb2cuc3RyaW5nLmludGVybmFsLmNhc2VJbnNlbnNpdGl2ZUNvbXBhcmU7Cmdvb2cuc3RyaW5nLm51bWJlckF3YXJlQ29tcGFyZV89ZnVuY3Rpb24oYSxiLGMpe2lmKGE9PWIpcmV0dXJuIDA7aWYoIWEpcmV0dXJuLTE7aWYoIWIpcmV0dXJuIDE7Y29uc3QgZD1hLnRvTG93ZXJDYXNlKCkubWF0Y2goYyksZT1iLnRvTG93ZXJDYXNlKCkubWF0Y2goYyksZj1NYXRoLm1pbihkLmxlbmd0aCxlLmxlbmd0aCk7Zm9yKGxldCBnPTA7ZzxmO2crKyl7Yz1kW2ddO2NvbnN0IGg9ZVtnXTtpZihjIT1oKXJldHVybiBhPXBhcnNlSW50KGMsMTApLCFpc05hTihhKSYmKGI9cGFyc2VJbnQoaCwxMCksIWlzTmFOKGIpJiZhLWIpP2EtYjpjPGg/LTE6MX1yZXR1cm4gZC5sZW5ndGghPWUubGVuZ3RoP2QubGVuZ3RoLWUubGVuZ3RoOmE8Yj8tMToxfTtnb29nLnN0cmluZy5pbnRBd2FyZUNvbXBhcmU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZ29vZy5zdHJpbmcubnVtYmVyQXdhcmVDb21wYXJlXyhhLGIsL1xkK3xcRCsvZyl9Owpnb29nLnN0cmluZy5mbG9hdEF3YXJlQ29tcGFyZT1mdW5jdGlvbihhLGIpe3JldHVybiBnb29nLnN0cmluZy5udW1iZXJBd2FyZUNvbXBhcmVfKGEsYiwvXGQrfFwuXGQrfFxEKy9nKX07Z29vZy5zdHJpbmcubnVtZXJhdGVDb21wYXJlPWdvb2cuc3RyaW5nLmZsb2F0QXdhcmVDb21wYXJlO2dvb2cuc3RyaW5nLnVybEVuY29kZT1mdW5jdGlvbihhKXtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KFN0cmluZyhhKSl9O2dvb2cuc3RyaW5nLnVybERlY29kZT1mdW5jdGlvbihhKXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGEucmVwbGFjZSgvXCsvZywiICIpKX07Z29vZy5zdHJpbmcubmV3TGluZVRvQnI9Z29vZy5zdHJpbmcuaW50ZXJuYWwubmV3TGluZVRvQnI7Cmdvb2cuc3RyaW5nLmh0bWxFc2NhcGU9ZnVuY3Rpb24oYSxiKXthPWdvb2cuc3RyaW5nLmludGVybmFsLmh0bWxFc2NhcGUoYSxiKTtnb29nLnN0cmluZy5ERVRFQ1RfRE9VQkxFX0VTQ0FQSU5HJiYoYT1hLnJlcGxhY2UoZ29vZy5zdHJpbmcuRV9SRV8sIiYjMTAxOyIpKTtyZXR1cm4gYX07Z29vZy5zdHJpbmcuRV9SRV89L2UvZztnb29nLnN0cmluZy51bmVzY2FwZUVudGl0aWVzPWZ1bmN0aW9uKGEpe3JldHVybiBnb29nLnN0cmluZy5jb250YWlucyhhLCImIik/IWdvb2cuc3RyaW5nLkZPUkNFX05PTl9ET01fSFRNTF9VTkVTQ0FQSU5HJiYiZG9jdW1lbnQiaW4gZ29vZy5nbG9iYWw/Z29vZy5zdHJpbmcudW5lc2NhcGVFbnRpdGllc1VzaW5nRG9tXyhhKTpnb29nLnN0cmluZy51bmVzY2FwZVB1cmVYbWxFbnRpdGllc18oYSk6YX07Cmdvb2cuc3RyaW5nLnVuZXNjYXBlRW50aXRpZXNXaXRoRG9jdW1lbnQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZ29vZy5zdHJpbmcuY29udGFpbnMoYSwiJiIpP2dvb2cuc3RyaW5nLnVuZXNjYXBlRW50aXRpZXNVc2luZ0RvbV8oYSxiKTphfTsKZ29vZy5zdHJpbmcudW5lc2NhcGVFbnRpdGllc1VzaW5nRG9tXz1mdW5jdGlvbihhLGIpe2NvbnN0IGM9eyImYW1wOyI6IiYiLCImbHQ7IjoiPCIsIiZndDsiOiI+IiwiJnF1b3Q7IjonIid9O2xldCBkO2Q9Yj9iLmNyZWF0ZUVsZW1lbnQoImRpdiIpOmdvb2cuZ2xvYmFsLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3JldHVybiBhLnJlcGxhY2UoZ29vZy5zdHJpbmcuSFRNTF9FTlRJVFlfUEFUVEVSTl8sZnVuY3Rpb24oZSxmKXtsZXQgZz1jW2VdO2lmKGcpcmV0dXJuIGc7IiMiPT1mLmNoYXJBdCgwKSYmKGY9TnVtYmVyKCIwIitmLnNsaWNlKDEpKSxpc05hTihmKXx8KGc9U3RyaW5nLmZyb21DaGFyQ29kZShmKSkpO2d8fChnb29nLmRvbS5zYWZlLnNldElubmVySHRtbChkLGdvb2cuaHRtbC51bmNoZWNrZWRjb252ZXJzaW9ucy5zYWZlSHRtbEZyb21TdHJpbmdLbm93blRvU2F0aXNmeVR5cGVDb250cmFjdChnb29nLnN0cmluZy5Db25zdC5mcm9tKCJTaW5nbGUgSFRNTCBlbnRpdHkuIiksCmUrIiAiKSksZz1kLmZpcnN0Q2hpbGQubm9kZVZhbHVlLnNsaWNlKDAsLTEpKTtyZXR1cm4gY1tlXT1nfSl9O2dvb2cuc3RyaW5nLnVuZXNjYXBlUHVyZVhtbEVudGl0aWVzXz1mdW5jdGlvbihhKXtyZXR1cm4gYS5yZXBsYWNlKC8mKFteO10rKTsvZyxmdW5jdGlvbihiLGMpe3N3aXRjaChjKXtjYXNlICJhbXAiOnJldHVybiImIjtjYXNlICJsdCI6cmV0dXJuIjwiO2Nhc2UgImd0IjpyZXR1cm4iPiI7Y2FzZSAicXVvdCI6cmV0dXJuJyInO2RlZmF1bHQ6cmV0dXJuIiMiIT1jLmNoYXJBdCgwKXx8KGM9TnVtYmVyKCIwIitjLnNsaWNlKDEpKSxpc05hTihjKSk/YjpTdHJpbmcuZnJvbUNoYXJDb2RlKGMpfX0pfTtnb29nLnN0cmluZy5IVE1MX0VOVElUWV9QQVRURVJOXz0vJihbXjtcczwmXSspOz8vZztnb29nLnN0cmluZy53aGl0ZXNwYWNlRXNjYXBlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGdvb2cuc3RyaW5nLm5ld0xpbmVUb0JyKGEucmVwbGFjZSgvICAvZywiICYjMTYwOyIpLGIpfTsKZ29vZy5zdHJpbmcucHJlc2VydmVTcGFjZXM9ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVwbGFjZSgvKF58W1xuIF0pIC9nLCIkMSIrZ29vZy5zdHJpbmcuVW5pY29kZS5OQlNQKX07Z29vZy5zdHJpbmcuc3RyaXBRdW90ZXM9ZnVuY3Rpb24oYSxiKXtjb25zdCBjPWIubGVuZ3RoO2ZvcihsZXQgZD0wO2Q8YztkKyspe2NvbnN0IGU9MT09Yz9iOmIuY2hhckF0KGQpO2lmKGEuY2hhckF0KDApPT1lJiZhLmNoYXJBdChhLmxlbmd0aC0xKT09ZSlyZXR1cm4gYS5zdWJzdHJpbmcoMSxhLmxlbmd0aC0xKX1yZXR1cm4gYX07Z29vZy5zdHJpbmcudHJ1bmNhdGU9ZnVuY3Rpb24oYSxiLGMpe2MmJihhPWdvb2cuc3RyaW5nLnVuZXNjYXBlRW50aXRpZXMoYSkpO2EubGVuZ3RoPmImJihhPWEuc3Vic3RyaW5nKDAsYi0zKSsiLi4uIik7YyYmKGE9Z29vZy5zdHJpbmcuaHRtbEVzY2FwZShhKSk7cmV0dXJuIGF9Owpnb29nLnN0cmluZy50cnVuY2F0ZU1pZGRsZT1mdW5jdGlvbihhLGIsYyxkKXtjJiYoYT1nb29nLnN0cmluZy51bmVzY2FwZUVudGl0aWVzKGEpKTtpZihkJiZhLmxlbmd0aD5iKXtkPmImJihkPWIpO3ZhciBlPWEubGVuZ3RoLWQ7YT1hLnN1YnN0cmluZygwLGItZCkrIi4uLiIrYS5zdWJzdHJpbmcoZSl9ZWxzZSBhLmxlbmd0aD5iJiYoZD1NYXRoLmZsb29yKGIvMiksZT1hLmxlbmd0aC1kLGE9YS5zdWJzdHJpbmcoMCxkK2IlMikrIi4uLiIrYS5zdWJzdHJpbmcoZSkpO2MmJihhPWdvb2cuc3RyaW5nLmh0bWxFc2NhcGUoYSkpO3JldHVybiBhfTtnb29nLnN0cmluZy5zcGVjaWFsRXNjYXBlQ2hhcnNfPXsiXHgwMCI6IlxcMCIsIlxiIjoiXFxiIiwiXGYiOiJcXGYiLCJcbiI6IlxcbiIsIlxyIjoiXFxyIiwiXHQiOiJcXHQiLCJcdiI6IlxceDBCIiwnIic6J1xcIicsIlxcIjoiXFxcXCIsIjwiOiJcXHUwMDNDIn07Z29vZy5zdHJpbmcuanNFc2NhcGVDYWNoZV89eyInIjoiXFwnIn07Cmdvb2cuc3RyaW5nLnF1b3RlPWZ1bmN0aW9uKGEpe2E9U3RyaW5nKGEpO2NvbnN0IGI9WyciJ107Zm9yKGxldCBjPTA7YzxhLmxlbmd0aDtjKyspe2NvbnN0IGQ9YS5jaGFyQXQoYyksZT1kLmNoYXJDb2RlQXQoMCk7YltjKzFdPWdvb2cuc3RyaW5nLnNwZWNpYWxFc2NhcGVDaGFyc19bZF18fCgzMTxlJiYxMjc+ZT9kOmdvb2cuc3RyaW5nLmVzY2FwZUNoYXIoZCkpfWIucHVzaCgnIicpO3JldHVybiBiLmpvaW4oIiIpfTtnb29nLnN0cmluZy5lc2NhcGVTdHJpbmc9ZnVuY3Rpb24oYSl7Y29uc3QgYj1bXTtmb3IobGV0IGM9MDtjPGEubGVuZ3RoO2MrKyliW2NdPWdvb2cuc3RyaW5nLmVzY2FwZUNoYXIoYS5jaGFyQXQoYykpO3JldHVybiBiLmpvaW4oIiIpfTsKZ29vZy5zdHJpbmcuZXNjYXBlQ2hhcj1mdW5jdGlvbihhKXtpZihhIGluIGdvb2cuc3RyaW5nLmpzRXNjYXBlQ2FjaGVfKXJldHVybiBnb29nLnN0cmluZy5qc0VzY2FwZUNhY2hlX1thXTtpZihhIGluIGdvb2cuc3RyaW5nLnNwZWNpYWxFc2NhcGVDaGFyc18pcmV0dXJuIGdvb2cuc3RyaW5nLmpzRXNjYXBlQ2FjaGVfW2FdPWdvb2cuc3RyaW5nLnNwZWNpYWxFc2NhcGVDaGFyc19bYV07bGV0IGI7Y29uc3QgYz1hLmNoYXJDb2RlQXQoMCk7aWYoMzE8YyYmMTI3PmMpYj1hO2Vsc2V7aWYoMjU2PmMpe2lmKGI9IlxceCIsMTY+Y3x8MjU2PGMpYis9IjAifWVsc2UgYj0iXFx1Iiw0MDk2PmMmJihiKz0iMCIpO2IrPWMudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCl9cmV0dXJuIGdvb2cuc3RyaW5nLmpzRXNjYXBlQ2FjaGVfW2FdPWJ9O2dvb2cuc3RyaW5nLmNvbnRhaW5zPWdvb2cuc3RyaW5nLmludGVybmFsLmNvbnRhaW5zOwpnb29nLnN0cmluZy5jYXNlSW5zZW5zaXRpdmVDb250YWlucz1nb29nLnN0cmluZy5pbnRlcm5hbC5jYXNlSW5zZW5zaXRpdmVDb250YWlucztnb29nLnN0cmluZy5jb3VudE9mPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGEmJmI/YS5zcGxpdChiKS5sZW5ndGgtMTowfTtnb29nLnN0cmluZy5yZW1vdmVBdD1mdW5jdGlvbihhLGIsYyl7bGV0IGQ9YTswPD1iJiZiPGEubGVuZ3RoJiYwPGMmJihkPWEuc2xpY2UoMCxiKSthLnNsaWNlKGIrYykpO3JldHVybiBkfTtnb29nLnN0cmluZy5yZW1vdmU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS5yZXBsYWNlKGIsIiIpfTtnb29nLnN0cmluZy5yZW1vdmVBbGw9ZnVuY3Rpb24oYSxiKXtiPW5ldyBSZWdFeHAoZ29vZy5zdHJpbmcucmVnRXhwRXNjYXBlKGIpLCJnIik7cmV0dXJuIGEucmVwbGFjZShiLCIiKX07Cmdvb2cuc3RyaW5nLnJlcGxhY2VBbGw9ZnVuY3Rpb24oYSxiLGMpe2I9bmV3IFJlZ0V4cChnb29nLnN0cmluZy5yZWdFeHBFc2NhcGUoYiksImciKTtyZXR1cm4gYS5yZXBsYWNlKGIsYy5yZXBsYWNlKC9cJC9nLCIkJCQkIikpfTtnb29nLnN0cmluZy5yZWdFeHBFc2NhcGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFN0cmluZyhhKS5yZXBsYWNlKC8oWy0oKVxbXF17fSs/Ki4kXF58LDojPCFcXF0pL2csIlxcJDEiKS5yZXBsYWNlKC9ceDA4L2csIlxceDA4Iil9O2dvb2cuc3RyaW5nLnJlcGVhdD1TdHJpbmcucHJvdG90eXBlLnJlcGVhdD9mdW5jdGlvbihhLGIpe3JldHVybiBhLnJlcGVhdChiKX06ZnVuY3Rpb24oYSxiKXtyZXR1cm4gQXJyYXkoYisxKS5qb2luKGEpfTsKZ29vZy5zdHJpbmcucGFkTnVtYmVyPWZ1bmN0aW9uKGEsYixjKXtpZighTnVtYmVyLmlzRmluaXRlKGEpKXJldHVybiBTdHJpbmcoYSk7YT12b2lkIDAhPT1jP2EudG9GaXhlZChjKTpTdHJpbmcoYSk7Yz1hLmluZGV4T2YoIi4iKTstMT09PWMmJihjPWEubGVuZ3RoKTtjb25zdCBkPSItIj09PWFbMF0/Ii0iOiIiO2QmJihhPWEuc3Vic3RyaW5nKDEpKTtyZXR1cm4gZCtnb29nLnN0cmluZy5yZXBlYXQoIjAiLE1hdGgubWF4KDAsYi1jKSkrYX07Z29vZy5zdHJpbmcubWFrZVNhZmU9ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWE/IiI6U3RyaW5nKGEpfTtnb29nLnN0cmluZy5nZXRSYW5kb21TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5mbG9vcigyMTQ3NDgzNjQ4Kk1hdGgucmFuZG9tKCkpLnRvU3RyaW5nKDM2KStNYXRoLmFicyhNYXRoLmZsb29yKDIxNDc0ODM2NDgqTWF0aC5yYW5kb20oKSleZ29vZy5ub3coKSkudG9TdHJpbmcoMzYpfTsKZ29vZy5zdHJpbmcuY29tcGFyZVZlcnNpb25zPWdvb2cuc3RyaW5nLmludGVybmFsLmNvbXBhcmVWZXJzaW9ucztnb29nLnN0cmluZy5oYXNoQ29kZT1mdW5jdGlvbihhKXtsZXQgYj0wO2ZvcihsZXQgYz0wO2M8YS5sZW5ndGg7KytjKWI9MzEqYithLmNoYXJDb2RlQXQoYyk+Pj4wO3JldHVybiBifTtnb29nLnN0cmluZy51bmlxdWVTdHJpbmdDb3VudGVyXz0yMTQ3NDgzNjQ4Kk1hdGgucmFuZG9tKCl8MDtnb29nLnN0cmluZy5jcmVhdGVVbmlxdWVTdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iZ29vZ18iK2dvb2cuc3RyaW5nLnVuaXF1ZVN0cmluZ0NvdW50ZXJfKyt9O2dvb2cuc3RyaW5nLnRvTnVtYmVyPWZ1bmN0aW9uKGEpe2NvbnN0IGI9TnVtYmVyKGEpO3JldHVybiAwPT1iJiZnb29nLnN0cmluZy5pc0VtcHR5T3JXaGl0ZXNwYWNlKGEpP05hTjpifTtnb29nLnN0cmluZy5pc0xvd2VyQ2FtZWxDYXNlPWZ1bmN0aW9uKGEpe3JldHVybi9eW2Etel0rKFtBLVpdW2Etel0qKSokLy50ZXN0KGEpfTsKZ29vZy5zdHJpbmcuaXNVcHBlckNhbWVsQ2FzZT1mdW5jdGlvbihhKXtyZXR1cm4vXihbQS1aXVthLXpdKikrJC8udGVzdChhKX07Z29vZy5zdHJpbmcudG9DYW1lbENhc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIFN0cmluZyhhKS5yZXBsYWNlKC9cLShbYS16XSkvZyxmdW5jdGlvbihiLGMpe3JldHVybiBjLnRvVXBwZXJDYXNlKCl9KX07Z29vZy5zdHJpbmcudG9TZWxlY3RvckNhc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIFN0cmluZyhhKS5yZXBsYWNlKC8oW0EtWl0pL2csIi0kMSIpLnRvTG93ZXJDYXNlKCl9O2dvb2cuc3RyaW5nLnRvVGl0bGVDYXNlPWZ1bmN0aW9uKGEsYil7Yj0ic3RyaW5nIj09PXR5cGVvZiBiP2dvb2cuc3RyaW5nLnJlZ0V4cEVzY2FwZShiKToiXFxzIjtyZXR1cm4gYS5yZXBsYWNlKG5ldyBSZWdFeHAoIiheIisoYj8ifFsiK2IrIl0rIjoiIikrIikoW2Etel0pIiwiZyIpLGZ1bmN0aW9uKGMsZCxlKXtyZXR1cm4gZCtlLnRvVXBwZXJDYXNlKCl9KX07Cmdvb2cuc3RyaW5nLmNhcGl0YWxpemU9ZnVuY3Rpb24oYSl7cmV0dXJuIFN0cmluZyhhLmNoYXJBdCgwKSkudG9VcHBlckNhc2UoKStTdHJpbmcoYS5zbGljZSgxKSkudG9Mb3dlckNhc2UoKX07Z29vZy5zdHJpbmcucGFyc2VJbnQ9ZnVuY3Rpb24oYSl7aXNGaW5pdGUoYSkmJihhPVN0cmluZyhhKSk7cmV0dXJuInN0cmluZyI9PT10eXBlb2YgYT8vXlxzKi0/MHgvaS50ZXN0KGEpP3BhcnNlSW50KGEsMTYpOnBhcnNlSW50KGEsMTApOk5hTn07Z29vZy5zdHJpbmcuc3BsaXRMaW1pdD1mdW5jdGlvbihhLGIsYyl7YT1hLnNwbGl0KGIpO2NvbnN0IGQ9W107Zm9yKDswPGMmJmEubGVuZ3RoOylkLnB1c2goYS5zaGlmdCgpKSxjLS07YS5sZW5ndGgmJmQucHVzaChhLmpvaW4oYikpO3JldHVybiBkfTsKZ29vZy5zdHJpbmcubGFzdENvbXBvbmVudD1mdW5jdGlvbihhLGIpe2lmKGIpInN0cmluZyI9PXR5cGVvZiBiJiYoYj1bYl0pO2Vsc2UgcmV0dXJuIGE7bGV0IGM9LTE7Zm9yKGxldCBkPTA7ZDxiLmxlbmd0aDtkKyspe2lmKCIiPT1iW2RdKWNvbnRpbnVlO2NvbnN0IGU9YS5sYXN0SW5kZXhPZihiW2RdKTtlPmMmJihjPWUpfXJldHVybi0xPT1jP2E6YS5zbGljZShjKzEpfTsKZ29vZy5zdHJpbmcuZWRpdERpc3RhbmNlPWZ1bmN0aW9uKGEsYil7Y29uc3QgYz1bXSxkPVtdO2lmKGE9PWIpcmV0dXJuIDA7aWYoIWEubGVuZ3RofHwhYi5sZW5ndGgpcmV0dXJuIE1hdGgubWF4KGEubGVuZ3RoLGIubGVuZ3RoKTtmb3IodmFyIGU9MDtlPGIubGVuZ3RoKzE7ZSsrKWNbZV09ZTtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtkWzBdPWUrMTtmb3IodmFyIGY9MDtmPGIubGVuZ3RoO2YrKylkW2YrMV09TWF0aC5taW4oZFtmXSsxLGNbZisxXSsxLGNbZl0rTnVtYmVyKGFbZV0hPWJbZl0pKTtmb3IoZj0wO2Y8Yy5sZW5ndGg7ZisrKWNbZl09ZFtmXX1yZXR1cm4gZFtiLmxlbmd0aF19O2dvb2cuc3RyaW5nLnBhdGg9e307Z29vZy5zdHJpbmcucGF0aC5iYXNlTmFtZT1mdW5jdGlvbihhKXtjb25zdCBiPWEubGFzdEluZGV4T2YoIi8iKSsxO3JldHVybiBhLnNsaWNlKGIpfTtnb29nLnN0cmluZy5wYXRoLmJhc2VuYW1lPWdvb2cuc3RyaW5nLnBhdGguYmFzZU5hbWU7Z29vZy5zdHJpbmcucGF0aC5kaXJuYW1lPWZ1bmN0aW9uKGEpe2NvbnN0IGI9YS5sYXN0SW5kZXhPZigiLyIpKzE7YT1hLnNsaWNlKDAsYik7L15cLyskLy50ZXN0KGEpfHwoYT1hLnJlcGxhY2UoL1wvKyQvLCIiKSk7cmV0dXJuIGF9O2dvb2cuc3RyaW5nLnBhdGguZXh0ZW5zaW9uPWZ1bmN0aW9uKGEpe2E9Z29vZy5zdHJpbmcucGF0aC5iYXNlTmFtZShhKS5yZXBsYWNlKC9cLisvZywiLiIpO2NvbnN0IGI9YS5sYXN0SW5kZXhPZigiLiIpO3JldHVybiAwPj1iPyIiOmEuc2xpY2UoYisxKX07Cmdvb2cuc3RyaW5nLnBhdGguam9pbj1mdW5jdGlvbihhKXtsZXQgYj1hcmd1bWVudHNbMF07Zm9yKGxldCBjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyl7Y29uc3QgZD1hcmd1bWVudHNbY107Yj1nb29nLnN0cmluZy5zdGFydHNXaXRoKGQsIi8iKT9kOiIiPT1ifHxnb29nLnN0cmluZy5lbmRzV2l0aChiLCIvIik/YitkOmIrKCIvIitkKX1yZXR1cm4gYn07Cmdvb2cuc3RyaW5nLnBhdGgubm9ybWFsaXplUGF0aD1mdW5jdGlvbihhKXtpZigiIj09YSlyZXR1cm4iLiI7bGV0IGI9IiI7Z29vZy5zdHJpbmcuc3RhcnRzV2l0aChhLCIvIikmJihiPSIvIixnb29nLnN0cmluZy5zdGFydHNXaXRoKGEsIi8vIikmJiFnb29nLnN0cmluZy5zdGFydHNXaXRoKGEsIi8vLyIpJiYoYj0iLy8iKSk7YT1hLnNwbGl0KCIvIik7Y29uc3QgYz1bXTtmb3IobGV0IGQ9MDtkPGEubGVuZ3RoO2QrKyl7Y29uc3QgZT1hW2RdOyIiIT1lJiYiLiIhPWUmJigiLi4iIT1lfHwhYiYmIWMubGVuZ3RofHwiLi4iPT1tb2R1bGUkY29udGVudHMkZ29vZyRhcnJheV9wZWVrKGMpP2MucHVzaChlKTpjLnBvcCgpKX1yZXR1cm4gYitjLmpvaW4oIi8iKXx8Ii4ifTtnb29nLnN0cmluZy5wYXRoLnNwbGl0PWZ1bmN0aW9uKGEpe2NvbnN0IGI9Z29vZy5zdHJpbmcucGF0aC5kaXJuYW1lKGEpO2E9Z29vZy5zdHJpbmcucGF0aC5iYXNlTmFtZShhKTtyZXR1cm5bYixhXX07Y29uc3QgREVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2k9ITE7ZnVuY3Rpb24gYXNzZXJ0TGVhZGluZ1NsYXNoJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaShhKXtyZXR1cm4vXlwvL2cudGVzdChhKT9hOmAvJHthfWB9ZnVuY3Rpb24gcmVtb3ZlTGVhZGluZ1NsYXNoJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaShhKXtyZXR1cm4gYS5yZXBsYWNlKC9eXC8vZywiIil9ZnVuY3Rpb24gc2hvdWxkT3BlblJlYWRlciQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2koYSl7cmV0dXJuKGEmKFdBU0lfUklHSFRfRkRfUkVBRCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c3xXQVNJX1JJR0hUX0ZEX1JFQURESVIkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMpKSE9PWdvb2cuZ2xvYmFsLkJpZ0ludCgwKX0KZnVuY3Rpb24gcGVyZm9ybWFuY2VOb3dQb2x5JCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSgpe2lmKCJ1bmRlZmluZWQiPT09dHlwZW9mIHBlcmZvcm1hbmNlfHwidW5kZWZpbmVkIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe2NvbnN0IGE9RGF0ZS5ub3coKTtyZXR1cm4gRGF0ZS5ub3coKS1hfXJldHVybiBwZXJmb3JtYW5jZS5ub3coKX1mdW5jdGlvbiBjb25jYXRVaW50OEFycmF5cyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2koYSl7dmFyIGI9YS5yZWR1Y2UoKGQsZSk9PmQrZS5sZW5ndGgsMCk7aWYoMCE9PWEubGVuZ3RoKXtiPW5ldyBVaW50OEFycmF5KGIpO3ZhciBjPTA7Zm9yKGNvbnN0IGQgb2YgYSliLnNldChkLGMpLGMrPWQubGVuZ3RoO3JldHVybiBifX0KY29uc3QgV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2k9ZnVuY3Rpb24oe30pe3RoaXMuZmQ9QXJyYXkuZnJvbSh7bGVuZ3RoOjR9KTt0aGlzLmZkWzBdPXtmZDowLHBhdGg6Ii9kZXYvc3RkaW4iLHNlZWtQb3M6Z29vZy5nbG9iYWwuQmlnSW50KDApLGJ1ZmZlcnM6W119O3RoaXMuZmRbMV09e2ZkOjEscGF0aDoiL2Rldi9zdGRvdXQiLHNlZWtQb3M6Z29vZy5nbG9iYWwuQmlnSW50KDApLGJ1ZmZlcnM6W119O3RoaXMuZmRbMl09e2ZkOjIscGF0aDoiL2Rldi9zdGRlcnIiLHNlZWtQb3M6Z29vZy5nbG9iYWwuQmlnSW50KDApLGJ1ZmZlcnM6W119O3RoaXMuZmRbM109e2ZkOjMscGF0aDoiLyIsc2Vla1Bvczpnb29nLmdsb2JhbC5CaWdJbnQoMCksYnVmZmVyczpbXX07dGhpcy5nZXRNZW1vcnk9dGhpcy5nZXRNZW1vcnkuYmluZCh0aGlzKTt0aGlzLkNQVVRJTUVfU1RBUlQ9MH07CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbihhKXt0aGlzLkNQVVRJTUVfU1RBUlQ9cGVyZm9ybWFuY2VOb3dQb2x5JCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSgpO2EuZXhwb3J0cy5fc3RhcnQoKX07V0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLmdldEltcG9ydHM9ZnVuY3Rpb24oYSl7Y29uc3QgYj17fTthPVdlYkFzc2VtYmx5Lk1vZHVsZS5pbXBvcnRzKGEpO2Zvcihjb25zdCBjIG9mIGEpImZ1bmN0aW9uIj09PWMua2luZCYmYy5tb2R1bGUuc3RhcnRzV2l0aCgid2FzaV8iKSYmKCJvYmplY3QiIT09dHlwZW9mIGJbYy5tb2R1bGVdJiYoYltjLm1vZHVsZV09e30pLGJbYy5tb2R1bGVdW2MubmFtZV09dGhpc1tjLm5hbWVdLmJpbmQodGhpcykpO3JldHVybiBifTsKV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLnNldE1lbW9yeT1mdW5jdGlvbihhKXt0aGlzLm1lbW9yeT1hfTtXQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaS5wcm90b3R5cGUuZ2V0TWVtb3J5PWZ1bmN0aW9uKCl7dGhpcy52aWV3JiZ0aGlzLnZpZXcuYnVmZmVyJiZ0aGlzLnZpZXcuYnVmZmVyLmJ5dGVMZW5ndGh8fCh0aGlzLnZpZXc9bmV3IERhdGFWaWV3KHRoaXMubWVtb3J5LmJ1ZmZlcikpO3JldHVybiB0aGlzLnZpZXd9O1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5tc1RvTnM9ZnVuY3Rpb24oYSl7Y29uc3QgYj1NYXRoLnRydW5jKGEpO2E9Z29vZy5nbG9iYWwuQmlnSW50KE1hdGgucm91bmQoMUU2KihhLWIpKSk7cmV0dXJuIGdvb2cuZ2xvYmFsLkJpZ0ludChiKSpnb29nLmdsb2JhbC5CaWdJbnQoMUU2KSthfTsKV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLm5vdz1mdW5jdGlvbihhKXtzd2l0Y2goYSl7Y2FzZSBXQVNJX0NMT0NLX01PTk9UT05JQyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czpyZXR1cm4gTWF0aC5mbG9vcihwZXJmb3JtYW5jZU5vd1BvbHkkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpKCkpO2Nhc2UgV0FTSV9DTE9DS19SRUFMVElNRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czpyZXR1cm4gdGhpcy5tc1RvTnMoRGF0ZS5ub3coKSk7Y2FzZSBXQVNJX0NMT0NLX1BST0NFU1NfQ1BVVElNRV9JRCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czpjYXNlIFdBU0lfQ0xPQ0tfVEhSRUFEX0NQVVRJTUVfSUQkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHM6cmV0dXJuIE1hdGguZmxvb3IocGVyZm9ybWFuY2VOb3dQb2x5JCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSgpLXRoaXMuQ1BVVElNRV9TVEFSVCk7CmRlZmF1bHQ6cmV0dXJuIDB9fTtXQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaS5wcm90b3R5cGUuYXJnc19nZXQ9ZnVuY3Rpb24oYSxiKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coImFyZ3NfZ2V0IixhLGIsbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cyk7cmV0dXJuIFdBU0lfRVNVQ0NFU1MkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN9O1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5hcmdzX3NpemVzX2dldD1mdW5jdGlvbihhLGIpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygiYXJnc19zaXplc19nZXQiLGEsYixhcmd1bWVudHMpO3JldHVybiBXQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfTsKV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLmNsb2NrX3Jlc19nZXQ9ZnVuY3Rpb24oYSxiKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coImFyZ3NfZ2V0IixhLGIsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307V0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLmNsb2NrX3RpbWVfZ2V0PWZ1bmN0aW9uKGEsYixjKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coImNsb2NrX3RpbWVfZ2V0IixhLGIsYyxhcmd1bWVudHMpO2NvbnN0IGQ9dGhpcy5nZXRNZW1vcnkoKSxlPXRoaXMubm93KGEpO2Quc2V0QmlnVWludDY0KGMsZ29vZy5nbG9iYWwuQmlnSW50KGUpLCEwKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5lbnZpcm9uX2dldD1mdW5jdGlvbihhLGIpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygiZW52aXJvbl9nZXQiLGEsYixhcmd1bWVudHMpO3JldHVybiBXQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfTtXQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaS5wcm90b3R5cGUuZW52aXJvbl9zaXplc19nZXQ9ZnVuY3Rpb24oYSxiKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coImVudmlyb25fc2l6ZXNfZ2V0IixhLGIsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5mZF9hZHZpc2U9ZnVuY3Rpb24oYSxiLGMsZCl7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJmZF9hZHZpc2UiLGEsYixjLGQsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FTk9TWVMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN9O1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5mZF9hbGxvY2F0ZT1mdW5jdGlvbihhLGIsYyl7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJmZF9hbGxvY2F0ZSIsYSxiLGMsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FTk9TWVMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN9OwpXQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaS5wcm90b3R5cGUuZmRfY2xvc2U9ZnVuY3Rpb24oYSl7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJmZF9jbG9zZSIsYSxhcmd1bWVudHMpO3JldHVybiBXQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfTtXQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaS5wcm90b3R5cGUuZmRfZGF0YXN5bmM9ZnVuY3Rpb24oYSl7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJmZF9kYXRhc3luYyIsYSxhcmd1bWVudHMpO3JldHVybiBXQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfTsKV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLmZkX2Zkc3RhdF9nZXQ9ZnVuY3Rpb24oYSxiKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coImZkX2Zkc3RhdF9nZXQiLGEsYixhcmd1bWVudHMpO2NvbnN0IGM9dGhpcy5nZXRNZW1vcnkoKTtjLnNldFVpbnQ4KGIrNCxXQVNJX0ZJTEVUWVBFX1JFR1VMQVJfRklMRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cyk7Yy5zZXRVaW50MTYoYisyLDAsITApO2Muc2V0VWludDE2KGIrNCwwLCEwKTtjLnNldEJpZ1VpbnQ2NChiKzgsZ29vZy5nbG9iYWwuQmlnSW50KFJJR0hUU19SRUdVTEFSX0ZJTEVfQkFTRSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50cyksITApO2Muc2V0QmlnVWludDY0KGIrOCs4LGdvb2cuZ2xvYmFsLkJpZ0ludChSSUdIVFNfUkVHVUxBUl9GSUxFX0lOSEVSSVRJTkckJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHMpLAohMCk7cmV0dXJuIFdBU0lfRVNVQ0NFU1MkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN9O1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5mZF9mZHN0YXRfc2V0X2ZsYWdzPWZ1bmN0aW9uKGEsYil7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJmZF9mZHN0YXRfc2V0X2ZsYWdzIixhLGIsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FTk9TWVMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN9O1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5mZF9mZHN0YXRfc2V0X3JpZ2h0cz1mdW5jdGlvbihhLGIsYyl7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJmZF9mZHN0YXRfc2V0X3JpZ2h0cyIsYSxiLGMsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5mZF9maWxlc3RhdF9nZXQ9ZnVuY3Rpb24oYSxiKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coImZkX2ZpbGVzdGF0X2dldCIsYSxiLGFyZ3VtZW50cyk7bGV0IGM9MDt0aGlzLmZkW2FdJiYoYz10aGlzLmZkW2FdLmJ1ZmZlcnMucmVkdWNlKGZ1bmN0aW9uKGUsZil7cmV0dXJuIGUrKG51bGw9PWY/dm9pZCAwOmYuYnl0ZUxlbmd0aCk/bnVsbD09Zj92b2lkIDA6Zi5ieXRlTGVuZ3RoOjB9LDApKTtjb25zdCBkPXRoaXMuZ2V0TWVtb3J5KCk7ZC5zZXRCaWdVaW50NjQoYixnb29nLmdsb2JhbC5CaWdJbnQoYSksITApO2IrPTg7ZC5zZXRCaWdVaW50NjQoYixnb29nLmdsb2JhbC5CaWdJbnQoYSksITApO2IrPTg7ZC5zZXRVaW50OChiLFdBU0lfRklMRVRZUEVfUkVHVUxBUl9GSUxFJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzKTtiKz04O2Quc2V0QmlnVWludDY0KGIsCmdvb2cuZ2xvYmFsLkJpZ0ludCgxKSwhMCk7Yis9ODtkLnNldEJpZ1VpbnQ2NChiLGdvb2cuZ2xvYmFsLkJpZ0ludChjKSwhMCk7Yis9ODtkLnNldEJpZ1VpbnQ2NChiLHRoaXMubXNUb05zKHRoaXMuQ1BVVElNRV9TVEFSVCksITApO2IrPTg7ZC5zZXRCaWdVaW50NjQoYix0aGlzLm1zVG9Ocyh0aGlzLkNQVVRJTUVfU1RBUlQpLCEwKTtkLnNldEJpZ1VpbnQ2NChiKzgsdGhpcy5tc1RvTnModGhpcy5DUFVUSU1FX1NUQVJUKSwhMCk7cmV0dXJuIFdBU0lfRVNVQ0NFU1MkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN9O1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5mZF9maWxlc3RhdF9zZXRfc2l6ZT1mdW5jdGlvbihhLGIpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygiZmRfZmlsZXN0YXRfc2V0X3NpemUiLGEsYixhcmd1bWVudHMpO3JldHVybiBXQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfTsKV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLmZkX2ZpbGVzdGF0X3NldF90aW1lcz1mdW5jdGlvbihhLGIsYyxkKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coImZkX2ZpbGVzdGF0X3NldF90aW1lcyIsYSxiLGMsZCxhcmd1bWVudHMpO3JldHVybiBXQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfTtXQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaS5wcm90b3R5cGUuZmRfcHJlYWQ9ZnVuY3Rpb24oYSxiLGMsZCxlKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coImZkX3ByZWFkIixhLGIsYyxkLGUsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5mZF9wcmVzdGF0X2Rpcl9uYW1lPWZ1bmN0aW9uKGEsYixjKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coImZkX3ByZXN0YXRfZGlyX25hbWUiLGEsYixjLHRoaXMuZmRbYV0pO2lmKCF0aGlzLmZkW2FdJiYhdGhpcy5mZFthLTFdKXJldHVybiBXQVNJX0VCQURGJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOyh7cGF0aDpjfT10aGlzLmZkW2FdKTthPXRoaXMuZ2V0TWVtb3J5KCk7Yz1lbmNvZGVyJCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnMuZW5jb2RlKGMpOyhuZXcgVWludDhBcnJheShhLmJ1ZmZlcikpLnNldChjLGIpO3JldHVybiBXQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfTsKV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLmZkX3ByZXN0YXRfZ2V0PWZ1bmN0aW9uKGEsYil7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJmZF9wcmVzdGF0X2dldCIsYSxiLHRoaXMuZmRbYV0pO2lmKCF0aGlzLmZkW2FdKXJldHVybiBXQVNJX0VCQURGJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzO3ZhciB7cGF0aDpjfT10aGlzLmZkW2FdO2E9dGhpcy5nZXRNZW1vcnkoKTtjPWVuY29kZXIkJG1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVycy5lbmNvZGUoYyk7YS5zZXRVaW50OChiLFdBU0lfUFJFT1BFTlRZUEVfRElSJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzKTthLnNldFVpbnQzMihiKzQsYy5ieXRlTGVuZ3RoLCEwKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5mZF9wd3JpdGU9ZnVuY3Rpb24oYSxiLGMsZCxlKXtjb25zb2xlLmxvZygiZmRfcHdyaXRlIixhLGIsYyxkLGUsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5mZF9yZWFkPWZ1bmN0aW9uKGEsYixjLGQpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygiZmRfcmVhZCIsYSxiLGMsZCxhcmd1bWVudHMpO2NvbnN0IGU9dGhpcy5mZFthXSYmdGhpcy5mZFthXS5idWZmZXJzO3ZhciBmPWUucmVkdWNlKChuLHApPT5uK3AubGVuZ3RoLDApO2NvbnN0IGc9dGhpcy5nZXRNZW1vcnkoKTtpZihlJiYwIT09ZS5sZW5ndGgpe3ZhciBoPU51bWJlcih0aGlzLmZkW2FdLnNlZWtQb3MpLGs9MCxsPSExO2lmKGg+PWYpcmV0dXJuLTE7Zm9yKGY9MDtmPGM7ZisrKXt2YXIgbT1iKzgqZjtjb25zdCBuPWcuZ2V0VWludDMyKG0sITApO209Zy5nZXRVaW50MzIobSs0LCEwKTtsfHwoays9bSxBcnJheS5mcm9tKHtsZW5ndGg6bX0sKHAscSk9PnEpLnJlZHVjZSgocCxxKT0+e2lmKGwpcmV0dXJuIHA7Y29uc3QgW3UsdF09cDtsZXQgdj1wPTAsQT0KITEseT0wLHI7aWYoMD09PXEpZm9yKDshQTspcj1lW3BdP2VbcF0uYnl0ZUxlbmd0aDowLHk8PWgmJnIreT5oPyhBPSEwLHY9aC15KTooeSs9cixwKz0xKTtlbHNlIHA9dSx2PXQ7ZVtwXT8oZy5zZXRVaW50OChuK3EsZVtwXVt2XSksdisxPj1lW3BdLmJ5dGVMZW5ndGg/KHA9dSsxLHY9MCk6dis9MSk6KGcuc2V0VWludDgobitxLCJceDAwIiksaCs9cSxsPSEwKTtyZXR1cm5bcCx2XX0sWzAsMF0pLGx8fChoKz1tKSl9dGhpcy5mZFthXS5zZWVrUG9zPWdvb2cuZ2xvYmFsLkJpZ0ludChoKTtnLnNldFVpbnQzMihkLGssITApO3JldHVybiBXQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfWNvbnNvbGUuZXJyb3IoIlJlYWRpbmcgbm9uIGV4aXN0ZW50IGZpbGUiLGEsdGhpcy5mZFthXSl9OwpXQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaS5wcm90b3R5cGUuZmRfcmVhZGRpcj1mdW5jdGlvbihhLGIsYyxkLGUpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygiZmRfcmVhZGRpciIsYSxiLGMsZCxlLGFyZ3VtZW50cyk7cmV0dXJuIFdBU0lfRVNVQ0NFU1MkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN9O1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5mZF9yZW51bWJlcj1mdW5jdGlvbihhLGIpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygiZmRfcmVudW1iZXIiLGEsYixhcmd1bWVudHMpO3JldHVybiBXQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfTsKV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLmZkX3NlZWs9ZnVuY3Rpb24oYSxiLGMsZCl7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJmZF9zZWVrIixhLGIsYyxkLGFyZ3VtZW50cyk7Y29uc3QgZT10aGlzLmdldE1lbW9yeSgpO3N3aXRjaChjKXtjYXNlIFdBU0lfV0hFTkNFX0NVUiQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czp2YXIgZjt0aGlzLmZkW2FdLnNlZWtQb3M9KG51bGwhPShmPXRoaXMuZmRbYV0uc2Vla1Bvcyk/Zjpnb29nLmdsb2JhbC5CaWdJbnQoMCkpK2dvb2cuZ2xvYmFsLkJpZ0ludChiKTticmVhaztjYXNlIFdBU0lfV0hFTkNFX0VORCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50czpmPSh0aGlzLmZkW2FdLmJ1ZmZlcnN8fFtdKS5yZWR1Y2UoKGcsaCk9PmcraC5sZW5ndGgsMCk7dGhpcy5mZFthXS5zZWVrUG9zPUJpZ0ludChmKStCaWdJbnQoYik7YnJlYWs7CmNhc2UgV0FTSV9XSEVOQ0VfU0VUJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOnRoaXMuZmRbYV0uc2Vla1Bvcz1CaWdJbnQoYil9ZS5zZXRCaWdVaW50NjQoZCx0aGlzLmZkW2FdLnNlZWtQb3MsITApO3JldHVybiBXQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfTtXQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaS5wcm90b3R5cGUuZmRfc3luYz1mdW5jdGlvbihhKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coImZkX3N5bmMiLGEsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5mZF90ZWxsPWZ1bmN0aW9uKGEsYil7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJmZF90ZWxsIixhLGIsYXJndW1lbnRzKTtjb25zdCBjPXRoaXMuZ2V0TWVtb3J5KCk7dGhpcy5mZFthXS5zZWVrUG9zfHwodGhpcy5mZFthXS5zZWVrUG9zPWdvb2cuZ2xvYmFsLkJpZ0ludCgwKSk7Yy5zZXRCaWdVaW50NjQoYix0aGlzLmZkW2FdLnNlZWtQb3MsITApO3JldHVybiBXQVNJX0VTVUNDRVNTJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzfTsKV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLmZkX3dyaXRlPWZ1bmN0aW9uKGEsYixjLGQpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygiZmRfd3JpdGUiLHtmZDphLGlvdnM6Yixpb3ZzTGVuZ3RoOmMsbndyaXR0ZW46ZH0pO2xldCBlPSExO2NvbnN0IGY9dGhpcy5nZXRNZW1vcnkoKTt0aGlzLmZkW2FdLmJ1ZmZlcnM9dGhpcy5mZFthXS5idWZmZXJzfHxbXTt0aGlzLmZkW2FdLnNlZWtQb3M9PT1nb29nLmdsb2JhbC5CaWdJbnQoMCkmJjA8dGhpcy5mZFthXS5idWZmZXJzLmxlbmd0aCYmKGU9ITApO2xldCBnPTA7Zm9yKGxldCBsPTA7bDxjO2wrKyl7dmFyIGg9Yis4Kmwsaz1mLmdldFVpbnQzMihoLCEwKTtoPWYuZ2V0VWludDMyKGgrNCwhMCk7Zys9aDtrPW5ldyBVaW50OEFycmF5KGYuYnVmZmVyLGssaCk7ZT90aGlzLmZkW2FdLmJ1ZmZlcnMudW5zaGlmdChrLnNsaWNlKDAsaCkpOnRoaXMuZmRbYV0uYnVmZmVycy5wdXNoKGsuc2xpY2UoMCwKaCkpfXRoaXMuZmRbYV0uc2Vla1Bvcys9Z29vZy5nbG9iYWwuQmlnSW50KGcpO2Yuc2V0VWludDMyKGQsZywhMCk7WzEsMl0uaW5jbHVkZXMoYSkmJmNvbnNvbGUubG9nKGRlY29kZXIkJG1vZHVsZSRzcmMkdXRpbHMkdGV4dF9lbmNvZGVycy5kZWNvZGUoY29uY2F0VWludDhBcnJheXMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpKHRoaXMuZmRbYV0uYnVmZmVycykpKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307V0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLnBhdGhfY3JlYXRlX2RpcmVjdG9yeT1mdW5jdGlvbihhLGIsYyl7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJwYXRoX2NyZWF0ZV9kaXJlY3RvcnkiLGEsYixjLGFyZ3VtZW50cyk7cmV0dXJuIFdBU0lfRVNVQ0NFU1MkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN9OwpXQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaS5wcm90b3R5cGUucGF0aF9maWxlc3RhdF9nZXQ9ZnVuY3Rpb24oYSxiLGMsZCxlKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coInBhdGhfZmlsZXN0YXRfZ2V0IixhLGIsYyxkLGUsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307V0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLnBhdGhfZmlsZXN0YXRfc2V0X3RpbWVzPWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygicGF0aF9maWxlc3RhdF9zZXRfdGltZXMiLGEsYixjLGQsZSxmLGcsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5wYXRoX2xpbms9ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyl7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJwYXRoX2xpbmsiLGEsYixjLGQsZSxmLGcsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5wYXRoX29wZW49ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGspe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygicGF0aF9vcGVuIixhLGIsYyxkLGUsZixnLGgsayxhcmd1bWVudHMpO2NvbnN0IGw9dGhpcy5nZXRNZW1vcnkoKTt2YXIgbT0odGhpcy5mZFthXXx8e3BhdGg6Ii8ifSkucGF0aCxuPW5ldyBVaW50OEFycmF5KGwuYnVmZmVyLGMsZCk7bj1kZWNvZGVyJCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnMuZGVjb2RlKG4pO2NvbnN0IHA9YXNzZXJ0TGVhZGluZ1NsYXNoJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSgoMCxnb29nLnN0cmluZy5wYXRoLm5vcm1hbGl6ZVBhdGgpKGdvb2cuc3RyaW5nLnBhdGguam9pbigzPT09YT8iIjptLG4pKSk7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCI7OyBvcGVuaW5nIHBhdGgiLApwLCJ3aXRoUkVhZGVyIixzaG91bGRPcGVuUmVhZGVyJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaShmKSk7aWYocC5zdGFydHNXaXRoKCIvLi4iKXx8Ii8uXyI9PT1wfHwiLy5BcHBsZURvdWJsZSI9PT1wKXJldHVybiBXQVNJX0VCQURGJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kY29uc3RhbnRzOyhtPU9iamVjdC52YWx1ZXModGhpcy5mZCkuZmluZChxPT5xLnBhdGg9PT1wJiZBcnJheS5pc0FycmF5KHEuYnVmZmVycykpKT9uPW0uZmQ6KG49dGhpcy5mZC5sZW5ndGgsdGhpcy5mZFtuXT17ZmQ6bn0pO3RoaXMuZmRbbl09ey4uLnRoaXMuZmRbbl0scGF0aDpwLHR5cGU6ImZpbGUiLHNlZWtQb3M6Z29vZy5nbG9iYWwuQmlnSW50KDApLGJ1ZmZlcnM6bT90aGlzLmZkW25dLmJ1ZmZlcnM6W119O3Nob3VsZE9wZW5SZWFkZXIkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpKGYpJiZERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coInNob3VsZCBvcGVuIGEgcmVhZCBoYW5kbGUgZm9yIiwKcCk7bC5zZXRVaW50MzIoayxuLCEwKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307V0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLnBhdGhfcmVhZGxpbms9ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygicGF0aF9yZWFkbGluayIsYSxiLGMsZCxlLGYsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307V0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLnBhdGhfcmVtb3ZlX2RpcmVjdG9yeT1mdW5jdGlvbihhLGIsYyl7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJwYXRoX3JlbW92ZV9kaXJlY3RvcnkiLGEsYixjKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5wYXRoX3JlbmFtZT1mdW5jdGlvbihhLGIsYyxkLGUsZil7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJwYXRoX3JlbmFtZSIsYSxiLGMsZCxlLGYsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307V0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLnBhdGhfc3ltbGluaz1mdW5jdGlvbihhLGIsYyxkLGUpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygicGF0aF9zeW1saW5rIixhLGIsYyxkLGUsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5wYXRoX3VubGlua19maWxlPWZ1bmN0aW9uKGEsYixjKXszPGEmJkRFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygicGF0aF91bmxpbmtfZmlsZSIsYSxiLGMsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307V0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLnBvbGxfb25lb2ZmPWZ1bmN0aW9uKGEsYixjLGQpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygicG9sbF9vbmVvZmYiLGEsYixjLGQsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5wcm9jX2V4aXQ9ZnVuY3Rpb24oYSl7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJwcm9jX2V4aXQiLGEsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307V0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLnByb2NfcmFpc2U9ZnVuY3Rpb24oYSl7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJwcm9jX3JhaXNlIixhLGFyZ3VtZW50cyk7cmV0dXJuIFdBU0lfRVNVQ0NFU1MkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN9OwpXQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaS5wcm90b3R5cGUucmFuZG9tX2dldD1mdW5jdGlvbihhLGIpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygicmFuZG9tX2dldCIsYSxiKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307V0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLnNjaGVkX3lpZWxkPWZ1bmN0aW9uKCl7REVCVUdfV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kmJmNvbnNvbGUubG9nKCJzY2hlZF95aWVsZCIsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FU1VDQ0VTUyQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJGNvbnN0YW50c307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5zb2NrX3JlY3Y9ZnVuY3Rpb24oKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coInNvY2tfcmVjdiIsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FTk9TWVMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN9O1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5zb2NrX3NlbmQ9ZnVuY3Rpb24oKXtERUJVR19XQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSYmY29uc29sZS5sb2coInNvY2tfc2VuZCIsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FTk9TWVMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN9OwpXQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaS5wcm90b3R5cGUuc29ja19zaHV0ZG93bj1mdW5jdGlvbigpe0RFQlVHX1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpJiZjb25zb2xlLmxvZygic29ja19zaHV0ZG93biIsYXJndW1lbnRzKTtyZXR1cm4gV0FTSV9FTk9TWVMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSRjb25zdGFudHN9O1dBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5maW5kQnVmZmVycz1mdW5jdGlvbihhKXtjb25zdCBiPU9iamVjdC52YWx1ZXModGhpcy5mZCkuZmluZCgoe3BhdGg6Y30pPT5jPT09YSk7cmV0dXJuIGImJmIuYnVmZmVyc307CldBU0kkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLnByb3RvdHlwZS5yZWFkZGlyPWZ1bmN0aW9uKGEpe2NvbnN0IGI9KGFzc2VydExlYWRpbmdTbGFzaCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2koKDAsZ29vZy5zdHJpbmcucGF0aC5ub3JtYWxpemVQYXRoKShhKSkrIi8iKS5yZXBsYWNlKCIvLyIsIi8iKSxjPVtdO09iamVjdC52YWx1ZXModGhpcy5mZCkuZm9yRWFjaCgoe3BhdGg6ZH0pPT4hL1wvL2cudGVzdChkLnJlcGxhY2UoYiwiIikpJiZjLnB1c2goZCkpO3JldHVybiBjLm1hcChkPT5yZW1vdmVMZWFkaW5nU2xhc2gkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpKGQucmVwbGFjZShiLCIiKSkpLmZpbHRlcihkPT4hIWQpfTsKV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLndyaXRlRmlsZT1mdW5jdGlvbihhLGIpe2NvbnN0IGM9YXNzZXJ0TGVhZGluZ1NsYXNoJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSgoMCxnb29nLnN0cmluZy5wYXRoLm5vcm1hbGl6ZVBhdGgpKGEpKTthPU9iamVjdC5rZXlzKHRoaXMuZmQpLmxlbmd0aDtjb25zdCBkPU9iamVjdC52YWx1ZXModGhpcy5mZCkuZmluZCgoe3BhdGg6ZX0pPT5lPT09Yyk7dGhpcy5mZFthXT17ZmQ6YSxwYXRoOmMsc2Vla1Bvczpnb29nLmdsb2JhbC5CaWdJbnQoMCksYnVmZmVyczpbYl19O2QmJmRlbGV0ZSB0aGlzLmZkW2RdfTsKV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLmFwcGVuZEZpbGU9ZnVuY3Rpb24oYSxiKXt2YXIgYz1hc3NlcnRMZWFkaW5nU2xhc2gkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpKCgwLGdvb2cuc3RyaW5nLnBhdGgubm9ybWFsaXplUGF0aCkoYSkpOyhjPXRoaXMuZmluZEJ1ZmZlcnMoYykpP2MucHVzaChiKTpjb25zb2xlLmVycm9yKGBDYW4ndCBhcHBlbmQgdG8gbm9uLWV4aXN0aW5nIGZpbGUgJHthfWApfTtXQVNJJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaS5wcm90b3R5cGUucmVhZEZpbGU9ZnVuY3Rpb24oYSl7YT1hc3NlcnRMZWFkaW5nU2xhc2gkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpKCgwLGdvb2cuc3RyaW5nLnBhdGgubm9ybWFsaXplUGF0aCkoYSkpO2lmKGE9dGhpcy5maW5kQnVmZmVycyhhKSlyZXR1cm4gY29uY2F0VWludDhBcnJheXMkJG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpKGEpfTsKV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLnJlYWRTdGRPdXQ9ZnVuY3Rpb24oKXtjb25zdCBhPU9iamVjdC52YWx1ZXModGhpcy5mZFswXSk7cmV0dXJuIGNvbmNhdFVpbnQ4QXJyYXlzJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaShhJiZhLmJ1ZmZlcnN8fFtdKX07V0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLnVubGluaz1mdW5jdGlvbihhKXtjb25zdCBiPWFzc2VydExlYWRpbmdTbGFzaCQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2koKDAsZ29vZy5zdHJpbmcucGF0aC5ub3JtYWxpemVQYXRoKShhKSk7KGE9T2JqZWN0LnZhbHVlcyh0aGlzLmZkKS5maW5kKCh7cGF0aDpjfSk9PmM9PT1iKSk/ZGVsZXRlIHRoaXMuZmRbYV06Y29uc29sZS5lcnJvcihgV2hpbGUgdHJ5aW5nIHRvIHVubGluayAke2J9LCBwYXRoIG5vdCBmb3VuZGApfTsKV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2kucHJvdG90eXBlLm1rZGlyPWZ1bmN0aW9uKGEpe2NvbnN0IGI9YXNzZXJ0TGVhZGluZ1NsYXNoJCRtb2R1bGUkc3JjJGZpbGVzeXN0ZW0kd2FzaSgoMCxnb29nLnN0cmluZy5wYXRoLm5vcm1hbGl6ZVBhdGgpKGEpKSxjPVtdO09iamVjdC52YWx1ZXModGhpcy5mZCkuZm9yRWFjaCgoe3BhdGg6ZH0pPT5kLnN0YXJ0c1dpdGgoYikmJmMucHVzaChkKSk7MDxjLmxlbmd0aD9jb25zb2xlLndhcm4oYG1rZGlyOiBwYXRoICR7YX0gYWxyZWFkeSBleGlzdHNgKTooYT1PYmplY3Qua2V5cyh0aGlzLmZkKS5sZW5ndGgsdGhpcy5mZFthXT17ZmQ6YSxwYXRoOmJ9KX07dmFyIG1vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpPXt9O21vZHVsZSRzcmMkZmlsZXN5c3RlbSR3YXNpLldBU0k9V0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2k7ZnVuY3Rpb24gY2xlYXJBcnJheSQkbW9kdWxlJHNyYyR1dGlscyRjbGVhcl9hcnJheShhKXtmb3IoOzA8YS5sZW5ndGg7KWEucG9wKCl9dmFyIG1vZHVsZSRzcmMkdXRpbHMkY2xlYXJfYXJyYXk9e307bW9kdWxlJHNyYyR1dGlscyRjbGVhcl9hcnJheS5jbGVhckFycmF5PWNsZWFyQXJyYXkkJG1vZHVsZSRzcmMkdXRpbHMkY2xlYXJfYXJyYXk7dmFyIG1vZHVsZSRub2RlX21vZHVsZXMkbGluZXNfbG9nZ2VyJGxpYiRpbmRleD17ZGVmYXVsdDp7fX07bW9kdWxlJG5vZGVfbW9kdWxlcyRsaW5lc19sb2dnZXIkbGliJGluZGV4LmRlZmF1bHQuX19lc01vZHVsZT0hMDttb2R1bGUkbm9kZV9tb2R1bGVzJGxpbmVzX2xvZ2dlciRsaWIkaW5kZXguZGVmYXVsdC5Mb2dnZXJGYWN0b3J5PW1vZHVsZSRub2RlX21vZHVsZXMkbGluZXNfbG9nZ2VyJGxpYiRpbmRleC5kZWZhdWx0LmxvZ0xldmVscz12b2lkIDA7bW9kdWxlJG5vZGVfbW9kdWxlcyRsaW5lc19sb2dnZXIkbGliJGluZGV4LmRlZmF1bHQubG9nTGV2ZWxzPXtsb2dfcmFpc2VfZXJyb3I6MSxsb2dfd2l0aF93YXJuaW5nczoyLHRyYWNlOjMsZGVidWc6NCxpbmZvOjUsd2Fybjo2LGVycm9yOjcsZGlzYWJsZTo4fTsKdmFyIExvZ2dlckZhY3RvcnkkJG1vZHVsZSRub2RlX21vZHVsZXMkbGluZXNfbG9nZ2VyJGxpYiRpbmRleD1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYixjKXtpZih2b2lkIDA9PT1iJiYoYj0ibG9nX3dpdGhfd2FybmluZ3MiKSx2b2lkIDA9PT1jJiYoYz1udWxsKSx0aGlzLmxvZ0xldmVsPWIsIW1vZHVsZSRub2RlX21vZHVsZXMkbGluZXNfbG9nZ2VyJGxpYiRpbmRleC5kZWZhdWx0LmxvZ0xldmVsc1tiXSl0aHJvdyBFcnJvcigiSW52YWxpZCBsb2cgbGV2ZWwgIitiKyIgYWxsb3dlZDogIitKU09OLnN0cmluZ2lmeShtb2R1bGUkbm9kZV9tb2R1bGVzJGxpbmVzX2xvZ2dlciRsaWIkaW5kZXguZGVmYXVsdC5sb2dMZXZlbHMpKTt0aGlzLm1vY2tDb25zb2xlPWN8fGNvbnNvbGV9cmV0dXJuIGEucHJvdG90eXBlLmR1bW15PWZ1bmN0aW9uKCl7fSxhLnByb3RvdHlwZS5zZXRMb2dXYXJuaW5ncz1mdW5jdGlvbihiKXt0aGlzLmxvZ0xldmVsPWJ9LGEucHJvdG90eXBlLmdldExvZ1dhcm5pbmdzPQpmdW5jdGlvbigpe3JldHVybiB0aGlzLmxvZ0xldmVsfSxhLnByb3RvdHlwZS5nZXRTaW5nbGVMb2dnZXJDb2xvcj1mdW5jdGlvbihiLGMsZCl7cmV0dXJuIHRoaXMuZ2V0U2luZ2xlTG9nZ2VyU3R5bGUoYix0aGlzLmdldENvbG9yU3R5bGUoYyksZCl9LGEucHJvdG90eXBlLmdldFNpbmdsZUxvZ2dlcj1mdW5jdGlvbihiLGMpe3ZhciBkPXRoaXMuZ2V0UmFuZG9tQ29sb3IoYik7cmV0dXJuIHRoaXMuZ2V0U2luZ2xlTG9nZ2VyU3R5bGUoYix0aGlzLmdldENvbG9yU3R5bGUoZCksYyl9LGEucHJvdG90eXBlLmdldFNpbmdsZUxvZ2dlclN0eWxlPWZ1bmN0aW9uKGIsYyxkLGUpe3ZhciBmPXRoaXM7cmV0dXJuIHZvaWQgMD09PWUmJihlPSJsb2dfd2l0aF93YXJuaW5ncyIpLGZ1bmN0aW9uKCl7Zm9yKHZhciBnPVtdLGg9MDtoPGFyZ3VtZW50cy5sZW5ndGg7aCsrKWdbaF09YXJndW1lbnRzW2hdO2lmKG1vZHVsZSRub2RlX21vZHVsZXMkbGluZXNfbG9nZ2VyJGxpYiRpbmRleC5kZWZhdWx0LmxvZ0xldmVsc1tmLmxvZ0xldmVsXT4KbW9kdWxlJG5vZGVfbW9kdWxlcyRsaW5lc19sb2dnZXIkbGliJGluZGV4LmRlZmF1bHQubG9nTGV2ZWxzW2VdKXJldHVybiBmLmR1bW15O2c9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZyk7aD1nLnNoaWZ0KCkuc3BsaXQoInt9Iik7Zm9yKHZhciBrPVtmLm1vY2tDb25zb2xlLCIlYyIrYixjXSxsPTA7bDxoLmxlbmd0aDtsKyspay5wdXNoKGhbbF0pLHZvaWQgMCE9PWdbbF0mJmsucHVzaChnW2xdKTtpZihoLmxlbmd0aC0xIT09Zy5sZW5ndGgpaWYoImxvZ193aXRoX3dhcm5pbmdzIj09PWYubG9nTGV2ZWwpZi5tb2NrQ29uc29sZS5lcnJvcigiTWlzc01hdGNoIGFtb3VudCBvZiBhcmd1bWVudHMiKTtlbHNlIGlmKCJsb2dfcmFpc2VfZXJyb3IiPT09Zi5sb2dMZXZlbCl0aHJvdyBFcnJvcigiTWlzc01hdGNoIGFtb3VudCBvZiBhcmd1bWVudHMiKTtyZXR1cm4gRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQuYXBwbHkoZCxrKX19LGEucHJvdG90eXBlLmdldExvZ2dlckNvbG9yPWZ1bmN0aW9uKGIsCmMpe3JldHVybiB0aGlzLmdldExvZ2dlclN0eWxlKGIsdGhpcy5nZXRDb2xvclN0eWxlKGMpKX0sYS5wcm90b3R5cGUuZ2V0Q29sb3JTdHlsZT1mdW5jdGlvbihiKXtyZXR1cm4iY29sb3I6IHdoaXRlOyBiYWNrZ3JvdW5kLWNvbG9yOiAiK2IrIjsgcGFkZGluZzogMnB4IDZweDsgYm9yZGVyLXJhZGl1czogMnB4OyBmb250LXNpemU6IDEwcHgifSxhLmdldEhhc2g9ZnVuY3Rpb24oYixjKXt2b2lkIDA9PT1jJiYoYz0wKTt2YXIgZD0zNzM1OTI4NTU5XmM7Y149MTEwMzU0Nzk5MTtmb3IodmFyIGU9MCxmO2U8Yi5sZW5ndGg7ZSsrKWY9Yi5jaGFyQ29kZUF0KGUpLGQ9TWF0aC5pbXVsKGReZiwyNjU0NDM1NzYxKSxjPU1hdGguaW11bChjXmYsMTU5NzMzNDY3Nyk7cmV0dXJuIGQ9TWF0aC5pbXVsKGReZD4+PjE2LDIyNDY4MjI1MDcpXk1hdGguaW11bChjXmM+Pj4xMywzMjY2NDg5OTA5KSw0Mjk0OTY3Mjk2KigyMDk3MTUxJihNYXRoLmltdWwoY15jPj4+MTYsMjI0NjgyMjUwNyleTWF0aC5pbXVsKGReCmQ+Pj4xMywzMjY2NDg5OTA5KSkpKyhkPj4+MCl9LGEucHJvdG90eXBlLmdldFJhbmRvbUNvbG9yPWZ1bmN0aW9uKGIpe3ZvaWQgMD09PWImJihiPSIiKTtiPWEuZ2V0SGFzaChiKTtmb3IodmFyIGM9IiMiLGQ9MDszPmQ7ZCsrKWMrPSgiMDAiKyg4KyhiPj43KmQmMTI3KSkudG9TdHJpbmcoMTYpKS5zdWJzdHIoLTIpO3JldHVybiBjfSxhLnByb3RvdHlwZS5nZXRMb2dnZXI9ZnVuY3Rpb24oYil7cmV0dXJuIHRoaXMuZ2V0TG9nZ2VyQ29sb3IoYix0aGlzLmdldFJhbmRvbUNvbG9yKGIpKX0sYS5wcm90b3R5cGUuZ2V0TG9nZ2VyU3R5bGU9ZnVuY3Rpb24oYixjKXtyZXR1cm57dHJhY2U6dGhpcy5nZXRTaW5nbGVMb2dnZXJTdHlsZShiLGMsdGhpcy5tb2NrQ29uc29sZS50cmFjZSwidHJhY2UiKSxkZWJ1Zzp0aGlzLmdldFNpbmdsZUxvZ2dlclN0eWxlKGIsYyx0aGlzLm1vY2tDb25zb2xlLmRlYnVnLCJkZWJ1ZyIpLGxvZzp0aGlzLmdldFNpbmdsZUxvZ2dlclN0eWxlKGIsYyx0aGlzLm1vY2tDb25zb2xlLmxvZywKImluZm8iKSx3YXJuOnRoaXMuZ2V0U2luZ2xlTG9nZ2VyU3R5bGUoYixjLHRoaXMubW9ja0NvbnNvbGUud2Fybiwid2FybiIpLGVycm9yOnRoaXMuZ2V0U2luZ2xlTG9nZ2VyU3R5bGUoYixjLHRoaXMubW9ja0NvbnNvbGUuZXJyb3IsImVycm9yIil9fSxhfSgpO21vZHVsZSRub2RlX21vZHVsZXMkbGluZXNfbG9nZ2VyJGxpYiRpbmRleC5kZWZhdWx0LkxvZ2dlckZhY3Rvcnk9TG9nZ2VyRmFjdG9yeSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRsaW5lc19sb2dnZXIkbGliJGluZGV4O2xldCBsb2dXb3JrbGV0TWFpbiQkbW9kdWxlJHNyYyRsb2dnZXIsbG9nV29ya2xldFdvcmtlciQkbW9kdWxlJHNyYyRsb2dnZXIsbG9nU0FCTWFpbiQkbW9kdWxlJHNyYyRsb2dnZXIsbG9nU0FCV29ya2VyJCRtb2R1bGUkc3JjJGxvZ2dlcixsb2dWQU5NYWluJCRtb2R1bGUkc3JjJGxvZ2dlcixsb2dWQU5Xb3JrZXIkJG1vZHVsZSRzcmMkbG9nZ2VyLGxvZ09sZFNwbk1haW4kJG1vZHVsZSRzcmMkbG9nZ2VyLGxvZ09sZFNwbldvcmtlciQkbW9kdWxlJHNyYyRsb2dnZXIsbG9nSW5kZXgkJG1vZHVsZSRzcmMkbG9nZ2VyLGxvZ1NQTk1haW5TaW5nbGUkJG1vZHVsZSRzcmMkbG9nZ2VyLGxvZ1NpbmdsZXRocmVhZFdvcmtsZXRNYWluJCRtb2R1bGUkc3JjJGxvZ2dlcixsb2dTaW5nbGV0aHJlYWRXb3JrbGV0V29ya2VyJCRtb2R1bGUkc3JjJGxvZ2dlcixsb2dDb21tb25VdGlscyQkbW9kdWxlJHNyYyRsb2dnZXIsbG9nV2FzbU1vZHVsZSQkbW9kdWxlJHNyYyRsb2dnZXIsbG9nTWlkaVJlcXVlc3QkJG1vZHVsZSRzcmMkbG9nZ2VyOwpjb25zdCBpc1Byb2QkJG1vZHVsZSRzcmMkbG9nZ2VyPTE7bG9nV29ya2xldE1haW4kJG1vZHVsZSRzcmMkbG9nZ2VyPWE9PmI9Pnt9O2xvZ1dvcmtsZXRXb3JrZXIkJG1vZHVsZSRzcmMkbG9nZ2VyPWE9PmI9Pnt9O2xvZ1NBQk1haW4kJG1vZHVsZSRzcmMkbG9nZ2VyPWE9PmI9Pnt9O2xvZ1NBQldvcmtlciQkbW9kdWxlJHNyYyRsb2dnZXI9YT0+Yj0+e307bG9nVkFOTWFpbiQkbW9kdWxlJHNyYyRsb2dnZXI9YT0+Yj0+e307bG9nVkFOV29ya2VyJCRtb2R1bGUkc3JjJGxvZ2dlcj1hPT5iPT57fTtsb2dPbGRTcG5NYWluJCRtb2R1bGUkc3JjJGxvZ2dlcj1hPT5iPT57fTtsb2dPbGRTcG5Xb3JrZXIkJG1vZHVsZSRzcmMkbG9nZ2VyPWE9PmI9Pnt9O2xvZ0luZGV4JCRtb2R1bGUkc3JjJGxvZ2dlcj1hPT5iPT57fTtsb2dTUE5NYWluU2luZ2xlJCRtb2R1bGUkc3JjJGxvZ2dlcj1hPT5iPT57fTsKbG9nU2luZ2xldGhyZWFkV29ya2xldE1haW4kJG1vZHVsZSRzcmMkbG9nZ2VyPWE9PmI9Pnt9O2xvZ1NpbmdsZXRocmVhZFdvcmtsZXRXb3JrZXIkJG1vZHVsZSRzcmMkbG9nZ2VyPWE9PmI9Pnt9O2xvZ0NvbW1vblV0aWxzJCRtb2R1bGUkc3JjJGxvZ2dlcj1hPT5iPT57fTtsb2dXYXNtTW9kdWxlJCRtb2R1bGUkc3JjJGxvZ2dlcj1hPT5iPT57fTtsb2dNaWRpUmVxdWVzdCQkbW9kdWxlJHNyYyRsb2dnZXI9YT0+Yj0+e307dmFyICRqc2NvbXBEZWZhdWx0RXhwb3J0JCRtb2R1bGUkc3JjJGxvZ2dlcj1hPT5iPT57fSxtb2R1bGUkc3JjJGxvZ2dlcj17fTttb2R1bGUkc3JjJGxvZ2dlci5kZWZhdWx0PSRqc2NvbXBEZWZhdWx0RXhwb3J0JCRtb2R1bGUkc3JjJGxvZ2dlcjttb2R1bGUkc3JjJGxvZ2dlci5sb2dDb21tb25VdGlscz1sb2dDb21tb25VdGlscyQkbW9kdWxlJHNyYyRsb2dnZXI7bW9kdWxlJHNyYyRsb2dnZXIubG9nSW5kZXg9bG9nSW5kZXgkJG1vZHVsZSRzcmMkbG9nZ2VyOwptb2R1bGUkc3JjJGxvZ2dlci5sb2dNaWRpUmVxdWVzdD1sb2dNaWRpUmVxdWVzdCQkbW9kdWxlJHNyYyRsb2dnZXI7bW9kdWxlJHNyYyRsb2dnZXIubG9nT2xkU3BuTWFpbj1sb2dPbGRTcG5NYWluJCRtb2R1bGUkc3JjJGxvZ2dlcjttb2R1bGUkc3JjJGxvZ2dlci5sb2dPbGRTcG5Xb3JrZXI9bG9nT2xkU3BuV29ya2VyJCRtb2R1bGUkc3JjJGxvZ2dlcjttb2R1bGUkc3JjJGxvZ2dlci5sb2dTQUJNYWluPWxvZ1NBQk1haW4kJG1vZHVsZSRzcmMkbG9nZ2VyO21vZHVsZSRzcmMkbG9nZ2VyLmxvZ1NBQldvcmtlcj1sb2dTQUJXb3JrZXIkJG1vZHVsZSRzcmMkbG9nZ2VyO21vZHVsZSRzcmMkbG9nZ2VyLmxvZ1NQTk1haW5TaW5nbGU9bG9nU1BOTWFpblNpbmdsZSQkbW9kdWxlJHNyYyRsb2dnZXI7bW9kdWxlJHNyYyRsb2dnZXIubG9nU2luZ2xldGhyZWFkV29ya2xldE1haW49bG9nU2luZ2xldGhyZWFkV29ya2xldE1haW4kJG1vZHVsZSRzcmMkbG9nZ2VyOwptb2R1bGUkc3JjJGxvZ2dlci5sb2dTaW5nbGV0aHJlYWRXb3JrbGV0V29ya2VyPWxvZ1NpbmdsZXRocmVhZFdvcmtsZXRXb3JrZXIkJG1vZHVsZSRzcmMkbG9nZ2VyO21vZHVsZSRzcmMkbG9nZ2VyLmxvZ1ZBTk1haW49bG9nVkFOTWFpbiQkbW9kdWxlJHNyYyRsb2dnZXI7bW9kdWxlJHNyYyRsb2dnZXIubG9nVkFOV29ya2VyPWxvZ1ZBTldvcmtlciQkbW9kdWxlJHNyYyRsb2dnZXI7bW9kdWxlJHNyYyRsb2dnZXIubG9nV2FzbU1vZHVsZT1sb2dXYXNtTW9kdWxlJCRtb2R1bGUkc3JjJGxvZ2dlcjttb2R1bGUkc3JjJGxvZ2dlci5sb2dXb3JrbGV0TWFpbj1sb2dXb3JrbGV0TWFpbiQkbW9kdWxlJHNyYyRsb2dnZXI7bW9kdWxlJHNyYyRsb2dnZXIubG9nV29ya2xldFdvcmtlcj1sb2dXb3JrbGV0V29ya2VyJCRtb2R1bGUkc3JjJGxvZ2dlcjtjb25zdCBDb21wcmVzc2lvbk1ldGhvZCQkbW9kdWxlJHNyYyR6bGliJHpsaWI9e0RFRkxBVEU6OCxSRVNFUlZFRDoxNX07dmFyIG1vZHVsZSRzcmMkemxpYiR6bGliPXt9O21vZHVsZSRzcmMkemxpYiR6bGliLkNvbXByZXNzaW9uTWV0aG9kPUNvbXByZXNzaW9uTWV0aG9kJCRtb2R1bGUkc3JjJHpsaWIkemxpYjsvKgogemxpYi5qcyAyMDEyIC0gaW1heWEgWyBodHRwczovL2dpdGh1Yi5jb20vaW1heWEvemxpYi5qcyBdIFRoZSBNSVQgTGljZW5zZSAqLwpmdW5jdGlvbiBIdWZmbWFuJCRtb2R1bGUkc3JjJHpsaWIkaHVmZm1hbihhKXtjb25zdCBiPWEubGVuZ3RoO2xldCBjPTAsZD1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksZSxmLGcsaDtsZXQgayxsO2ZvcihrPTA7azxiOysraylhW2tdPmMmJihjPWFba10pLGFba108ZCYmKGQ9YVtrXSk7Y29uc3QgbT0xPDxjLG49bmV3IFVpbnQzMkFycmF5KG0pO2U9MTtmPTA7Zm9yKGc9MjtlPD1jOyl7Zm9yKGs9MDtrPGI7KytrKWlmKGFba109PT1lKXtoPTA7dmFyIHA9Zjtmb3IobD0wO2w8ZTsrK2wpaD1oPDwxfHAmMSxwPj49MTtwPWU8PDE2fGs7Zm9yKGw9aDtsPG07bCs9ZyluW2xdPXA7KytmfSsrZTtmPDw9MTtnPDw9MX1yZXR1cm5bbixjLGRdfXZhciBtb2R1bGUkc3JjJHpsaWIkaHVmZm1hbj17fTttb2R1bGUkc3JjJHpsaWIkaHVmZm1hbi5IdWZmbWFuPUh1ZmZtYW4kJG1vZHVsZSRzcmMkemxpYiRodWZmbWFuO2NvbnN0IFpMSUJfUkFXX0lORkxBVEVfQlVGRkVSX1NJWkUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlPTMyNzY4OwpmdW5jdGlvbiBSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZShhLGIpe3RoaXMuYmxvY2tzPVtdO3RoaXMuYnVmZmVyU2l6ZT1aTElCX1JBV19JTkZMQVRFX0JVRkZFUl9TSVpFJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZTt0aGlzLmJpdHNidWZsZW49dGhpcy5iaXRzYnVmPXRoaXMuaXA9dGhpcy50b3RhbHBvcz0wO3RoaXMuaW5wdXQ9bmV3IFVpbnQ4QXJyYXkoYSk7dGhpcy5iZmluYWw9ITE7dGhpcy5idWZmZXJUeXBlPVJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLkJ1ZmZlclR5cGUuQURBUFRJVkU7dGhpcy5yZXNpemU9ITE7aWYoYnx8IShiPXt9KSliLmluZGV4JiYodGhpcy5pcD1iLmluZGV4KSxiLmJ1ZmZlclNpemUmJih0aGlzLmJ1ZmZlclNpemU9Yi5idWZmZXJTaXplKSxiLmJ1ZmZlclR5cGUmJih0aGlzLmJ1ZmZlclR5cGU9Yi5idWZmZXJUeXBlKSxiLnJlc2l6ZSYmKHRoaXMucmVzaXplPWIucmVzaXplKTtzd2l0Y2godGhpcy5idWZmZXJUeXBlKXtjYXNlIFJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLkJ1ZmZlclR5cGUuQkxPQ0s6dGhpcy5vcD0KUmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuTWF4QmFja3dhcmRMZW5ndGg7dGhpcy5vdXRwdXQ9bmV3IFVpbnQ4QXJyYXkoUmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuTWF4QmFja3dhcmRMZW5ndGgrdGhpcy5idWZmZXJTaXplK1Jhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLk1heENvcHlMZW5ndGgpO2JyZWFrO2Nhc2UgUmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuQnVmZmVyVHlwZS5BREFQVElWRTp0aGlzLm9wPTA7dGhpcy5vdXRwdXQ9bmV3IFVpbnQ4QXJyYXkodGhpcy5idWZmZXJTaXplKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKCJpbnZhbGlkIGluZmxhdGUgbW9kZSIpO319UmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuQnVmZmVyVHlwZT17QkxPQ0s6MCxBREFQVElWRToxfTsKUmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUucHJvdG90eXBlLmRlY29tcHJlc3M9ZnVuY3Rpb24oKXtmb3IoOyF0aGlzLmJmaW5hbDspdGhpcy5wYXJzZUJsb2NrKCk7c3dpdGNoKHRoaXMuYnVmZmVyVHlwZSl7Y2FzZSBSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5CdWZmZXJUeXBlLkJMT0NLOnJldHVybiB0aGlzLmNvbmNhdEJ1ZmZlckJsb2NrKCk7Y2FzZSBSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5CdWZmZXJUeXBlLkFEQVBUSVZFOnJldHVybiB0aGlzLmNvbmNhdEJ1ZmZlckR5bmFtaWMoKTtkZWZhdWx0OnRocm93IEVycm9yKCJpbnZhbGlkIGluZmxhdGUgbW9kZSIpO319O1Jhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLk1heEJhY2t3YXJkTGVuZ3RoPTMyNzY4O1Jhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLk1heENvcHlMZW5ndGg9MjU4OwpSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5PcmRlcj1mdW5jdGlvbihhKXtyZXR1cm4gbmV3IFVpbnQxNkFycmF5KGEpfShbMTYsMTcsMTgsMCw4LDcsOSw2LDEwLDUsMTEsNCwxMiwzLDEzLDIsMTQsMSwxNV0pO1Jhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLkxlbmd0aENvZGVUYWJsZT1mdW5jdGlvbihhKXtyZXR1cm4gbmV3IFVpbnQxNkFycmF5KGEpfShbMyw0LDUsNiw3LDgsOSwxMCwxMSwxMywxNSwxNywxOSwyMywyNywzMSwzNSw0Myw1MSw1OSw2Nyw4Myw5OSwxMTUsMTMxLDE2MywxOTUsMjI3LDI1OCwyNTgsMjU4XSk7UmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuTGVuZ3RoRXh0cmFUYWJsZT1mdW5jdGlvbihhKXtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYSl9KFswLDAsMCwwLDAsMCwwLDAsMSwxLDEsMSwyLDIsMiwyLDMsMywzLDMsNCw0LDQsNCw1LDUsNSw1LDAsMCwwXSk7ClJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLkRpc3RDb2RlVGFibGU9ZnVuY3Rpb24oYSl7cmV0dXJuIG5ldyBVaW50MTZBcnJheShhKX0oWzEsMiwzLDQsNSw3LDksMTMsMTcsMjUsMzMsNDksNjUsOTcsMTI5LDE5MywyNTcsMzg1LDUxMyw3NjksMTAyNSwxNTM3LDIwNDksMzA3Myw0MDk3LDYxNDUsODE5MywxMjI4OSwxNjM4NSwyNDU3N10pO1Jhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLkRpc3RFeHRyYVRhYmxlPWZ1bmN0aW9uKGEpe3JldHVybiBuZXcgVWludDhBcnJheShhKX0oWzAsMCwwLDAsMSwxLDIsMiwzLDMsNCw0LDUsNSw2LDYsNyw3LDgsOCw5LDksMTAsMTAsMTEsMTEsMTIsMTIsMTMsMTNdKTsKUmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuRml4ZWRMaXRlcmFsTGVuZ3RoVGFibGU9ZnVuY3Rpb24oYSl7cmV0dXJuIGF9KGZ1bmN0aW9uKCl7Y29uc3QgYT1uZXcgVWludDhBcnJheSgyODgpO2xldCBiLGM7Yj0wO2ZvcihjPWEubGVuZ3RoO2I8YzsrK2IpYVtiXT0xNDM+PWI/ODoyNTU+PWI/OToyNzk+PWI/Nzo4O3JldHVybiBIdWZmbWFuJCRtb2R1bGUkc3JjJHpsaWIkaHVmZm1hbihhKX0oKSk7UmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuRml4ZWREaXN0YW5jZVRhYmxlPWZ1bmN0aW9uKGEpe3JldHVybiBhfShmdW5jdGlvbigpe2NvbnN0IGE9bmV3IFVpbnQ4QXJyYXkoMzApO2xldCBiLGM7Yj0wO2ZvcihjPWEubGVuZ3RoO2I8YzsrK2IpYVtiXT01O3JldHVybiBIdWZmbWFuJCRtb2R1bGUkc3JjJHpsaWIkaHVmZm1hbihhKX0oKSk7ClJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLnByb3RvdHlwZS5wYXJzZUJsb2NrPWZ1bmN0aW9uKCl7bGV0IGE9dGhpcy5yZWFkQml0cygzKTthJjEmJih0aGlzLmJmaW5hbD0hMCk7YT4+Pj0xO3N3aXRjaChhKXtjYXNlIDA6dGhpcy5wYXJzZVVuY29tcHJlc3NlZEJsb2NrKCk7YnJlYWs7Y2FzZSAxOnRoaXMucGFyc2VGaXhlZEh1ZmZtYW5CbG9jaygpO2JyZWFrO2Nhc2UgMjp0aGlzLnBhcnNlRHluYW1pY0h1ZmZtYW5CbG9jaygpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoInVua25vd24gQlRZUEU6ICIrYSk7fX07ClJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLnByb3RvdHlwZS5yZWFkQml0cz1mdW5jdGlvbihhKXtsZXQgYj10aGlzLmJpdHNidWYsYz10aGlzLmJpdHNidWZsZW47Y29uc3QgZD10aGlzLmlucHV0O2xldCBlPXRoaXMuaXA7aWYoZSsoYS1jKzc+PjMpPj1kLmxlbmd0aCl0aHJvdyBFcnJvcigiaW5wdXQgYnVmZmVyIGlzIGJyb2tlbiIpO2Zvcig7YzxhOylifD1kW2UrK108PGMsYys9ODt0aGlzLmJpdHNidWY9Yj4+PmE7dGhpcy5iaXRzYnVmbGVuPWMtYTt0aGlzLmlwPWU7cmV0dXJuIGImKDE8PGEpLTF9OwpSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5wcm90b3R5cGUucmVhZENvZGVCeVRhYmxlPWZ1bmN0aW9uKGEpe2xldCBiPXRoaXMuYml0c2J1ZixjPXRoaXMuYml0c2J1Zmxlbjt2YXIgZD10aGlzLmlucHV0O2xldCBlPXRoaXMuaXA7dmFyIGY9ZC5sZW5ndGg7Y29uc3QgZz1hWzBdO2ZvcihhPWFbMV07YzxhJiYhKGU+PWYpOylifD1kW2UrK108PGMsYys9ODtkPWdbYiYoMTw8YSktMV07Zj1kPj4+MTY7aWYoZj5jKXRocm93IEVycm9yKCJpbnZhbGlkIGNvZGUgbGVuZ3RoOiAiK2YpO3RoaXMuYml0c2J1Zj1iPj5mO3RoaXMuYml0c2J1Zmxlbj1jLWY7dGhpcy5pcD1lO3JldHVybiBkJjY1NTM1fTsKUmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUucHJvdG90eXBlLnBhcnNlVW5jb21wcmVzc2VkQmxvY2s9ZnVuY3Rpb24oKXtjb25zdCBhPXRoaXMuaW5wdXQ7bGV0IGI9dGhpcy5pcCxjPXRoaXMub3V0cHV0LGQ9dGhpcy5vcDt2YXIgZT1hLmxlbmd0aDtsZXQgZjtjb25zdCBnPWMubGVuZ3RoO3RoaXMuYml0c2J1Zmxlbj10aGlzLmJpdHNidWY9MDtpZihiKzE+PWUpdGhyb3cgRXJyb3IoImludmFsaWQgdW5jb21wcmVzc2VkIGJsb2NrIGhlYWRlcjogTEVOIik7Zj1hW2IrK118YVtiKytdPDw4O2lmKGIrMT49ZSl0aHJvdyBFcnJvcigiaW52YWxpZCB1bmNvbXByZXNzZWQgYmxvY2sgaGVhZGVyOiBOTEVOIik7ZT1hW2IrK118YVtiKytdPDw4O2lmKGY9PT1+ZSl0aHJvdyBFcnJvcigiaW52YWxpZCB1bmNvbXByZXNzZWQgYmxvY2sgaGVhZGVyOiBsZW5ndGggdmVyaWZ5Iik7aWYoYitmPmEubGVuZ3RoKXRocm93IEVycm9yKCJpbnB1dCBidWZmZXIgaXMgYnJva2VuIik7CnN3aXRjaCh0aGlzLmJ1ZmZlclR5cGUpe2Nhc2UgUmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuQnVmZmVyVHlwZS5CTE9DSzpmb3IoO2QrZj5jLmxlbmd0aDspZT1nLWQsZi09ZSxjLnNldChhLnN1YmFycmF5KGIsYitlKSxkKSxkKz1lLGIrPWUsdGhpcy5vcD1kLGM9dGhpcy5leHBhbmRCdWZmZXJCbG9jaygpLGQ9dGhpcy5vcDticmVhaztjYXNlIFJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLkJ1ZmZlclR5cGUuQURBUFRJVkU6Zm9yKDtkK2Y+Yy5sZW5ndGg7KWM9dGhpcy5leHBhbmRCdWZmZXJBZGFwdGl2ZSh7Zml4UmF0aW86Mn0pO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoImludmFsaWQgaW5mbGF0ZSBtb2RlIik7fWMuc2V0KGEuc3ViYXJyYXkoYixiK2YpLGQpO3RoaXMuaXA9YitmO3RoaXMub3A9ZCtmO3RoaXMub3V0cHV0PWN9OwpSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5wcm90b3R5cGUucGFyc2VGaXhlZEh1ZmZtYW5CbG9jaz1mdW5jdGlvbigpe3N3aXRjaCh0aGlzLmJ1ZmZlclR5cGUpe2Nhc2UgUmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuQnVmZmVyVHlwZS5BREFQVElWRTp0aGlzLmRlY29kZUh1ZmZtYW5BZGFwdGl2ZShSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5GaXhlZExpdGVyYWxMZW5ndGhUYWJsZSxSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5GaXhlZERpc3RhbmNlVGFibGUpO2JyZWFrO2Nhc2UgUmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuQnVmZmVyVHlwZS5CTE9DSzp0aGlzLmRlY29kZUh1ZmZtYW5CbG9jayhSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5GaXhlZExpdGVyYWxMZW5ndGhUYWJsZSxSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5GaXhlZERpc3RhbmNlVGFibGUpOwpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKCJpbnZhbGlkIGluZmxhdGUgbW9kZSIpO319OwpSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5wcm90b3R5cGUucGFyc2VEeW5hbWljSHVmZm1hbkJsb2NrPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5yZWFkQml0cyg1KSsyNTcsYj10aGlzLnJlYWRCaXRzKDUpKzEsYz10aGlzLnJlYWRCaXRzKDQpKzQsZD1uZXcgVWludDhBcnJheShSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5PcmRlci5sZW5ndGgpO2xldCBlO2ZvcihlPTA7ZTxjOysrZSlkW1Jhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLk9yZGVyW2VdXT10aGlzLnJlYWRCaXRzKDMpO2Q9SHVmZm1hbiQkbW9kdWxlJHNyYyR6bGliJGh1ZmZtYW4oZCk7Yz1uZXcgVWludDhBcnJheShhK2IpO2U9MDtmb3IoYj1hK2I7ZTxiOyl7dmFyIGY9dGhpcy5yZWFkQ29kZUJ5VGFibGUoZCk7c3dpdGNoKGYpe2Nhc2UgMTY6Zm9yKGY9Myt0aGlzLnJlYWRCaXRzKDIpO2YtLTspY1tlKytdPWc7YnJlYWs7Y2FzZSAxNzpmb3IoZj0KMyt0aGlzLnJlYWRCaXRzKDMpO2YtLTspY1tlKytdPTA7dmFyIGc9MDticmVhaztjYXNlIDE4OmZvcihmPTExK3RoaXMucmVhZEJpdHMoNyk7Zi0tOyljW2UrK109MDtnPTA7YnJlYWs7ZGVmYXVsdDpnPWNbZSsrXT1mfX1nPUh1ZmZtYW4kJG1vZHVsZSRzcmMkemxpYiRodWZmbWFuKGMuc3ViYXJyYXkoMCxhKSk7YT1IdWZmbWFuJCRtb2R1bGUkc3JjJHpsaWIkaHVmZm1hbihjLnN1YmFycmF5KGEpKTtzd2l0Y2godGhpcy5idWZmZXJUeXBlKXtjYXNlIFJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLkJ1ZmZlclR5cGUuQURBUFRJVkU6dGhpcy5kZWNvZGVIdWZmbWFuQWRhcHRpdmUoZyxhKTticmVhaztjYXNlIFJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLkJ1ZmZlclR5cGUuQkxPQ0s6dGhpcy5kZWNvZGVIdWZmbWFuQmxvY2soZyxhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKCJpbnZhbGlkIGluZmxhdGUgbW9kZSIpO319OwpSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5wcm90b3R5cGUuZGVjb2RlSHVmZm1hbkJsb2NrPWZ1bmN0aW9uKGEsYil7bGV0IGM9dGhpcy5vdXRwdXQsZD10aGlzLm9wO3RoaXMuY3VycmVudExpdGxlblRhYmxlPWE7Y29uc3QgZT1jLmxlbmd0aC1SYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5NYXhDb3B5TGVuZ3RoO3ZhciBmO2xldCBnLGg7Y29uc3Qgaz1SYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5MZW5ndGhDb2RlVGFibGUsbD1SYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5MZW5ndGhFeHRyYVRhYmxlLG09UmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuRGlzdENvZGVUYWJsZSxuPVJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLkRpc3RFeHRyYVRhYmxlO2Zvcig7MjU2IT09KGY9dGhpcy5yZWFkQ29kZUJ5VGFibGUoYSkpOylpZigyNTY+ZilkPj0KZSYmKHRoaXMub3A9ZCxjPXRoaXMuZXhwYW5kQnVmZmVyQmxvY2soKSxkPXRoaXMub3ApLGNbZCsrXT1mO2Vsc2UgZm9yKGYtPTI1NyxoPWtbZl0sMDxsW2ZdJiYoaCs9dGhpcy5yZWFkQml0cyhsW2ZdKSksZj10aGlzLnJlYWRDb2RlQnlUYWJsZShiKSxnPW1bZl0sMDxuW2ZdJiYoZys9dGhpcy5yZWFkQml0cyhuW2ZdKSksZD49ZSYmKHRoaXMub3A9ZCxjPXRoaXMuZXhwYW5kQnVmZmVyQmxvY2soKSxkPXRoaXMub3ApO2gtLTspY1tkXT1jW2QrKy1nXTtmb3IoOzg8PXRoaXMuYml0c2J1ZmxlbjspdGhpcy5iaXRzYnVmbGVuLT04LHRoaXMuaXAtLTt0aGlzLm9wPWR9OwpSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5wcm90b3R5cGUuZGVjb2RlSHVmZm1hbkFkYXB0aXZlPWZ1bmN0aW9uKGEsYil7bGV0IGM9dGhpcy5vdXRwdXQsZD10aGlzLm9wO3RoaXMuY3VycmVudExpdGxlblRhYmxlPWE7bGV0IGU9Yy5sZW5ndGg7dmFyIGY7bGV0IGcsaDtjb25zdCBrPVJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLkxlbmd0aENvZGVUYWJsZSxsPVJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLkxlbmd0aEV4dHJhVGFibGUsbT1SYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5EaXN0Q29kZVRhYmxlLG49UmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuRGlzdEV4dHJhVGFibGU7Zm9yKDsyNTYhPT0oZj10aGlzLnJlYWRDb2RlQnlUYWJsZShhKSk7KWlmKDI1Nj5mKWQ+PWUmJihjPXRoaXMuZXhwYW5kQnVmZmVyQWRhcHRpdmUoKSxlPWMubGVuZ3RoKSxjW2QrK109CmY7ZWxzZSBmb3IoZi09MjU3LGg9a1tmXSwwPGxbZl0mJihoKz10aGlzLnJlYWRCaXRzKGxbZl0pKSxmPXRoaXMucmVhZENvZGVCeVRhYmxlKGIpLGc9bVtmXSwwPG5bZl0mJihnKz10aGlzLnJlYWRCaXRzKG5bZl0pKSxkK2g+ZSYmKGM9dGhpcy5leHBhbmRCdWZmZXJBZGFwdGl2ZSgpLGU9Yy5sZW5ndGgpO2gtLTspY1tkXT1jW2QrKy1nXTtmb3IoOzg8PXRoaXMuYml0c2J1ZmxlbjspdGhpcy5iaXRzYnVmbGVuLT04LHRoaXMuaXAtLTt0aGlzLm9wPWR9OwpSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5wcm90b3R5cGUuZXhwYW5kQnVmZmVyQmxvY2s9ZnVuY3Rpb24oYSl7YT1uZXcgVWludDhBcnJheSh0aGlzLm9wLVJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLk1heEJhY2t3YXJkTGVuZ3RoKTtjb25zdCBiPXRoaXMub3AtUmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuTWF4QmFja3dhcmRMZW5ndGgsYz10aGlzLm91dHB1dDthLnNldChjLnN1YmFycmF5KFJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLk1heEJhY2t3YXJkTGVuZ3RoLGEubGVuZ3RoKSk7dGhpcy5ibG9ja3MucHVzaChhKTt0aGlzLnRvdGFscG9zKz1hLmxlbmd0aDtjLnNldChjLnN1YmFycmF5KGIsYitSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5NYXhCYWNrd2FyZExlbmd0aCkpO3RoaXMub3A9UmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuTWF4QmFja3dhcmRMZW5ndGg7CnJldHVybiBjfTtSYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5wcm90b3R5cGUuZXhwYW5kQnVmZmVyQWRhcHRpdmU9ZnVuY3Rpb24oYSl7bGV0IGI9TWF0aC50cnVuYyh0aGlzLmlucHV0Lmxlbmd0aC90aGlzLmlwKzEpO2NvbnN0IGM9dGhpcy5pbnB1dCxkPXRoaXMub3V0cHV0O2EmJigibnVtYmVyIj09PXR5cGVvZiBhLmZpeFJhdGlvJiYoYj1hLmZpeFJhdGlvKSwibnVtYmVyIj09PXR5cGVvZiBhLmFkZFJhdGlvJiYoYis9YS5hZGRSYXRpbykpOzI+Yj8oYT0oYy5sZW5ndGgtdGhpcy5pcCkvdGhpcy5jdXJyZW50TGl0bGVuVGFibGVbMl0sYT1NYXRoLnRydW5jKGEvMioyNTgpLGE9YTxkLmxlbmd0aD9kLmxlbmd0aCthOmQubGVuZ3RoPDwxKTphPWQubGVuZ3RoKmI7YT1uZXcgVWludDhBcnJheShhKTthLnNldChkKTtyZXR1cm4gdGhpcy5vdXRwdXQ9YX07ClJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLnByb3RvdHlwZS5jb25jYXRCdWZmZXJCbG9jaz1mdW5jdGlvbigpe2xldCBhPTA7Y29uc3QgYj10aGlzLm91dHB1dCxjPXRoaXMuYmxvY2tzO2xldCBkO2NvbnN0IGU9bmV3IFVpbnQ4QXJyYXkodGhpcy50b3RhbHBvcysodGhpcy5vcC1SYXdJbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkcmF3aW5mbGF0ZS5NYXhCYWNrd2FyZExlbmd0aCkpO2xldCBmLGcsaCxrO2lmKDA9PT1jLmxlbmd0aClyZXR1cm4gdGhpcy5vdXRwdXQuc3ViYXJyYXkoUmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuTWF4QmFja3dhcmRMZW5ndGgsdGhpcy5vcCk7Zj0wO2ZvcihnPWMubGVuZ3RoO2Y8ZzsrK2YpZm9yKGQ9Y1tmXSxoPTAsaz1kLmxlbmd0aDtoPGs7KytoKWVbYSsrXT1kW2hdO2Y9UmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUuTWF4QmFja3dhcmRMZW5ndGg7Zm9yKGc9dGhpcy5vcDtmPApnOysrZillW2ErK109YltmXTt0aGlzLmJsb2Nrcz1bXTtyZXR1cm4gdGhpcy5idWZmZXI9ZX07UmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUucHJvdG90eXBlLmNvbmNhdEJ1ZmZlckR5bmFtaWM9ZnVuY3Rpb24oKXtsZXQgYTtjb25zdCBiPXRoaXMub3A7dGhpcy5yZXNpemU/KGE9bmV3IFVpbnQ4QXJyYXkoYiksYS5zZXQodGhpcy5vdXRwdXQuc3ViYXJyYXkoMCxiKSkpOmE9dGhpcy5vdXRwdXQuc3ViYXJyYXkoMCxiKTtyZXR1cm4gdGhpcy5idWZmZXI9YX07dmFyIG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlPXt9O21vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLlJhd0luZmxhdGU9UmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGU7ZnVuY3Rpb24gVXRpbCQkbW9kdWxlJHNyYyR6bGliJHV0aWwoKXt9VXRpbCQkbW9kdWxlJHNyYyR6bGliJHV0aWwuc3RyaW5nVG9CeXRlQXJyYXk9ZnVuY3Rpb24oYSl7YT1bLi4uYV07bGV0IGIsYztiPTA7Zm9yKGM9YS5sZW5ndGg7YjxjO2IrKylhW2JdPShhW2JdLmNoYXJQb2ludEF0KDApJjI1NSk+Pj4wO3JldHVybiBuZXcgVWludDhBcnJheShbYV0pfTt2YXIgbW9kdWxlJHNyYyR6bGliJHV0aWw9e307bW9kdWxlJHNyYyR6bGliJHV0aWwuVXRpbD1VdGlsJCRtb2R1bGUkc3JjJHpsaWIkdXRpbDtmdW5jdGlvbiBBZGxlcjMyJCRtb2R1bGUkc3JjJHpsaWIkYWRsZXIzMihhKXsic3RyaW5nIj09PXR5cGVvZiBhJiYoYT1VdGlsJCRtb2R1bGUkc3JjJHpsaWIkdXRpbC5zdHJpbmdUb0J5dGVBcnJheShhKSk7cmV0dXJuIEFkbGVyMzIkJG1vZHVsZSRzcmMkemxpYiRhZGxlcjMyLnVwZGF0ZSgxLGEpfUFkbGVyMzIkJG1vZHVsZSRzcmMkemxpYiRhZGxlcjMyLnVwZGF0ZT1mdW5jdGlvbihhLGIpe2xldCBjPWEmNjU1MzU7YT1hPj4+MTYmNjU1MzU7bGV0IGQ9Yi5sZW5ndGgsZSxmPTA7Zm9yKDswPGQ7KXtlPWQ+QWRsZXIzMiQkbW9kdWxlJHNyYyR6bGliJGFkbGVyMzIuT3B0aW1pemF0aW9uUGFyYW1ldGVyP0FkbGVyMzIkJG1vZHVsZSRzcmMkemxpYiRhZGxlcjMyLk9wdGltaXphdGlvblBhcmFtZXRlcjpkO2QtPWU7ZG8gYys9YltmKytdLGErPWM7d2hpbGUoLS1lKTtjJT02NTUyMTthJT02NTUyMX1yZXR1cm4oYTw8MTZ8Yyk+Pj4wfTsKQWRsZXIzMiQkbW9kdWxlJHNyYyR6bGliJGFkbGVyMzIuT3B0aW1pemF0aW9uUGFyYW1ldGVyPTEwMjQ7dmFyIG1vZHVsZSRzcmMkemxpYiRhZGxlcjMyPXt9O21vZHVsZSRzcmMkemxpYiRhZGxlcjMyLkFkbGVyMzI9QWRsZXIzMiQkbW9kdWxlJHNyYyR6bGliJGFkbGVyMzI7ZnVuY3Rpb24gSW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJGluZmxhdGUoYSxiKXt0aGlzLmlucHV0PWE7dGhpcy5pcD0wO2lmKGJ8fCEoYj17fSkpYi5pbmRleCYmKHRoaXMuaXA9Yi5pbmRleCksYi52ZXJpZnkmJih0aGlzLnZlcmlmeT1iLnZlcmlmeSk7Y29uc3QgYz1hW3RoaXMuaXArK10sZD1hW3RoaXMuaXArK107c3dpdGNoKGMmMTUpe2Nhc2UgQ29tcHJlc3Npb25NZXRob2QkJG1vZHVsZSRzcmMkemxpYiR6bGliLkRFRkxBVEU6dGhpcy5tZXRob2Q9Q29tcHJlc3Npb25NZXRob2QkJG1vZHVsZSRzcmMkemxpYiR6bGliLkRFRkxBVEU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcigidW5zdXBwb3J0ZWQgY29tcHJlc3Npb24gbWV0aG9kIik7fWlmKDAhPT0oKGM8PDgpK2QpJTMxKXRocm93IEVycm9yKCJpbnZhbGlkIGZjaGVjayBmbGFnOiIrKChjPDw4KStkKSUzMSk7aWYoZCYzMil0aHJvdyBFcnJvcigiZmRpY3QgZmxhZyBpcyBub3Qgc3VwcG9ydGVkIik7dGhpcy5yYXdpbmZsYXRlPQpuZXcgUmF3SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJHJhd2luZmxhdGUoYSx7aW5kZXg6dGhpcy5pcCxidWZmZXJTaXplOmIuYnVmZmVyU2l6ZSxidWZmZXJUeXBlOmIuYnVmZmVyVHlwZSxyZXNpemU6Yi5yZXNpemV9KX1JbmZsYXRlJCRtb2R1bGUkc3JjJHpsaWIkaW5mbGF0ZS5CdWZmZXJUeXBlPVJhd0luZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRyYXdpbmZsYXRlLkJ1ZmZlclR5cGU7CkluZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRpbmZsYXRlLnByb3RvdHlwZS5kZWNvbXByZXNzPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5pbnB1dDtjb25zdCBiPXRoaXMucmF3aW5mbGF0ZS5kZWNvbXByZXNzKCk7dGhpcy5pcD10aGlzLnJhd2luZmxhdGUuaXA7aWYodGhpcy52ZXJpZnkmJihhPShhW3RoaXMuaXArK108PDI0fGFbdGhpcy5pcCsrXTw8MTZ8YVt0aGlzLmlwKytdPDw4fGFbdGhpcy5pcCsrXSk+Pj4wLGEhPT1BZGxlcjMyJCRtb2R1bGUkc3JjJHpsaWIkYWRsZXIzMihiKSkpdGhyb3cgRXJyb3IoImludmFsaWQgYWRsZXItMzIgY2hlY2tzdW0iKTtyZXR1cm4gYn07dmFyIG1vZHVsZSRzcmMkemxpYiRpbmZsYXRlPXt9O21vZHVsZSRzcmMkemxpYiRpbmZsYXRlLkluZmxhdGU9SW5mbGF0ZSQkbW9kdWxlJHNyYyR6bGliJGluZmxhdGU7Y29uc3QgUEFHRV9TSVpFJCRtb2R1bGUkc3JjJG1vZHVsZT02NTUzNixQQUdFU19QRVJfTUIkJG1vZHVsZSRzcmMkbW9kdWxlPTE2LGNzb3VuZFdhc2lKc01lc3NhZ2VDYWxsYmFjayQkbW9kdWxlJHNyYyRtb2R1bGU9KHttZW1vcnk6YSxtZXNzYWdlUG9ydDpiLHN0cmVhbUJ1ZmZlcjpjfSk9PmZ1bmN0aW9uKGQsZSxmLGcpe2lmKGEpe2Q9bmV3IFVpbnQ4QXJyYXkoYS5idWZmZXIsZyxmKTtkPXVpbnQyU3RyaW5nJCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnMoZCk7dmFyIGg9L1xuJC9nLnRlc3QoZCk7ZT0vXlxuL2cudGVzdChkKTt2YXIgaz1kLnNwbGl0KCJcbiIpLmZpbHRlcihtPT4wPG0ubGVuZ3RoKSxsPVtdO2lmKDA9PT1rLmxlbmd0aCYmaHx8ZSlsLnB1c2goYy5qb2luKCIiKSksY2xlYXJBcnJheSQkbW9kdWxlJHNyYyR1dGlscyRjbGVhcl9hcnJheShjKTtrLmZvckVhY2goKG0sbik9PntuKzE9PT1rLmxlbmd0aD9oPzA9PT1uPyhsLnB1c2goYy5qb2luKCIiKSttKSwKY2xlYXJBcnJheSQkbW9kdWxlJHNyYyR1dGlscyRjbGVhcl9hcnJheShjKSk6bC5wdXNoKG0pOmMucHVzaChtKTowPT09bj8obC5wdXNoKGMuam9pbigiIikrbSksY2xlYXJBcnJheSQkbW9kdWxlJHNyYyR1dGlscyRjbGVhcl9hcnJheShjKSk6bC5wdXNoKG0pfSk7bC5mb3JFYWNoKG09PnttLnJlcGxhY2UoLyhcclxufFxufFxyKS9nbSwiIikmJmIucG9zdCh7bG9nOm19KX0pfX0sYXNzZXJ0UGx1Z2luRXhwb3J0cyQkbW9kdWxlJHNyYyRtb2R1bGU9YT0+e2lmKGEmJiJvYmplY3QiPT09dHlwZW9mIGEmJiJvYmplY3QiPT09dHlwZW9mIGEuZXhwb3J0cyl7aWYoYS5leHBvcnRzLl9fd2FzbV9jYWxsX2N0b3JzKXtpZihhLmV4cG9ydHMuY3NvdW5kTW9kdWxlQ3JlYXRlfHxhLmV4cG9ydHMuY3NvdW5kX29wY29kZV9pbml0fHxhLmV4cG9ydHMuY3NvdW5kX2ZnZW5faW5pdClyZXR1cm4hMDtjb25zb2xlLmVycm9yKGEuZXhwb3J0cywiQSBjc291bmQgcGx1Z2luIHR1cm5zIG91dCB0byBiZSBuZWl0aGVyIGEgcGx1Z2luLCBvcGNvZGUgb3IgbW9kdWxlLlxuUGVyaGFwcyBjc2RsLmggb3IgbW9kdWxlLmggd2Fzbid0IGltcG9ydGVkIGNvcnJlY3RseT8iKTsKcmV0dXJuITF9Y29uc29sZS5lcnJvcigiQSBjc291bmQgcGx1Z2luIGRpZG4ndCBleHBvcnQgX193YXNtX2NhbGxfY3RvcnMuXG5QbGVhc2UgcmUtcnVuIHdhc20tbGQgd2l0aCBlaXRoZXIgLS1leHBvcnQtYWxsIG9yIGluY2x1ZGUgLS1leHBvcnQ9X193YXNtX2NhbGxfY3RvcnMiKTtyZXR1cm4hMX1jb25zb2xlLmVycm9yKCJFcnJvciBpbnN0YW50aWF0aW5nIGEgY3NvdW5kIHBsdWdpbiwgaW5zdGFuY2UgYW5kL29yIGV4cG9ydCBpcyBtaXNzaW5nISIpO3JldHVybiExfSxnZXRCaW5hcnlIZWFkZXJEYXRhJCRtb2R1bGUkc3JjJG1vZHVsZT1hPT57ZnVuY3Rpb24gYigpe2xldCBsPTAsbT0xO2Zvcig7Oyl7Y29uc3Qgbj1hW2MrK107bCs9KG4mMTI3KSptO20qPTEyODtpZighKG4mMTI4KSlicmVha31yZXR1cm4gbH0xODM2Mjc4MDE2IT09KG5ldyBVaW50MzJBcnJheSgobmV3IFVpbnQ4QXJyYXkoYS5zdWJhcnJheSgwLDI0KSkpLmJ1ZmZlcikpWzBdJiZjb25zb2xlLmVycm9yKCJXYXNtIG1hZ2ljIG51bWJlciBpcyBtaXNzaW5nISIpOwppZigwIT09YVs4XSlyZXR1cm4gbG9nV2FzbU1vZHVsZSQkbW9kdWxlJHNyYyRsb2dnZXIoIkR5bGluayBzZWN0aW9uIHdhc24ndCBmb3VuZCBpbiB3YXNtIGJpbmFyeSwgYXNzdW1pbmcgc3RhdGljIHdhc20uIiksInN0YXRpYyI7bGV0IGM9OTtjb25zdCBkPWIoKTtjKys7KDAsZ29vZy5hc3NlcnRzLmFzc2VydCkoYVtjXT09PSJkIi5jb2RlUG9pbnRBdCgwKSk7YysrOygwLGdvb2cuYXNzZXJ0cy5hc3NlcnQpKGFbY109PT0ieSIuY29kZVBvaW50QXQoMCkpO2MrKzsoMCxnb29nLmFzc2VydHMuYXNzZXJ0KShhW2NdPT09ImwiLmNvZGVQb2ludEF0KDApKTtjKys7KDAsZ29vZy5hc3NlcnRzLmFzc2VydCkoYVtjXT09PSJpIi5jb2RlUG9pbnRBdCgwKSk7YysrOygwLGdvb2cuYXNzZXJ0cy5hc3NlcnQpKGFbY109PT0ibiIuY29kZVBvaW50QXQoMCkpO2MrKzsoMCxnb29nLmFzc2VydHMuYXNzZXJ0KShhW2NdPT09ImsiLmNvZGVQb2ludEF0KDApKTtjKys7KDAsZ29vZy5hc3NlcnRzLmFzc2VydCkoYVtjXT09PQoiLiIuY29kZVBvaW50QXQoMCkpO2MrKzsoMCxnb29nLmFzc2VydHMuYXNzZXJ0KShhW2NdPT09IjAiLmNvZGVQb2ludEF0KDApKTtjKz0zO2NvbnN0IGU9YigpLGY9YigpLGc9YigpLGg9YigpLGs9YigpO3JldHVybntzZWN0aW9uU2l6ZTpkLG1lbW9yeVNpemU6ZSxtZW1vcnlBbGlnbjpmLG5lZWRlZER5bmxpYnNDb3VudDprLHRhYmxlU2l6ZTpnLHRhYmxlQWxpZ246aH19LGxvYWRTdGF0aWNXYXNtJCRtb2R1bGUkc3JjJG1vZHVsZT1hc3luYyh7d2FzbUJ5dGVzOmEsd2FzaTpiLG1lc3NhZ2VQb3J0OmN9KT0+e2NvbnN0IGQ9YXdhaXQgV2ViQXNzZW1ibHkuY29tcGlsZShhKTthPW5ldyBXZWJBc3NlbWJseS5NZW1vcnkoe2luaXRpYWw6MTYzODR9KTtjb25zdCBlPWIuZ2V0SW1wb3J0cyhkKTtlLmVudj1lLmVudnx8e307ZS5lbnYuY3NvdW5kTG9hZE1vZHVsZXM9KCk9PjA7ZS5lbnYubWVtb3J5PWE7ZS5lbnYuY3NvdW5kV2FzaUpzTWVzc2FnZUNhbGxiYWNrPWNzb3VuZFdhc2lKc01lc3NhZ2VDYWxsYmFjayQkbW9kdWxlJHNyYyRtb2R1bGUoe21lbW9yeTplLmVudi5tZW1vcnksCnN0cmVhbUJ1ZmZlcjpbXSxtZXNzYWdlUG9ydDpjfSk7Yz1hd2FpdCBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZShkLGUpO2Iuc2V0TWVtb3J5KGEpO2Iuc3RhcnQoYyk7Yy5leHBvcnRzLl9fd2FzaV9qc19jc291bmRTZXRNZXNzYWdlU3RyaW5nQ2FsbGJhY2soKTtyZXR1cm5bYyxiXX07CnZhciAkanNjb21wRGVmYXVsdEV4cG9ydCQkbW9kdWxlJHNyYyRtb2R1bGU9YXN5bmMgZnVuY3Rpb24oe3dhc21EYXRhVVJJOmEsd2l0aFBsdWdpbnM6Yj1bXSxtZXNzYWdlUG9ydDpjfSl7dmFyIGQ9e307Y29uc3QgZT1uZXcgV0FTSSQkbW9kdWxlJHNyYyRmaWxlc3lzdGVtJHdhc2koe3ByZW9wZW5zOnsiLyI6Ii8ifX0pO2E9bmV3IFVpbnQ4QXJyYXkoYSk7YT0obmV3IEluZmxhdGUkJG1vZHVsZSRzcmMkemxpYiRpbmZsYXRlKGEpKS5kZWNvbXByZXNzKCk7dmFyIGY9Z2V0QmluYXJ5SGVhZGVyRGF0YSQkbW9kdWxlJHNyYyRtb2R1bGUoYSk7aWYoInN0YXRpYyI9PT1mKXJldHVybiBhd2FpdCBsb2FkU3RhdGljV2FzbSQkbW9kdWxlJHNyYyRtb2R1bGUoe21lc3NhZ2VQb3J0OmMsd2FzbUJ5dGVzOmEsd2FzbUZzOmQsd2FzaTplfSk7Y29uc3Qge21lbW9yeVNpemU6ZyxtZW1vcnlBbGlnbjpoLHRhYmxlU2l6ZTprfT1mO2I9YXdhaXQgYi5yZWR1Y2UoYXN5bmMocix3KT0+e3I9YXdhaXQgcjsKbGV0IEIsejt0cnl7Qj1uZXcgVWludDhBcnJheSh3KSx6PWdldEJpbmFyeUhlYWRlckRhdGEkJG1vZHVsZSRzcmMkbW9kdWxlKEIpfWNhdGNoKEMpe2NvbnNvbGUuZXJyb3IoIkVycm9yIGluIHBsdWdpbiIsQyl9eiYmci5wdXNoKHtoZWFkZXJEYXRhOnosd2FzbVBsdWdpbkJ5dGVzOkJ9KTtyZXR1cm4gcn0sW10pO3ZhciBsPTEyOCpQQUdFU19QRVJfTUIkJG1vZHVsZSRzcmMkbW9kdWxlO2Q9TWF0aC5jZWlsKChnK2gpL1BBR0VfU0laRSQkbW9kdWxlJHNyYyRtb2R1bGUpO2Y9TWF0aC5jZWlsKGIucmVkdWNlKChyLHtoZWFkZXJEYXRhOnd9KT0+InN0YXRpYyI9PT13PzA6cisody5tZW1vcnlTaXplK2gpLDApL1BBR0VfU0laRSQkbW9kdWxlJHNyYyRtb2R1bGUpO2Y9ZCtmK2w7Y29uc3QgbT1uZXcgV2ViQXNzZW1ibHkuTWVtb3J5KHtpbml0aWFsOmYsbWF4aW11bToxMDI0KlBBR0VTX1BFUl9NQiQkbW9kdWxlJHNyYyRtb2R1bGV9KSxuPW5ldyBXZWJBc3NlbWJseS5UYWJsZSh7aW5pdGlhbDprKwoxLGVsZW1lbnQ6ImFueWZ1bmMifSk7ZS5zZXRNZW1vcnkobSk7Y29uc3QgcD1uZXcgV2ViQXNzZW1ibHkuR2xvYmFsKHt2YWx1ZToiaTMyIixtdXRhYmxlOiEwfSxmKlBBR0VfU0laRSQkbW9kdWxlJHNyYyRtb2R1bGUpO2Y9bmV3IFdlYkFzc2VtYmx5Lkdsb2JhbCh7dmFsdWU6ImkzMiIsbXV0YWJsZTohMH0sZipQQUdFX1NJWkUkJG1vZHVsZSRzcmMkbW9kdWxlKTtsPW5ldyBXZWJBc3NlbWJseS5HbG9iYWwoe3ZhbHVlOiJpMzIiLG11dGFibGU6ITF9LGwpO2NvbnN0IHE9bmV3IFdlYkFzc2VtYmx5Lkdsb2JhbCh7dmFsdWU6ImkzMiIsbXV0YWJsZTohMX0sMSksdT1uZXcgV2ViQXNzZW1ibHkuR2xvYmFsKHt2YWx1ZToiaTMyIixtdXRhYmxlOiEwfSwwKTthPWF3YWl0IFdlYkFzc2VtYmx5LmNvbXBpbGUoYSk7Y29uc3QgdD1lLmdldEltcG9ydHMoYSk7bGV0IHY9W10sQT1kO3QuZW52PXQuZW52fHx7fTt0LmVudi5tZW1vcnk9bTt0LmVudi5fX2luZGlyZWN0X2Z1bmN0aW9uX3RhYmxlPQpuO3QuZW52Ll9fc3RhY2tfcG9pbnRlcj1wO3QuZW52Ll9fbWVtb3J5X2Jhc2U9bDt0LmVudi5fX3RhYmxlX2Jhc2U9cTt0LmVudi5jc291bmRMb2FkTW9kdWxlcz1yPT57di5mb3JFYWNoKHc9Pnt2b2lkIDA9PT15P2NvbnNvbGUuZXJyb3IoImNzb3VuZC13YXNtIGludGVybmFsOiB0aW1pbmcgcHJvYmxlbSBkZXRlY3RlZCEiKTpkbGluaXQkJG1vZHVsZSRzcmMkZGxpbml0KHksdyxuLHIpfSk7cmV0dXJuIDB9O3QuZW52Ll9aVEg1ZXJybm89ZnVuY3Rpb24oKXt9O3QuZW52LmNzb3VuZFdhc2lKc01lc3NhZ2VDYWxsYmFjaz1jc291bmRXYXNpSnNNZXNzYWdlQ2FsbGJhY2skJG1vZHVsZSRzcmMkbW9kdWxlKHttZW1vcnk6bSxtZXNzYWdlUG9ydDpjLHN0cmVhbUJ1ZmZlcjpbXX0pO3QuZW52LnByaW50RGVidWdDYWxsYmFjaz0ocix3KT0+e3I9bmV3IFVpbnQ4QXJyYXkobS5idWZmZXIscix3KTtyPXVpbnQyU3RyaW5nJCRtb2R1bGUkc3JjJHV0aWxzJHRleHRfZW5jb2RlcnMocik7Y29uc29sZS5sb2cocil9Owp0WyJHT1QubWVtIl09dFsiR09ULm1lbSJdfHx7fTt0WyJHT1QubWVtIl0uX19oZWFwX2Jhc2U9Zjt0WyJHT1QuZnVuYyJdPXRbIkdPVC5mdW5jIl18fHt9O2NvbnN0IHk9YXdhaXQgV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUoYSx0KTtjPU9iamVjdC5hc3NpZ24oe30seS5leHBvcnRzKTthPXt9O2EuZXhwb3J0cz1PYmplY3QuYXNzaWduKGMse21lbW9yeTptfSk7dj1hd2FpdCBiLnJlZHVjZShhc3luYyhyLHtoZWFkZXJEYXRhOncsd2FzbVBsdWdpbkJ5dGVzOkJ9KT0+e3I9YXdhaXQgcjt0cnl7Y29uc3Qge21lbW9yeVNpemU6eixtZW1vcnlBbGlnbjpDLHRhYmxlU2l6ZTpGfT13LEU9YXdhaXQgV2ViQXNzZW1ibHkuY29tcGlsZShCKSx4PWUuZ2V0SW1wb3J0cyhFKSxHPW5ldyBXZWJBc3NlbWJseS5HbG9iYWwoe3ZhbHVlOiJpMzIiLG11dGFibGU6ITF9LEEqUEFHRV9TSVpFJCRtb2R1bGUkc3JjJG1vZHVsZSk7bi5ncm93KEYpO3guZW52PU9iamVjdC5hc3NpZ24oe30seC5lbnYpO3guZW52Lm1lbW9yeT0KbTt4LmVudi5fX2luZGlyZWN0X2Z1bmN0aW9uX3RhYmxlPW47eC5lbnYuX19tZW1vcnlfYmFzZT1HO3guZW52Ll9fc3RhY2tfcG9pbnRlcj1wO3guZW52Ll9fdGFibGVfYmFzZT1xO3guZW52LmNzb3VuZExvYWRNb2R1bGVzPXU7ZGVsZXRlIHguZW52LmNzb3VuZFdhc2lKc01lc3NhZ2VDYWxsYmFjaztBKz1NYXRoLmNlaWwoKHorQykvUEFHRV9TSVpFJCRtb2R1bGUkc3JjJG1vZHVsZSk7Y29uc3QgRD1hd2FpdCBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZShFLHgpO2Fzc2VydFBsdWdpbkV4cG9ydHMkJG1vZHVsZSRzcmMkbW9kdWxlKEQpJiYoRC5leHBvcnRzLl9fd2FzbV9jYWxsX2N0b3JzKCksci5wdXNoKEQpKX1jYXRjaCh6KXtjb25zb2xlLmVycm9yKCJFcnJvciB3aGlsZSBjb21waWxpbmcgY3NvdW5kLXBsdWdpbiIseil9cmV0dXJuIHJ9LFtdKTtlLnN0YXJ0KGEpO2EuZXhwb3J0cy5fX3dhc2lfanNfY3NvdW5kU2V0TWVzc2FnZVN0cmluZ0NhbGxiYWNrKCk7cmV0dXJuW2EsZV19LAptb2R1bGUkc3JjJG1vZHVsZT17fTttb2R1bGUkc3JjJG1vZHVsZS5jc291bmRXYXNpSnNNZXNzYWdlQ2FsbGJhY2s9Y3NvdW5kV2FzaUpzTWVzc2FnZUNhbGxiYWNrJCRtb2R1bGUkc3JjJG1vZHVsZTttb2R1bGUkc3JjJG1vZHVsZS5kZWZhdWx0PSRqc2NvbXBEZWZhdWx0RXhwb3J0JCRtb2R1bGUkc3JjJG1vZHVsZTtjb25zdCBoYW5kbGVDc291bmRTdGFydCQkbW9kdWxlJHNyYyR3b3JrZXJzJGNvbW1vbl91dGlscz0oYSxiLGMsZCxlKT0+Zj0+e2NvbnN0IHtjc291bmQ6Z309ZixoPTE9PT1iLmNzb3VuZFNob3VsZERhZW1vbml6ZShnKTtoJiYoYi5jc291bmRTZXRPcHRpb24oZywiLS1kYWVtb24iKSxiLmNzb3VuZFNldE9wdGlvbihnLCItb2RhYyIpKTtjb25zdCBrPWIuY3NvdW5kU3RhcnQoZyksbD1iLmNzb3VuZEdldE91dHB1dE5hbWUoZyl8fCJ0ZXN0LndhdiI7bG9nQ29tbW9uVXRpbHMkJG1vZHVsZSRzcmMkbG9nZ2VyKGBoYW5kbGVDc291bmRTdGFydDogYWN0dWFsIGNzb3VuZFN0YXJ0IHJlc3VsdCAke2t9LCBvdXRwdXROYW1lOiAke2x9YCkoKTswIT09ayYmYS5wb3N0KGBlcnJvcjogY3NvdW5kU3RhcnQgZmFpbGVkIHdoaWxlIHRyeWluZyB0byByZW5kZXIgJHtsfSxgKyIgbG9vayBvdXQgZm9yIGVycm9ycyBpbiBvcHRpb25zIGFuZCBzeW50YXgiKTtzZXRUaW1lb3V0KCgpPT57Y29uc3QgbT0KYi5faXNSZXF1ZXN0aW5nUnRNaWRpSW5wdXQoZyk7aWYoaHx8bXx8bC5pbmNsdWRlcygiZGFjIikpZChmKTtlbHNlIGlmKGEuYnJvYWRjYXN0UGxheVN0YXRlKCJyZW5kZXJTdGFydGVkIiksZSllKGYpO2Vsc2UgZm9yKDswPT09Yi5jc291bmRQZXJmb3JtS3NtcHMoZyk7KTt9LDApO3JldHVybiBrfSxpbnN0YW50aWF0ZUF1ZGlvUGFja2V0JCRtb2R1bGUkc3JjJHdvcmtlcnMkY29tbW9uX3V0aWxzPShhLGIpPT57Y29uc3QgYz1bXTtmb3IobGV0IGQ9MDtkPGE7ZCsrKWMucHVzaChuZXcgRmxvYXQ2NEFycmF5KGIpKTtyZXR1cm4gY30scmVuZGVyRnVuY3Rpb24kJG1vZHVsZSRzcmMkd29ya2VycyRjb21tb25fdXRpbHM9KHtsaWJyYXJ5Q3NvdW5kOmEsd29ya2VyTWVzc2FnZVBvcnQ6Yn0pPT5hc3luYyh7Y3NvdW5kOmN9KT0+e2NvbnN0IGQ9YS5jc291bmRHZXRLcihjKTtsZXQgZT0wLGY9MDtmb3IoOygicmVuZGVyU3RhcnRlZCI9PT1iLnZhbmlsbGFXb3JrZXJTdGF0ZXx8InJlbmRlclN0YXJ0ZWQiPT09CmIud29ya2VyU3RhdGUpJiYwPT09ZTspZT1hLmNzb3VuZFBlcmZvcm1Lc21wcyhjKSxmKz0xLCJmdW5jdGlvbiI9PT10eXBlb2Ygc2V0VGltZW91dCYmMD09PWUmJjA9PT1mJSgyKmQpJiZhd2FpdCBuZXcgUHJvbWlzZShnPT5zZXRUaW1lb3V0KGcsMCkpO2IuYnJvYWRjYXN0UGxheVN0YXRlKCJyZW5kZXJFbmRlZCIpfTt2YXIgbW9kdWxlJHNyYyR3b3JrZXJzJGNvbW1vbl91dGlscz17fTttb2R1bGUkc3JjJHdvcmtlcnMkY29tbW9uX3V0aWxzLmhhbmRsZUNzb3VuZFN0YXJ0PWhhbmRsZUNzb3VuZFN0YXJ0JCRtb2R1bGUkc3JjJHdvcmtlcnMkY29tbW9uX3V0aWxzO21vZHVsZSRzcmMkd29ya2VycyRjb21tb25fdXRpbHMuaW5zdGFudGlhdGVBdWRpb1BhY2tldD1pbnN0YW50aWF0ZUF1ZGlvUGFja2V0JCRtb2R1bGUkc3JjJHdvcmtlcnMkY29tbW9uX3V0aWxzO21vZHVsZSRzcmMkd29ya2VycyRjb21tb25fdXRpbHMucmVuZGVyRnVuY3Rpb249cmVuZGVyRnVuY3Rpb24kJG1vZHVsZSRzcmMkd29ya2VycyRjb21tb25fdXRpbHM7bGV0IGxpYnJhcnlDc291bmQkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXIsY29tYmluZWQkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXI7Y29uc3QgcnRtaWRpUXVldWUkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXI9W10sY2FsbFVuY2xvbmVkJCRtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyPWFzeW5jKGEsYik9PihhPWNvbWJpbmVkJCRtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyLmdldChhKSkmJmEuYXBwbHkoe30sYnx8W10pOwpjbGFzcyBXb3JrbGV0U2luZ2xldGhyZWFkV29ya2VyJCRtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyIGV4dGVuZHMgQXVkaW9Xb3JrbGV0UHJvY2Vzc29ye3N0YXRpYyBnZXQgcGFyYW1ldGVyRGVzY3JpcHRvcnMoKXtyZXR1cm5bXX1jb25zdHJ1Y3RvcihhKXtzdXBlcihhKTt0aGlzLnNhbXBsZVJhdGU9c2FtcGxlUmF0ZTt0aGlzLm9wdGlvbnM9YTt0aGlzLmluaXRpYWxpemU9dGhpcy5pbml0aWFsaXplLmJpbmQodGhpcyk7dGhpcy5wYXVzZT10aGlzLnBhdXNlLmJpbmQodGhpcyk7dGhpcy5wcm9jZXNzPXRoaXMucHJvY2Vzcy5iaW5kKHRoaXMpO3RoaXMucmVzdW1lPXRoaXMucmVzdW1lLmJpbmQodGhpcyk7dGhpcy5zdGFydD10aGlzLnN0YXJ0LmJpbmQodGhpcyk7dGhpcy5pc1BhdXNlZD10aGlzLm5lZWRzU3RhcnROb3RpZmljYXRpb249ITE7dGhpcy5jYWxsVW5jbG9uZWQ9KCk9PmNvbnNvbGUuZXJyb3IoIkNzb3VuZCB3b3JrbGV0IHRocmVhZCBpcyBzdGlsbCB1bmluaXRpYWxpemVkISIpOwp0aGlzLnBvcnQuc3RhcnQoKTtleHBvc2UkJG1vZHVsZSRub2RlX21vZHVsZXMkY29tbGluayRkaXN0JGVzbSRjb21saW5rX21qcyh0aGlzLHRoaXMucG9ydCk7dGhpcy53b3JrZXJNZXNzYWdlUG9ydD1uZXcgJGpzY29tcERlZmF1bHRFeHBvcnQkJG1vZHVsZSRzcmMkdXRpbHMkbWVzc2FnZV9wb3J0X3N0YXRlO3RoaXMuaW5pdGlhbGl6ZU1lc3NhZ2VQb3J0PSh7bWVzc2FnZVBvcnQ6YixydG1pZGlQb3J0OmN9KT0+e3RoaXMud29ya2VyTWVzc2FnZVBvcnQucG9zdD1kPT5iLnBvc3RNZXNzYWdlKHtsb2c6ZH0pO3RoaXMud29ya2VyTWVzc2FnZVBvcnQuYnJvYWRjYXN0UGxheVN0YXRlPWQ9Pnt0aGlzLndvcmtlck1lc3NhZ2VQb3J0LndvcmtlclN0YXRlIT09ZCYmKHRoaXMud29ya2VyTWVzc2FnZVBvcnQud29ya2VyU3RhdGU9ZCk7Yi5wb3N0TWVzc2FnZSh7cGxheVN0YXRlQ2hhbmdlOmR9KX07dGhpcy53b3JrZXJNZXNzYWdlUG9ydC5yZWFkeT0hMDtsb2dTaW5nbGV0aHJlYWRXb3JrbGV0V29ya2VyJCRtb2R1bGUkc3JjJGxvZ2dlcigiaW5pdFJ0TWlkaUV2ZW50UG9ydCIpKCk7CnRoaXMucnRtaWRpUG9ydD1jO3RoaXMucnRtaWRpUG9ydC5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIiwoe2RhdGE6ZH0pPT57cnRtaWRpUXVldWUkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXIucHVzaChkKX0pO3RoaXMucnRtaWRpUG9ydC5zdGFydCgpfX1hc3luYyBpbml0aWFsaXplKGEsYil7bG9nU2luZ2xldGhyZWFkV29ya2xldFdvcmtlciQkbW9kdWxlJHNyYyRsb2dnZXIoImluaXRpYWxpemluZyB3b3JrbGV0LnNpbmdsZXRocmVhZC53b3JrZXIiKSgpO2xldCBjO2NvbnN0IGQ9bmV3IFByb21pc2UoZT0+e2M9ZX0pOyRqc2NvbXBEZWZhdWx0RXhwb3J0JCRtb2R1bGUkc3JjJG1vZHVsZSh7d2FzbURhdGFVUkk6YSx3aXRoUGx1Z2luczpiLG1lc3NhZ2VQb3J0OnRoaXMud29ya2VyTWVzc2FnZVBvcnR9KS50aGVuKChbZSxmXSk9Pnt0aGlzLndhc209ZTt0aGlzLndhc2k9ZjtlLndhc2k9ZjtsaWJyYXJ5Q3NvdW5kJCRtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyPQokanNjb21wRGVmYXVsdEV4cG9ydCQkbW9kdWxlJHNyYyRsaWJjc291bmQoZSk7dGhpcy5jYWxsVW5jbG9uZWQ9Y2FsbFVuY2xvbmVkJCRtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyO3RoaXMuY3NvdW5kPWxpYnJhcnlDc291bmQkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXIuY3NvdW5kQ3JlYXRlKDApO3RoaXMucmVzdWx0PTA7dGhpcy5zdGFydGVkPXRoaXMuaXNSZW5kZXJpbmc9dGhpcy5ydW5uaW5nPSExO3RoaXMucmVzZXRDc291bmQoITEpO2U9cGlwZSQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKGFzc29jJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoImNzb3VuZENyZWF0ZSIsYXN5bmMgZz0+dGhpcy5jc291bmQpLGFzc29jJCRtb2R1bGUkbm9kZV9tb2R1bGVzJHJhbWJkYSRkaXN0JHJhbWJkYV9tanMoImNzb3VuZFJlc2V0Iix0aGlzLnJlc2V0Q3NvdW5kLmJpbmQodGhpcykpLAphc3NvYyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKCJjc291bmRTdGFydCIsdGhpcy5zdGFydC5iaW5kKHRoaXMpKSxhc3NvYyQkbW9kdWxlJG5vZGVfbW9kdWxlcyRyYW1iZGEkZGlzdCRyYW1iZGFfbWpzKCJjc291bmRTdG9wIix0aGlzLnN0b3AuYmluZCh0aGlzKSksYXNzb2MkJG1vZHVsZSRub2RlX21vZHVsZXMkcmFtYmRhJGRpc3QkcmFtYmRhX21qcygid2FzbSIsZSkpKGxpYnJhcnlDc291bmQkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXIpO2NvbWJpbmVkJCRtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyPW5ldyBNYXAoT2JqZWN0LmVudHJpZXMoZSkpO2xvZ1NpbmdsZXRocmVhZFdvcmtsZXRXb3JrZXIkJG1vZHVsZSRzcmMkbG9nZ2VyKCJ3YXNtIGluaXRpYWxpemVkIGFuZCBhcGkgZ2VuZXJhdGVkIikoKTtjKCl9KTtsb2dTaW5nbGV0aHJlYWRXb3JrbGV0V29ya2VyJCRtb2R1bGUkc3JjJGxvZ2dlcigid2FpdGluZyBvbiB3YXNtIGluaXRpYWxpemF0aW9uIHRvIGNvbXBsZXRlIikoKTsKYXdhaXQgZH1hc3luYyByZXNldENzb3VuZChhKXtpZihhJiYhdGhpcy53b3JrZXJNZXNzYWdlUG9ydHx8YSYmInJlYWx0aW1lUGVyZm9ybWFuY2VFbmRlZCIhPT10aGlzLndvcmtlck1lc3NhZ2VQb3J0LndvcmtlclN0YXRlJiYicmVhbHRpbWVQZXJmb3JtYW5jZVN0YXJ0ZWQiIT09dGhpcy53b3JrZXJNZXNzYWdlUG9ydC53b3JrZXJTdGF0ZSlyZXR1cm4tMTthJiYicmVhbHRpbWVQZXJmb3JtYW5jZVN0YXJ0ZWQiPT09dGhpcy53b3JrZXJNZXNzYWdlUG9ydC53b3JrZXJTdGF0ZSYmdGhpcy53b3JrZXJNZXNzYWdlUG9ydC5icm9hZGNhc3RQbGF5U3RhdGUoInJlYWx0aW1lUGVyZm9ybWFuY2VFbmRlZCIpO3RoaXMuc3RhcnRlZD10aGlzLnJ1bm5pbmc9ITE7dGhpcy5yZXN1bHQ9MDtjb25zdCBiPXRoaXMuY3NvdW5kO2EmJmxpYnJhcnlDc291bmQkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXIuY3NvdW5kUmVzZXQoYik7bGlicmFyeUNzb3VuZCQkbW9kdWxlJHNyYyR3b3JrZXJzJHdvcmtsZXRfc2luZ2xldGhyZWFkX3dvcmtlci5jc291bmRTZXRNaWRpQ2FsbGJhY2tzKGIpOwp0aGlzLnNhbXBsZVJhdGUmJmxpYnJhcnlDc291bmQkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXIuY3NvdW5kU2V0T3B0aW9uKGIsIi0tc2FtcGxlLXJhdGU9Iit0aGlzLnNhbXBsZVJhdGUpO3RoaXMubmNobmxzX2k9dGhpcy5uY2hubHM9LTE7ZGVsZXRlIHRoaXMuY3NvdW5kT3V0cHV0QnVmZmVyfXN0b3AoKXt0aGlzLmNzb3VuZCYmbGlicmFyeUNzb3VuZCQkbW9kdWxlJHNyYyR3b3JrZXJzJHdvcmtsZXRfc2luZ2xldGhyZWFkX3dvcmtlci5jc291bmRTdG9wKHRoaXMuY3NvdW5kKTt0aGlzLndvcmtlck1lc3NhZ2VQb3J0LmJyb2FkY2FzdFBsYXlTdGF0ZSgicmVhbHRpbWVQZXJmb3JtYW5jZUVuZGVkIil9cGF1c2UoKXt0aGlzLmlzUGF1c2VkfHwodGhpcy53b3JrZXJNZXNzYWdlUG9ydC5icm9hZGNhc3RQbGF5U3RhdGUoInJlYWx0aW1lUGVyZm9ybWFuY2VQYXVzZWQiKSx0aGlzLmlzUGF1c2VkPSEwKX1yZXN1bWUoKXt0aGlzLmlzUGF1c2VkJiYKKHRoaXMud29ya2VyTWVzc2FnZVBvcnQuYnJvYWRjYXN0UGxheVN0YXRlKCJyZWFsdGltZVBlcmZvcm1hbmNlUmVzdW1lZCIpLHRoaXMuaXNQYXVzZWQ9ITEpfXByb2Nlc3MoYSxiKXtpZighKHRoaXMuaXNSZW5kZXJpbmd8fCF0aGlzLmlzUGF1c2VkJiZ0aGlzLmNzb3VuZE91dHB1dEJ1ZmZlciYmdGhpcy5ydW5uaW5nKSl7YT1iWzBdO2I9YVswXS5sZW5ndGg7Zm9yKHZhciBjPTA7YzxiO2MrKylmb3IodmFyIGQ9MDtkPGEubnVtYmVyT2ZDaGFubmVscztkKyspYVtkXVtjXT0wO3JldHVybiEwfXRoaXMubmVlZHNTdGFydE5vdGlmaWNhdGlvbiYmKHRoaXMubmVlZHNTdGFydE5vdGlmaWNhdGlvbj0hMSx0aGlzLndvcmtlck1lc3NhZ2VQb3J0LmJyb2FkY2FzdFBsYXlTdGF0ZSgicmVhbHRpbWVQZXJmb3JtYW5jZVN0YXJ0ZWQiKSk7MDxydG1pZGlRdWV1ZSQkbW9kdWxlJHNyYyR3b3JrZXJzJHdvcmtsZXRfc2luZ2xldGhyZWFkX3dvcmtlci5sZW5ndGgmJihydG1pZGlRdWV1ZSQkbW9kdWxlJHNyYyR3b3JrZXJzJHdvcmtsZXRfc2luZ2xldGhyZWFkX3dvcmtlci5mb3JFYWNoKHE9Pgp7bGlicmFyeUNzb3VuZCQkbW9kdWxlJHNyYyR3b3JrZXJzJHdvcmtsZXRfc2luZ2xldGhyZWFkX3dvcmtlci5jc291bmRQdXNoTWlkaU1lc3NhZ2UodGhpcy5jc291bmQscVswXSxxWzFdLHFbMl0pfSksY2xlYXJBcnJheSQkbW9kdWxlJHNyYyR1dGlscyRjbGVhcl9hcnJheShydG1pZGlRdWV1ZSQkbW9kdWxlJHNyYyR3b3JrZXJzJHdvcmtsZXRfc2luZ2xldGhyZWFkX3dvcmtlcikpO2E9YVswXTtiPWJbMF07Yz1iWzBdLmxlbmd0aDtkPXRoaXMuY3NvdW5kT3V0cHV0QnVmZmVyO2xldCBlPXRoaXMuY3NvdW5kSW5wdXRCdWZmZXI7Y29uc3QgZj10aGlzLmtzbXBzLGc9dGhpcy56ZXJvZEJGUztsZXQgaD10aGlzLmNudDtjb25zdCBrPXRoaXMubmNobmxzLGw9dGhpcy5uY2hubHNfaTtsZXQgbT10aGlzLnJlc3VsdDtmb3IobGV0IHE9MDtxPGM7cSsrLGgrKyl7aD49ZiYmMD09PW0mJihtPWxpYnJhcnlDc291bmQkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXIuY3NvdW5kUGVyZm9ybUtzbXBzKHRoaXMuY3NvdW5kKSwKaD0wLDAhPT1tJiYodGhpcy5zdGFydGVkPXRoaXMucnVubmluZz0hMSxsaWJyYXJ5Q3NvdW5kJCRtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyLmNzb3VuZENsZWFudXAodGhpcy5jc291bmQpLHRoaXMud29ya2VyTWVzc2FnZVBvcnQuYnJvYWRjYXN0UGxheVN0YXRlKCJyZWFsdGltZVBlcmZvcm1hbmNlRW5kZWQiKSkpO2QmJjAhPT1kLmxlbmd0aHx8KGQ9dGhpcy5jc291bmRPdXRwdXRCdWZmZXI9bmV3IEZsb2F0NjRBcnJheSh0aGlzLndhc20ud2FzaS5tZW1vcnkuYnVmZmVyLGxpYnJhcnlDc291bmQkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXIuY3NvdW5kR2V0U3BvdXQodGhpcy5jc291bmQpLGYqaykpO2UmJjAhPT1lLmxlbmd0aHx8KGU9dGhpcy5jc291bmRJbnB1dEJ1ZmZlcj1uZXcgRmxvYXQ2NEFycmF5KHRoaXMud2FzbS53YXNpLm1lbW9yeS5idWZmZXIsbGlicmFyeUNzb3VuZCQkbW9kdWxlJHNyYyR3b3JrZXJzJHdvcmtsZXRfc2luZ2xldGhyZWFkX3dvcmtlci5jc291bmRHZXRTcGluKHRoaXMuY3NvdW5kKSwKZipsKSk7dmFyIG49TWF0aC5taW4odGhpcy5uY2hubHNfaSxhLmxlbmd0aCk7Zm9yKHZhciBwPTA7cDxuO3ArKyllW2gqbCtwXT1hW3BdW3FdKmc7aWYodGhpcy5uY2hubHM9PT1iLmxlbmd0aClmb3IoY29uc3QgW3UsdF1vZiBiLmVudHJpZXMoKSl0W3FdPTA9PT1tP2RbaCprK3VdL2c6MDtlbHNlIGlmKDI9PT10aGlzLm5jaG5scyYmMT09PWIubGVuZ3RoKWJbMF1bcV09MD09PW0/LjUqKGRbaCprXS9nK2RbaCprKzFdL2cpOjA7ZWxzZSBpZigxPT09dGhpcy5uY2hubHMmJjI9PT1iLmxlbmd0aClpZihuPWJbMF0scD1iWzFdLDA9PT1tKXtjb25zdCB1PWRbaCprXS9nO25bcV09dTtwW3FdPXV9ZWxzZSBuW3FdPTAscFtxXT0wfXRoaXMuY250PWg7dGhpcy5yZXN1bHQ9bTtyZXR1cm4hMH1hc3luYyBpc1JlcXVlc3RpbmdJbnB1dCgpe3JldHVybihsaWJyYXJ5Q3NvdW5kJCRtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyLmNzb3VuZEdldElucHV0TmFtZSh0aGlzLmNzb3VuZCl8fAoiIikuaW5jbHVkZXMoImFkYyIpfWFzeW5jIGlzUmVxdWVzdGluZ1JlYWx0aW1lT3V0cHV0KCl7cmV0dXJuKGxpYnJhcnlDc291bmQkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXIuY3NvdW5kR2V0T3V0cHV0TmFtZSh0aGlzLmNzb3VuZCl8fCIiKS5pbmNsdWRlcygiZGFjIil9YXN5bmMgc3RhcnQoKXtsZXQgYT0tMTtpZih0aGlzLnN0YXJ0ZWQpbG9nU2luZ2xldGhyZWFkV29ya2xldFdvcmtlciQkbW9kdWxlJHNyYyRsb2dnZXIoIndvcmtsZXQgd2FzIGFza2VkIHRvIHN0YXJ0IGJ1dCBpdCBhbHJlYWR5IGhhcyEiKSgpO2Vsc2V7bG9nU2luZ2xldGhyZWFkV29ya2xldFdvcmtlciQkbW9kdWxlJHNyYyRsb2dnZXIoIndvcmtsZXQgdGhyZWFkIGlzIHN0YXJ0aW5nLi4iKSgpO2NvbnN0IGI9dGhpcy5jc291bmQsYz1saWJyYXJ5Q3NvdW5kJCRtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyLmNzb3VuZEdldEtzbXBzKGIpOwp0aGlzLmNudD10aGlzLmtzbXBzPWM7dGhpcy5uY2hubHM9bGlicmFyeUNzb3VuZCQkbW9kdWxlJHNyYyR3b3JrZXJzJHdvcmtsZXRfc2luZ2xldGhyZWFkX3dvcmtlci5jc291bmRHZXROY2hubHMoYik7dGhpcy5uY2hubHNfaT1saWJyYXJ5Q3NvdW5kJCRtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyLmNzb3VuZEdldE5jaG5sc0lucHV0KGIpO3RoaXMuemVyb2RCRlM9bGlicmFyeUNzb3VuZCQkbW9kdWxlJHNyYyR3b3JrZXJzJHdvcmtsZXRfc2luZ2xldGhyZWFkX3dvcmtlci5jc291bmRHZXQwZEJGUyhiKTthPWxpYnJhcnlDc291bmQkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXIuY3NvdW5kU3RhcnQoYik7aWYoMCE9PWEpcmV0dXJuIGE7aWYoYXdhaXQgdGhpcy5pc1JlcXVlc3RpbmdSZWFsdGltZU91dHB1dCgpKXRoaXMuY3NvdW5kT3V0cHV0QnVmZmVyPW5ldyBGbG9hdDY0QXJyYXkodGhpcy53YXNtLndhc2kubWVtb3J5LmJ1ZmZlciwKbGlicmFyeUNzb3VuZCQkbW9kdWxlJHNyYyR3b3JrZXJzJHdvcmtsZXRfc2luZ2xldGhyZWFkX3dvcmtlci5jc291bmRHZXRTcG91dChiKSxjKnRoaXMubmNobmxzKSx0aGlzLmNzb3VuZElucHV0QnVmZmVyPW5ldyBGbG9hdDY0QXJyYXkodGhpcy53YXNtLndhc2kubWVtb3J5LmJ1ZmZlcixsaWJyYXJ5Q3NvdW5kJCRtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyLmNzb3VuZEdldFNwaW4oYiksYyp0aGlzLm5jaG5sc19pKSxsb2dTaW5nbGV0aHJlYWRXb3JrbGV0V29ya2VyJCRtb2R1bGUkc3JjJGxvZ2dlcigiY3NvdW5kU3RhcnQgY2FsbGVkIHdpdGgge30gcmV0dXJuIHZhbCIsYSkoKSx0aGlzLm5lZWRzU3RhcnROb3RpZmljYXRpb249dGhpcy5zdGFydGVkPSEwO2Vsc2UgcmV0dXJuIHRoaXMud29ya2VyTWVzc2FnZVBvcnQuYnJvYWRjYXN0UGxheVN0YXRlKCJyZW5kZXJTdGFydGVkIiksdGhpcy5pc1JlbmRlcmluZz0hMCxyZW5kZXJGdW5jdGlvbiQkbW9kdWxlJHNyYyR3b3JrZXJzJGNvbW1vbl91dGlscyh7bGlicmFyeUNzb3VuZDpsaWJyYXJ5Q3NvdW5kJCRtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyLAp3b3JrZXJNZXNzYWdlUG9ydDp0aGlzLndvcmtlck1lc3NhZ2VQb3J0LHdhc2k6dGhpcy53YXNpfSkoe2Nzb3VuZDpifSkudGhlbigoKT0+e3RoaXMud29ya2VyTWVzc2FnZVBvcnQuYnJvYWRjYXN0UGxheVN0YXRlKCJyZW5kZXJFbmRlZCIpO3RoaXMuaXNSZW5kZXJpbmc9ITF9KS5jYXRjaCgoKT0+e3RoaXMud29ya2VyTWVzc2FnZVBvcnQuYnJvYWRjYXN0UGxheVN0YXRlKCJyZW5kZXJFbmRlZCIpO3RoaXMuaXNSZW5kZXJpbmc9ITF9KSwwfXRoaXMucnVubmluZz0hMDtyZXR1cm4gYX19cmVnaXN0ZXJQcm9jZXNzb3IoImNzb3VuZC1zaW5nbGV0aHJlYWQtd29ya2xldC1wcm9jZXNzb3IiLFdvcmtsZXRTaW5nbGV0aHJlYWRXb3JrZXIkJG1vZHVsZSRzcmMkd29ya2VycyR3b3JrbGV0X3NpbmdsZXRocmVhZF93b3JrZXIpO3ZhciBtb2R1bGUkc3JjJHdvcmtlcnMkd29ya2xldF9zaW5nbGV0aHJlYWRfd29ya2VyPXt9OwovLyMgc291cmNlVVJMPS9kaXN0L19fY29tcGlsZWQud29ya2xldC5zaW5nbGV0aHJlYWQud29ya2VyLmpzCi8vIyBzb3VyY2VNYXBwaW5nVVJMPS9kaXN0L19fY29tcGlsZWQud29ya2xldC5zaW5nbGV0aHJlYWQud29ya2VyLmpzLm1hcAo=\",\nmodule$dist$__compiled_worklet_singlethread_worker_inline={};module$dist$__compiled_worklet_singlethread_worker_inline.default=$jscompDefaultExport$$module$dist$__compiled_worklet_singlethread_worker_inline;const initializeModule$$module$src$mains$worklet_singlethread_main=async a=>{logSinglethreadWorkletMain$$module$src$logger(\"Initialize Module\")();try{await a.audioWorklet.addModule($jscompDefaultExport$$module$dist$__compiled_worklet_singlethread_worker_inline())}catch(b){return console.error(\"Error calling audioWorklet.addModule\",b),!1}return!0};\nclass SingleThreadAudioWorkletMainThread$$module$src$mains$worklet_singlethread_main{constructor({audioContext:a,inputChannelCount:b=1,outputChannelCount:c=2}){this.exportApi={};this.ipcMessagePorts=new IPCMessagePorts$$module$src$mains$messages_main;this.publicEvents=new PublicEventAPI$$module$src$events(this);this.eventPromises=new EventPromises$$module$src$utils$event_promises;this.audioContext=a;this.inputChannelCount=b;this.outputChannelCount=c;this.messageCallbacks=[];this.onPlayStateChange=\nthis.onPlayStateChange.bind(this);this.currentPlayState=void 0}async terminateInstance(){this.node&&(this.node.disconnect(),delete this.node);this.audioContext&&(\"closed\"!==this.audioContext.state&&await this.audioContext.close(),delete this.audioContext);this.workletProxy&&(this.workletProxy[releaseProxy$$module$node_modules$comlink$dist$esm$comlink_mjs](),delete this.workletProxy);this.publicEvents&&(this.publicEvents.terminateInstance(),delete this.publicEvents);Object.keys(this.exportApi).forEach(a=>\ndelete this.exportApi[a]);Object.keys(this).forEach(a=>delete this[a])}async onPlayStateChange(a){if(this.currentPlayState!==a&&this.publicEvents)switch(this.currentPlayState=a,a){case \"realtimePerformanceStarted\":this.eventPromises.isWaitingToStart()&&(logSinglethreadWorkletMain$$module$src$logger(\"Start promise resolved\")(),this.eventPromises.releaseStartPromise());this.publicEvents.triggerRealtimePerformanceStarted(this);break;case \"realtimePerformanceEnded\":this.midiPortStarted=!1;this.currentPlayState=\nvoid 0;this.publicEvents&&this.publicEvents.triggerRealtimePerformanceEnded(this);this.eventPromises&&this.eventPromises.isWaitingToStop()&&this.eventPromises.releaseStopPromise();this.eventPromises&&this.eventPromises.releaseStartPromise();break;case \"realtimePerformancePaused\":this.publicEvents.triggerRealtimePerformancePaused(this);break;case \"realtimePerformanceResumed\":this.publicEvents.triggerRealtimePerformanceResumed(this);break;case \"renderStarted\":this.eventPromises.isWaitingToStart()&&\n(logSinglethreadWorkletMain$$module$src$logger(\"Start promise resolved\")(),this.publicEvents.triggerRenderStarted(this),this.eventPromises.releaseStartPromise());break;case \"renderEnded\":this.publicEvents.triggerRenderEnded(this),this.eventPromises&&this.eventPromises.isWaitingToStop()&&this.eventPromises.releaseStopPromise(),this.eventPromises&&this.eventPromises.releaseStartPromise()}}async csoundPause(){void 0!==this.workletProxy&&await this.workletProxy.pause()}async csoundResume(){void 0!==this.workletProxy&&\nawait this.workletProxy.resume()}handleMidiInput({data:a}){this.ipcMessagePorts.csoundMainRtMidiPort.postMessage&&this.ipcMessagePorts.csoundMainRtMidiPort.postMessage(a)}async initialize({wasmDataURI:a,withPlugins:b,autoConnect:c}){b&&0<b.length&&(b=await fetchPlugins$$module$src$utils(b));await initializeModule$$module$src$mains$worklet_singlethread_main(this.audioContext);this.node=new AudioWorkletNode(this.audioContext,\"csound-singlethread-worklet-processor\",{inputChannelCount:this.inputChannelCount?\n[this.inputChannelCount]:0,outputChannelCount:[this.outputChannelCount||2]});c&&this.node.connect(this.audioContext.destination);try{logSinglethreadWorkletMain$$module$src$logger(\"wrapping Comlink proxy endpoint on the audioWorkletNode.port\")(),this.workletProxy=wrap$$module$node_modules$comlink$dist$esm$comlink_mjs(this.node.port)}catch(e){console.error(\"COMLINK ERROR\",e)}await this.workletProxy.initializeMessagePort(transfer$$module$node_modules$comlink$dist$esm$comlink_mjs({messagePort:this.ipcMessagePorts.workerMessagePort,\nrtmidiPort:this.ipcMessagePorts.csoundWorkerRtMidiPort},[this.ipcMessagePorts.workerMessagePort,this.ipcMessagePorts.csoundWorkerRtMidiPort]));this.ipcMessagePorts.mainMessagePort.addEventListener(\"message\",messageEventHandler$$module$src$mains$messages_main(this));this.ipcMessagePorts.mainMessagePort.start();await this.workletProxy.initialize(a(),b);const d=await makeProxyCallback$$module$src$utils(this.workletProxy,void 0,\"csoundCreate\",this.currentPlayState)();this.csoundInstance=d;await makeProxyCallback$$module$src$utils(this.workletProxy,\nd,\"csoundInitialize\",this.currentPlayState)(0);this.exportApi.pause=this.csoundPause.bind(this);this.exportApi.resume=this.csoundResume.bind(this);this.exportApi.terminateInstance=this.terminateInstance.bind(this);this.exportApi.getAudioContext=async()=>this.audioContext;this.exportApi.getNode=async()=>this.node;this.exportApi.enableAudioInput=enableAudioInput$$module$src$mains$io_utils.bind(this.exportApi);this.exportApi.name=\"Csound: Audio Worklet, Single-threaded\";this.exportApi=this.publicEvents.decorateAPI(this.exportApi);\nthis.exportApi.addListener(\"message\",console.log);for(const e of Object.keys(api$$module$src$libcsound)){const f=api$$module$src$libcsound[e],g=makeProxyCallback$$module$src$utils(this.workletProxy,d,e,this.currentPlayState);switch(e){case \"csoundCreate\":break;case \"csoundStart\":a=async function(){this.eventPromises.createStartPromise();var h=await this.workletProxy.isRequestingInput();const k=await this.workletProxy.isRequestingRealtimeOutput();console.log({isRequestingRealtimeOutput:k});if(k)return h&&\nthis.exportApi.enableAudioInput(),await this.exportApi._isRequestingRtMidiInput(d)&&requestMidi$$module$src$utils$request_midi({onMidiMessage:this.handleMidiInput.bind(this)}),h=await g({csound:d}),this.publicEvents.triggerOnAudioNodeCreated(this.node),await this.eventPromises.waitForStart(),h;g({csound:d});this.publicEvents.triggerOnAudioNodeCreated(this.node);await this.eventPromises.waitForStart();return 0};a.toString=()=>f.toString();this.exportApi.start=a.bind(this);break;case \"csoundStop\":a=\nasync()=>{if(this.eventPromises.isWaitingToStop())return logSinglethreadWorkletMain$$module$src$logger(\"already waiting to stop, doing nothing\")(),-1;this.eventPromises.createStopPromise();const h=await g();await this.eventPromises.waitForStop();return h};a.toString=()=>f.toString();this.exportApi.stop=a.bind(this);break;case \"fs\":this.exportApi.fs={};Object.keys(f).forEach(h=>{const k=makeProxyCallback$$module$src$utils(this.workletProxy,d,h,this.currentPlayState);k.toString=()=>f[h].toString();\nthis.exportApi.fs[h]=k});break;default:g.toString=()=>f.toString(),this.exportApi[csoundApiRename$$module$src$utils(e)]=g}}return this.exportApi}}var $jscompDefaultExport$$module$src$mains$worklet_singlethread_main=SingleThreadAudioWorkletMainThread$$module$src$mains$worklet_singlethread_main,module$src$mains$worklet_singlethread_main={};module$src$mains$worklet_singlethread_main.default=$jscompDefaultExport$$module$src$mains$worklet_singlethread_main;(0,module$node_modules$unmute_ios_audio$index.default)();\nconst Csound$$module$src$index=async function({audioContext:a,inputChannelCount:b,outputChannelCount:c,autoConnect:d=!0,withPlugins:e=[],useWorker:f=!1,useSAB:g=!0,useSPN:h=!1}={}){const k=a&&WebkitAudioContext$$module$src$utils()&&a instanceof WebkitAudioContext$$module$src$utils();k||(a=a||new (WebkitAudioContext$$module$src$utils())({latencyHint:\"interactive\"}));isSafari$$module$src$utils()&&a.resume();const m=areWorkletsSupported$$module$src$utils(),n=isScriptProcessorNodeSupported$$module$src$utils();\nif(f){m?logIndex$$module$src$logger(\"worklet support detected\")():n?logIndex$$module$src$logger(\"scriptProcessorNode support detected\")():console.error(\"No WebAudio Support detected\");var l;!h&&m?l=new $jscompDefaultExport$$module$src$mains$worklet_main({audioContext:a,audioContextIsProvided:k,autoConnect:d}):n&&(l=new $jscompDefaultExport$$module$src$mains$old_spn_main({audioContext:a,audioContextIsProvided:k,autoConnect:d}));if(l)return(d=isSabSupported$$module$src$utils())?g&&logIndex$$module$src$logger(\"using SharedArrayBuffers\")():\nlogIndex$$module$src$logger(\"SharedArrayBuffers not found, falling back to Vanilla concurrency\")(),a=d&&m&&g?new $jscompDefaultExport$$module$src$mains$sab_main({audioWorker:l,audioContext:a,audioContextIsProvided:k,inputChannelCount:b,outputChannelCount:c}):new $jscompDefaultExport$$module$src$mains$vanilla_main({audioWorker:l,audioContextIsProvided:k}),logIndex$$module$src$logger(\"starting Csound thread initialization via WebWorker\")(),await a.initialize({wasmDataURI:$jscompDefaultExport$$module$dist$__csound_wasm_inline,\nwithPlugins:e}),e=a.api}else{if(m&&!h)return logIndex$$module$src$logger(\"Single Thread AudioWorklet\")(),(new $jscompDefaultExport$$module$src$mains$worklet_singlethread_main({audioContext:a,inputChannelCount:b||2,outputChannelCount:c||2})).initialize({wasmDataURI:$jscompDefaultExport$$module$dist$__csound_wasm_inline,withPlugins:e,autoConnect:d});if(n)return logIndex$$module$src$logger(\"Single Thread ScriptProcessorNode\")(),await (new $jscompDefaultExport$$module$src$mains$spn_main({audioContext:a,\ninputChannelCount:b||2,outputChannelCount:c||2})).initialize({wasmDataURI:$jscompDefaultExport$$module$dist$__csound_wasm_inline,withPlugins:e,autoConnect:d})}console.error(\"No detectable WebAudioAPI in current environment\")};goog.exportSymbol(\"Csound$$module$src$index\",Csound$$module$src$index);var module$src$index={};module$src$index.Csound=Csound$$module$src$index;\nconst Csound = Csound$$module$src$index;\nCsound.toString = () => 'async (options) => CsoundObj;';\nexport { Csound }\nexport default Csound\n//# sourceMappingURL=csound.js.map\n"],"names":[],"sourceRoot":""}